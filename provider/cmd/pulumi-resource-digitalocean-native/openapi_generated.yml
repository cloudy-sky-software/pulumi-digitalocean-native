openapi: 3.0.0
components:
    schemas:
        account:
            type: object
            required:
                - droplet_limit
                - floating_ip_limit
                - email
                - uuid
                - email_verified
                - status
                - status_message
            properties:
                droplet_limit:
                    type: integer
                    description: The total number of Droplets current user or team may have active at one time.
                    example: 25
                email:
                    type: string
                    description: The email address used by the current user to register for DigitalOcean.
                    example: sammy@digitalocean.com
                email_verified:
                    type: boolean
                    description: If true, the user has verified their account via email. False otherwise.
                    default: false
                    example: true
                floating_ip_limit:
                    type: integer
                    description: The total number of Floating IPs the current user or team may have.
                    example: 5
                name:
                    type: string
                    description: The display name for the current user.
                    example: Sammy the Shark
                status:
                    type: string
                    description: This value is one of "active", "warning" or "locked".
                    enum:
                        - active
                        - warning
                        - locked
                    default: active
                    example: active
                status_message:
                    type: string
                    description: A human-readable message giving more details about the status of the account.
                    example: ' '
                team:
                    type: object
                    description: When authorized in a team context, includes information about the current team.
                    properties:
                        name:
                            type: string
                            description: The name for the current team.
                            example: My Team
                        uuid:
                            type: string
                            description: The unique universal identifier for the current team.
                            example: 5df3e3004a17e242b7c20ca6c9fc25b701a47ece
                uuid:
                    type: string
                    description: The unique universal identifier for the current user.
                    example: b6fr89dbf6d9156cace5f3c78dc9851d957381ef
        action:
            type: object
            properties:
                completed_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the action was completed.
                    example: "2020-11-14T16:30:06Z"
                    nullable: true
                id:
                    type: integer
                    description: A unique numeric ID that can be used to identify and reference an action.
                    example: 3.6804636e+07
                region:
                    $ref: '#/components/schemas/region'
                region_slug:
                    allOf:
                        - $ref: '#/components/schemas/slug'
                        - type: string
                          nullable: true
                resource_id:
                    type: integer
                    description: A unique identifier for the resource that the action is associated with.
                    example: 3.164444e+06
                    nullable: true
                resource_type:
                    type: string
                    description: The type of resource that the action is associated with.
                    example: droplet
                started_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the action was initiated.
                    example: "2020-11-14T16:29:21Z"
                status:
                    type: string
                    description: The current status of the action. This can be "in-progress", "completed", or "errored".
                    enum:
                        - in-progress
                        - completed
                        - errored
                    default: in-progress
                    example: completed
                type:
                    type: string
                    description: This is the type of action that the object represents. For example, this could be "transfer" to represent the state of an image transfer action.
                    example: create
        action_link:
            type: object
            description: The linked actions can be used to check the status of a Droplet's create event.
            properties:
                href:
                    type: string
                    format: uri
                    description: A URL that can be used to access the action.
                    example: https://api.digitalocean.com/v2/actions/7515
                id:
                    type: integer
                    description: A unique numeric ID that can be used to identify and reference an action.
                    example: 7515
                rel:
                    type: string
                    description: A string specifying the type of the related action.
                    example: create
        alert:
            allOf:
                - $ref: '#/components/schemas/alert_base'
                - $ref: '#/components/schemas/alert_updatable'
            type: object
        alert_base:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference the alert.
                    example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
                    readOnly: true
        alert_policy:
            type: object
            required:
                - uuid
                - type
                - description
                - compare
                - value
                - window
                - entities
                - tags
                - alerts
                - enabled
            properties:
                alerts:
                    $ref: '#/components/schemas/alerts'
                compare:
                    type: string
                    enum:
                        - GreaterThan
                        - LessThan
                    example: GreaterThan
                description:
                    type: string
                    example: CPU Alert
                enabled:
                    type: boolean
                    example: true
                entities:
                    type: array
                    example:
                        - "192018292"
                    items:
                        type: string
                tags:
                    type: array
                    example:
                        - droplet_tag
                    items:
                        type: string
                type:
                    type: string
                    enum:
                        - v1/insights/droplet/load_1
                        - v1/insights/droplet/load_5
                        - v1/insights/droplet/load_15
                        - v1/insights/droplet/memory_utilization_percent
                        - v1/insights/droplet/disk_utilization_percent
                        - v1/insights/droplet/cpu
                        - v1/insights/droplet/disk_read
                        - v1/insights/droplet/disk_write
                        - v1/insights/droplet/public_outbound_bandwidth
                        - v1/insights/droplet/public_inbound_bandwidth
                        - v1/insights/droplet/private_outbound_bandwidth
                        - v1/insights/droplet/private_inbound_bandwidth
                        - v1/insights/lbaas/avg_cpu_utilization_percent
                        - v1/insights/lbaas/connection_utilization_percent
                        - v1/insights/lbaas/droplet_health
                        - v1/insights/lbaas/tls_connections_per_second_utilization_percent
                        - v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx
                        - v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx
                        - v1/insights/lbaas/increase_in_http_error_rate_count_5xx
                        - v1/insights/lbaas/increase_in_http_error_rate_count_4xx
                        - v1/insights/lbaas/high_http_request_response_time
                        - v1/insights/lbaas/high_http_request_response_time_50p
                        - v1/insights/lbaas/high_http_request_response_time_95p
                        - v1/insights/lbaas/high_http_request_response_time_99p
                        - v1/dbaas/alerts/load_15_alerts
                        - v1/dbaas/alerts/memory_utilization_alerts
                        - v1/dbaas/alerts/disk_utilization_alerts
                        - v1/dbaas/alerts/cpu_alerts
                    example: v1/insights/droplet/cpu
                uuid:
                    type: string
                    example: 78b3da62-27e5-49ba-ac70-5db0b5935c64
                value:
                    type: number
                    format: float
                    example: 80
                window:
                    type: string
                    enum:
                        - 5m
                        - 10m
                        - 30m
                        - 1h
                    example: 5m
        alert_policy_request:
            type: object
            required:
                - type
                - description
                - compare
                - value
                - window
                - entities
                - tags
                - alerts
                - enabled
            properties:
                alerts:
                    $ref: '#/components/schemas/alerts'
                compare:
                    type: string
                    enum:
                        - GreaterThan
                        - LessThan
                    example: GreaterThan
                description:
                    type: string
                    example: CPU Alert
                enabled:
                    type: boolean
                    example: true
                entities:
                    type: array
                    example:
                        - "192018292"
                    items:
                        type: string
                tags:
                    type: array
                    example:
                        - droplet_tag
                    items:
                        type: string
                type:
                    type: string
                    enum:
                        - v1/insights/droplet/load_1
                        - v1/insights/droplet/load_5
                        - v1/insights/droplet/load_15
                        - v1/insights/droplet/memory_utilization_percent
                        - v1/insights/droplet/disk_utilization_percent
                        - v1/insights/droplet/cpu
                        - v1/insights/droplet/disk_read
                        - v1/insights/droplet/disk_write
                        - v1/insights/droplet/public_outbound_bandwidth
                        - v1/insights/droplet/public_inbound_bandwidth
                        - v1/insights/droplet/private_outbound_bandwidth
                        - v1/insights/droplet/private_inbound_bandwidth
                        - v1/insights/lbaas/avg_cpu_utilization_percent
                        - v1/insights/lbaas/connection_utilization_percent
                        - v1/insights/lbaas/droplet_health
                        - v1/insights/lbaas/tls_connections_per_second_utilization_percent
                        - v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx
                        - v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx
                        - v1/insights/lbaas/increase_in_http_error_rate_count_5xx
                        - v1/insights/lbaas/increase_in_http_error_rate_count_4xx
                        - v1/insights/lbaas/high_http_request_response_time
                        - v1/insights/lbaas/high_http_request_response_time_50p
                        - v1/insights/lbaas/high_http_request_response_time_95p
                        - v1/insights/lbaas/high_http_request_response_time_99p
                        - v1/dbaas/alerts/load_15_alerts
                        - v1/dbaas/alerts/memory_utilization_alerts
                        - v1/dbaas/alerts/disk_utilization_alerts
                        - v1/dbaas/alerts/cpu_alerts
                    example: v1/insights/droplet/cpu
                value:
                    type: number
                    format: float
                    example: 80
                window:
                    type: string
                    enum:
                        - 5m
                        - 10m
                        - 30m
                        - 1h
                    example: 5m
        alert_updatable:
            type: object
            properties:
                comparison:
                    type: string
                    description: The comparison operator used against the alert's threshold.
                    enum:
                        - greater_than
                        - less_than
                    example: greater_than
                name:
                    type: string
                    description: A human-friendly display name.
                    example: Landing page degraded performance
                notifications:
                    $ref: '#/components/schemas/notification'
                period:
                    type: string
                    description: Period of time the threshold must be exceeded to trigger the alert.
                    enum:
                        - 2m
                        - 3m
                        - 5m
                        - 10m
                        - 15m
                        - 30m
                        - 1h
                    example: 2m
                threshold:
                    type: integer
                    description: The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
                    example: 300
                type:
                    type: string
                    description: The type of alert.
                    enum:
                        - latency
                        - down
                        - down_global
                        - ssl_expiry
                    example: latency
        alerts:
            type: object
            required:
                - slack
                - email
            properties:
                email:
                    type: array
                    description: An email to notify on an alert trigger.
                    example:
                        - bob@exmaple.com
                    items:
                        type: string
                slack:
                    type: array
                    description: Slack integration details.
                    items:
                        $ref: '#/components/schemas/slack_details'
        app:
            type: object
            description: An application's configuration and status.
            required:
                - spec
            properties:
                active_deployment:
                    $ref: '#/components/schemas/apps_deployment'
                created_at:
                    type: string
                    title: The creation time of the app
                    format: date-time
                    example: "2020-11-19T20:27:18Z"
                    readOnly: true
                default_ingress:
                    type: string
                    title: The default hostname on which the app is accessible
                    example: digitalocean.com
                    readOnly: true
                domains:
                    type: array
                    title: Contains all domains for the app
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/apps_domain'
                id:
                    type: string
                    title: The ID of the application
                    example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                    readOnly: true
                in_progress_deployment:
                    $ref: '#/components/schemas/apps_deployment'
                last_deployment_created_at:
                    type: string
                    title: The creation time of the last deployment
                    format: date-time
                    example: "2020-11-19T20:27:18Z"
                    readOnly: true
                live_domain:
                    type: string
                    title: The live domain of the app
                    example: live_domain
                    readOnly: true
                live_url:
                    type: string
                    title: The live URL of the app
                    example: google.com
                    readOnly: true
                live_url_base:
                    type: string
                    title: The live URL base of the app, the URL excluding the path
                    example: digitalocean.com
                    readOnly: true
                owner_uuid:
                    type: string
                    title: The ID of the account to which the application belongs
                    example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                    readOnly: true
                pending_deployment:
                    allOf:
                        - description: The most recent pending deployment. For CreateApp and UpdateApp transactions this is guaranteed to reflect the associated deployment.
                        - $ref: '#/components/schemas/apps_deployment'
                pinned_deployment:
                    allOf:
                        - description: The deployment that the app is pinned to.
                        - $ref: '#/components/schemas/apps_deployment'
                project_id:
                    type: string
                    title: The ID of the project the app is assigned to. This will be empty if there is a lookup failure.
                    example: 88b72d1a-b78a-4d9f-9090-b53c4399073f
                    readOnly: true
                region:
                    $ref: '#/components/schemas/apps_region'
                spec:
                    $ref: '#/components/schemas/app_spec'
                tier_slug:
                    type: string
                    title: The current pricing tier slug of the app
                    example: basic
                    readOnly: true
                updated_at:
                    type: string
                    title: Time of the app's last configuration update
                    format: date-time
                    example: "2020-12-01T00:42:16Z"
                    readOnly: true
        app_alert:
            type: object
            properties:
                component_name:
                    type: string
                    title: Name of component the alert belongs to
                    example: backend
                emails:
                    type: array
                    title: Emails for alerts to go to
                    example:
                        - sammy@digitalocean.com
                    items:
                        $ref: '#/components/schemas/app_alert_email'
                id:
                    type: string
                    title: The ID of the alert
                    example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                    readOnly: true
                phase:
                    $ref: '#/components/schemas/app_alert_phase'
                progress:
                    $ref: '#/components/schemas/app_alert_progress'
                slack_webhooks:
                    type: array
                    title: Slack Webhooks to send alerts to
                    items:
                        $ref: '#/components/schemas/app_alert_slack_webhook'
                spec:
                    $ref: '#/components/schemas/app_alert_spec'
        app_alert_email:
            type: string
            default: ""
            example: sammy@digitalocean.com
        app_alert_phase:
            type: string
            enum:
                - UNKNOWN
                - PENDING
                - CONFIGURING
                - ACTIVE
                - ERROR
            default: UNKNOWN
            example: ACTIVE
        app_alert_progress:
            type: object
            properties:
                steps:
                    type: array
                    title: Steps of an alert's progress.
                    items:
                        $ref: '#/components/schemas/app_alert_progress_step'
        app_alert_progress_step:
            type: object
            properties:
                ended_at:
                    type: string
                    title: The start time of this step
                    format: date-time
                    example: "2020-11-19T20:27:18Z"
                name:
                    type: string
                    title: The name of this step
                    example: example_step
                reason:
                    $ref: '#/components/schemas/app_alert_progress_step_reason'
                started_at:
                    type: string
                    title: The start time of this step
                    format: date-time
                    example: "2020-11-19T20:27:18Z"
                status:
                    $ref: '#/components/schemas/app_alert_progress_step_status'
        app_alert_progress_step_reason:
            type: object
            properties:
                code:
                    type: string
                    title: The error code
                    example: Title of Error
                message:
                    type: string
                    title: The error message
                    example: This is an error
        app_alert_progress_step_status:
            type: string
            enum:
                - UNKNOWN
                - PENDING
                - RUNNING
                - ERROR
                - SUCCESS
            default: UNKNOWN
            example: SUCCESS
        app_alert_slack_webhook:
            type: object
            properties:
                channel:
                    type: string
                    title: Name of the Slack Webhook Channel
                    example: Channel Name
                url:
                    type: string
                    title: URL of the Slack webhook
                    example: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
        app_alert_spec:
            type: object
            properties:
                disabled:
                    type: boolean
                    description: Is the alert disabled?
                    example: false
                operator:
                    $ref: '#/components/schemas/app_alert_spec_operator'
                rule:
                    $ref: '#/components/schemas/app_alert_spec_rule'
                value:
                    type: number
                    format: float
                    description: Threshold value for alert
                    example: 2.32
                window:
                    $ref: '#/components/schemas/app_alert_spec_window'
        app_alert_spec_operator:
            type: string
            enum:
                - UNSPECIFIED_OPERATOR
                - GREATER_THAN
                - LESS_THAN
            default: UNSPECIFIED_OPERATOR
            example: GREATER_THAN
        app_alert_spec_rule:
            type: string
            enum:
                - UNSPECIFIED_RULE
                - CPU_UTILIZATION
                - MEM_UTILIZATION
                - RESTART_COUNT
                - DEPLOYMENT_FAILED
                - DEPLOYMENT_LIVE
                - DOMAIN_FAILED
                - DOMAIN_LIVE
                - FUNCTIONS_ACTIVATION_COUNT
                - FUNCTIONS_AVERAGE_DURATION_MS
                - FUNCTIONS_ERROR_RATE_PER_MINUTE
                - FUNCTIONS_AVERAGE_WAIT_TIME_MS
                - FUNCTIONS_ERROR_COUNT
                - FUNCTIONS_GB_RATE_PER_SECOND
            default: UNSPECIFIED_RULE
            example: CPU_UTILIZATION
        app_alert_spec_window:
            type: string
            enum:
                - UNSPECIFIED_WINDOW
                - FIVE_MINUTES
                - TEN_MINUTES
                - THIRTY_MINUTES
                - ONE_HOUR
            default: UNSPECIFIED_WINDOW
            example: FIVE_MINUTES
        app_component_base:
            type: object
            properties:
                build_command:
                    type: string
                    description: An optional build command to run while building this component from source.
                    example: npm run build
                dockerfile_path:
                    type: string
                    description: The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
                    example: path/to/Dockerfile
                environment_slug:
                    type: string
                    description: An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
                    example: node-js
                envs:
                    type: array
                    description: A list of environment variables made available to the component.
                    items:
                        $ref: '#/components/schemas/app_variable_definition'
                git:
                    $ref: '#/components/schemas/apps_git_source_spec'
                github:
                    $ref: '#/components/schemas/apps_github_source_spec'
                gitlab:
                    $ref: '#/components/schemas/apps_gitlab_source_spec'
                image:
                    $ref: '#/components/schemas/apps_image_source_spec'
                log_destinations:
                    $ref: '#/components/schemas/app_log_destination_definition'
                name:
                    type: string
                    description: The name. Must be unique across all components within the same app.
                    example: api
                    minLength: 2
                    maxLength: 32
                    pattern: ^[a-z][a-z0-9-]{0,30}[a-z0-9]$
                run_command:
                    type: string
                    description: An optional run command to override the component's default.
                    example: bin/api
                source_dir:
                    type: string
                    description: An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
                    example: path/to/dir
        app_component_instance_base:
            type: object
            properties:
                instance_count:
                    type: integer
                    format: int64
                    description: 'The amount of instances that this component should be scaled to. Default: 1'
                    default: 1
                    example: 2
                    minimum: 1
                instance_size_slug:
                    type: string
                    description: 'The instance size to use for this component. Default: `basic-xxs`'
                    enum:
                        - basic-xxs
                        - basic-xs
                        - basic-s
                        - basic-m
                        - professional-xs
                        - professional-s
                        - professional-m
                        - professional-1l
                        - professional-l
                        - professional-xl
                    default: basic-xxs
                    example: basic-xxs
        app_database_spec:
            type: object
            required:
                - name
            properties:
                cluster_name:
                    type: string
                    description: The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
                    example: cluster_name
                db_name:
                    type: string
                    description: The name of the MySQL or PostgreSQL database to configure.
                    example: my_db
                db_user:
                    type: string
                    description: The name of the MySQL or PostgreSQL user to configure.
                    example: superuser
                engine:
                    type: string
                    description: |-
                        - MYSQL: MySQL
                        - PG: PostgreSQL
                        - REDIS: Redis
                    enum:
                        - UNSET
                        - MYSQL
                        - PG
                        - REDIS
                    default: UNSET
                    example: PG
                name:
                    type: string
                    description: The name. Must be unique across all components within the same app.
                    example: prod-db
                    minLength: 2
                    maxLength: 32
                    pattern: ^[a-z][a-z0-9-]{0,30}[a-z0-9]$
                production:
                    type: boolean
                    description: Whether this is a production or dev database.
                    example: true
                version:
                    type: string
                    description: The version of the database engine
                    example: "12"
        app_domain_spec:
            type: object
            required:
                - domain
            properties:
                domain:
                    type: string
                    description: The hostname for the domain
                    example: app.example.com
                    minLength: 4
                    maxLength: 253
                    pattern: ^((xn--)?[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}\.?$
                minimum_tls_version:
                    type: string
                    description: 'The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `"1.2"` or `"1.3"`.'
                    enum:
                        - "1.2"
                        - "1.3"
                    example: "1.3"
                    minLength: 3
                    maxLength: 3
                type:
                    type: string
                    description: |-
                        - DEFAULT: The default `.ondigitalocean.app` domain assigned to this app
                        - PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.
                        - ALIAS: A non-primary domain
                    enum:
                        - UNSPECIFIED
                        - DEFAULT
                        - PRIMARY
                        - ALIAS
                    default: UNSPECIFIED
                    example: DEFAULT
                wildcard:
                    type: boolean
                    description: Indicates whether the domain includes all sub-domains, in addition to the given domain
                    example: true
                zone:
                    type: string
                    format: hostname
                    description: |-
                        Optional. If the domain uses DigitalOcean DNS and you would like App
                        Platform to automatically manage it for you, set this to the name of the
                        domain on your account.

                        For example, If the domain you are adding is `app.domain.com`, the zone
                        could be `domain.com`.
                    example: example.com
        app_domain_validation:
            type: object
            properties:
                txt_name:
                    type: string
                    title: TXT record name
                    example: _acme-challenge.app.example.com
                    readOnly: true
                txt_value:
                    type: string
                    title: TXT record value
                    example: lXLOcN6cPv0nproViNcUHcahD9TrIPlNgdwesj0pYpk
                    readOnly: true
        app_functions_spec:
            type: object
            required:
                - name
            properties:
                alerts:
                    type: array
                    items:
                        $ref: '#/components/schemas/app_alert_spec'
                cors:
                    $ref: '#/components/schemas/apps_cors_policy'
                envs:
                    type: array
                    description: A list of environment variables made available to the component.
                    items:
                        $ref: '#/components/schemas/app_variable_definition'
                git:
                    $ref: '#/components/schemas/apps_git_source_spec'
                github:
                    $ref: '#/components/schemas/apps_github_source_spec'
                gitlab:
                    $ref: '#/components/schemas/apps_gitlab_source_spec'
                log_destinations:
                    $ref: '#/components/schemas/app_log_destination_definition'
                name:
                    type: string
                    description: The name. Must be unique across all components within the same app.
                    example: api
                    minLength: 2
                    maxLength: 32
                    pattern: ^[a-z][a-z0-9-]{0,30}[a-z0-9]$
                routes:
                    type: array
                    description: A list of HTTP routes that should be routed to this component.
                    items:
                        $ref: '#/components/schemas/app_route_spec'
                source_dir:
                    type: string
                    description: An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
                    example: path/to/dir
        app_ingress_spec:
            type: object
            description: Specification for app ingress configurations.
            properties:
                rules:
                    type: array
                    description: Rules for configuring HTTP ingress for component routes, CORS, rewrites, and redirects.
                    items:
                        $ref: '#/components/schemas/app_ingress_spec_rule'
        app_ingress_spec_rule:
            type: object
            properties:
                component:
                    $ref: '#/components/schemas/app_ingress_spec_rule_routing_component'
                cors:
                    $ref: '#/components/schemas/apps_cors_policy'
                match:
                    $ref: '#/components/schemas/app_ingress_spec_rule_match'
                redirect:
                    $ref: '#/components/schemas/app_ingress_spec_rule_routing_redirect'
        app_ingress_spec_rule_match:
            type: object
            description: The match configuration for the rule.
            required:
                - path
            properties:
                path:
                    $ref: '#/components/schemas/app_ingress_spec_rule_string_match'
        app_ingress_spec_rule_routing_component:
            type: object
            description: The component to route to. Only one of `component` or `redirect` may be set.
            required:
                - name
            properties:
                name:
                    type: string
                    description: The name of the component to route to.
                    example: web
                preserve_path_prefix:
                    type: string
                    description: 'An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`. Note: this is not applicable for Functions Components and is mutually exclusive with `rewrite`.'
                    example: "true"
                rewrite:
                    type: string
                    description: 'An optional field that will rewrite the path of the component to be what is specified here. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If you specified the rewrite to be `/v1/`, requests to `/api/list` would be rewritten to `/v1/list`. Note: this is mutually exclusive with `preserve_path_prefix`.'
                    example: /api/v1/
        app_ingress_spec_rule_routing_redirect:
            type: object
            description: The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
            properties:
                authority:
                    type: string
                    description: 'The authority/host to redirect to. This can be a hostname or IP address. Note: use `port` to set the port.'
                    example: example.com
                port:
                    type: integer
                    format: int64
                    description: The port to redirect to.
                    example: 443
                redirect_code:
                    type: integer
                    format: int64
                    description: The redirect code to use. Defaults to `302`. Supported values are 300, 301, 302, 303, 304, 307, 308.
                    example: 302
                scheme:
                    type: string
                    description: 'The scheme to redirect to. Supported values are `http` or `https`. Default: `https`.'
                    example: https
                uri:
                    type: string
                    description: 'An optional URI path to redirect to. Note: if this is specified the whole URI of the original request will be overwritten to this value, irrespective of the original request URI being matched.'
                    example: /about
        app_ingress_spec_rule_string_match:
            type: object
            description: The path to match on.
            required:
                - prefix
            properties:
                prefix:
                    type: string
                    description: Prefix-based match. For example, `/api` will match `/api`, `/api/`, and any nested paths such as `/api/v1/endpoint`.
                    example: /api
                    maxLength: 256
        app_job_spec:
            allOf:
                - $ref: '#/components/schemas/app_component_base'
                - $ref: '#/components/schemas/app_component_instance_base'
                - type: object
                  required:
                    - name
                  properties:
                    kind:
                        type: string
                        description: |-
                            - UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.
                            - PRE_DEPLOY: Indicates a job that runs before an app deployment.
                            - POST_DEPLOY: Indicates a job that runs after an app deployment.
                            - FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.
                        enum:
                            - UNSPECIFIED
                            - PRE_DEPLOY
                            - POST_DEPLOY
                            - FAILED_DEPLOY
                        default: UNSPECIFIED
                        example: PRE_DEPLOY
        app_log_destination_datadog_spec:
            type: object
            description: DataDog configuration.
            required:
                - api_key
            properties:
                api_key:
                    type: string
                    description: Datadog API key.
                    example: abcdefghijklmnopqrstuvwxyz0123456789
                endpoint:
                    type: string
                    description: Datadog HTTP log intake endpoint.
                    example: https://mydatadogendpoint.com
        app_log_destination_definition:
            type: object
            title: Configurations for external logging.
            required:
                - name
            properties:
                datadog:
                    $ref: '#/components/schemas/app_log_destination_datadog_spec'
                logtail:
                    $ref: '#/components/schemas/app_log_destination_logtail_spec'
                name:
                    type: string
                    example: my_log_destination
                    minLength: 2
                    maxLength: 42
                    pattern: ^[A-Za-z0-9()\[\]'"][-A-Za-z0-9_. \/()\[\]]{0,40}[A-Za-z0-9()\[\]'"]$
                papertrail:
                    $ref: '#/components/schemas/app_log_destination_papertrail_spec'
        app_log_destination_logtail_spec:
            type: object
            description: Logtail configuration.
            required:
                - endpoint
            properties:
                token:
                    type: string
                    description: Logtail token.
                    example: abcdefghijklmnopqrstuvwxyz0123456789
        app_log_destination_papertrail_spec:
            type: object
            description: Papertrail configuration.
            required:
                - endpoint
            properties:
                endpoint:
                    type: string
                    description: Papertrail syslog endpoint.
                    example: https://mypapertrailendpoint.com
        app_metrics_bandwidth_usage:
            type: object
            properties:
                app_bandwidth_usage:
                    type: array
                    description: A list of bandwidth usage details by app.
                    items:
                        $ref: '#/components/schemas/app_metrics_bandwidth_usage_details'
                date:
                    type: string
                    format: date-time
                    description: The date for the metrics data.
                    example: "2023-01-17T00:00:00Z"
        app_metrics_bandwidth_usage_details:
            type: object
            description: Bandwidth usage for an app.
            properties:
                app_id:
                    type: string
                    description: The ID of the app.
                    example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                bandwidth_bytes:
                    type: string
                    format: uint64
                    description: The used bandwidth amount in bytes.
                    example: "513668"
        app_metrics_bandwidth_usage_request:
            type: object
            required:
                - app_ids
            properties:
                app_ids:
                    type: array
                    description: A list of app IDs to query bandwidth metrics for.
                    example:
                        - 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                        - c2a93513-8d9b-4223-9d61-5e7272c81cf5
                    maxItems: 100
                    items:
                        type: string
                date:
                    type: string
                    format: date-time
                    description: 'Optional day to query. Only the date component of the timestamp will be considered. Default: yesterday.'
                    example: "2023-01-17T00:00:00Z"
        app_propose:
            type: object
            required:
                - spec
            properties:
                app_id:
                    type: string
                    description: An optional ID of an existing app. If set, the spec will be treated as a proposed update to the specified app. The existing app is not modified using this method.
                    example: b6bdf840-2854-4f87-a36c-5f231c617c84
                spec:
                    $ref: '#/components/schemas/app_spec'
        app_propose_response:
            type: object
            properties:
                app_cost:
                    type: integer
                    format: int32
                    description: The monthly cost of the proposed app in USD using the next pricing plan tier. For example, if you propose an app that uses the Basic tier, the `app_tier_upgrade_cost` field displays the monthly cost of the app if it were to use the Professional tier. If the proposed app already uses the most expensive tier, the field is empty.
                    example: 5
                app_is_static:
                    type: boolean
                    description: Indicates whether the app is a static app.
                    example: true
                app_name_available:
                    type: boolean
                    description: Indicates whether the app name is available.
                    example: true
                app_name_suggestion:
                    type: string
                    description: The suggested name if the proposed app name is unavailable.
                    example: newName
                app_tier_downgrade_cost:
                    type: integer
                    format: int32
                    description: The monthly cost of the proposed app in USD using the previous pricing plan tier. For example, if you propose an app that uses the Professional tier, the `app_tier_downgrade_cost` field displays the monthly cost of the app if it were to use the Basic tier. If the proposed app already uses the lest expensive tier, the field is empty.
                    example: 17
                existing_static_apps:
                    type: string
                    description: The maximum number of free static apps the account can have. We will charge you for any additional static apps.
                    example: "2"
                spec:
                    $ref: '#/components/schemas/app_spec'
        app_response:
            type: object
            properties:
                app:
                    $ref: '#/components/schemas/app'
        app_rollback_validation_condition:
            type: object
            properties:
                code:
                    type: string
                    description: "A code identifier that represents the failing condition.\n\nFailing conditions:\n  - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.\n  - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.\n  - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.\n  - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.\n  - `database_config_conflict` - indicates that the deployment's database config is different than the current config.\n  - `region_conflict` - indicates that the deployment's region differs from the current app region.\n  \nWarning conditions:\n  - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.\n  - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.\n"
                    enum:
                        - incompatible_phase
                        - incompatible_result
                        - exceeded_revision_limit
                        - app_pinned
                        - database_config_conflict
                        - region_conflict
                        - static_site_requires_rebuild
                        - image_source_missing_digest
                    example: exceeded_revision_limit
                components:
                    type: array
                    example:
                        - www
                    items:
                        type: string
                        description: If applicable, a list of components that are failing the condition.
                message:
                    type: string
                    description: A human-readable message describing the failing condition.
                    example: the deployment is past the maximum historical revision limit of 0 for the "starter" app tier
        app_route_spec:
            type: object
            title: A criterion for routing HTTP traffic to a component.
            properties:
                path:
                    type: string
                    description: An HTTP path prefix. Paths must start with / and must be unique across all components within an app.
                    example: /api
                preserve_path_prefix:
                    type: boolean
                    description: An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`.
                    example: true
        app_service_spec:
            allOf:
                - $ref: '#/components/schemas/app_component_base'
                - $ref: '#/components/schemas/app_component_instance_base'
                - type: object
                  required:
                    - name
                  properties:
                    cors:
                        $ref: '#/components/schemas/apps_cors_policy'
                    health_check:
                        $ref: '#/components/schemas/app_service_spec_health_check'
                    http_port:
                        type: integer
                        format: int64
                        description: |-
                            The internal port on which this service's run command will listen. Default: 8080
                            If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.
                        example: 3000
                        minimum: 1
                        maximum: 65535
                    internal_ports:
                        type: array
                        description: The ports on which this service will listen for internal traffic.
                        example:
                            - 80
                            - 443
                        items:
                            type: integer
                            format: int64
                    routes:
                        type: array
                        description: A list of HTTP routes that should be routed to this component.
                        items:
                            $ref: '#/components/schemas/app_route_spec'
        app_service_spec_health_check:
            type: object
            properties:
                failure_threshold:
                    type: integer
                    format: int32
                    description: The number of failed health checks before considered unhealthy.
                    example: 2
                http_path:
                    type: string
                    description: The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead.
                    example: /health
                initial_delay_seconds:
                    type: integer
                    format: int32
                    description: The number of seconds to wait before beginning health checks.
                    example: 30
                period_seconds:
                    type: integer
                    format: int32
                    description: The number of seconds to wait between health checks.
                    example: 60
                port:
                    type: integer
                    format: int64
                    description: The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
                    example: 80
                    minimum: 1
                    maximum: 65535
                success_threshold:
                    type: integer
                    format: int32
                    description: The number of successful health checks before considered healthy.
                    example: 3
                timeout_seconds:
                    type: integer
                    format: int32
                    description: The number of seconds after which the check times out.
                    example: 45
        app_spec:
            type: object
            title: AppSpec
            description: The desired configuration of an application.
            required:
                - name
            properties:
                databases:
                    type: array
                    description: |-
                        Database instances which can provide persistence to workloads within the
                        application.
                    items:
                        $ref: '#/components/schemas/app_database_spec'
                domains:
                    type: array
                    description: A set of hostnames where the application will be available.
                    items:
                        $ref: '#/components/schemas/app_domain_spec'
                functions:
                    type: array
                    description: Workloads which expose publicly-accessible HTTP services via Functions Components.
                    items:
                        $ref: '#/components/schemas/app_functions_spec'
                ingress:
                    $ref: '#/components/schemas/app_ingress_spec'
                jobs:
                    type: array
                    description: Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.
                    items:
                        $ref: '#/components/schemas/app_job_spec'
                name:
                    type: string
                    description: The name of the app. Must be unique across all apps in the same account.
                    example: web-app-01
                    minLength: 2
                    maxLength: 32
                    pattern: ^[a-z][a-z0-9-]{0,30}[a-z0-9]$
                region:
                    type: string
                    description: 'The slug form of the geographical origin of the app. Default: `nearest available`'
                    enum:
                        - ams
                        - nyc
                        - fra
                        - sfo
                        - sgp
                        - blr
                        - tor
                        - lon
                        - syd
                    example: nyc
                services:
                    type: array
                    description: Workloads which expose publicly-accessible HTTP services.
                    items:
                        $ref: '#/components/schemas/app_service_spec'
                static_sites:
                    type: array
                    description: Content which can be rendered to static web assets.
                    items:
                        $ref: '#/components/schemas/app_static_site_spec'
                workers:
                    type: array
                    description: Workloads which do not expose publicly-accessible HTTP services.
                    items:
                        $ref: '#/components/schemas/app_worker_spec'
        app_static_site_spec:
            allOf:
                - $ref: '#/components/schemas/app_component_base'
                - type: object
                  properties:
                    catchall_document:
                        type: string
                        description: The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set.
                        example: index.html
                    cors:
                        $ref: '#/components/schemas/apps_cors_policy'
                    error_document:
                        type: string
                        description: 'The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one.'
                        default: 404.html
                        example: error.html
                    index_document:
                        type: string
                        description: 'The name of the index document to use when serving this static site. Default: index.html'
                        default: index.html
                        example: main.html
                    output_dir:
                        type: string
                        description: 'An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`.'
                        example: dist/
                    routes:
                        type: array
                        description: A list of HTTP routes that should be routed to this component.
                        items:
                            $ref: '#/components/schemas/app_route_spec'
            required:
                - name
        app_variable_definition:
            type: object
            required:
                - key
            properties:
                key:
                    type: string
                    description: The variable name
                    example: BASE_URL
                    pattern: ^[_A-Za-z][_A-Za-z0-9]*$
                scope:
                    type: string
                    description: |-
                        - RUN_TIME: Made available only at run-time
                        - BUILD_TIME: Made available only at build-time
                        - RUN_AND_BUILD_TIME: Made available at both build and run-time
                    enum:
                        - UNSET
                        - RUN_TIME
                        - BUILD_TIME
                        - RUN_AND_BUILD_TIME
                    default: RUN_AND_BUILD_TIME
                    example: BUILD_TIME
                type:
                    type: string
                    description: |-
                        - GENERAL: A plain-text environment variable
                        - SECRET: A secret encrypted environment variable
                    enum:
                        - GENERAL
                        - SECRET
                    default: GENERAL
                    example: GENERAL
                value:
                    type: string
                    description: The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used.
                    example: http://example.com
        app_worker_spec:
            allOf:
                - $ref: '#/components/schemas/app_component_base'
                - $ref: '#/components/schemas/app_component_instance_base'
            required:
                - name
        apps_alert_response:
            type: object
            properties:
                alert:
                    $ref: '#/components/schemas/app_alert'
        apps_assign_app_alert_destinations_request:
            type: object
            properties:
                emails:
                    type: array
                    example:
                        - sammy@digitalocean.com
                    items:
                        $ref: '#/components/schemas/app_alert_email'
                slack_webhooks:
                    type: array
                    items:
                        $ref: '#/components/schemas/app_alert_slack_webhook'
        apps_cors_policy:
            type: object
            properties:
                allow_credentials:
                    type: boolean
                    description: Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is include. This configures the `Access-Control-Allow-Credentials` header.
                    example: false
                allow_headers:
                    type: array
                    description: The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
                    example:
                        - Content-Type
                        - X-Custom-Header
                    items:
                        type: string
                allow_methods:
                    type: array
                    description: The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
                    example:
                        - GET
                        - OPTIONS
                        - POST
                        - PUT
                        - PATCH
                        - DELETE
                    items:
                        type: string
                allow_origins:
                    type: array
                    description: The set of allowed CORS origins.
                    example:
                        - exact: https://www.example.com
                        - regex: ^.*example.com
                    items:
                        $ref: '#/components/schemas/apps_string_match'
                expose_headers:
                    type: array
                    description: The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
                    example:
                        - Content-Encoding
                        - X-Custom-Header
                    items:
                        type: string
                max_age:
                    type: string
                    description: An optional duration specifying how long browsers can cache the results of a preflight request. This configures the `Access-Control-Max-Age` header.
                    example: 5h30m
        apps_create_app_request:
            type: object
            required:
                - spec
            properties:
                project_id:
                    type: string
                    description: The ID of the project the app should be assigned to. If omitted, it will be assigned to your default project.
                spec:
                    $ref: '#/components/schemas/app_spec'
        apps_create_deployment_request:
            type: object
            properties:
                force_build:
                    type: boolean
                    title: Indicates whether to force a build of app from source even if an existing cached build is suitable for re-use
                    example: true
        apps_delete_app_response:
            type: object
            properties:
                id:
                    type: string
                    title: The ID of the app that was deleted
                    example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
        apps_deployment:
            type: object
            title: An app deployment
            properties:
                cause:
                    type: string
                    title: What caused this deployment to be created
                    example: commit 9a4df0b pushed to github/digitalocean/sample-golang
                cloned_from:
                    type: string
                    title: The ID of a previous deployment that this deployment was cloned from
                    example: 3aa4d20e-5527-4c00-b496-601fbd22520a
                created_at:
                    type: string
                    title: The creation time of the deployment
                    format: date-time
                    example: "2020-07-28T18:00:00Z"
                functions:
                    type: array
                    title: Functions components that are part of this deployment
                    items:
                        $ref: '#/components/schemas/apps_deployment_functions'
                id:
                    type: string
                    title: The ID of the deployment
                    example: b6bdf840-2854-4f87-a36c-5f231c617c84
                jobs:
                    type: array
                    title: Job components that are part of this deployment
                    items:
                        $ref: '#/components/schemas/apps_deployment_job'
                phase:
                    $ref: '#/components/schemas/apps_deployment_phase'
                phase_last_updated_at:
                    type: string
                    title: When the deployment phase was last updated
                    format: date-time
                    example: "0001-01-01T00:00:00Z"
                progress:
                    $ref: '#/components/schemas/apps_deployment_progress'
                services:
                    type: array
                    title: Service components that are part of this deployment
                    items:
                        $ref: '#/components/schemas/apps_deployment_service'
                spec:
                    $ref: '#/components/schemas/app_spec'
                static_sites:
                    type: array
                    title: Static Site components that are part of this deployment
                    items:
                        $ref: '#/components/schemas/apps_deployment_static_site'
                tier_slug:
                    type: string
                    title: The current pricing tier slug of the deployment
                    example: basic
                    readOnly: true
                updated_at:
                    type: string
                    title: When the deployment was last updated
                    format: date-time
                    example: "2020-07-28T18:00:00Z"
                workers:
                    type: array
                    title: Worker components that are part of this deployment
                    items:
                        $ref: '#/components/schemas/apps_deployment_worker'
        apps_deployment_functions:
            type: object
            properties:
                name:
                    type: string
                    title: The name of this functions component
                    example: my-functions-component
                namespace:
                    type: string
                    description: The namespace where the functions are deployed.
                    example: ap-b2a93513-8d9b-4223-9d61-5e7272c81c32
                source_commit_hash:
                    type: string
                    description: The commit hash of the repository that was used to build this functions component.
                    example: 54d4a727f457231062439895000d45437c7bb405
        apps_deployment_job:
            type: object
            properties:
                name:
                    type: string
                    title: The name of this job
                    example: migrate-db
                source_commit_hash:
                    type: string
                    title: The commit hash of the repository that was used to build this job
                    example: 54d4a727f457231062439895000d45437c7bb405
        apps_deployment_phase:
            type: string
            enum:
                - UNKNOWN
                - PENDING_BUILD
                - BUILDING
                - PENDING_DEPLOY
                - DEPLOYING
                - ACTIVE
                - SUPERSEDED
                - ERROR
                - CANCELED
            default: UNKNOWN
            example: ACTIVE
        apps_deployment_progress:
            type: object
            properties:
                error_steps:
                    type: integer
                    title: Number of unsuccessful steps
                    format: int32
                    example: 3
                pending_steps:
                    type: integer
                    title: Number of pending steps
                    format: int32
                    example: 2
                running_steps:
                    type: integer
                    title: Number of currently running steps
                    format: int32
                    example: 2
                steps:
                    type: array
                    title: The deployment's steps
                    items:
                        $ref: '#/components/schemas/apps_deployment_progress_step'
                success_steps:
                    type: integer
                    title: Number of successful steps
                    format: int32
                    example: 4
                summary_steps:
                    type: array
                    title: A flattened summary of the steps
                    items:
                        $ref: '#/components/schemas/apps_deployment_progress_step'
                total_steps:
                    type: integer
                    title: Total number of steps
                    format: int32
                    example: 5
        apps_deployment_progress_step:
            type: object
            title: A step that is run as part of the deployment's lifecycle
            properties:
                component_name:
                    type: string
                    title: The component name that this step is associated with
                    example: component
                ended_at:
                    type: string
                    title: The end time of this step
                    format: date-time
                    example: "2020-11-19T20:27:18Z"
                message_base:
                    type: string
                    description: |-
                        The base of a human-readable description of the step intended to be combined with the component name for presentation. For example:

                        `message_base` = "Building service"
                        `component_name` = "api"
                    example: Building service
                name:
                    type: string
                    title: The name of this step
                    example: example_step
                reason:
                    $ref: '#/components/schemas/apps_deployment_progress_step_reason'
                started_at:
                    type: string
                    title: The start time of this step
                    format: date-time
                    example: "2020-11-19T20:27:18Z"
                status:
                    $ref: '#/components/schemas/apps_deployment_progress_step_status'
                steps:
                    type: array
                    title: Child steps of this step
                    items:
                        type: object
        apps_deployment_progress_step_reason:
            type: object
            properties:
                code:
                    type: string
                    title: The error code
                    example: Title of Error
                message:
                    type: string
                    title: The error message
                    example: This is an error
        apps_deployment_progress_step_status:
            type: string
            enum:
                - UNKNOWN
                - PENDING
                - RUNNING
                - ERROR
                - SUCCESS
            default: UNKNOWN
            example: SUCCESS
        apps_deployment_response:
            type: object
            properties:
                deployment:
                    $ref: '#/components/schemas/apps_deployment'
        apps_deployment_service:
            type: object
            properties:
                name:
                    type: string
                    title: The name of this service
                    example: web
                source_commit_hash:
                    type: string
                    title: The commit hash of the repository that was used to build this service
                    example: 54d4a727f457231062439895000d45437c7bb405
        apps_deployment_static_site:
            type: object
            properties:
                name:
                    type: string
                    title: The name of this static site
                    example: web
                source_commit_hash:
                    type: string
                    title: The commit hash of the repository that was used to build this static site
                    example: 54d4a727f457231062439895000d45437c7bb405
        apps_deployment_worker:
            type: object
            properties:
                name:
                    type: string
                    title: The name of this worker
                    example: queue-runner
                source_commit_hash:
                    type: string
                    title: The commit hash of the repository that was used to build this worker
                    example: 54d4a727f457231062439895000d45437c7bb405
        apps_deployments_response:
            allOf:
                - type: object
                  properties:
                    deployments:
                        type: array
                        title: A list of deployments
                        items:
                            $ref: '#/components/schemas/apps_deployment'
                - $ref: '#/components/schemas/pagination'
                - $ref: '#/components/schemas/meta'
        apps_domain:
            type: object
            properties:
                certificate_expires_at:
                    type: string
                    title: Current SSL certificate expiration time
                    format: date-time
                    example: "2024-01-29T23:59:59Z"
                    readOnly: true
                id:
                    type: string
                    title: The ID of the domain
                    example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                phase:
                    $ref: '#/components/schemas/apps_domain_phase'
                progress:
                    $ref: '#/components/schemas/apps_domain_progress'
                rotate_validation_records:
                    type: boolean
                    title: Validation values have changed and require manual intervention
                    readOnly: true
                spec:
                    $ref: '#/components/schemas/app_domain_spec'
                validations:
                    type: array
                    title: List of TXT validation records
                    items:
                        $ref: '#/components/schemas/app_domain_validation'
        apps_domain_phase:
            type: string
            enum:
                - UNKNOWN
                - PENDING
                - CONFIGURING
                - ACTIVE
                - ERROR
            default: UNKNOWN
            example: ACTIVE
        apps_domain_progress:
            type: object
            properties:
                steps:
                    type: array
                    title: The steps of the domain's progress
                    items:
                        type: object
        apps_get_instance_size_response:
            type: object
            properties:
                instance_size:
                    $ref: '#/components/schemas/apps_instance_size'
        apps_get_logs_response:
            type: object
            properties:
                historic_urls:
                    type: array
                    title: A list of URLs to archived log files
                    items:
                        type: string
                        example: https://logs/build.log
                live_url:
                    type: string
                    description: A URL of the real-time live logs. This URL may use either the `https://` or `wss://` protocols and will keep pushing live logs as they become available.
                    example: ws://logs/build
        apps_get_tier_response:
            type: object
            properties:
                tier:
                    $ref: '#/components/schemas/apps_tier'
        apps_git_source_spec:
            type: object
            properties:
                branch:
                    type: string
                    description: The name of the branch to use
                    example: main
                repo_clone_url:
                    type: string
                    description: 'The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`'
                    example: https://github.com/digitalocean/sample-golang.git
        apps_github_source_spec:
            type: object
            properties:
                branch:
                    type: string
                    description: The name of the branch to use
                    example: main
                deploy_on_push:
                    type: boolean
                    description: Whether to automatically deploy new commits made to the repo
                    example: true
                repo:
                    type: string
                    description: 'The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`'
                    example: digitalocean/sample-golang
        apps_gitlab_source_spec:
            type: object
            properties:
                branch:
                    type: string
                    description: The name of the branch to use
                    example: main
                deploy_on_push:
                    type: boolean
                    description: Whether to automatically deploy new commits made to the repo
                    example: true
                repo:
                    type: string
                    description: 'The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`'
                    example: digitalocean/sample-golang
        apps_image_source_spec:
            type: object
            properties:
                registry:
                    type: string
                    description: The registry name. Must be left empty for the `DOCR` registry type.
                    example: registry.hub.docker.com
                registry_type:
                    type: string
                    description: |-
                        - DOCKER_HUB: The DockerHub container registry type.
                        - DOCR: The DigitalOcean container registry type.
                    enum:
                        - DOCKER_HUB
                        - DOCR
                    example: DOCR
                repository:
                    type: string
                    description: The repository name.
                    example: origin/master
                tag:
                    type: string
                    description: The repository tag. Defaults to `latest` if not provided.
                    default: latest
                    example: latest
        apps_instance_size:
            type: object
            properties:
                cpu_type:
                    $ref: '#/components/schemas/instance_size_cpu_type'
                cpus:
                    type: string
                    title: The number of allotted vCPU cores
                    format: int64
                    example: "3"
                memory_bytes:
                    type: string
                    title: The allotted memory in bytes
                    format: int64
                    example: "1048"
                name:
                    type: string
                    title: A human-readable name of the instance size
                    example: name
                slug:
                    type: string
                    title: The slug of the instance size
                    example: basic
                tier_downgrade_to:
                    type: string
                    title: The slug of the corresponding downgradable instance size on the lower tier
                    example: basic
                tier_slug:
                    type: string
                    title: The slug of the tier to which this instance size belongs
                    example: basic
                tier_upgrade_to:
                    type: string
                    title: The slug of the corresponding upgradable instance size on the higher tier
                    example: basic
                usd_per_month:
                    type: string
                    title: The cost of this instance size in USD per month
                    example: "23"
                usd_per_second:
                    type: string
                    title: The cost of this instance size in USD per second
                    example: "0.00000001232"
        apps_list_alerts_response:
            type: object
            properties:
                alerts:
                    type: array
                    items:
                        $ref: '#/components/schemas/app_alert'
        apps_list_instance_sizes_response:
            type: object
            properties:
                discount_percent:
                    type: number
                    format: float
                    example: 2.32
                instance_sizes:
                    type: array
                    items:
                        $ref: '#/components/schemas/apps_instance_size'
        apps_list_regions_response:
            type: object
            properties:
                regions:
                    type: array
                    items:
                        $ref: '#/components/schemas/apps_region'
        apps_list_tiers_response:
            type: object
            properties:
                tiers:
                    type: array
                    items:
                        $ref: '#/components/schemas/apps_tier'
        apps_region:
            type: object
            title: Geographical information about an app origin
            properties:
                continent:
                    type: string
                    title: The continent that this region is in
                    example: europe
                    readOnly: true
                data_centers:
                    type: array
                    title: Data centers that are in this region
                    example:
                        - ams
                    readOnly: true
                    items:
                        type: string
                        example: ams
                default:
                    type: boolean
                    description: Whether or not the region is presented as the default.
                    example: true
                    readOnly: true
                disabled:
                    type: boolean
                    title: Whether or not the region is open for new apps
                    example: true
                    readOnly: true
                flag:
                    type: string
                    title: The flag of this region
                    example: ams
                    readOnly: true
                label:
                    type: string
                    title: A human-readable name of the region
                    example: ams
                    readOnly: true
                reason:
                    type: string
                    title: Reason that this region is not available
                    example: to crowded
                    readOnly: true
                slug:
                    type: string
                    title: The slug form of the region name
                    example: basic
                    readOnly: true
        apps_response:
            allOf:
                - type: object
                  properties:
                    apps:
                        type: array
                        title: A list of apps
                        items:
                            $ref: '#/components/schemas/app'
                - $ref: '#/components/schemas/pagination'
                - $ref: '#/components/schemas/meta'
        apps_rollback_app_request:
            type: object
            properties:
                deployment_id:
                    type: string
                    description: The ID of the deployment to rollback to.
                    example: 3aa4d20e-5527-4c00-b496-601fbd22520a
                skip_pin:
                    type: boolean
                    description: Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned.
                    example: false
        apps_string_match:
            type: object
            properties:
                exact:
                    type: string
                    description: Exact string match. Only 1 of `exact`, `prefix`, or `regex` must be set.
                    example: https://www.example.com
                    minLength: 1
                    maxLength: 256
                prefix:
                    type: string
                    description: Prefix-based match. Only 1 of `exact`, `prefix`, or `regex` must be set.
                    example: https://www.example.com
                    minLength: 1
                    maxLength: 256
                regex:
                    type: string
                    description: 'RE2 style regex-based match. Only 1 of `exact`, `prefix`, or `regex` must be set. For more information about RE2 syntax, see: https://github.com/google/re2/wiki/Syntax'
                    example: ^.*example.com
                    minLength: 1
                    maxLength: 256
        apps_tier:
            type: object
            properties:
                build_seconds:
                    type: string
                    title: The amount of included build time in seconds
                    format: int64
                    example: "233"
                egress_bandwidth_bytes:
                    type: string
                    title: The amount of included outbound bandwidth in bytes
                    format: int64
                    example: "123"
                name:
                    type: string
                    title: A human-readable name of the tier
                    example: test
                slug:
                    type: string
                    title: The slug of the tier
                    example: test
                storage_bytes:
                    type: string
                    title: The allotted disk space in bytes
                    format: int64
                    example: "10000000"
        apps_update_app_request:
            type: object
            required:
                - spec
            properties:
                spec:
                    $ref: '#/components/schemas/app_spec'
        associated_kubernetes_resource:
            type: object
            properties:
                id:
                    type: string
                    description: The ID of a resource associated with a Kubernetes cluster.
                    example: edb0478d-7436-11ea-86e6-0a58ac144b91
                name:
                    type: string
                    description: The name of a resource associated with a Kubernetes cluster.
                    example: volume-001
        associated_kubernetes_resources:
            type: object
            description: An object containing the IDs of resources associated with a Kubernetes cluster.
            properties:
                load_balancers:
                    type: array
                    description: A list of names and IDs for associated load balancers that can be destroyed along with the cluster.
                    example:
                        - id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                          name: lb-001
                    items:
                        $ref: '#/components/schemas/associated_kubernetes_resource'
                volume_snapshots:
                    type: array
                    description: A list of names and IDs for associated volume snapshots that can be destroyed along with the cluster.
                    example:
                        - id: edb0478d-7436-11ea-86e6-0a58ac144b91
                          name: snapshot-001
                    items:
                        $ref: '#/components/schemas/associated_kubernetes_resource'
                volumes:
                    type: array
                    description: A list of names and IDs for associated volumes that can be destroyed along with the cluster.
                    example:
                        - id: ba49449a-7435-11ea-b89e-0a58ac14480f
                          name: volume-001
                    items:
                        $ref: '#/components/schemas/associated_kubernetes_resource'
        associated_resource:
            type: object
            description: An objects containing information about a resource associated with a Droplet.
            properties:
                cost:
                    type: string
                    description: The cost of the resource in USD per month if the resource is retained after the Droplet is destroyed.
                    example: "0.05"
                id:
                    type: string
                    description: The unique identifier for the resource associated with the Droplet.
                    example: "61486916"
                name:
                    type: string
                    description: The name of the resource associated with the Droplet.
                    example: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
        associated_resource_status:
            type: object
            description: An objects containing information about a resources scheduled for deletion.
            properties:
                completed_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format indicating when the requested action was completed.
                    example: "2020-04-01T18:11:49Z"
                droplet:
                    $ref: '#/components/schemas/destroyed_associated_resource'
                failures:
                    type: integer
                    description: A count of the associated resources that failed to be destroyed, if any.
                    example: 0
                resources:
                    type: object
                    description: An object containing additional information about resource related to a Droplet requested to be destroyed.
                    properties:
                        floating_ips:
                            type: array
                            items:
                                $ref: '#/components/schemas/destroyed_associated_resource'
                        reserved_ips:
                            type: array
                            items:
                                $ref: '#/components/schemas/destroyed_associated_resource'
                        snapshots:
                            type: array
                            items:
                                $ref: '#/components/schemas/destroyed_associated_resource'
                        volume_snapshots:
                            type: array
                            items:
                                $ref: '#/components/schemas/destroyed_associated_resource'
                        volumes:
                            type: array
                            items:
                                $ref: '#/components/schemas/destroyed_associated_resource'
        backup:
            type: object
            required:
                - created_at
                - size_gigabytes
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format at which the backup was created.
                    example: "2019-01-31T19:25:22Z"
                size_gigabytes:
                    type: number
                    description: The size of the database backup in GBs.
                    example: 0.03364864
        backward_links:
            allOf:
                - $ref: '#/components/schemas/link_to_first_page'
                - $ref: '#/components/schemas/link_to_prev_page'
        balance:
            type: object
            properties:
                account_balance:
                    type: string
                    description: Current balance of the customer's most recent billing activity.  Does not reflect `month_to_date_usage`.
                    example: "12.23"
                generated_at:
                    type: string
                    format: date-time
                    description: The time at which balances were most recently generated.
                    example: "2019-07-09T15:01:12Z"
                month_to_date_balance:
                    type: string
                    description: Balance as of the `generated_at` time.  This value includes the `account_balance` and `month_to_date_usage`.
                    example: "23.44"
                month_to_date_usage:
                    type: string
                    description: Amount used in the current billing period as of the `generated_at` time.
                    example: "11.21"
        billing_address:
            type: object
            properties:
                address_line1:
                    type: string
                    description: Street address line 1
                    example: 101 Shark Row
                address_line2:
                    type: string
                    description: Street address line 2
                    example: ' '
                city:
                    type: string
                    description: City
                    example: Atlantis
                country_iso2_code:
                    type: string
                    description: Country (ISO2) code
                    example: US
                created_at:
                    type: string
                    description: Timestamp billing address was created
                    example: "2019-09-03T16:34:46.000+00:00"
                postal_code:
                    type: string
                    description: Postal code
                    example: "12345"
                region:
                    type: string
                    description: Region
                    example: OC
                updated_at:
                    type: string
                    description: Timestamp billing address was updated
                    example: "2019-09-03T16:34:46.000+00:00"
        billing_history:
            type: object
            properties:
                amount:
                    type: string
                    description: Amount of the billing history entry.
                    example: "12.34"
                date:
                    type: string
                    format: date-time
                    description: Time the billing history entry occurred.
                    example: "2018-06-01T08:44:38Z"
                description:
                    type: string
                    description: Description of the billing history entry.
                    example: Invoice for May 2018
                invoice_id:
                    type: string
                    description: ID of the invoice associated with the billing history entry, if  applicable.
                    example: "123"
                invoice_uuid:
                    type: string
                    description: UUID of the invoice associated with the billing history entry, if  applicable.
                    example: example-uuid
                type:
                    type: string
                    description: Type of billing history entry.
                    enum:
                        - ACHFailure
                        - Adjustment
                        - AttemptFailed
                        - Chargeback
                        - Credit
                        - CreditExpiration
                        - Invoice
                        - Payment
                        - Refund
                        - Reversal
                    example: Invoice
        ca:
            type: object
            required:
                - certificate
            properties:
                certificate:
                    type: string
                    description: base64 encoding of the certificate used to secure database connections
                    example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXFtZ0F3SUJBZ0lVRUZZWTdBWFZQS0Raam9jb1lpMk00Y0dvcU0wd0RRWUpLb1pJaHZjTkFRRU0KQlFBd09qRTRNRFlHQTFVRUF3d3ZOek0zT1RaaE1XRXRaamhrTUMwME9HSmpMV0V4Wm1NdFpqbGhNVFZsWXprdwpORGhsSUZCeWIycGxZM1FnUTBFd0hoY05NakF3TnpFM01UVTFNREEyV2hjTk16QXdOekUxTVRVMU1EQTJXakE2Ck1UZ3dOZ1lEVlFRRERDODNNemM1Tm1FeFlTMW1PR1F3TFRRNFltTXRZVEZtWXkxbU9XRXhOV1ZqT1RBME9HVWcKVUhKdmFtVmpkQ0JEUVRDQ0FhSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnR1BBRENDQVlvQ2dnR0JBTVdScXhycwpMZnpNdHZyUmxKVEw4MldYMVBLZkhKbitvYjNYcmVBY3FZd1dBUUp2Q3IycmhxSXZieVZzMGlaU0NzOHI4c3RGClljQ0R1bkxJNmUwTy9laERZYTBIT2RrMkFFRzE1ckVOVmNha2NSczcyQWlHVHNrdkNXS2VkUjFTUWswVWt0WCsKQUg4S1ExS3F5bzNtZ2Y2cVV1WUpzc3JNTXFselk3YTN1RVpEb2ZqTjN5Q3MvM21pTVJKcVcyNm1JV0IrUUlEbAo5YzdLRVF5MTZvdCtjeHVnd0lLMm9oZHMzaFY1bjBKMFVBM0I3QWRBdXY5aUl5L3JHaHlTNm5CNTdaWm9JZnAyCnFybXdOY0UrVjlIdXhQSGtRVjFOQjUwOFFudWZ4Z0E5VCtqU2VrdGVUbWFORkxqNjFXL3BtcndrTytOaWFXUTIKaGgzVXBKOEozY1BoNkErbHRnUmpSV2NEb2lsYVNwRVVpU09WemNNYVFvalZKYVJlNk9NbnZYc29NaSs3ZzdneApWcittQ0lUcGcvck9DaXpBWWQ2UFAxLzdYTjk1ZXNmU2tBQnM5c3hJakpjTUFqbDBYTEFzRmtGZVdyeHNIajlVCmJnaDNWYXdtcnpUeXhZT0RQcXV1cS9JcGlwc0RRT3Fpb2ZsUStkWEJJL3NUT0NNbVp6K0pNcG5HYXdJREFRQUIKb3o4d1BUQWRCZ05WSFE0RUZnUVVSekdDRlE3WEtUdHRDN3JzNS8ydFlQcExTZGN3RHdZRFZSMFRCQWd3QmdFQgovd0lCQURBTEJnTlZIUThFQkFNQ0FRWXdEUVlKS29aSWh2Y05BUUVNQlFBRGdnR0JBSWFKQ0dSVVNxUExtcmcvCmk3MW10b0NHUDdzeG1BVXVCek1oOEdrU25uaVdaZnZGMTRwSUtqTlkwbzVkWmpHKzZqK1VjalZtK0RIdGE1RjYKOWJPeEk5S0NFeEI1blBjRXpMWjNZYitNOTcrellxbm9zUm85S21DVFJBb2JrNTZ0WU1FS1h1aVJja2tkMm1yUQo4cGw2N2xxdThjM1V4c0dHZEZVT01wMkk3ZTNpdUdWVm5UR0ZWM3JQZUdaQ0J3WGVyUUQyY0F4UjkzS3BnWVZ2ClhUUzk5dnpSbm1HOHhhUm9EVy9FbEdXZ2xWd0Q5a1JrbXhUUkdoYTdDWVZCcjFQVWY2dVVFVjhmVFIxc1hFZnIKLytMR1JoSVVsSUhWT3l2Yzk3YnZYQURPbWF1MWZDVE5lWGtRdTNyZnZFSlBmaFlLeVIwT0V3eWVvdlhRNzl0LwpTV2ZGTjBreU1Pc1UrNVNIdHJKSEh1eWNWcU0yQlVVK083VjM1UnNwOU9MZGRZMFFVbTZldFpEVEhhSUhYYzRRCnl1Rm1OL1NhSFZtNE0wL3BTVlJQdVd6TmpxMnZyRllvSDRtbGhIZk95TUNJMjc2elE2aWhGNkdDSHlkOUJqajcKUm1UWGEyNHM3NWhmSi9YTDV2bnJSdEtpVHJlVHF6V21EOVhnUmNMQ0gyS1hJaVRtSWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
                    readOnly: true
        cdn_endpoint:
            type: object
            required:
                - origin
            properties:
                certificate_id:
                    type: string
                    format: uuid
                    description: The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
                    example: 892071a0-bb95-49bc-8021-3afd67a210bf
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the CDN endpoint was created.
                    example: "2018-03-21T16:02:37Z"
                    readOnly: true
                custom_domain:
                    type: string
                    format: hostname
                    description: The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.
                    example: static.example.com
                endpoint:
                    type: string
                    format: hostname
                    description: The fully qualified domain name (FQDN) from which the CDN-backed content is served.
                    example: static-images.nyc3.cdn.digitaloceanspaces.com
                    readOnly: true
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference a CDN endpoint.
                    example: 892071a0-bb95-49bc-8021-3afd67a210bf
                    readOnly: true
                origin:
                    type: string
                    format: hostname
                    description: The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space.
                    example: static-images.nyc3.digitaloceanspaces.com
                ttl:
                    type: integer
                    description: The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.
                    enum:
                        - 60
                        - 600
                        - 3600
                        - 86400
                        - 604800
                    default: 3600
                    example: 3600
        certificate:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the certificate was created.
                    example: "2017-02-08T16:02:37Z"
                    readOnly: true
                dns_names:
                    type: array
                    description: An array of fully qualified domain names (FQDNs) for which the certificate was issued.
                    example:
                        - www.example.com
                        - example.com
                    items:
                        type: string
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference a certificate.
                    example: 892071a0-bb95-49bc-8021-3afd67a210bf
                    readOnly: true
                name:
                    type: string
                    description: A unique human-readable name referring to a certificate.
                    example: web-cert-01
                not_after:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents the certificate's expiration date.
                    example: "2017-02-22T00:23:00Z"
                    readOnly: true
                sha1_fingerprint:
                    type: string
                    description: A unique identifier generated from the SHA-1 fingerprint of the certificate.
                    example: dfcc9f57d86bf58e321c2c6c31c7a971be244ac7
                    readOnly: true
                state:
                    type: string
                    description: A string representing the current state of the certificate. It may be `pending`, `verified`, or `error`.
                    enum:
                        - pending
                        - verified
                        - error
                    example: verified
                    readOnly: true
                type:
                    type: string
                    description: A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt.
                    enum:
                        - custom
                        - lets_encrypt
                    example: lets_encrypt
        certificate_create_base:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                    description: A unique human-readable name referring to a certificate.
                    example: web-cert-01
                type:
                    type: string
                    description: A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt.
                    enum:
                        - custom
                        - lets_encrypt
                    example: lets_encrypt
        certificate_request_custom:
            allOf:
                - $ref: '#/components/schemas/certificate_create_base'
                - type: object
                  required:
                    - private_key
                    - leaf_certificate
                  properties:
                    certificate_chain:
                        type: string
                        description: The full PEM-formatted trust chain between the certificate authority's certificate and your domain's SSL certificate.
                        example: |-
                            -----BEGIN CERTIFICATE-----
                            MIIFFjCCA/6gAwIBAgISA0AznUJmXhu08/89ZuSPC/kRMA0GCSqGSIb3DQEBCwUA
                            MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD
                            ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xNjExMjQwMDIzMDBaFw0x
                            NzAyMjIwMDIzMDBaMCQxIjAgBgNVBAMTGWNsb3VkLmFuZHJld3NvbWV0aGluZy5j
                            b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDBIZMz7tnK6V52SVf+
                            CYssOfCQHAx5f0Ou5rYbq3xNh8VHAIYJCQ1QxQIxKSP6+uODSYrb2KWyurP1DwGb
                            8OYm0J3syEDtCUQik1cpCzpeNlAZ2f8FzXyYQAqPopxdRpsFz8DtZnVvu86XwrE4
                            oFPl9MReICmZfBNWylpV5qgFPoXyJ70ZAsTm3cEe3n+LBXEnY4YrVDRWxA3wZ2mz
                            Z03HZ1hHrxK9CMnS829U+8sK+UneZpCO7yLRPuxwhmps0wpK/YuZZfRAKF1FZRna
                            k/SIQ28rnWufmdg16YqqHgl5JOgnb3aslKRvL4dI2Gwnkd2IHtpZnTR0gxFXfqqb
                            QwuRAgMBAAGjggIaMIICFjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYB
                            BQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFLsAFcxAhFX1
                            MbCnzr9hEO5rL4jqMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe/zqOyhMHAG
                            CCsGAQUFBwEBBGQwYjAvBggrBgEFBQcwAYYjaHR0cDovL29jc3AuaW50LXgzLmxl
                            dHNlbmNyeXB0Lm9yZy8wLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5s
                            ZXRzZW5jcnlwdC5vcmcvMCQGA1UdEQQdMBuCGWNsb3VkLmFuZHJld3NvbWV0aGlu
                            Zy5jb20wgf4GA1UdIASB9jCB8zAIBgZngQwBAgEwgeWECysGAQQBgt8TAQEBMIHW
                            MCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCBqwYIKwYB
                            BQUHAgIwgZ4MgZtUaGlzIENlcnRpZmljYXRlIG1heSBvbmx5IGJlIHJlbGllZCB1
                            cG9uIGJ5IFJlbHlpbmcgUGFydGllcyBhbmQgb25seSQ2ziBhY2NvcmRhbmNlIHdp
                            dGggdGhlIENlcnRpZmljYXRlIFBvbGljeSBmb3VuZCBhdCBsdHRwczovL2xldHNl
                            bmNyeXB0Lm9yZy9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEAOZVQvrjM
                            PKXLARTjB5XsgfyDN3/qwLl7SmwGkPe+B+9FJpfScYG1JzVuCj/SoaPaK34G4x/e
                            iXwlwOXtMOtqjQYzNu2Pr2C+I+rVmaxIrCUXFmC205IMuUBEeWXG9Y/HvXQLPabD
                            D3Gdl5+Feink9SDRP7G0HaAwq13hI7ARxkL3o+UIY39X0dV3WOboW2Re8nrkFXJ7
                            q9Z6shK5QgpBfsLjtjNsQzaGV3ve1gOg25aTJGearBWOvEjJNA1wGMoKVXOtYwm/
                            WyWoVdCQ8HmconcbJB6xc0UZ1EjvzRr5ZIvSa5uHZD0L3m7/kpPWlAlFJ7hHASPu
                            UlF1zblDmg2Iaw==
                            -----END CERTIFICATE-----
                            -----BEGIN CERTIFICATE-----
                            MIIEkjCCA3qgAwIBAgIQCgFBQgAAAVOFc2oLheynCDANBgkqhkiG9w0BAQsFADA/
                            MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
                            DkRTVCBSb290IENBIFgzMB4XDTE2MDMxNzE2NDA0NloXDTIxMDMxNzE2NDA0Nlow
                            SjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY3J5cHQxIzAhBgNVBAMT
                            GkxldCdzIEVuY3J5cHQgQXV0aG9yaXR5IFgzMIIBIjANBgkqhkiG9w0BAQEFAAOC
                            AQ8AMIIBCgKCAQEAnNMM8FrlLsd3cl03g7NoYzDq1zUmGSXhvb418XCSL7e4S0EF
                            q6meNQhY7LEqxGiHC6PjdeTm86dicbp5gWAf15Gan/PQeGdxyGkOlZHP/uaZ6WA8
                            SMx+yk13EiSdRxta67nsHjcAHJyse6cF6s5K671B5TaYucv9bTyWaN8jKkKQDIZ0
                            Z8h/pZq4UmEUEz9l6YKHy9v6Dlb2honzhT+Xhq+w3Brvaw2VFn3EK6BlspkENnWA
                            a6xK8xuQSXgvopZPKiAlKQTGdMDQMc2PMTiVFrqoM7hD8bEfwzB/onkxEz0tNvjj
                            /PIzark5McWvxI0NHWQWM6r6hCm21AvA2H3DkwIPOIUo4IBfTCCAXkwEgYDVR0T
                            AQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG
                            CCsGAQUFBzABhiZodHRwOi8vaXNyZy50cnVzdGlkLm9jc3AuaWRlbnRydXN0LmNv
                            bTA7BggrBgEFBQcwAoYvaHR0cDovL2FwcHMuaWRlbnRydXN0LmNvbS9yb290cy9k
                            c3Ryb290Y2F4My5wN2MwHwYDVR0jBBgwFoAUxKexpHsscfrb4UuQdf/EFWCFiRAw
                            VAYDVR0gBE0wSzAIBgZngQwBAgEwPwYLKwYBBAGC3xMBAQEwMDAuBggrBgEFBQcC
                            ARYiaHR0cDovL2Nwcy5yb290LXgxLmxldHNlbmNyeXB0Lm9yZzA8BgNVHR8ENTAz
                            MDGgL6AthitodHRwOi8vY3JsLmlkZW50cnVzdC5jb20vRFNUUk9PVENBWDNDUkwu
                            Y3JsMB0GA1UdDgQWBBSoSmpjBH3duubRObemRWXv86jsoTANBgkqhkiG9w0BAQsF
                            AAOCAQEA3TPXEfNjWDjdGBX7CVW+dla5cEilaUcne8IkCJLxWh9KEik3JHRRHGJo
                            uM2VcGfl96S8TihRzZvoroed6ti6WqEBmtzw3Wodatg+VyOeph4EYpr/1wXKtx8/
                            wApIvJSwtmVi4MFU5aMqrSDE6ea73Mj2tcMyo5jMd6jmeWUHK8so/joWUoHOUgwu
                            X4Po1QYz+3dszkDqMp4fklxBwXRsW10KXzPMTZ+sOPAveyxindmjkW8lGy+QsRlG
                            PfZ+G6Z6h7mjem0Y+iWlkYcV4PIWL1iwBi8saCbGS5jN2p8M+X+Q7UNKEkROb3N6
                            KOqkqm57TH2H3eDJAkSnh6/DNFu0Qg==
                            -----END CERTIFICATE-----
                    leaf_certificate:
                        type: string
                        description: The contents of a PEM-formatted public SSL certificate.
                        example: |-
                            -----BEGIN CERTIFICATE-----
                            MIIFFjCCA/6gAwIBAgISA0AznUJmXhu08/89ZuSPC/kRMA0GCSqGSIb3DQEBCwUA
                            MEoxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MSMwIQYDVQQD
                            ExpMZXQncyBFbmNyeXB0IEF1dGhvcml0eSBYMzAeFw0xNjExMjQwMDIzMDBaFw0x
                            NzAyMjIwMDIzMDBaMCQxIjAgBgNVBAMTGWNsb3VkLmFuZHJld3NvbWV0aGluZy5j
                            b20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDBIZMz8pnK6V52SVf+
                            CYssOfCQHAx5f0Ou5rYbq3xNh8VWHIYJCQ1QxQIxKSP6+uODSYrb2KWyurP1DwGb
                            8OYm0J3syEDtCUQik1cpCzpeNlAZ2f8FzXyYQAqPopxdRpsFz8DtZnVvu86XwrE4
                            oFPl9MReICmZfBNWylpV5qgFPoXyJ70ZAsTm3cEe3n+LBXEnY4YrVDRWxA3wZ2mz
                            Z03HZ1hHrxK9CMnS829U+8sK+UneZpCO7yLRPuxwhmps0wpK/YuZZfRAKF1FZRna
                            k/SIQ28rnWufmdg16YqqHgl5JOgnb3aslKRvL4dI2Gwnkd2IHtpZnTR0gxFXfqqb
                            QwuRAgMBAAGjggIaMIICFjAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYB
                            BQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFLsAFcxAhFX1
                            MbCnzr9hEO5rL4jqMB8GA1UdIwQYMBaAFKhKamMEfd265tE5t6ZFZe/zqOyhMHAG
                            CCsGAQUFBwEBBGQwYjAvBggrBgEFBQcwAYYjaHR0cDovL29jc3AuaW50LXgzLmxl
                            dHNlbmNyeXB0Lm9yZy8wLwYIKwYBBQUHMAKGI2h0dHA6Ly9jZXJ0LmludC14My5s
                            ZXRzZW5jcnlwdC5vcmcvMCQGA1UdEQQdMBuCGWNsb3VkLmFuZHJld3NvbWV0aGlu
                            Zy5jb20wgf4GA1UdIASB9jCB8zAIBgZngQwBAgWrgeYGCysGAQQBgt8TAQEBMIHW
                            MCYGCCsGAQUFBwIBFhpodHRwOi8vY3BzLmxldHNlbmNyeXB0Lm9yZzCBqwYIKwYB
                            BQUHAgIwgZ4MgZtUaGlzIENlcnRpZmljYXRlIG1heSBvbmx5IGJlIHJlbGllZCB1
                            cG9uIGJ5IFJlbHlpbmcgUGFydGllcyBhbmQgb25seSQ2ziBhY2NvcmRhbmNlIHdp
                            dGggdGhlIENlcnRpZmljYXRlIFBvbGljeSBmb3VuZCBhdCBodHRwczovL2xldHNl
                            bmNyeXB0Lm9yZy9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEAOZVQvrjM
                            PKXLARTjB5XsgfyDN3/qwLl7SmwGkPe+B+9FJpfScYG1JzVuCj/SoaPaK34G4x/e
                            iXwlwOXtMOtqjQYzNu2Pr2C+I+rVmaxIrCUXFmC205IMuUBEeWXG9Y/HvXQLPabD
                            D3Gdl5+Feink9SDRP7G0HaAwq13hI7ARxkL9p+UIY39X0dV3WOboW2Re8nrkFXJ7
                            q9Z6shK5QgpBfsLjtjNsQzaGV3ve1gOg25aTJGearBWOvEjJNA1wGMoKVXOtYwm/
                            WyWoVdCQ8HmconcbJB6xc0UZ1EjvzRr5ZIvSa5uHZD0L3m7/kpPWlAlFJ7hHASPu
                            UlF1zblDmg2Iaw==
                            -----END CERTIFICATE-----
                    private_key:
                        type: string
                        description: The contents of a PEM-formatted private-key corresponding to the SSL certificate.
                        example: |-
                            -----BEGIN PRIVATE KEY-----
                            MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBIZMz8pnK6V52
                            SVf+CYssOfCQHAx5f0Ou5rYbq3xNh8VHAIYJCQ1QxQIxKSP6+uODSYrb2KWyurP1
                            DwGb8OYm0J3syEDtCUQik1cpCzpeNlAZ2f8FzXyYQAqPopxdRpsFz8DtZnVvu86X
                            wrE4oFPl9MReICmZfBNWylpV5qgFPoXyJ70ZAsTm3cEe3n+LBXEnY4YrVDRWxA3w
                            Z2mzZ03HZ1hHrxK9CMnS829U+8sK+UneZpCO7yLRPuxwhmps0wpK/YuZZfRAKF1F
                            ZRnak/SIQ28rnWufmdg16YqqHgl5JOgnb3aslKRvL4dI2Gwnkd2IHtpZnTR0gxFX
                            fqqbQwuRAgMBAAECggEBAILLmkW0JzOkmLTDNzR0giyRkLoIROqDpfLtjKdwm95l
                            9NUBJcU4vCvXQITKt/NhtnNTexcowg8pInb0ksJpg3UGE+4oMNBXVi2UW5MQZ5cm
                            cVkQqgXkBF2YAY8FMaB6EML+0En2+dGR/3gIAr221xsFiXe1kHbB8Nb2c/d5HpFt
                            eRpLVJnK+TxSr78PcZA8DDGlSgwvgimdAaFUNO2OqB9/0E9UPyKk2ycdff/Z6ldF
                            0hkCLtdYTTl8Kf/OwjcuTgmA2O3Y8/CoQX/L+oP9Rvt9pWCEfuebiOmHJVPO6Y6x
                            gtQVEXwmF1pDHH4Qtz/e6UZTdYeMl9G4aNO2CawwcaYECgYEA57imgSOG4XsJLRh
                            GGncV9R/xhy4AbDWLtAMzQRX4ktvKCaHWyQV2XK2we/cu29NLv2Y89WmerTNPOU+
                            P8+pB31uty2ELySVn15QhKpQClVEAlxCnnNjXYrii5LOM80+lVmxvQwxVd8Yz8nj
                            IntyioXNBEnYS7V2RxxFGgFun1cCgYEA1V3W+Uyamhq8JS5EY0FhyGcXdHd70K49
                            W1ou7McIpncf9tM9acLS1hkI98rd2T69Zo8mKoV1V2hjFaKUYfNys6tTkYWeZCcJ
                            3rW44j9DTD+FmmjcX6b8DzfybGLehfNbCw6n67/r45DXIV/fk6XZfkx6IEGO4ODt
                            Nfnvx4TuI1cCgYBACDiKqwSUvmkUuweOo4IuCxyb5Ee8v98P5JIE/VRDxlCbKbpx
                            pxEam6aBBQVcDi+n8o0H3WjjlKc6UqbW/01YMoMrvzotxNBLz8Y0QtQHZvR6KoCG
                            RKCKstxTcWflzKuknbqN4RapAhNbKBDJ8PMSWfyDWNyaXzSmBdvaidbF1QKBgDI0
                            o4oD0Xkjg1QIYAUu9FBQmb9JAjRnW36saNBEQS/SZg4RRKknM683MtoDvVIKJk0E
                            sAlfX+4SXQZRPDMUMtA+Jyrd0xhj6zmhbwClvDMr20crF3fWdgcqtft1BEFmsuyW
                            JUMe5OWmRkjPI2+9ncDPRAllA7a8lnSV/Crph5N/AoGBAIK249temKrGe9pmsmAo
                            QbNuYSmwpnMoAqdHTrl70HEmK7ob6SIVmsR8QFAkH7xkYZc4Bxbx4h1bdpozGB+/
                            AangbiaYJcAOD1QyfiFbflvI1RFeHgrk7VIafeSeQv6qu0LLMi2zUbpgVzxt78Wg
                            eTuK2xNR0PIM8OI7pRpgyj1I
                            -----END PRIVATE KEY-----
            title: Custom Certificate Request
        certificate_request_lets_encrypt:
            allOf:
                - $ref: '#/components/schemas/certificate_create_base'
                - type: object
                  required:
                    - dns_names
                  properties:
                    dns_names:
                        type: array
                        description: An array of fully qualified domain names (FQDNs) for which the certificate was issued. A certificate covering all subdomains can be issued using a wildcard (e.g. `*.example.com`).
                        example:
                            - www.example.com
                            - example.com
                        items:
                            type: string
            title: Let's Encrypt Certificate Request
        check:
            allOf:
                - $ref: '#/components/schemas/check_base'
                - $ref: '#/components/schemas/check_updatable'
            type: object
        check_base:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference the check.
                    example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
                    readOnly: true
        check_updatable:
            type: object
            properties:
                enabled:
                    type: boolean
                    description: A boolean value indicating whether the check is enabled/disabled.
                    default: true
                    example: true
                name:
                    type: string
                    description: A human-friendly display name.
                    example: Landing page check
                regions:
                    type: array
                    description: An array containing the selected regions to perform healthchecks from.
                    example:
                        - us_east
                        - eu_west
                    items:
                        type: string
                        enum:
                            - us_east
                            - us_west
                            - eu_west
                            - se_asia
                target:
                    type: string
                    format: url
                    description: The endpoint to perform healthchecks on.
                    example: https://www.landingpage.com
                type:
                    type: string
                    description: The type of health check to perform.
                    enum:
                        - ping
                        - http
                        - https
                    example: https
        cluster:
            type: object
            required:
                - name
                - region
                - version
                - node_pools
            properties:
                auto_upgrade:
                    type: boolean
                    description: A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
                    default: false
                    example: true
                cluster_subnet:
                    type: string
                    format: cidr
                    description: The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation.
                    example: 10.244.0.0/16
                    readOnly: true
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created.
                    example: "2018-11-15T16:00:11Z"
                    readOnly: true
                endpoint:
                    type: string
                    description: The base URL of the API server on the Kubernetes master node.
                    example: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
                    readOnly: true
                ha:
                    type: boolean
                    description: A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.
                    default: false
                    example: true
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference a Kubernetes cluster.
                    example: bd5f5959-5e1e-4205-a714-a914373942af
                    readOnly: true
                ipv4:
                    type: string
                    description: The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)
                    example: 68.183.121.157
                    readOnly: true
                maintenance_policy:
                    $ref: '#/components/schemas/maintenance_policy'
                name:
                    type: string
                    description: A human-readable name for a Kubernetes cluster.
                    example: prod-cluster-01
                node_pools:
                    type: array
                    description: An object specifying the details of the worker nodes available to the Kubernetes cluster.
                    items:
                        $ref: '#/components/schemas/kubernetes_node_pool'
                region:
                    type: string
                    description: The slug identifier for the region where the Kubernetes cluster is located.
                    example: nyc1
                registry_enabled:
                    type: boolean
                    description: A read-only boolean value indicating if a container registry is integrated with the cluster.
                    example: true
                    readOnly: true
                service_subnet:
                    type: string
                    description: The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation.
                    example: 10.245.0.0/16
                    readOnly: true
                status:
                    type: object
                    description: An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
                    readOnly: true
                    properties:
                        message:
                            type: string
                            description: An optional message providing additional information about the current cluster state.
                            example: provisioning
                        state:
                            type: string
                            description: A string indicating the current status of the cluster.
                            enum:
                                - running
                                - provisioning
                                - degraded
                                - error
                                - deleted
                                - upgrading
                                - deleting
                            example: provisioning
                surge_upgrade:
                    type: boolean
                    description: A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
                    default: false
                    example: true
                tags:
                    type: array
                    description: An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
                    example:
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                        - production
                        - web-team
                    items:
                        type: string
                updated_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated.
                    example: "2018-11-15T16:00:11Z"
                    readOnly: true
                version:
                    type: string
                    description: The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. "1.14"), the latest version within it will be used (e.g. "1.14.6-do.1"); if set to "latest", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions.
                    example: 1.18.6-do.0
                vpc_uuid:
                    type: string
                    format: uuid
                    description: A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned.
                    example: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        cluster_registries:
            type: object
            properties:
                cluster_uuids:
                    type: array
                    description: An array containing the UUIDs of Kubernetes clusters.
                    example:
                        - bd5f5959-5e1e-4205-a714-a914373942af
                        - 50c2f44c-011d-493e-aee5-361a4a0d1844
                    items:
                        type: string
        cluster_update:
            type: object
            required:
                - name
            properties:
                auto_upgrade:
                    type: boolean
                    description: A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
                    default: false
                    example: true
                ha:
                    type: boolean
                    description: A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.
                    default: false
                    example: true
                maintenance_policy:
                    $ref: '#/components/schemas/maintenance_policy'
                name:
                    type: string
                    description: A human-readable name for a Kubernetes cluster.
                    example: prod-cluster-01
                surge_upgrade:
                    type: boolean
                    description: A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
                    default: false
                    example: true
                tags:
                    type: array
                    description: An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
                    example:
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                        - production
                        - web-team
                    items:
                        type: string
        clusterlint_request:
            type: object
            properties:
                exclude_checks:
                    type: array
                    description: An array of checks that will be run when clusterlint executes checks.
                    example:
                        - default-namespace
                    items:
                        type: string
                exclude_groups:
                    type: array
                    description: An array of check groups that will be omitted when clusterlint executes checks.
                    example:
                        - workload-health
                    items:
                        type: string
                include_checks:
                    type: array
                    description: An array of checks that will be run when clusterlint executes checks.
                    example:
                        - bare-pods
                        - resource-requirements
                    items:
                        type: string
                include_groups:
                    type: array
                    description: An array of check groups that will be run when clusterlint executes checks.
                    example:
                        - basic
                        - doks
                        - security
                    items:
                        type: string
        clusterlint_results:
            type: object
            properties:
                completed_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was completed.
                    example: "2019-10-30T05:34:11Z"
                diagnostics:
                    type: array
                    description: An array of diagnostics reporting potential problems for the given cluster.
                    items:
                        type: object
                        properties:
                            check_name:
                                type: string
                                description: The clusterlint check that resulted in the diagnostic.
                                example: unused-config-map
                            message:
                                type: string
                                description: Feedback about the object for users to fix.
                                example: Unused config map
                            object:
                                type: object
                                description: Metadata about the Kubernetes API object the diagnostic is reported on.
                                properties:
                                    kind:
                                        type: string
                                        description: The kind of Kubernetes API object
                                        example: config map
                                    name:
                                        type: string
                                        description: Name of the object
                                        example: foo
                                    namespace:
                                        type: string
                                        description: The namespace the object resides in the cluster.
                                        example: kube-system
                            severity:
                                type: string
                                description: Can be one of error, warning or suggestion.
                                example: warning
                requested_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was made.
                    example: "2019-10-30T05:34:07Z"
                run_id:
                    type: string
                    description: Id of the clusterlint run that can be used later to fetch the diagnostics.
                    example: 50c2f44c-011d-493e-aee5-361a4a0d1844
        connection_pool:
            type: object
            required:
                - name
                - mode
                - size
                - db
            properties:
                connection:
                    allOf:
                        - $ref: '#/components/schemas/database_connection'
                        - readOnly: true
                db:
                    type: string
                    description: The database for use with the connection pool.
                    example: defaultdb
                mode:
                    type: string
                    description: The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement.
                    example: transaction
                name:
                    type: string
                    description: A unique name for the connection pool. Must be between 3 and 60 characters.
                    example: backend-pool
                private_connection:
                    allOf:
                        - $ref: '#/components/schemas/database_connection'
                        - readOnly: true
                size:
                    type: integer
                    format: int32
                    description: The desired size of the PGBouncer connection pool. The maximum allowed size is determined by the size of the cluster's primary node. 25 backend server connections are allowed for every 1GB of RAM. Three are reserved for maintenance. For example, a primary node with 1 GB of RAM allows for a maximum of 22 backend server connections while one with 4 GB would allow for 97. Note that these are shared across all connection pools in a cluster.
                    example: 10
                user:
                    type: string
                    description: The name of the user for use with the connection pool. When excluded, all sessions connect to the database as the inbound user.
                    example: doadmin
        connection_pool_update:
            type: object
            required:
                - mode
                - size
                - db
            properties:
                db:
                    type: string
                    description: The database for use with the connection pool.
                    example: defaultdb
                mode:
                    type: string
                    description: The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement.
                    example: transaction
                size:
                    type: integer
                    format: int32
                    description: The desired size of the PGBouncer connection pool. The maximum allowed size is determined by the size of the cluster's primary node. 25 backend server connections are allowed for every 1GB of RAM. Three are reserved for maintenance. For example, a primary node with 1 GB of RAM allows for a maximum of 22 backend server connections while one with 4 GB would allow for 97. Note that these are shared across all connection pools in a cluster.
                    example: 10
                user:
                    type: string
                    description: The name of the user for use with the connection pool. When excluded, all sessions connect to the database as the inbound user.
                    example: doadmin
        connection_pools:
            type: object
            properties:
                pools:
                    type: array
                    description: An array of connection pool objects.
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/connection_pool'
        create_namespace:
            type: object
            required:
                - region
                - label
            properties:
                label:
                    type: string
                    description: The namespace's unique name.
                    example: my namespace
                region:
                    type: string
                    description: The [datacenter region](https://docs.digitalocean.com/products/platform/availability-matrix/#available-datacenters) in which to create the namespace.
                    example: nyc1
        create_trigger:
            type: object
            required:
                - name
                - function
                - type
                - is_enabled
                - scheduled_details
            properties:
                function:
                    type: string
                    description: Name of function(action) that exists in the given namespace.
                    example: hello
                is_enabled:
                    type: boolean
                    description: Indicates weather the trigger is paused or unpaused.
                    example: true
                name:
                    type: string
                    description: The trigger's unique name within the namespace.
                    example: my trigger
                scheduled_details:
                    $ref: '#/components/schemas/scheduled_details'
                type:
                    type: string
                    description: One of different type of triggers. Currently only SCHEDULED is supported.
                    example: SCHEDULED
        credentials:
            type: object
            properties:
                certificate_authority_data:
                    type: string
                    format: byte
                    description: A base64 encoding of bytes representing the certificate authority data for accessing the cluster.
                    example: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lDQm5Vd0RRWUpLb1pJaHZjTkFRRUxCUUF3TXpFVk1CTUdBMVVFQ2hNTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dBWURWUVFERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHlNREE0TURNeApOVEkxTWpoYUZ3MDBNREE0TURNeE5USTFNamhhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDc21oa2JrSEpUcGhZQlN0R05VVE1ORVZTd2N3bmRtajArelQvcUZaNGsrOVNxUnYrSgpBd0lCaGpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1CMEdBMVVkRGdRV0JCUlRzazhhZ1hCUnFyZXdlTXJxClhwa3E1NXg5dVRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXB6V2F6bXNqYWxXTEx3ZjVpbWdDblNINDlKcGkKYWkvbzFMdEJvVEpleGdqZzE1ZVppaG5BMUJMc0lWNE9BZGM3UEFsL040L0hlbENrTDVxandjamRnNVdaYnMzYwozcFVUQ0g5bVVwMFg1SVdhT1VKV292Q1hGUlM1R2VKYXlkSDVPUXhqTURzR2N2UlNvZGQrVnQ2MXE3aWdFZ2I1CjBOZ1l5RnRnc2p0MHpJN3hURzZFNnlsOVYvUmFoS3lIQks2eExlM1RnUGU4SXhWa2RwT3QzR0FhSDRaK0pLR3gKYisyMVZia1NnRE1QQTlyR0VKNVZwVXlBV0FEVXZDRVFHV0hmNGpQN2ZGZlc3T050S0JWY3h3YWFjcVBVdUhzWApwRG5DZVR3V1NuUVp6L05xNmQxWUtsMFdtbkwzTEowemJzRVFGbEQ4MkkwL09MY2dZSDVxMklOZHhBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
                client_certificate_data:
                    type: string
                    format: byte
                    description: |
                        A base64 encoding of bytes representing the x509 client
                        certificate data for access the cluster. This is only returned for clusters
                        without support for token-based authentication.

                        Newly created Kubernetes clusters do not return credentials using
                        certificate-based authentication. For additional information,
                        [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
                    nullable: true
                    deprecated: true
                client_key_data:
                    type: string
                    format: byte
                    description: |
                        A base64 encoding of bytes representing the x509 client key
                        data for access the cluster. This is only returned for clusters without
                        support for token-based authentication.

                        Newly created Kubernetes clusters do not return credentials using
                        certificate-based authentication. For additional information,
                        [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
                    nullable: true
                    deprecated: true
                expires_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the access token expires.
                    example: "2019-11-09T11:50:28.889080521Z"
                server:
                    type: string
                    format: uri
                    description: The URL used to access the cluster API server.
                    example: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
                token:
                    type: string
                    description: An access token used to authenticate with the cluster. This is only returned for clusters with support for token-based authentication.
                    example: $DIGITALOCEAN_TOKEN
        database:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                    description: The name of the database.
                    example: alpha
        database_backup:
            type: object
            required:
                - database_name
            properties:
                backup_created_at:
                    type: string
                    format: date-time
                    description: The timestamp of an existing database cluster backup in ISO8601 combined date and time format. The most recent backup will be used if excluded.
                    example: "2019-01-31T19:25:22Z"
                database_name:
                    type: string
                    description: The name of an existing database cluster from which the backup will be restored.
                    example: backend
        database_cluster:
            type: object
            required:
                - name
                - engine
                - num_nodes
                - size
                - region
            properties:
                connection:
                    allOf:
                        - $ref: '#/components/schemas/database_connection'
                        - readOnly: true
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the database cluster was created.
                    example: "2019-01-11T18:37:36Z"
                    readOnly: true
                db_names:
                    type: array
                    description: An array of strings containing the names of databases created in the database cluster.
                    example:
                        - doadmin
                    nullable: true
                    readOnly: true
                    items:
                        type: string
                engine:
                    type: string
                    description: 'A slug representing the database engine used for the cluster. The possible values are: "pg" for PostgreSQL, "mysql" for MySQL, "redis" for Redis, and "mongodb" for MongoDB.'
                    enum:
                        - pg
                        - mysql
                        - redis
                        - mongodb
                    example: mysql
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference a database cluster.
                    example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                    readOnly: true
                maintenance_window:
                    allOf:
                        - $ref: '#/components/schemas/database_maintenance_window'
                        - readOnly: true
                name:
                    type: string
                    description: A unique, human-readable name referring to a database cluster.
                    example: backend
                num_nodes:
                    type: integer
                    description: The number of nodes in the database cluster.
                    example: 2
                private_connection:
                    allOf:
                        - $ref: '#/components/schemas/database_connection'
                        - readOnly: true
                private_network_uuid:
                    type: string
                    description: A string specifying the UUID of the VPC to which the database cluster will be assigned. If excluded, the cluster when creating a new database cluster, it will be assigned to your account's default VPC for the region.
                    example: d455e75d-4858-4eec-8c95-da2f0a5f93a7
                    pattern: ^$|[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}
                project_id:
                    type: string
                    format: uuid
                    description: The ID of the project that the database cluster is assigned to. If excluded when creating a new database cluster, it will be assigned to your default project.
                    example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                region:
                    type: string
                    description: The slug identifier for the region where the database cluster is located.
                    example: nyc3
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/firewall_rule'
                semantic_version:
                    type: string
                    description: A string representing the semantic version of the database engine in use for the cluster.
                    example: 8.0.28
                    readOnly: true
                size:
                    type: string
                    description: The slug identifier representing the size of the nodes in the database cluster.
                    example: db-s-2vcpu-4gb
                status:
                    type: string
                    description: A string representing the current status of the database cluster.
                    enum:
                        - creating
                        - online
                        - resizing
                        - migrating
                        - forking
                    example: creating
                    readOnly: true
                tags:
                    type: array
                    description: An array of tags that have been applied to the database cluster.
                    example:
                        - production
                    nullable: true
                    items:
                        type: string
                users:
                    type: array
                    nullable: true
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/database_user'
                version:
                    type: string
                    description: A string representing the version of the database engine in use for the cluster.
                    example: "8"
                version_end_of_availability:
                    type: string
                    description: A timestamp referring to the date when the particular version will no longer be available for creating new clusters. If null, the version does not have an end of availability timeline.
                    example: "2023-05-09T00:00:00Z"
                    readOnly: true
                version_end_of_life:
                    type: string
                    description: A timestamp referring to the date when the particular version will no longer be supported. If null, the version does not have an end of life timeline.
                    example: "2023-11-09T00:00:00Z"
                    readOnly: true
        database_cluster_resize:
            type: object
            required:
                - size
                - num_nodes
            properties:
                num_nodes:
                    type: integer
                    format: int32
                    description: The number of nodes in the database cluster. Valid values are are 1-3. In addition to the primary node, up to two standby nodes may be added for highly available configurations.
                    example: 3
                size:
                    type: string
                    description: A slug identifier representing desired the size of the nodes in the database cluster.
                    example: db-s-4vcpu-8gb
        database_config:
            type: object
            properties:
                config:
                    oneOf:
                        - $ref: '#/components/schemas/mysql'
                        - $ref: '#/components/schemas/postgres'
                        - $ref: '#/components/schemas/redis'
                    discriminator:
                        propertyName: type
                        mapping:
                            mysql: '#/components/schemas/mysql'
                            postgres: '#/components/schemas/postgres'
                            redis: '#/components/schemas/redis'
        database_connection:
            type: object
            properties:
                database:
                    type: string
                    description: The name of the default database.
                    example: defaultdb
                    readOnly: true
                host:
                    type: string
                    description: The FQDN pointing to the database cluster's current primary node.
                    example: backend-do-user-19081923-0.db.ondigitalocean.com
                    readOnly: true
                password:
                    type: string
                    description: The randomly generated password for the default user.
                    example: wv78n3zpz42xezdk
                    readOnly: true
                port:
                    type: integer
                    description: The port on which the database cluster is listening.
                    example: 25060
                    readOnly: true
                ssl:
                    type: boolean
                    description: A boolean value indicating if the connection should be made over SSL.
                    example: true
                    readOnly: true
                uri:
                    type: string
                    description: A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
                    example: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                    readOnly: true
                user:
                    type: string
                    description: The default user for the database.
                    example: doadmin
                    readOnly: true
        database_layout_option:
            type: object
            properties:
                num_nodes:
                    type: integer
                    example: 1
                sizes:
                    type: array
                    description: An array of objects containing the slugs available with various node counts
                    example:
                        - db-s-1vcpu-1gb
                        - db-s-1vcpu-2gb
                    readOnly: true
                    items:
                        type: string
        database_layout_options:
            type: object
            properties:
                layouts:
                    type: array
                    description: An array of objects, each indicating the node sizes (otherwise referred to as slugs) that are available with various numbers of nodes in the database cluster. Each slugs denotes the node's identifier, CPU, and RAM (in that order).
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/database_layout_option'
        database_maintenance_window:
            type: object
            nullable: true
            required:
                - day
                - hour
            properties:
                day:
                    type: string
                    description: The day of the week on which to apply maintenance updates.
                    example: tuesday
                description:
                    type: array
                    description: A list of strings, each containing information about a pending maintenance update.
                    example:
                        - Update TimescaleDB to version 1.2.1
                        - Upgrade to PostgreSQL 11.2 and 10.7 bugfix releases
                    readOnly: true
                    items:
                        type: string
                hour:
                    type: string
                    description: The hour in UTC at which maintenance updates will be applied in 24 hour format.
                    example: "14:00"
                pending:
                    type: boolean
                    description: A boolean value indicating whether any maintenance is scheduled to be performed in the next window.
                    example: true
                    readOnly: true
        database_region_options:
            type: object
            properties:
                regions:
                    type: array
                    description: An array of strings containing the names of available regions
                    example:
                        - ams3
                        - blr1
                    readOnly: true
                    items:
                        type: string
        database_replica:
            type: object
            required:
                - name
            properties:
                connection:
                    allOf:
                        - readOnly: true
                        - $ref: '#/components/schemas/database_connection'
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the database cluster was created.
                    example: "2019-01-11T18:37:36Z"
                    readOnly: true
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference a database replica.
                    example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                    readOnly: true
                name:
                    type: string
                    description: The name to give the read-only replicating
                    example: read-nyc3-01
                private_connection:
                    allOf:
                        - readOnly: true
                        - $ref: '#/components/schemas/database_connection'
                private_network_uuid:
                    type: string
                    description: A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account's default VPC for the region.
                    example: 9423cbad-9211-442f-820b-ef6915e99b5f
                region:
                    type: string
                    description: A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster.
                    example: nyc3
                size:
                    type: string
                    description: A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating.
                    example: db-s-2vcpu-4gb
                    writeOnly: true
                status:
                    type: string
                    description: A string representing the current status of the database cluster.
                    enum:
                        - creating
                        - online
                        - resizing
                        - migrating
                        - forking
                    example: creating
                    readOnly: true
                tags:
                    type: array
                    description: A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags.
                    example:
                        - production
                    items:
                        type: string
        database_user:
            type: object
            required:
                - name
            properties:
                mysql_settings:
                    $ref: '#/components/schemas/mysql_settings'
                name:
                    type: string
                    description: The name of a database user.
                    example: app-01
                password:
                    type: string
                    description: A randomly generated password for the database user.
                    example: jge5lfxtzhx42iff
                    readOnly: true
                role:
                    type: string
                    description: |
                        A string representing the database user's role. The value will be either
                        "primary" or "normal".
                    enum:
                        - primary
                        - normal
                    example: normal
                    readOnly: true
        database_version_availabilities:
            type: array
            description: An array of objects, each indicating the version end-of-life, end-of-availability for various database engines
            items:
                $ref: '#/components/schemas/database_version_availability'
        database_version_availability:
            type: object
            properties:
                end_of_availability:
                    type: string
                    description: A timestamp referring to the date when the particular version will no longer be available for creating new clusters. If null, the version does not have an end of availability timeline.
                    example: "2023-05-09T00:00:00Z"
                end_of_life:
                    type: string
                    description: A timestamp referring to the date when the particular version will no longer be supported. If null, the version does not have an end of life timeline.
                    example: "2023-11-09T00:00:00Z"
                version:
                    type: string
                    description: The engine version.
                    example: "8"
        database_version_options:
            type: object
            properties:
                versions:
                    type: array
                    description: An array of strings containing the names of available regions
                    example:
                        - "4.4"
                        - "5.0"
                    readOnly: true
                    items:
                        type: string
        destroy_associated_kubernetes_resources:
            type: object
            description: An object containing the IDs of resources to be destroyed along with their associated with a Kubernetes cluster.
            properties:
                load_balancers:
                    type: array
                    description: A list of IDs for associated load balancers to destroy along with the cluster.
                    example:
                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    items:
                        type: string
                volume_snapshots:
                    type: array
                    description: A list of IDs for associated volume snapshots to destroy along with the cluster.
                    example:
                        - edb0478d-7436-11ea-86e6-0a58ac144b91
                    items:
                        type: string
                volumes:
                    type: array
                    description: A list of IDs for associated volumes to destroy along with the cluster.
                    example:
                        - ba49449a-7435-11ea-b89e-0a58ac14480f
                    items:
                        type: string
        destroyed_associated_resource:
            type: object
            description: An object containing information about a resource scheduled for deletion.
            properties:
                destroyed_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format indicating when the resource was destroyed if the request was successful.
                    example: "2020-04-01T18:11:49Z"
                error_message:
                    type: string
                    description: A string indicating that the resource was not successfully destroyed and providing additional information.
                    example: ' '
                id:
                    type: string
                    description: The unique identifier for the resource scheduled for deletion.
                    example: "61486916"
                name:
                    type: string
                    description: The name of the resource scheduled for deletion.
                    example: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
        distribution:
            type: string
            description: The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
            enum:
                - Arch Linux
                - CentOS
                - CoreOS
                - Debian
                - Fedora
                - Fedora Atomic
                - FreeBSD
                - Gentoo
                - openSUSE
                - RancherOS
                - Rocky Linux
                - Ubuntu
                - Unknown
            example: Ubuntu
        docker_credentials:
            type: object
            properties:
                auths:
                    type: object
                    properties:
                        registry.digitalocean.com:
                            type: object
                            properties:
                                auth:
                                    type: string
                                    description: A base64 encoded string containing credentials for the container registry.
                                    example: YjdkMDNhNjk0N2IyMTdlZmI2ZjNlYzNiZDM1MDQ1ODI6YjdkMDNhNjk0N2IyMTdlZmI2ZjNlYzNiZDM1MDQ1ODIK
        domain:
            type: object
            properties:
                ip_address:
                    type: string
                    description: This optional attribute may contain an IP address. When provided, an A record will be automatically created pointing to the apex domain.
                    example: 192.0.2.1
                    writeOnly: true
                name:
                    type: string
                    description: The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name.
                    example: example.com
                ttl:
                    type: integer
                    description: This value is the time to live for the records on this domain, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
                    example: 1800
                    nullable: true
                    readOnly: true
                zone_file:
                    type: string
                    description: This attribute contains the complete contents of the zone file for the selected domain. Individual domain record resources should be used to get more granular control over records. However, this attribute can also be used to get information about the SOA record, which is created automatically and is not accessible as an individual record resource.
                    example: |
                        $ORIGIN example.com.
                        $TTL 1800
                        example.com. IN SOA ns1.digitalocean.com. hostmaster.example.com. 1415982609 10800 3600 604800 1800
                        example.com. 1800 IN NS ns1.digitalocean.com.
                        example.com. 1800 IN NS ns2.digitalocean.com.
                        example.com. 1800 IN NS ns3.digitalocean.com.
                        example.com. 1800 IN A 1.2.3.4
                    nullable: true
                    readOnly: true
        domain_record:
            type: object
            required:
                - type
            properties:
                data:
                    type: string
                    description: Variable data depending on record type. For example, the "data" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates.
                    example: ns1.digitalocean.com
                flags:
                    type: integer
                    description: An unsigned integer between 0-255 used for CAA records.
                    nullable: true
                id:
                    type: integer
                    description: A unique identifier for each domain record.
                    example: 2.8448429e+07
                    readOnly: true
                name:
                    type: string
                    description: The host name, alias, or service being defined by the record.
                    example: '@'
                port:
                    type: integer
                    description: The port for SRV records.
                    nullable: true
                priority:
                    type: integer
                    description: The priority for SRV and MX records.
                    nullable: true
                tag:
                    type: string
                    description: The parameter tag for CAA records. Valid values are "issue", "issuewild", or "iodef"
                    nullable: true
                ttl:
                    type: integer
                    description: This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
                    example: 1800
                type:
                    type: string
                    description: 'The type of the DNS record. For example: A, CNAME, TXT, ...'
                    example: NS
                weight:
                    type: integer
                    description: The weight for SRV records.
                    nullable: true
        domain_record_a:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - name
                    - data
        domain_record_aaaa:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - name
                    - data
        domain_record_caa:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - name
                    - data
                    - flags
                    - tag
        domain_record_cname:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - name
                    - data
        domain_record_mx:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - data
                    - priority
        domain_record_ns:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - name
                    - data
                    - flags
                    - tag
        domain_record_soa:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - ttl
        domain_record_srv:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - name
                    - data
                    - priority
                    - port
                    - flags
                    - tag
        domain_record_txt:
            allOf:
                - $ref: '#/components/schemas/domain_record'
                - required:
                    - type
                    - name
                    - data
                    - flags
                    - tag
        droplet:
            type: object
            required:
                - id
                - name
                - memory
                - vcpus
                - disk
                - locked
                - status
                - created_at
                - features
                - backup_ids
                - next_backup_window
                - snapshot_ids
                - image
                - volume_ids
                - size
                - size_slug
                - networks
                - region
                - tags
            properties:
                backup_ids:
                    type: array
                    description: An array of backup IDs of any backups that have been taken of the Droplet instance.  Droplet backups are enabled at the time of the instance creation.
                    example:
                        - 5.3893572e+07
                    items:
                        type: integer
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the Droplet was created.
                    example: "2020-07-21T18:37:44Z"
                disk:
                    type: integer
                    description: The size of the Droplet's disk in gigabytes.
                    example: 25
                features:
                    type: array
                    description: An array of features enabled on this Droplet.
                    example:
                        - backups
                        - private_networking
                        - ipv6
                    items:
                        type: string
                id:
                    type: integer
                    description: A unique identifier for each Droplet instance. This is automatically generated upon Droplet creation.
                    example: 3.164444e+06
                image:
                    $ref: '#/components/schemas/image'
                kernel:
                    $ref: '#/components/schemas/kernel'
                locked:
                    type: boolean
                    description: A boolean value indicating whether the Droplet has been locked, preventing actions by users.
                    example: false
                memory:
                    type: integer
                    description: Memory of the Droplet in megabytes.
                    example: 1024
                    multipleOf: 8
                name:
                    type: string
                    description: The human-readable name set for the Droplet instance.
                    example: example.com
                networks:
                    type: object
                    description: The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is.
                    properties:
                        v4:
                            type: array
                            items:
                                $ref: '#/components/schemas/network_v4'
                        v6:
                            type: array
                            items:
                                $ref: '#/components/schemas/network_v6'
                next_backup_window:
                    type: object
                    description: The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start.
                    nullable: true
                    properties:
                        end:
                            type: string
                            format: date-time
                            description: A time value given in ISO8601 combined date and time format specifying the end of the Droplet's backup window.
                            example: "2019-12-04T23:00:00Z"
                        start:
                            type: string
                            format: date-time
                            description: A time value given in ISO8601 combined date and time format specifying the start of the Droplet's backup window.
                            example: "2019-12-04T00:00:00Z"
                region:
                    $ref: '#/components/schemas/region'
                size:
                    $ref: '#/components/schemas/size'
                size_slug:
                    type: string
                    description: The unique slug identifier for the size of this Droplet.
                    example: s-1vcpu-1gb
                snapshot_ids:
                    type: array
                    description: An array of snapshot IDs of any snapshots created from the Droplet instance.
                    example:
                        - 6.7512819e+07
                    items:
                        type: integer
                status:
                    type: string
                    description: A status string indicating the state of the Droplet instance. This may be "new", "active", "off", or "archive".
                    enum:
                        - new
                        - active
                        - "off"
                        - archive
                    example: active
                tags:
                    type: array
                    description: An array of Tags the Droplet has been tagged with.
                    example:
                        - web
                        - env:prod
                    items:
                        type: string
                vcpus:
                    type: integer
                    description: The number of virtual CPUs.
                    example: 1
                volume_ids:
                    type: array
                    description: A flat array including the unique identifier for each Block Storage volume attached to the Droplet.
                    example:
                        - 506f78a4-e098-11e5-ad9f-000f53306ae1
                    items:
                        type: string
                vpc_uuid:
                    type: string
                    description: A string specifying the UUID of the VPC to which the Droplet is assigned.
                    example: 760e09ef-dc84-11e8-981e-3cfdfeaae000
        droplet_action:
            type: object
            description: Specifies the action that will be taken on the Droplet.
            required:
                - type
            properties:
                type:
                    type: string
                    description: The type of action to initiate for the Droplet.
                    enum:
                        - enable_backups
                        - disable_backups
                        - reboot
                        - power_cycle
                        - shutdown
                        - power_off
                        - power_on
                        - restore
                        - password_reset
                        - resize
                        - rebuild
                        - rename
                        - change_kernel
                        - enable_ipv6
                        - snapshot
                    example: reboot
        droplet_action_change_kernel:
            allOf:
                - $ref: '#/components/schemas/droplet_action'
                - type: object
                  properties:
                    kernel:
                        type: integer
                        description: A unique number used to identify and reference a specific kernel.
                        example: 1.2389723e+07
        droplet_action_rebuild:
            allOf:
                - $ref: '#/components/schemas/droplet_action'
                - type: object
                  properties:
                    image:
                        oneOf:
                            - type: string
                            - type: integer
                        description: The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base.
                        example: ubuntu-20-04-x64
        droplet_action_rename:
            allOf:
                - $ref: '#/components/schemas/droplet_action'
                - type: object
                  properties:
                    name:
                        type: string
                        description: The new name for the Droplet.
                        example: nifty-new-name
        droplet_action_resize:
            allOf:
                - $ref: '#/components/schemas/droplet_action'
                - type: object
                  properties:
                    disk:
                        type: boolean
                        description: When `true`, the Droplet's disk will be resized in addition to its RAM and CPU. This is a permanent change and cannot be reversed as a Droplet's disk size cannot be decreased.
                        example: true
                    size:
                        type: string
                        description: The slug identifier for the size to which you wish to resize the Droplet.
                        example: s-2vcpu-2gb
        droplet_action_restore:
            allOf:
                - $ref: '#/components/schemas/droplet_action'
                - type: object
                  properties:
                    image:
                        type: integer
                        description: The ID of a backup of the current Droplet instance to restore from.
                        example: 1.2389723e+07
        droplet_action_snapshot:
            allOf:
                - $ref: '#/components/schemas/droplet_action'
                - type: object
                  properties:
                    name:
                        type: string
                        description: The name to give the new snapshot of the Droplet.
                        example: Nifty New Snapshot
        droplet_create:
            type: object
            required:
                - size
                - image
            properties:
                backups:
                    type: boolean
                    description: A boolean indicating whether automated backups should be enabled for the Droplet.
                    default: false
                    example: true
                image:
                    oneOf:
                        - type: string
                        - type: integer
                    description: The image ID of a public or private image or the slug identifier for a public image. This image will be the base image for your Droplet.
                    example: ubuntu-20-04-x64
                ipv6:
                    type: boolean
                    description: A boolean indicating whether to enable IPv6 on the Droplet.
                    default: false
                    example: true
                monitoring:
                    type: boolean
                    description: A boolean indicating whether to install the DigitalOcean agent for monitoring.
                    default: false
                    example: true
                private_networking:
                    type: boolean
                    description: This parameter has been deprecated. Use `vpc_uuid` instead to specify a VPC network for the Droplet. If no `vpc_uuid` is provided, the Droplet will be placed in your account's default VPC for the region.
                    default: false
                    example: true
                    deprecated: true
                region:
                    type: string
                    description: The slug identifier for the region that you wish to deploy the Droplet in. If the specific datacenter is not not important, a slug prefix (e.g. `nyc`) can be used to deploy the Droplet in any of the that region's locations (`nyc1`, `nyc2`, or `nyc3`). If the region is omitted from the create request completely, the Droplet may deploy in any region.
                    example: nyc3
                size:
                    type: string
                    description: The slug identifier for the size that you wish to select for this Droplet.
                    example: s-1vcpu-1gb
                ssh_keys:
                    type: array
                    description: An array containing the IDs or fingerprints of the SSH keys that you wish to embed in the Droplet's root account upon creation.
                    default: []
                    example:
                        - 289794
                        - 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
                    items:
                        anyOf:
                            - type: string
                            - type: integer
                tags:
                    type: array
                    description: A flat array of tag names as strings to apply to the Droplet after it is created. Tag names can either be existing or new tags.
                    default: []
                    example:
                        - env:prod
                        - web
                    nullable: true
                    items:
                        type: string
                user_data:
                    type: string
                    description: A string containing 'user data' which may be used to configure the Droplet on first boot, often a 'cloud-config' file or Bash script. It must be plain text and may not exceed 64 KiB in size.
                    example: |
                        #cloud-config
                        runcmd:
                          - touch /test.txt
                volumes:
                    type: array
                    description: An array of IDs for block storage volumes that will be attached to the Droplet once created. The volumes must not already be attached to an existing Droplet.
                    default: []
                    example:
                        - 12e97116-7280-11ed-b3d0-0a58ac146812
                    items:
                        type: string
                vpc_uuid:
                    type: string
                    description: A string specifying the UUID of the VPC to which the Droplet will be assigned. If excluded, the Droplet will be assigned to your account's default VPC for the region.
                    example: 760e09ef-dc84-11e8-981e-3cfdfeaae000
                with_droplet_agent:
                    type: boolean
                    description: A boolean indicating whether to install the DigitalOcean agent used for providing access to the Droplet web console in the control panel. By default, the agent is installed on new Droplets but installation errors (i.e. OS not supported) are ignored. To prevent it from being installed, set to `false`. To make installation errors fatal, explicitly set it to `true`.
                    example: true
        droplet_multi_create:
            allOf:
                - type: object
                  required:
                    - names
                  properties:
                    names:
                        type: array
                        description: An array of human human-readable strings you wish to use when displaying the Droplet name. Each name, if set to a domain name managed in the DigitalOcean DNS management system, will configure a PTR record for the Droplet. Each name set during creation will also determine the hostname for the Droplet in its internal configuration.
                        example:
                            - sub-01.example.com
                            - sub-02.example.com
                        items:
                            type: string
                - $ref: '#/components/schemas/droplet_create'
            title: Multiple Droplet Request
        droplet_single_create:
            allOf:
                - type: object
                  required:
                    - name
                  properties:
                    name:
                        type: string
                        description: The human-readable string you wish to use when displaying the Droplet name. The name, if set to a domain name managed in the DigitalOcean DNS management system, will configure a PTR record for the Droplet. The name set during creation will also determine the hostname for the Droplet in its internal configuration.
                        example: example.com
                - $ref: '#/components/schemas/droplet_create'
            title: Single Droplet Request
        droplet_snapshot:
            allOf:
                - type: object
                  required:
                    - id
                  properties:
                    id:
                        type: integer
                        description: The unique identifier for the snapshot or backup.
                        example: 6.372321e+06
                - $ref: '#/components/schemas/snapshots_base'
                - type: object
                  required:
                    - type
                  properties:
                    type:
                        type: string
                        description: Describes the kind of image. It may be one of `snapshot` or `backup`. This specifies whether an image is a user-generated Droplet snapshot or automatically created Droplet backup.
                        enum:
                            - snapshot
                            - backup
                        example: snapshot
        error:
            type: object
            required:
                - id
                - message
            properties:
                id:
                    type: string
                    description: A short identifier corresponding to the HTTP status code returned. For  example, the ID for a response returning a 404 status code would be "not_found."
                    example: not_found
                message:
                    type: string
                    description: A message providing additional information about the error, including  details to help resolve it when possible.
                    example: The resource you were accessing could not be found.
                request_id:
                    type: string
                    description: Optionally, some endpoints may include a request ID that should be  provided when reporting bugs or opening support tickets to help  identify the issue.
                    example: 4d9d8375-3c56-4925-a3e7-eb137fed17e9
        error_with_root_causes:
            type: object
            required:
                - error
                - root_causes
            properties:
                error:
                    type: string
                    description: A message providing information about the error.
                    example: not_found
                messages:
                    type: array
                    description: A list of error messages.
                    nullable: true
                    items:
                        type: string
                root_causes:
                    type: array
                    description: A list of underlying causes for the error, including details to help  resolve it when possible.
                    example: []
                    items:
                        type: string
        eviction_policy_model:
            type: string
            description: |-
                A string specifying the desired eviction policy for the Redis cluster.

                - `noeviction`: Don't evict any data, returns error when memory limit is reached.
                - `allkeys_lru:` Evict any key, least recently used (LRU) first.
                - `allkeys_random`: Evict keys in a random order.
                - `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.
                - `volatile_random`: Evict keys with expiration only in a random order.
                - `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first.
            enum:
                - noeviction
                - allkeys_lru
                - allkeys_random
                - volatile_lru
                - volatile_random
                - volatile_ttl
            example: allkeys_lru
        firewall:
            allOf:
                - type: object
                  properties:
                    created_at:
                        type: string
                        format: date-time
                        description: A time value given in ISO8601 combined date and time format that represents when the firewall was created.
                        example: "2020-05-23T21:24:00Z"
                        readOnly: true
                    droplet_ids:
                        type: array
                        description: An array containing the IDs of the Droplets assigned to the firewall.
                        example:
                            - 8.043964e+06
                        nullable: true
                        items:
                            type: integer
                    id:
                        type: string
                        description: A unique ID that can be used to identify and reference a firewall.
                        example: bb4b2611-3d72-467b-8602-280330ecd65c
                        readOnly: true
                    name:
                        type: string
                        description: A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-).
                        example: firewall
                        pattern: ^[a-zA-Z0-9][a-zA-Z0-9\.-]+$
                    pending_changes:
                        type: array
                        description: An array of objects each containing the fields "droplet_id", "removing", and "status". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied.
                        example:
                            - droplet_id: 8.043964e+06
                              removing: false
                              status: waiting
                        readOnly: true
                        items:
                            type: object
                            properties:
                                droplet_id:
                                    type: integer
                                    example: 8.043964e+06
                                removing:
                                    type: boolean
                                    example: false
                                status:
                                    type: string
                                    example: waiting
                    status:
                        type: string
                        description: A status string indicating the current state of the firewall. This can be "waiting", "succeeded", or "failed".
                        enum:
                            - waiting
                            - succeeded
                            - failed
                        example: waiting
                        readOnly: true
                    tags:
                        allOf:
                            - $ref: '#/components/schemas/tags_array'
                            - description: An array containing the names of the Tags assigned to the firewall.
                              example: gateway
                - $ref: '#/components/schemas/firewall_rules'
            type: object
        firewall_rule:
            type: object
            required:
                - type
                - value
            properties:
                cluster_uuid:
                    type: string
                    description: A unique ID for the database cluster to which the rule is applied.
                    example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                    pattern: ^$|[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the firewall rule was created.
                    example: "2019-01-11T18:37:36Z"
                    readOnly: true
                type:
                    type: string
                    description: The type of resource that the firewall rule allows to access the database cluster.
                    enum:
                        - droplet
                        - k8s
                        - ip_addr
                        - tag
                        - app
                    example: droplet
                uuid:
                    type: string
                    description: A unique ID for the firewall rule itself.
                    example: 79f26d28-ea8a-41f2-8ad8-8cfcdd020095
                    pattern: ^$|[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}
                value:
                    type: string
                    description: The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster.
                    example: ff2a6c52-5a44-4b63-b99c-0e98e7a63d61
        firewall_rule_base:
            type: object
            required:
                - protocol
                - ports
            properties:
                ports:
                    type: string
                    description: The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. "8000-9000"), or "0" when all ports are open for a protocol. For ICMP rules this parameter will always return "0".
                    example: "8000"
                protocol:
                    type: string
                    description: The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`.
                    enum:
                        - tcp
                        - udp
                        - icmp
                    example: tcp
        firewall_rule_target:
            type: object
            properties:
                addresses:
                    type: array
                    description: An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the firewall will allow traffic.
                    example:
                        - 1.2.3.4
                        - 18.0.0.0/8
                    items:
                        type: string
                droplet_ids:
                    type: array
                    description: An array containing the IDs of the Droplets to which the firewall will allow traffic.
                    example:
                        - 8.043964e+06
                    items:
                        type: integer
                kubernetes_ids:
                    type: array
                    description: An array containing the IDs of the Kubernetes clusters to which the firewall will allow traffic.
                    example:
                        - 41b74c5d-9bd0-5555-5555-a57c495b81a3
                    items:
                        type: string
                load_balancer_uids:
                    type: array
                    description: An array containing the IDs of the load balancers to which the firewall will allow traffic.
                    example:
                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    items:
                        type: string
                tags:
                    allOf:
                        - $ref: '#/components/schemas/tags_array'
                        - description: An array containing the names of Tags corresponding to groups of Droplets to which the firewall will allow traffic.
                          example:
                            - frontend
        firewall_rules:
            type: object
            properties:
                inbound_rules:
                    type: array
                    nullable: true
                    items:
                        allOf:
                            - $ref: '#/components/schemas/firewall_rule_base'
                            - required:
                                - sources
                              properties:
                                sources:
                                    allOf:
                                        - $ref: '#/components/schemas/firewall_rule_target'
                                        - description: An object specifying locations from which inbound traffic will be accepted.
                outbound_rules:
                    type: array
                    nullable: true
                    items:
                        allOf:
                            - $ref: '#/components/schemas/firewall_rule_base'
                            - required:
                                - destinations
                              properties:
                                destinations:
                                    allOf:
                                        - $ref: '#/components/schemas/firewall_rule_target'
                                        - description: An object specifying locations to which outbound traffic that will be allowed.
        floating_ip:
            type: object
            properties:
                droplet:
                    $ref: '#/components/schemas/droplet'
                ip:
                    type: string
                    format: ipv4
                    description: The public IP address of the floating IP. It also serves as its identifier.
                    example: 45.55.96.47
                locked:
                    type: boolean
                    description: A boolean value indicating whether or not the floating IP has pending actions preventing new ones from being submitted.
                    example: true
                project_id:
                    type: string
                    format: uuid
                    description: The UUID of the project to which the reserved IP currently belongs.
                    example: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                region:
                    allOf:
                        - $ref: '#/components/schemas/region'
                        - type: object
                          description: The region that the floating IP is reserved to. When you query a floating IP, the entire region object will be returned.
        floating_ip_action_assign:
            allOf:
                - $ref: '#/components/schemas/floatingIPsAction'
                - type: object
                  required:
                    - type
                    - droplet_id
                  properties:
                    droplet_id:
                        type: integer
                        description: The ID of the Droplet that the floating IP will be assigned to.
                        example: 7.58604968e+08
        floating_ip_action_unassign:
            allOf:
                - $ref: '#/components/schemas/floatingIPsAction'
                - type: object
                  required:
                    - type
        floating_ip_create:
            oneOf:
                - type: object
                  title: Assign to Droplet
                  required:
                    - droplet_id
                  properties:
                    droplet_id:
                        type: integer
                        description: The ID of the Droplet that the floating IP will be assigned to.
                        example: 2.457247e+06
                - type: object
                  title: Reserve to Region
                  required:
                    - region
                  properties:
                    project_id:
                        type: string
                        format: uuid
                        description: The UUID of the project to which the floating IP will be assigned.
                        example: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        type: string
                        description: The slug identifier for the region the floating IP will be reserved to.
                        example: nyc3
        floatingIPsAction:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                    description: The type of action to initiate for the floating IP.
                    enum:
                        - assign
                        - unassign
            discriminator:
                propertyName: type
                mapping:
                    assign: '#/components/schemas/floating_ip_action_assign'
                    unassign: '#/components/schemas/floating_ip_action_unassign'
        forward_links:
            allOf:
                - $ref: '#/components/schemas/link_to_last_page'
                - $ref: '#/components/schemas/link_to_next_page'
        forwarding_rule:
            type: object
            description: An object specifying a forwarding rule for a load balancer.
            required:
                - entry_protocol
                - entry_port
                - target_protocol
                - target_port
            properties:
                certificate_id:
                    type: string
                    description: The ID of the TLS certificate used for SSL termination if enabled.
                    example: 892071a0-bb95-49bc-8021-3afd67a210bf
                entry_port:
                    type: integer
                    description: An integer representing the port on which the load balancer instance will listen.
                    example: 443
                entry_protocol:
                    type: string
                    description: |
                        The protocol used for traffic to the load balancer. The possible values are: `http`, `https`, `http2`, `http3`, `tcp`, or `udp`. If you set the  `entry_protocol` to `udp`, the `target_protocol` must be set to `udp`.  When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
                    enum:
                        - http
                        - https
                        - http2
                        - http3
                        - tcp
                        - udp
                    example: https
                target_port:
                    type: integer
                    description: An integer representing the port on the backend Droplets to which the load balancer will send traffic.
                    example: 80
                target_protocol:
                    type: string
                    description: |
                        The protocol used for traffic from the load balancer to the backend Droplets. The possible values are: `http`, `https`, `http2`, `tcp`, or `udp`. If you set the `target_protocol` to `udp`, the `entry_protocol` must be set to  `udp`. When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
                    enum:
                        - http
                        - https
                        - http2
                        - tcp
                        - udp
                    example: http
                tls_passthrough:
                    type: boolean
                    description: A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets.
                    example: false
        garbage_collection:
            type: object
            properties:
                blobs_deleted:
                    type: integer
                    description: The number of blobs deleted as a result of this garbage collection.
                    example: 42
                created_at:
                    type: string
                    format: date-time
                    description: The time the garbage collection was created.
                    example: "2020-10-30T21:03:24Z"
                freed_bytes:
                    type: integer
                    description: The number of bytes freed as a result of this garbage collection.
                    example: 667
                registry_name:
                    type: string
                    description: The name of the container registry.
                    example: example
                status:
                    type: string
                    description: The current status of this garbage collection.
                    enum:
                        - requested
                        - waiting for write JWTs to expire
                        - scanning manifests
                        - deleting unreferenced blobs
                        - cancelling
                        - failed
                        - succeeded
                        - cancelled
                    example: requested
                updated_at:
                    type: string
                    format: date-time
                    description: The time the garbage collection was last updated.
                    example: "2020-10-30T21:03:44Z"
                uuid:
                    type: string
                    description: A string specifying the UUID of the garbage collection.
                    example: eff0feee-49c7-4e8f-ba5c-a320c109c8a8
        health_check:
            type: object
            description: An object specifying health check settings for the load balancer.
            properties:
                check_interval_seconds:
                    type: integer
                    description: The number of seconds between between two consecutive health checks.
                    default: 10
                    example: 10
                healthy_threshold:
                    type: integer
                    description: The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool.
                    default: 3
                    example: 3
                path:
                    type: string
                    description: The path on the backend Droplets to which the load balancer instance will send a request.
                    default: /
                    example: /
                port:
                    type: integer
                    description: An integer representing the port on the backend Droplets on which the health check will attempt a connection.
                    default: 80
                    example: 80
                protocol:
                    type: string
                    description: The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https`, or `tcp`.
                    enum:
                        - http
                        - https
                        - tcp
                    default: http
                    example: http
                response_timeout_seconds:
                    type: integer
                    description: The number of seconds the load balancer instance will wait for a response until marking a health check as failed.
                    default: 5
                    example: 5
                unhealthy_threshold:
                    type: integer
                    description: The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool.
                    default: 5
                    example: 5
        image:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the image was created.
                    example: "2020-05-04T22:23:02Z"
                description:
                    $ref: '#/components/schemas/image_description'
                distribution:
                    $ref: '#/components/schemas/distribution'
                error_message:
                    type: string
                    description: |-
                        A string containing information about errors that may occur when importing
                         a custom image.
                    example: ' '
                id:
                    type: integer
                    description: A unique number that can be used to identify and reference a specific image.
                    example: 7.55562e+06
                    readOnly: true
                min_disk_size:
                    type: integer
                    description: The minimum disk size in GB required for a Droplet to use this image.
                    example: 20
                    nullable: true
                    minimum: 0
                name:
                    $ref: '#/components/schemas/image_name'
                public:
                    type: boolean
                    description: This is a boolean value that indicates whether the image in question is public or not. An image that is public is available to all accounts. A non-public image is only accessible from your account.
                    example: true
                regions:
                    $ref: '#/components/schemas/regions_array'
                size_gigabytes:
                    type: number
                    format: float
                    description: The size of the image in gigabytes.
                    example: 2.34
                    nullable: true
                slug:
                    type: string
                    description: A uniquely identifying string that is associated with each of the DigitalOcean-provided public images. These can be used to reference a public image as an alternative to the numeric id.
                    example: nifty1
                    nullable: true
                status:
                    type: string
                    description: |-
                        A status string indicating the state of a custom image. This may be `NEW`,
                         `available`, `pending`, `deleted`, or `retired`.
                    enum:
                        - NEW
                        - available
                        - pending
                        - deleted
                        - retired
                    example: NEW
                tags:
                    $ref: '#/components/schemas/tags_array'
                type:
                    type: string
                    description: Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).
                    enum:
                        - base
                        - snapshot
                        - backup
                        - custom
                        - admin
                    example: snapshot
        image_action_base:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                    description: The action to be taken on the image. Can be either `convert` or `transfer`.
                    enum:
                        - convert
                        - transfer
                    example: convert
        image_action_transfer:
            allOf:
                - $ref: '#/components/schemas/image_action_base'
                - type: object
                  required:
                    - type
                    - region
                  properties:
                    region:
                        $ref: '#/components/schemas/region_slug'
        image_description:
            type: string
            description: An optional free-form text field to describe an image.
            example: ' '
        image_name:
            type: string
            description: The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
            example: Nifty New Snapshot
        image_new_custom:
            allOf:
                - $ref: '#/components/schemas/image_update'
                - type: object
                  properties:
                    region:
                        $ref: '#/components/schemas/region_slug'
                    tags:
                        $ref: '#/components/schemas/tags_array'
                    url:
                        type: string
                        description: A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
                        example: http://cloud-images.ubuntu.com/minimal/releases/bionic/release/ubuntu-18.04-minimal-cloudimg-amd64.img
            type: object
            example:
                description: Cloud-optimized image w/ small footprint
                distribution: Ubuntu
                name: ubuntu-18.04-minimal
                region: nyc3
                tags:
                    - base-image
                    - prod
                url: http://cloud-images.ubuntu.com/minimal/releases/bionic/release/ubuntu-18.04-minimal-cloudimg-amd64.img
            required:
                - name
                - url
                - region
        image_update:
            type: object
            properties:
                description:
                    $ref: '#/components/schemas/image_description'
                distribution:
                    $ref: '#/components/schemas/distribution'
                name:
                    $ref: '#/components/schemas/image_name'
        instance_size_cpu_type:
            type: string
            title: |-
                - SHARED: Shared vCPU cores
                 - DEDICATED: Dedicated vCPU cores
            enum:
                - UNSPECIFIED
                - SHARED
                - DEDICATED
            default: UNSPECIFIED
            example: SHARED
        invoice_item:
            type: object
            properties:
                amount:
                    type: string
                    description: Billed amount of this invoice item. Billed in USD.
                    example: "12.34"
                description:
                    type: string
                    description: Description of the invoice item.
                    example: a56e086a317d8410c8b4cfd1f4dc9f82
                duration:
                    type: string
                    description: Duration of time this invoice item was used and subsequently billed.
                    example: "744"
                duration_unit:
                    type: string
                    description: Unit of time for duration.
                    example: Hours
                end_time:
                    type: string
                    description: Time the invoice item stopped being billed for usage.
                    example: "2020-02-01T00:00:00Z"
                group_description:
                    type: string
                    description: Description of the invoice item when it is a grouped set of usage, such  as DOKS or databases.
                    example: my-doks-cluster
                product:
                    type: string
                    description: Name of the product being billed in the invoice item.
                    example: Kubernetes Clusters
                project_name:
                    type: string
                    description: Name of the DigitalOcean Project this resource belongs to.
                    example: web
                resource_id:
                    type: string
                    description: ID of the resource billing in the invoice item if available.
                    example: "2353624"
                resource_uuid:
                    type: string
                    description: UUID of the resource billing in the invoice item if available.
                    example: 711157cb-37c8-4817-b371-44fa3504a39c
                start_time:
                    type: string
                    description: Time the invoice item began to be billed for usage.
                    example: "2020-01-01T00:00:00Z"
        invoice_preview:
            type: object
            description: The invoice preview.
            properties:
                amount:
                    type: string
                    description: Total amount of the invoice, in USD.  This will reflect month-to-date usage in the invoice preview.
                    example: "23.45"
                invoice_period:
                    type: string
                    description: Billing period of usage for which the invoice is issued, in `YYYY-MM`  format.
                    example: 2020-01
                invoice_uuid:
                    type: string
                    description: The UUID of the invoice. The canonical reference for the invoice.
                    example: fdabb512-6faf-443c-ba2e-665452332a9e
                updated_at:
                    type: string
                    description: Time the invoice was last updated.  This is only included with the invoice preview.
                    example: "2020-01-23T06:31:50Z"
        invoice_summary:
            type: object
            properties:
                amount:
                    type: string
                    description: Total amount of the invoice, in USD.  This will reflect month-to-date usage in the invoice preview.
                    example: "27.13"
                billing_period:
                    type: string
                    description: Billing period of usage for which the invoice is issued, in `YYYY-MM`  format.
                    example: 2020-01
                credits_and_adjustments:
                    allOf:
                        - description: A summary of the credits and adjustments contributing to the invoice.
                        - $ref: '#/components/schemas/simple_charge'
                invoice_uuid:
                    type: string
                    description: UUID of the invoice
                    example: 22737513-0ea7-4206-8ceb-98a575af7681
                overages:
                    allOf:
                        - description: A summary of the overages contributing to the invoice.
                        - $ref: '#/components/schemas/simple_charge'
                product_charges:
                    allOf:
                        - description: A summary of the product usage charges contributing to the invoice.  This will include an amount, and grouped aggregates by resource type  under the `items` key.
                        - $ref: '#/components/schemas/product_usage_charges'
                taxes:
                    allOf:
                        - description: A summary of the taxes contributing to the invoice.
                        - $ref: '#/components/schemas/simple_charge'
                user_billing_address:
                    allOf:
                        - description: The billing address of the customer being invoiced.
                        - $ref: '#/components/schemas/billing_address'
                user_company:
                    type: string
                    description: Company of the DigitalOcean customer being invoiced, if set.
                    example: DigitalOcean
                user_email:
                    type: string
                    description: Email of the DigitalOcean customer being invoiced.
                    example: sammy@digitalocean.com
                user_name:
                    type: string
                    description: Name of the DigitalOcean customer being invoiced.
                    example: Sammy Shark
        kernel:
            type: object
            description: |
                **Note**: All Droplets created after March 2017 use internal kernels by default.
                These Droplets will have this attribute set to `null`.

                The current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)
                for Droplets with externally managed kernels. This will initially be set to
                the kernel of the base image when the Droplet is created.
            nullable: true
            deprecated: true
            properties:
                id:
                    type: integer
                    description: A unique number used to identify and reference a specific kernel.
                    example: 7515
                name:
                    type: string
                    description: The display name of the kernel. This is shown in the web UI and is generally a descriptive title for the kernel in question.
                    example: DigitalOcean GrubLoader v0.2 (20160714)
                version:
                    type: string
                    description: A standard kernel version string representing the version, patch, and release information.
                    example: 2016.07.13-DigitalOcean_loader_Ubuntu
        kubernetes_node_pool:
            allOf:
                - $ref: '#/components/schemas/kubernetes_node_pool_size'
                - $ref: '#/components/schemas/kubernetes_node_pool_base'
            type: object
            required:
                - name
                - size
                - count
        kubernetes_node_pool_base:
            type: object
            properties:
                auto_scale:
                    type: boolean
                    description: A boolean value indicating whether auto-scaling is enabled for this node pool.
                    example: true
                count:
                    type: integer
                    description: The number of Droplet instances in the node pool.
                    example: 3
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference a specific node pool.
                    example: cdda885e-7663-40c8-bc74-3a036c66545d
                    readOnly: true
                labels:
                    type: object
                    description: An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
                    nullable: true
                max_nodes:
                    type: integer
                    description: The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
                    example: 6
                min_nodes:
                    type: integer
                    description: The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
                    example: 3
                name:
                    type: string
                    description: A human-readable name for the node pool.
                    example: frontend-pool
                nodes:
                    type: array
                    description: An object specifying the details of a specific worker node in a node pool.
                    readOnly: true
                    items:
                        $ref: '#/components/schemas/node'
                tags:
                    type: array
                    description: An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
                    example:
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                        - k8s-worker
                        - production
                        - web-team
                    items:
                        type: string
                taints:
                    type: array
                    description: An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
                    items:
                        $ref: '#/components/schemas/kubernetes_node_pool_taint'
        kubernetes_node_pool_size:
            type: object
            properties:
                size:
                    type: string
                    description: The slug identifier for the type of Droplet used as workers in the node pool.
                    example: s-1vcpu-2gb
        kubernetes_node_pool_taint:
            type: object
            properties:
                effect:
                    type: string
                    description: How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`.
                    enum:
                        - NoSchedule
                        - PreferNoSchedule
                        - NoExecute
                    example: NoSchedule
                key:
                    type: string
                    description: An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
                    example: priority
                value:
                    type: string
                    description: An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
                    example: high
        kubernetes_node_pool_update:
            allOf:
                - $ref: '#/components/schemas/kubernetes_node_pool_base'
            type: object
            required:
                - name
                - count
        kubernetes_options:
            type: object
            properties:
                options:
                    properties:
                        regions:
                            type: array
                            items:
                                $ref: '#/components/schemas/kubernetes_region'
                        sizes:
                            type: array
                            items:
                                $ref: '#/components/schemas/kubernetes_size'
                        versions:
                            type: array
                            items:
                                $ref: '#/components/schemas/kubernetes_version'
        kubernetes_region:
            type: object
            properties:
                name:
                    type: string
                    description: A DigitalOcean region where Kubernetes is available.
                    example: New York 3
                slug:
                    type: string
                    description: The identifier for a region for use when creating a new cluster.
                    example: nyc3
        kubernetes_size:
            type: object
            properties:
                name:
                    type: string
                    description: A Droplet size available for use in a Kubernetes node pool.
                    example: s-1vcpu-2gb
                slug:
                    type: string
                    description: The identifier for a size for use when creating a new cluster.
                    example: s-1vcpu-2gb
        kubernetes_version:
            type: object
            properties:
                kubernetes_version:
                    type: string
                    description: The upstream version string for the version of Kubernetes provided by a given slug.
                    example: 1.16.13
                slug:
                    type: string
                    description: The slug identifier for an available version of Kubernetes for use when creating or updating a cluster. The string contains both the upstream version of Kubernetes as well as the DigitalOcean revision.
                    example: 1.16.13-do.0
                supported_features:
                    type: array
                    description: The features available with the version of Kubernetes provided by a given slug.
                    example:
                        - cluster-autoscaler
                        - docr-integration
                        - token-authentication
                    items:
                        type: string
        lb_firewall:
            type: object
            description: An object specifying allow and deny rules to control traffic to the load balancer.
            properties:
                allow:
                    type: array
                    description: the rules for allowing traffic to the load balancer (in the form 'ip:1.2.3.4' or 'cidr:1.2.0.0/16')
                    default: []
                    example:
                        - ip:1.2.3.4
                        - cidr:2.3.0.0/16
                    items:
                        type: string
                deny:
                    type: array
                    description: the rules for denying traffic to the load balancer (in the form 'ip:1.2.3.4' or 'cidr:1.2.0.0/16')
                    default: []
                    example:
                        - ip:1.2.3.4
                        - cidr:2.3.0.0/16
                    items:
                        type: string
        link_to_first_page:
            type: object
            properties:
                first:
                    type: string
                    description: URI of the first page of the results.
                    example: https://api.digitalocean.com/v2/images?page=1
        link_to_last_page:
            type: object
            properties:
                last:
                    type: string
                    description: URI of the last page of the results.
                    example: https://api.digitalocean.com/v2/images?page=2
        link_to_next_page:
            type: object
            properties:
                next:
                    type: string
                    description: URI of the next page of the results.
                    example: https://api.digitalocean.com/v2/images?page=2
        link_to_prev_page:
            type: object
            properties:
                prev:
                    type: string
                    description: URI of the previous page of the results.
                    example: https://api.digitalocean.com/v2/images?page=1
        list_alert_policy:
            type: object
            required:
                - policies
            properties:
                policies:
                    type: array
                    items:
                        $ref: '#/components/schemas/alert_policy'
        load_balancer:
            allOf:
                - $ref: '#/components/schemas/load_balancer_base'
                - type: object
                  properties:
                    region:
                        allOf:
                            - description: The region where the load balancer instance is located. When setting a region, the value should be the slug identifier for the region. When you query a load balancer, an entire region object will be returned.
                            - $ref: '#/components/schemas/region'
                        type: object
                - type: object
                  properties:
                    droplet_ids:
                        type: array
                        description: An array containing the IDs of the Droplets assigned to the load balancer.
                        example:
                            - 3.164444e+06
                            - 3.164445e+06
                        items:
                            type: integer
                - type: object
                  properties:
                    tag:
                        type: string
                        description: The name of a Droplet tag corresponding to Droplets assigned to the load balancer.
                        example: prod:web
        load_balancer_base:
            type: object
            required:
                - forwarding_rules
            properties:
                algorithm:
                    type: string
                    description: This field has been deprecated. You can no longer specify an algorithm for load balancers.
                    enum:
                        - round_robin
                        - least_connections
                    default: round_robin
                    example: round_robin
                    deprecated: true
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the load balancer was created.
                    example: "2017-02-01T22:22:58Z"
                    readOnly: true
                disable_lets_encrypt_dns_records:
                    type: boolean
                    description: A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer.
                    default: false
                    example: true
                enable_backend_keepalive:
                    type: boolean
                    description: A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.
                    default: false
                    example: true
                enable_proxy_protocol:
                    type: boolean
                    description: A boolean value indicating whether PROXY Protocol is in use.
                    default: false
                    example: true
                firewall:
                    $ref: '#/components/schemas/lb_firewall'
                forwarding_rules:
                    type: array
                    description: An array of objects specifying the forwarding rules for a load balancer.
                    minItems: 1
                    items:
                        $ref: '#/components/schemas/forwarding_rule'
                health_check:
                    $ref: '#/components/schemas/health_check'
                http_idle_timeout_seconds:
                    type: integer
                    description: An integer value which configures the idle timeout for HTTP requests to the target droplets.
                    default: 60
                    example: 90
                    minimum: 30
                    maximum: 600
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference a load balancer.
                    example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    readOnly: true
                ip:
                    type: string
                    description: An attribute containing the public-facing IP address of the load balancer.
                    example: 104.131.186.241
                    readOnly: true
                    pattern: ^$|^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                name:
                    type: string
                    description: A human-readable name for a load balancer instance.
                    example: example-lb-01
                project_id:
                    type: string
                    description: The ID of the project that the load balancer is associated with. If no ID is provided at creation, the load balancer associates with the user's default project. If an invalid project ID is provided, the load balancer will not be created.
                    example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                redirect_http_to_https:
                    type: boolean
                    description: A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.
                    default: false
                    example: true
                size:
                    type: string
                    description: |-
                        This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.
                        * `lb-small` = 1 node
                        * `lb-medium` = 3 nodes
                        * `lb-large` = 6 nodes

                        You can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.
                    enum:
                        - lb-small
                        - lb-medium
                        - lb-large
                    default: lb-small
                    example: lb-small
                    deprecated: true
                size_unit:
                    type: integer
                    description: How many nodes the load balancer contains. Each additional node increases the load balancer's ability to manage more connections. Load balancers can be scaled up or down, and you can change the number of nodes after creation up to once per hour. This field is currently not available in the AMS2, NYC2, or SFO1 regions. Use the `size` field to scale load balancers that reside in these regions.
                    default: 1
                    example: 3
                    minimum: 1
                    maximum: 100
                status:
                    type: string
                    description: A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
                    enum:
                        - new
                        - active
                        - errored
                    example: new
                    readOnly: true
                sticky_sessions:
                    $ref: '#/components/schemas/sticky_sessions'
                vpc_uuid:
                    type: string
                    format: uuid
                    description: A string specifying the UUID of the VPC to which the load balancer is assigned.
                    example: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancer_create:
            oneOf:
                - allOf:
                    - type: object
                      properties:
                        droplet_ids:
                            type: array
                            description: An array containing the IDs of the Droplets assigned to the load balancer.
                            example:
                                - 3.164444e+06
                                - 3.164445e+06
                            items:
                                type: integer
                    - type: object
                      properties:
                        region:
                            $ref: '#/components/schemas/region_slug'
                    - $ref: '#/components/schemas/load_balancer_base'
                  title: Assign Droplets by ID
                  required:
                    - droplet_ids
                    - region
                - allOf:
                    - type: object
                      properties:
                        tag:
                            type: string
                            description: The name of a Droplet tag corresponding to Droplets assigned to the load balancer.
                            example: prod:web
                    - type: object
                      properties:
                        region:
                            $ref: '#/components/schemas/region_slug'
                    - $ref: '#/components/schemas/load_balancer_base'
                  title: Assign Droplets by Tag
                  required:
                    - tag
                    - region
        maintenance_policy:
            type: object
            description: An object specifying the maintenance window policy for the Kubernetes cluster.
            nullable: true
            properties:
                day:
                    type: string
                    description: The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.
                    enum:
                        - any
                        - monday
                        - tuesday
                        - wednesday
                        - thursday
                        - friday
                        - saturday
                        - sunday
                    example: any
                duration:
                    type: string
                    description: The duration of the maintenance window policy in human-readable format.
                    example: 4h0m0s
                    readOnly: true
                start_time:
                    type: string
                    description: The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`).
                    example: "12:00"
        meta:
            type: object
            required:
                - meta
            properties:
                meta:
                    allOf:
                        - $ref: '#/components/schemas/meta_properties'
                        - required:
                            - total
        meta_optional_total:
            type: object
            required:
                - meta
            properties:
                meta:
                    $ref: '#/components/schemas/meta_properties'
        meta_properties:
            type: object
            description: Information about the response itself.
            properties:
                total:
                    type: integer
                    description: Number of objects returned by the request.
                    example: 1
        metrics:
            type: object
            required:
                - status
                - data
            properties:
                data:
                    $ref: '#/components/schemas/metrics_data'
                status:
                    type: string
                    enum:
                        - success
                        - error
                    example: success
        metrics_data:
            type: object
            required:
                - resultType
                - result
            properties:
                result:
                    type: array
                    description: Result of query.
                    items:
                        $ref: '#/components/schemas/metrics_result'
                resultType:
                    type: string
                    enum:
                        - matrix
                    example: matrix
        metrics_result:
            type: object
            required:
                - metric
                - values
            properties:
                metric:
                    type: object
                    description: An object containing the metric labels.
                    example:
                        host_id: "19201920"
                    additionalProperties:
                        type: string
                values:
                    type: array
                    example:
                        - - 1.43578143e+09
                          - "1"
                        - - 1.435781445e+09
                          - "1"
                    items:
                        type: array
                        items:
                            oneOf:
                                - type: integer
                                - type: string
        mysql:
            type: object
            properties:
                backup_hour:
                    type: integer
                    description: The hour of day (in UTC) when backup for the service starts. New backup only starts if previous backup has already completed.
                    example: 3
                    minimum: 0
                    maximum: 23
                backup_minute:
                    type: integer
                    description: The minute of the backup hour when backup for the service starts. New backup  only starts if previous backup has already completed.
                    example: 30
                    minimum: 0
                    maximum: 59
                binlog_retention_period:
                    type: number
                    description: The minimum amount of time, in seconds, to keep binlog entries before deletion.  This may be extended for services that require binlog entries for longer than the default, for example if using the MySQL Debezium Kafka connector.
                    example: 600
                    minimum: 600
                    maximum: 86400
                connect_timeout:
                    type: integer
                    description: The number of seconds that the mysqld server waits for a connect packet before responding with bad handshake.
                    example: 10
                    minimum: 2
                    maximum: 3600
                default_time_zone:
                    type: string
                    description: Default server time zone, in the form of an offset from UTC (from -12:00 to +12:00), a time zone name (EST), or 'SYSTEM' to use the MySQL server default.
                    example: "+03:00"
                    minLength: 2
                    maxLength: 100
                group_concat_max_len:
                    type: integer
                    description: The maximum permitted result length, in bytes, for the GROUP_CONCAT() function.
                    example: 1024
                    minimum: 4
                    maximum: 1.8446744073709552e+19
                information_schema_stats_expiry:
                    type: integer
                    description: The time, in seconds, before cached statistics expire.
                    example: 86400
                    minimum: 900
                    maximum: 3.1536e+07
                innodb_ft_min_token_size:
                    type: integer
                    description: The minimum length of words that an InnoDB FULLTEXT index stores.
                    example: 3
                    minimum: 0
                    maximum: 16
                innodb_ft_server_stopword_table:
                    type: string
                    description: The InnoDB FULLTEXT index stopword list for all InnoDB tables.
                    example: db_name/table_name
                    maxLength: 1024
                    pattern: ^.+/.+$
                innodb_lock_wait_timeout:
                    type: integer
                    description: The time, in seconds, that an InnoDB transaction waits for a row lock. before giving up.
                    example: 50
                    minimum: 1
                    maximum: 3600
                innodb_log_buffer_size:
                    type: integer
                    description: The size of the buffer, in bytes, that InnoDB uses to write to the log files. on disk.
                    example: 1.6777216e+07
                    minimum: 1.048576e+06
                    maximum: 4.294967295e+09
                innodb_online_alter_log_max_size:
                    type: integer
                    description: The upper limit, in bytes, of the size of the temporary log files used during online DDL operations for InnoDB tables.
                    example: 1.34217728e+08
                    minimum: 65536
                    maximum: 1.099511627776e+12
                innodb_print_all_deadlocks:
                    type: boolean
                    description: When enabled, records information about all deadlocks in InnoDB user transactions  in the error log. Disabled by default.
                    example: true
                innodb_rollback_on_timeout:
                    type: boolean
                    description: When enabled, transaction timeouts cause InnoDB to abort and roll back the entire transaction.
                    example: true
                interactive_timeout:
                    type: integer
                    description: The time, in seconds, the server waits for activity on an interactive. connection before closing it.
                    example: 3600
                    minimum: 30
                    maximum: 604800
                internal_tmp_mem_storage_engine:
                    type: string
                    description: The storage engine for in-memory internal temporary tables.
                    enum:
                        - TempTable
                        - MEMORY
                    example: TempTable
                long_query_time:
                    type: number
                    description: The time, in seconds, for a query to take to execute before  being captured by slow_query_logs. Default is 10 seconds.
                    example: 10
                    minimum: 0
                    maximum: 3600
                max_allowed_packet:
                    type: integer
                    description: The size of the largest message, in bytes, that can be received by the server. Default is 67108864 (64M).
                    example: 6.7108864e+07
                    minimum: 102400
                    maximum: 1.073741824e+09
                max_heap_table_size:
                    type: integer
                    description: The maximum size, in bytes, of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M)
                    example: 1.6777216e+07
                    minimum: 1.048576e+06
                    maximum: 1.073741824e+09
                net_read_timeout:
                    type: integer
                    description: The time, in seconds, to wait for more data from an existing connection. aborting the read.
                    example: 30
                    minimum: 1
                    maximum: 3600
                net_write_timeout:
                    type: integer
                    description: The number of seconds to wait for a block to be written to a connection before aborting the write.
                    example: 30
                    minimum: 1
                    maximum: 3600
                slow_query_log:
                    type: boolean
                    description: When enabled, captures slow queries. When disabled, also truncates the mysql.slow_log table. Default is false.
                    example: true
                sort_buffer_size:
                    type: integer
                    description: The sort buffer size, in bytes, for ORDER BY optimization. Default is 262144. (256K).
                    example: 262144
                    minimum: 32768
                    maximum: 1.073741824e+09
                sql_mode:
                    type: string
                    description: Global SQL mode. If empty, uses MySQL server defaults. Must only include uppercase alphabetic characters, underscores, and commas.
                    example: ANSI,TRADITIONAL
                    maxLength: 1024
                    pattern: ^[A-Z_]*(,[A-Z_]+)*$
                sql_require_primary_key:
                    type: boolean
                    description: Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them.
                    example: true
                tmp_table_size:
                    type: integer
                    description: The maximum size, in bytes, of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M).
                    example: 1.6777216e+07
                    minimum: 1.048576e+06
                    maximum: 1.073741824e+09
                type:
                    type: string
                    default: mysql
                    readOnly: true
                wait_timeout:
                    type: integer
                    description: The number of seconds the server waits for activity on a noninteractive connection before closing it.
                    example: 28800
                    minimum: 1
                    maximum: 2.147483e+06
        mysql_settings:
            type: object
            required:
                - auth_plugin
            properties:
                auth_plugin:
                    type: string
                    description: |
                        A string specifying the authentication method to be used for connections
                        to the MySQL user account. The valid values are `mysql_native_password`
                        or `caching_sha2_password`. If excluded when creating a new user, the
                        default for the version of MySQL in use will be used. As of MySQL 8.0, the
                        default is `caching_sha2_password`.
                    enum:
                        - mysql_native_password
                        - caching_sha2_password
                    example: mysql_native_password
        namespace_info:
            type: object
            properties:
                api_host:
                    type: string
                    description: The namespace's API hostname. Each function in a namespace is provided an endpoint at the namespace's hostname.
                    example: https://api_host.io
                created_at:
                    type: string
                    description: UTC time string.
                    example: "2022-09-14T04:16:45Z"
                key:
                    type: string
                    description: "A random alpha numeric string. This key is used in conjunction with the namespace's UUID to authenticate \na user to use the namespace via `doctl`, DigitalOcean's official CLI."
                    example: d1zcd455h01mqjfs4s2eaewyejehi5f2uj4etqq3h7cera8iwkub6xg5of1wdde2
                label:
                    type: string
                    description: The namespace's unique name.
                    example: my namespace
                namespace:
                    type: string
                    description: A unique string format of UUID with a prefix fn-.
                    example: fn-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                region:
                    type: string
                    description: The namespace's datacenter region.
                    example: nyc1
                updated_at:
                    type: string
                    description: UTC time string.
                    example: "2022-09-14T04:16:45Z"
                uuid:
                    type: string
                    description: The namespace's Universally Unique Identifier.
                    example: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        neighbor_ids:
            type: object
            properties:
                neighbor_ids:
                    type: array
                    description: An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
                    example:
                        - - 1.68671828e+08
                          - 1.68663509e+08
                          - 1.68671815e+08
                        - - 1.68671883e+08
                          - 1.6867175e+08
                    items:
                        type: array
                        items:
                            type: integer
        network_v4:
            type: object
            properties:
                gateway:
                    type: string
                    description: |
                        The gateway of the specified IPv4 network interface.

                        For private interfaces, a gateway is not provided. This is denoted by
                        returning `nil` as its value.
                    example: 104.236.0.1
                ip_address:
                    type: string
                    format: ipv4
                    description: The IP address of the IPv4 network interface.
                    example: 104.236.32.182
                netmask:
                    type: string
                    format: ipv4
                    description: The netmask of the IPv4 network interface.
                    example: 255.255.192.0
                type:
                    type: string
                    description: The type of the IPv4 network interface.
                    enum:
                        - public
                        - private
                    example: public
        network_v6:
            type: object
            properties:
                gateway:
                    type: string
                    format: ipv6
                    description: The gateway of the specified IPv6 network interface.
                    example: 2604:a880:0:1010::1
                ip_address:
                    type: string
                    format: ipv6
                    description: The IP address of the IPv6 network interface.
                    example: 2604:a880:0:1010::18a:a001
                netmask:
                    type: integer
                    description: The netmask of the IPv6 network interface.
                    example: 64
                type:
                    type: string
                    description: |
                        The type of the IPv6 network interface.

                        **Note**: IPv6 private  networking is not currently supported.
                    enum:
                        - public
                    example: public
        node:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the node was created.
                    example: "2018-11-15T16:00:11Z"
                droplet_id:
                    type: string
                    description: The ID of the Droplet used for the worker node.
                    example: "205545370"
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference the node.
                    example: e78247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                name:
                    type: string
                    description: An automatically generated, human-readable name for the node.
                    example: adoring-newton-3niq
                status:
                    type: object
                    description: An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
                    properties:
                        state:
                            type: string
                            description: A string indicating the current status of the node.
                            enum:
                                - provisioning
                                - running
                                - draining
                                - deleting
                            example: provisioning
                updated_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the node was last updated.
                    example: "2018-11-15T16:00:11Z"
        notification:
            type: object
            description: The notification settings for a trigger alert.
            required:
                - slack
                - email
            properties:
                email:
                    type: array
                    description: An email to notify on an alert trigger.
                    example:
                        - bob@example.com
                    items:
                        type: string
                slack:
                    type: array
                    description: Slack integration details.
                    items:
                        type: object
                        required:
                            - url
                            - channel
                        properties:
                            channel:
                                type: string
                                format: string
                                description: Slack channel to notify of an alert trigger.
                                example: Production Alerts
                            url:
                                type: string
                                format: string
                                description: Slack Webhook URL.
                                example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
        oneClicks:
            type: object
            required:
                - slug
                - type
            properties:
                slug:
                    type: string
                    title: slug
                    description: The slug identifier for the 1-Click application.
                    example: monitoring
                type:
                    type: string
                    title: type
                    description: The type of the 1-Click application.
                    example: kubernetes
        oneClicks_create:
            type: object
            required:
                - addon_slugs
                - cluster_uuid
            properties:
                addon_slugs:
                    type: array
                    title: addon_slugs
                    description: An array of 1-Click Application slugs to be installed to the Kubernetes cluster.
                    default: []
                    example:
                        - kube-state-metrics
                        - loki
                    items:
                        type: string
                cluster_uuid:
                    type: string
                    title: cluster_uuid
                    description: A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed.
                    example: 50a994b6-c303-438f-9495-7e896cfe6b08
        online_migration:
            type: object
            properties:
                created_at:
                    type: string
                    description: The time the migration was initiated, in ISO 8601 format.
                    example: "2020-10-29T15:57:38Z"
                id:
                    type: string
                    description: The ID of the most recent migration.
                    example: 77b28fc8-19ff-11eb-8c9c-c68e24557488
                status:
                    type: string
                    description: The current status of the migration.
                    enum:
                        - running
                        - canceled
                        - error
                        - done
                    example: running
        options:
            type: object
            properties:
                options:
                    type: object
                    properties:
                        mongodb:
                            allOf:
                                - $ref: '#/components/schemas/database_region_options'
                                - $ref: '#/components/schemas/database_version_options'
                                - $ref: '#/components/schemas/database_layout_options'
                        mysql:
                            allOf:
                                - $ref: '#/components/schemas/database_region_options'
                                - $ref: '#/components/schemas/database_version_options'
                                - $ref: '#/components/schemas/database_layout_options'
                        pg:
                            allOf:
                                - $ref: '#/components/schemas/database_region_options'
                                - $ref: '#/components/schemas/database_version_options'
                                - $ref: '#/components/schemas/database_layout_options'
                        redis:
                            allOf:
                                - $ref: '#/components/schemas/database_region_options'
                                - $ref: '#/components/schemas/database_version_options'
                                - $ref: '#/components/schemas/database_layout_options'
                version_availability:
                    type: object
                    properties:
                        mongodb:
                            $ref: '#/components/schemas/database_version_availabilities'
                        mysql:
                            $ref: '#/components/schemas/database_version_availabilities'
                        pg:
                            $ref: '#/components/schemas/database_version_availabilities'
                        redis:
                            $ref: '#/components/schemas/database_version_availabilities'
        page_links:
            type: object
            properties:
                pages:
                    example:
                        pages:
                            first: https://api.digitalocean.com/v2/account/keys?page=1
                            prev: https://api.digitalocean.com/v2/account/keys?page=2
                    properties:
                        first:
                            type: string
                        last:
                            type: string
                        next:
                            type: string
                        prev:
                            type: string
        pagination:
            type: object
            properties:
                links:
                    $ref: '#/components/schemas/page_links'
        pgbouncer:
            type: object
            description: PGBouncer connection pooling settings
            properties:
                autodb_idle_timeout:
                    type: integer
                    description: If the automatically-created database pools have been unused this many seconds, they are freed. If 0, timeout is disabled.
                    example: 3600
                    minimum: 0
                    maximum: 86400
                autodb_max_db_connections:
                    type: integer
                    description: Only allows a maximum this many server connections per database (regardless of user). If 0, allows unlimited connections.
                    example: 1
                    minimum: 0
                    maximum: 2.147483647e+09
                autodb_pool_mode:
                    type: string
                    description: PGBouncer pool mode
                    enum:
                        - session
                        - transaction
                        - statement
                    example: session
                autodb_pool_size:
                    type: integer
                    description: If non-zero, automatically creates a pool of that size per user when a pool doesn't exist.
                    example: 1
                    minimum: 0
                    maximum: 10000
                ignore_startup_parameters:
                    type: array
                    description: List of parameters to ignore when given in startup packet.
                    example:
                        - extra_float_digits
                        - search_path
                    maxItems: 32
                    items:
                        type: string
                        description: Enum of parameters to ignore when given in startup packet.
                        enum:
                            - extra_float_digits
                            - search_path
                min_pool_size:
                    type: integer
                    description: If current server connections are below this number, adds more. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size.
                    example: 1
                    minimum: 0
                    maximum: 10000
                server_idle_timeout:
                    type: integer
                    description: 'Drops server connections if they have been idle more than this many seconds.  If 0, timeout is disabled. '
                    example: 600
                    minimum: 0
                    maximum: 86400
                server_lifetime:
                    type: integer
                    description: The pooler closes any unused server connection that has been connected longer than this amount of seconds.
                    example: 3600
                    minimum: 60
                    maximum: 86400
                server_reset_query_always:
                    type: boolean
                    description: Run server_reset_query (DISCARD ALL) in all pooling modes.
                    example: false
        postgres:
            type: object
            properties:
                autovacuum_analyze_scale_factor:
                    type: number
                    description: Specifies a fraction, in a decimal value, of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
                    example: 0.2
                    minimum: 0
                    maximum: 1
                autovacuum_analyze_threshold:
                    type: integer
                    description: Specifies the minimum number of inserted, updated, or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
                    example: 50
                    minimum: 0
                    maximum: 2.147483647e+09
                autovacuum_freeze_max_age:
                    type: integer
                    description: Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
                    example: 2e+08
                    minimum: 2e+08
                    maximum: 1.5e+09
                autovacuum_max_workers:
                    type: integer
                    description: Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
                    example: 5
                    minimum: 1
                    maximum: 20
                autovacuum_naptime:
                    type: integer
                    description: Specifies the minimum delay, in seconds, between autovacuum runs on any given database. The default is one minute.
                    example: 43200
                    minimum: 0
                    maximum: 86400
                autovacuum_vacuum_cost_delay:
                    type: integer
                    description: Specifies the cost delay value, in milliseconds, that will be used in automatic VACUUM operations. If -1, uses the regular vacuum_cost_delay value, which is 20 milliseconds.
                    example: 20
                    minimum: -1
                    maximum: 100
                autovacuum_vacuum_cost_limit:
                    type: integer
                    description: Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit value will be used.
                    example: -1
                    minimum: -1
                    maximum: 10000
                autovacuum_vacuum_scale_factor:
                    type: number
                    description: Specifies a fraction, in a decimal value, of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
                    example: 0.2
                    minimum: 0
                    maximum: 1
                autovacuum_vacuum_threshold:
                    type: integer
                    description: Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
                    example: 50
                    minimum: 0
                    maximum: 2.147483647e+09
                backup_hour:
                    type: integer
                    description: The hour of day (in UTC) when backup for the service starts. New backup only starts if previous backup has already completed.
                    example: 3
                    minimum: 0
                    maximum: 23
                backup_minute:
                    type: integer
                    description: The minute of the backup hour when backup for the service starts. New backup is only started if previous backup has already completed.
                    example: 30
                    minimum: 0
                    maximum: 59
                bgwriter_delay:
                    type: integer
                    description: Specifies the delay, in milliseconds, between activity rounds for the background writer. Default is 200 ms.
                    example: 200
                    minimum: 10
                    maximum: 10000
                bgwriter_flush_after:
                    type: integer
                    description: The amount of kilobytes that need to be written by the background writer before attempting to force the OS to issue these writes to underlying storage. Specified in kilobytes, default is 512.  Setting of 0 disables forced writeback.
                    example: 512
                    minimum: 0
                    maximum: 2048
                bgwriter_lru_maxpages:
                    type: integer
                    description: The maximum number of buffers that the background writer can write. Setting this to zero disables background writing. Default is 100.
                    example: 100
                    minimum: 0
                    maximum: 1.073741823e+09
                bgwriter_lru_multiplier:
                    type: number
                    description: The average recent need for new buffers is multiplied by bgwriter_lru_multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
                    example: 2
                    minimum: 0
                    maximum: 10
                deadlock_timeout:
                    type: integer
                    description: The amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
                    example: 1000
                    minimum: 500
                    maximum: 1.8e+06
                default_toast_compression:
                    type: string
                    description: Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
                    enum:
                        - lz4
                        - pglz
                    example: lz4
                idle_in_transaction_session_timeout:
                    type: integer
                    description: Time out sessions with open transactions after this number of milliseconds
                    example: 10000
                    minimum: 0
                    maximum: 6.048e+08
                jit:
                    type: boolean
                    description: Activates, in a boolean, the system-wide use of Just-in-Time Compilation (JIT).
                    example: true
                log_autovacuum_min_duration:
                    type: integer
                    description: Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
                    example: -1
                    minimum: -1
                    maximum: 2.147483647e+09
                log_error_verbosity:
                    type: string
                    description: Controls the amount of detail written in the server log for each message that is logged.
                    enum:
                        - TERSE
                        - DEFAULT
                        - VERBOSE
                    example: VERBOSE
                log_line_prefix:
                    type: string
                    description: Selects one of the available log-formats. These can support popular log analyzers like pgbadger, pganalyze, etc.
                    enum:
                        - pid=%p,user=%u,db=%d,app=%a,client=%h
                        - '%m [%p] %q[user=%u,db=%d,app=%a]'
                        - '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'
                    example: pid=%p,user=%u,db=%d,app=%a,client=%h
                log_min_duration_statement:
                    type: integer
                    description: Log statements that take more than this number of milliseconds to run. If -1, disables.
                    example: -1
                    minimum: -1
                    maximum: 8.64e+07
                max_files_per_process:
                    type: integer
                    description: PostgreSQL maximum number of files that can be open per process.
                    example: 2048
                    minimum: 1000
                    maximum: 4096
                max_locks_per_transaction:
                    type: integer
                    description: PostgreSQL maximum locks per transaction. Once increased, this parameter cannot be lowered from its set value.
                    example: 128
                    minimum: 64
                    maximum: 6400
                max_logical_replication_workers:
                    type: integer
                    description: PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).
                    example: 16
                    minimum: 4
                    maximum: 64
                max_parallel_workers:
                    type: integer
                    description: Sets the maximum number of workers that the system can support for parallel queries.
                    example: 12
                    minimum: 0
                    maximum: 96
                max_parallel_workers_per_gather:
                    type: integer
                    description: Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
                    example: 16
                    minimum: 0
                    maximum: 96
                max_pred_locks_per_transaction:
                    type: integer
                    description: PostgreSQL maximum predicate locks per transaction.
                    example: 128
                    minimum: 64
                    maximum: 640
                max_prepared_transactions:
                    type: integer
                    description: PostgreSQL maximum prepared transactions. Once increased, this parameter cannot be lowered from its set value.
                    example: 20
                    minimum: 0
                    maximum: 10000
                max_replication_slots:
                    type: integer
                    description: PostgreSQL maximum replication slots.
                    example: 16
                    minimum: 8
                    maximum: 64
                max_stack_depth:
                    type: integer
                    description: Maximum depth of the stack in bytes.
                    example: 2.097152e+06
                    minimum: 2.097152e+06
                    maximum: 6.291456e+06
                max_standby_archive_delay:
                    type: integer
                    description: Max standby archive delay in milliseconds.
                    example: 43200
                    minimum: 1
                    maximum: 4.32e+07
                max_standby_streaming_delay:
                    type: integer
                    description: Max standby streaming delay in milliseconds.
                    example: 43200
                    minimum: 1
                    maximum: 4.32e+07
                max_wal_senders:
                    type: integer
                    description: PostgreSQL maximum WAL senders. Once increased, this parameter cannot be lowered from its set value.
                    example: 32
                    minimum: 20
                    maximum: 64
                max_worker_processes:
                    type: integer
                    description: Sets the maximum number of background processes that the system can support. Once increased, this parameter cannot be lowered from its set value.
                    example: 16
                    minimum: 8
                    maximum: 96
                pg_partman_bgw.interval:
                    type: integer
                    description: Sets the time interval to run pg_partman's scheduled tasks.
                    example: 3600
                    minimum: 3600
                    maximum: 604800
                pg_partman_bgw.role:
                    type: string
                    description: Controls which role to use for pg_partman's scheduled background tasks. Must consist of alpha-numeric characters, dots, underscores, or dashes. May not start with dash or dot. Maximum of 64 characters.
                    example: myrolename
                    maxLength: 64
                    pattern: ^[_A-Za-z0-9][-._A-Za-z0-9]{0,63}$
                pg_stat_statements.track:
                    type: string
                    description: Controls which statements are counted. Specify 'top' to track top-level statements (those issued directly by clients), 'all' to also track nested statements (such as statements invoked within functions), or 'none' to disable statement statistics collection. The default value is top.
                    enum:
                        - all
                        - top
                        - none
                    example: all
                pgbouncer:
                    $ref: '#/components/schemas/pgbouncer'
                shared_buffers_percentage:
                    type: number
                    description: Percentage of total RAM that the database server uses for shared memory buffers.  Valid range is 20-60 (float), which corresponds to 20% - 60%.  This setting adjusts the shared_buffers configuration value.
                    example: 41.5
                    minimum: 20
                    maximum: 60
                stat_monitor_enable:
                    type: boolean
                    description: Enable the pg_stat_monitor extension. <b>Enabling this extension will cause the cluster to be restarted.</b> When this extension is enabled, pg_stat_statements results for utility commands are unreliable.
                    example: false
                synchronous_replication:
                    type: string
                    description: Synchronous replication type. Note that the service plan also needs to support synchronous replication.
                    enum:
                        - "off"
                        - quorum
                    example: "off"
                temp_file_limit:
                    type: integer
                    description: PostgreSQL temporary file limit in KiB. If -1, sets to unlimited.
                    example: 5e+06
                    minimum: -1
                    maximum: 2.147483647e+09
                timescaledb:
                    $ref: '#/components/schemas/timescaledb'
                timezone:
                    type: string
                    description: PostgreSQL service timezone
                    example: Europe/Helsinki
                    maxLength: 64
                track_activity_query_size:
                    type: integer
                    description: Specifies the number of bytes reserved to track the currently executing command for each active session.
                    example: 1024
                    minimum: 1024
                    maximum: 10240
                track_commit_timestamp:
                    type: string
                    description: Record commit time of transactions.
                    enum:
                        - "off"
                        - "on"
                    example: "off"
                track_functions:
                    type: string
                    description: Enables tracking of function call counts and time used.
                    enum:
                        - all
                        - pl
                        - none
                    example: all
                track_io_timing:
                    type: string
                    description: Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
                    enum:
                        - "off"
                        - "on"
                    example: "off"
                type:
                    type: string
                    default: postgres
                    readOnly: true
                wal_sender_timeout:
                    type: integer
                    description: Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout. Must be either 0 or between 5000 and 10800000.
                    example: 60000
                    minimum: 0
                    maximum: 1.08e+07
                wal_writer_delay:
                    type: integer
                    description: WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance
                    example: 50
                    minimum: 10
                    maximum: 200
                work_mem:
                    type: integer
                    description: The maximum amount of memory, in MB, used by a query operation (such as a sort or hash table) before writing to temporary disk files. Default is 1MB + 0.075% of total RAM (up to 32MB).
                    example: 4
                    minimum: 1
                    maximum: 1024
        previous_outage:
            type: object
            properties:
                duration_seconds:
                    type: integer
                    example: 120
                ended_at:
                    type: string
                    example: "2022-03-17T18:06:55Z"
                region:
                    type: string
                    example: us_east
                started_at:
                    type: string
                    example: "2022-03-17T18:04:55Z"
        product_charge_item:
            type: object
            properties:
                amount:
                    type: string
                    description: Amount of the charge
                    example: "10.00"
                count:
                    type: string
                    description: Number of times the charge was applied
                    example: "1"
                name:
                    type: string
                    description: Description of the charge
                    example: Spaces Subscription
        product_usage_charges:
            type: object
            properties:
                amount:
                    type: string
                    description: Total amount charged
                    example: "12.34"
                items:
                    type: array
                    description: List of amount, and grouped aggregates by resource type.
                    example:
                        - amount: "10.00"
                          count: "1"
                          name: Spaces Subscription
                        - amount: "2.34"
                          count: "1"
                          name: Database Clusters
                    items:
                        $ref: '#/components/schemas/product_charge_item'
                name:
                    type: string
                    description: Description of usage charges
                    example: Product usage charges
        project:
            allOf:
                - $ref: '#/components/schemas/project_base'
                - type: object
                  properties:
                    is_default:
                        type: boolean
                        description: If true, all resources will be added to this project if no project is specified.
                        example: false
        project_assignment:
            type: object
            properties:
                resources:
                    type: array
                    description: A list of uniform resource names (URNs) to be added to a project.
                    example:
                        - do:droplet:13457723
                    items:
                        $ref: '#/components/schemas/urn'
        project_base:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the project was created.
                    example: "2018-09-27T20:10:35Z"
                    readOnly: true
                description:
                    type: string
                    description: The description of the project. The maximum length is 255 characters.
                    example: My website API
                    maxLength: 255
                environment:
                    type: string
                    description: The environment of the project's resources.
                    enum:
                        - Development
                        - Staging
                        - Production
                    example: Production
                id:
                    type: string
                    format: uuid
                    description: The unique universal identifier of this project.
                    example: 4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679
                    readOnly: true
                name:
                    type: string
                    description: The human-readable name for the project. The maximum length is 175 characters and the name must be unique.
                    example: my-web-api
                    maxLength: 175
                owner_id:
                    type: integer
                    description: The integer id of the project owner.
                    example: 258992
                    readOnly: true
                owner_uuid:
                    type: string
                    description: The unique universal identifier of the project owner.
                    example: 99525febec065ca37b2ffe4f852fd2b2581895e7
                    readOnly: true
                purpose:
                    type: string
                    description: |
                        The purpose of the project. The maximum length is 255 characters. It can
                        have one of the following values:

                        - Just trying out DigitalOcean
                        - Class project / Educational purposes
                        - Website or blog
                        - Web Application
                        - Service or API
                        - Mobile Application
                        - Machine learning / AI / Data processing
                        - IoT
                        - Operational / Developer tooling

                        If another value for purpose is specified, for example, "your custom purpose",
                        your purpose will be stored as `Other: your custom purpose`.
                    example: Service or API
                    maxLength: 255
                updated_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the project was updated.
                    example: "2018-09-27T20:10:35Z"
                    readOnly: true
        purge_cache:
            type: object
            required:
                - files
            properties:
                files:
                    type: array
                    description: An array of strings containing the path to the content to be purged from the CDN cache.
                    example:
                        - path/to/image.png
                        - path/to/css/*
                    items:
                        type: string
        redis:
            type: object
            properties:
                redis_acl_channels_default:
                    type: string
                    description: Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
                    enum:
                        - allchannels
                        - resetchannels
                    example: allchannels
                redis_io_threads:
                    type: integer
                    description: Redis IO thread count
                    example: 1
                    minimum: 1
                    maximum: 32
                redis_lfu_decay_time:
                    type: integer
                    description: LFU maxmemory-policy counter decay time in minutes
                    default: 1
                    example: 1
                    minimum: 1
                    maximum: 120
                redis_lfu_log_factor:
                    type: integer
                    description: Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies
                    default: 10
                    example: 10
                    minimum: 0
                    maximum: 100
                redis_maxmemory_policy:
                    $ref: '#/components/schemas/eviction_policy_model'
                redis_notify_keyspace_events:
                    type: string
                    description: Set notify-keyspace-events option
                    default: ""
                    example: K
                    maxLength: 32
                    pattern: ^[KEg\$lshzxeA]*$
                redis_number_of_databases:
                    type: integer
                    description: Set number of redis databases. Changing this will cause a restart of redis service.
                    example: 16
                    minimum: 1
                    maximum: 128
                redis_persistence:
                    type: string
                    description: When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.
                    enum:
                        - "off"
                        - rdb
                    example: rdb
                redis_pubsub_client_output_buffer_limit:
                    type: integer
                    description: Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
                    example: 64
                    minimum: 32
                    maximum: 512
                redis_ssl:
                    type: boolean
                    description: Require SSL to access Redis
                    default: true
                    example: true
                redis_timeout:
                    type: integer
                    description: Redis idle connection timeout in seconds
                    default: 300
                    example: 300
                    minimum: 0
                    maximum: 3.1536e+07
                type:
                    type: string
                    default: redis
                    readOnly: true
        region:
            type: object
            required:
                - available
                - features
                - name
                - sizes
                - slug
            properties:
                available:
                    type: boolean
                    description: This is a boolean value that represents whether new Droplets can be created in this region.
                    example: true
                features:
                    type: array
                    description: This attribute is set to an array which contains features available in this region
                    example:
                        - private_networking
                        - backups
                        - ipv6
                        - metadata
                        - install_agent
                        - storage
                        - image_transfer
                    items:
                        type: string
                name:
                    type: string
                    description: The display name of the region.  This will be a full name that is used in the control panel and other interfaces.
                    example: New York 3
                sizes:
                    type: array
                    description: This attribute is set to an array which contains the identifying slugs for the sizes available in this region.
                    example:
                        - s-1vcpu-1gb
                        - s-1vcpu-2gb
                        - s-1vcpu-3gb
                        - s-2vcpu-2gb
                        - s-3vcpu-1gb
                        - s-2vcpu-4gb
                        - s-4vcpu-8gb
                        - s-6vcpu-16gb
                        - s-8vcpu-32gb
                        - s-12vcpu-48gb
                        - s-16vcpu-64gb
                        - s-20vcpu-96gb
                        - s-24vcpu-128gb
                        - s-32vcpu-192g
                    items:
                        type: string
                slug:
                    type: string
                    description: A human-readable string that is used as a unique identifier for each region.
                    example: nyc3
        region_slug:
            type: string
            description: The slug identifier for the region where the resource will initially be  available.
            enum:
                - ams1
                - ams2
                - ams3
                - blr1
                - fra1
                - lon1
                - nyc1
                - nyc2
                - nyc3
                - sfo1
                - sfo2
                - sfo3
                - sgp1
                - tor1
            example: nyc3
        region_state:
            type: object
            properties:
                status:
                    type: string
                    enum:
                        - DOWN
                        - UP
                        - CHECKING
                    example: UP
                status_changed_at:
                    type: string
                    example: "2022-03-17T22:28:51Z"
                thirty_day_uptime_percentage:
                    type: number
                    example: 97.99
        regional_state:
            type: object
            description: A map of region to regional state
            properties:
                eu_west:
                    $ref: '#/components/schemas/region_state'
                us_east:
                    $ref: '#/components/schemas/region_state'
        regions_array:
            type: array
            description: This attribute is an array of the regions that the image is available in. The regions are represented by their identifying slug values.
            example:
                - nyc1
                - nyc2
            items:
                $ref: '#/components/schemas/region_slug'
        registry:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the registry was created.
                    example: "2020-03-21T16:02:37Z"
                    readOnly: true
                name:
                    type: string
                    description: A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters.
                    example: example
                    maxLength: 63
                    pattern: ^[a-z0-9-]{1,63}$
                region:
                    type: string
                    description: Slug of the region where registry data is stored
                    example: fra1
                storage_usage_bytes:
                    type: integer
                    description: The amount of storage used in the registry in bytes.
                    example: 2.939392e+07
                    readOnly: true
                storage_usage_bytes_updated_at:
                    type: string
                    format: date-time
                    description: The time at which the storage usage was updated. Storage usage is calculated asynchronously, and may not immediately reflect pushes to the registry.
                    example: "2020-11-04T21:39:49.530562231Z"
                    readOnly: true
                subscription:
                    allOf:
                        - readOnly: true
                        - $ref: '#/components/schemas/subscription'
        registry_create:
            type: object
            required:
                - name
                - subscription_tier_slug
            properties:
                name:
                    type: string
                    description: A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters.
                    example: example
                    maxLength: 63
                    pattern: ^[a-z0-9-]{1,63}$
                region:
                    type: string
                    description: Slug of the region where registry data is stored. When not provided, a region will be selected.
                    enum:
                        - nyc3
                        - sfo3
                        - ams3
                        - sgp1
                        - fra1
                    example: fra1
                subscription_tier_slug:
                    type: string
                    description: The slug of the subscription tier to sign up for. Valid values can be retrieved using the options endpoint.
                    enum:
                        - starter
                        - basic
                        - professional
                    example: basic
        repository:
            type: object
            properties:
                latest_tag:
                    $ref: '#/components/schemas/repository_tag'
                name:
                    type: string
                    description: The name of the repository.
                    example: repo-1
                registry_name:
                    type: string
                    description: The name of the container registry.
                    example: example
                tag_count:
                    type: integer
                    description: The number of tags in the repository.
                    example: 1
        repository_blob:
            type: object
            properties:
                compressed_size_bytes:
                    type: integer
                    description: The compressed size of the blob in bytes.
                    example: 2.803255e+06
                digest:
                    type: string
                    description: The digest of the blob
                    example: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
        repository_manifest:
            type: object
            properties:
                blobs:
                    type: array
                    description: All blobs associated with this manifest
                    items:
                        $ref: '#/components/schemas/repository_blob'
                compressed_size_bytes:
                    type: integer
                    description: The compressed size of the manifest in bytes.
                    example: 2.803255e+06
                digest:
                    type: string
                    description: The manifest digest
                    example: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                registry_name:
                    type: string
                    description: The name of the container registry.
                    example: example
                repository:
                    type: string
                    description: The name of the repository.
                    example: repo-1
                size_bytes:
                    type: integer
                    description: The uncompressed size of the manifest in bytes (this size is calculated asynchronously so it may not be immediately available).
                    example: 5.861888e+06
                tags:
                    type: array
                    description: All tags associated with this manifest
                    example:
                        - latest
                        - v1
                        - v2
                    items:
                        type: string
                updated_at:
                    type: string
                    format: date-time
                    description: The time the manifest was last updated.
                    example: "2020-04-09T23:54:25Z"
        repository_tag:
            type: object
            properties:
                compressed_size_bytes:
                    type: integer
                    description: The compressed size of the tag in bytes.
                    example: 2.803255e+06
                manifest_digest:
                    type: string
                    description: The digest of the manifest associated with the tag.
                    example: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                registry_name:
                    type: string
                    description: The name of the container registry.
                    example: example
                repository:
                    type: string
                    description: The name of the repository.
                    example: repo-1
                size_bytes:
                    type: integer
                    description: The uncompressed size of the tag in bytes (this size is calculated asynchronously so it may not be immediately available).
                    example: 5.861888e+06
                tag:
                    type: string
                    description: The name of the tag.
                    example: latest
                updated_at:
                    type: string
                    format: date-time
                    description: The time the tag was last updated.
                    example: "2020-04-09T23:54:25Z"
        repository_v2:
            type: object
            properties:
                latest_manifest:
                    $ref: '#/components/schemas/repository_manifest'
                manifest_count:
                    type: integer
                    description: The number of manifests in the repository.
                    example: 1
                name:
                    type: string
                    description: The name of the repository.
                    example: repo-1
                registry_name:
                    type: string
                    description: The name of the container registry.
                    example: example
                tag_count:
                    type: integer
                    description: The number of tags in the repository.
                    example: 1
        reserved_ip:
            type: object
            properties:
                droplet:
                    $ref: '#/components/schemas/droplet'
                ip:
                    type: string
                    format: ipv4
                    description: The public IP address of the reserved IP. It also serves as its identifier.
                    example: 45.55.96.47
                locked:
                    type: boolean
                    description: A boolean value indicating whether or not the reserved IP has pending actions preventing new ones from being submitted.
                    example: true
                project_id:
                    type: string
                    format: uuid
                    description: The UUID of the project to which the reserved IP currently belongs.
                    example: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                region:
                    allOf:
                        - $ref: '#/components/schemas/region'
                        - type: object
                          description: The region that the reserved IP is reserved to. When you query a reserved IP, the entire region object will be returned.
        reserved_ip_action_assign:
            allOf:
                - $ref: '#/components/schemas/reserved_ip_action_type'
                - type: object
                  required:
                    - type
                    - droplet_id
                  properties:
                    droplet_id:
                        type: integer
                        description: The ID of the Droplet that the reserved IP will be assigned to.
                        example: 7.58604968e+08
        reserved_ip_action_type:
            type: object
            required:
                - type
            properties:
                type:
                    type: string
                    description: The type of action to initiate for the reserved IP.
                    enum:
                        - assign
                        - unassign
            discriminator:
                propertyName: type
                mapping:
                    assign: '#/components/schemas/reserved_ip_action_assign'
                    unassign: '#/components/schemas/reserved_ip_action_unassign'
        reserved_ip_action_unassign:
            allOf:
                - $ref: '#/components/schemas/reserved_ip_action_type'
                - type: object
                  required:
                    - type
                  properties:
                    droplet_id:
                        type: integer
                        description: The ID of the Droplet that the reserved IP will be unassigned from.
            required:
                - droplet_id
        reserved_ip_create:
            oneOf:
                - type: object
                  title: Assign to Droplet
                  required:
                    - droplet_id
                  properties:
                    droplet_id:
                        type: integer
                        description: The ID of the Droplet that the reserved IP will be assigned to.
                        example: 2.457247e+06
                - type: object
                  title: Reserve to Region
                  required:
                    - region
                  properties:
                    project_id:
                        type: string
                        format: uuid
                        description: The UUID of the project to which the reserved IP will be assigned.
                        example: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        type: string
                        description: The slug identifier for the region the reserved IP will be reserved to.
                        example: nyc3
        resource:
            type: object
            properties:
                assigned_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the project was created.
                    example: "2018-09-28T19:26:37Z"
                links:
                    type: object
                    description: The links object contains the `self` object, which contains the resource relationship.
                    properties:
                        self:
                            type: string
                            format: uri
                            description: A URI that can be used to retrieve the resource.
                            example: https://api.digitalocean.com/v2/droplets/13457723
                status:
                    type: string
                    description: The status of assigning and fetching the resources.
                    enum:
                        - ok
                        - not_found
                        - assigned
                        - already_assigned
                        - service_down
                    example: ok
                urn:
                    $ref: '#/components/schemas/urn'
        scheduled_details:
            type: object
            description: |
                Trigger details for SCHEDULED type, where body is optional.
            required:
                - cron
            properties:
                body:
                    type: object
                    description: Optional data to be sent to function while triggering the function.
                    nullable: true
                    properties:
                        name:
                            type: string
                            example: Welcome to DO!
                cron:
                    type: string
                    description: valid cron expression string which is required for SCHEDULED type triggers.
                    example: '* * * * *'
        selective_destroy_associated_resource:
            type: object
            description: An object containing information about a resource to be scheduled for deletion.
            properties:
                floating_ips:
                    type: array
                    description: An array of unique identifiers for the floating IPs to be scheduled for deletion.
                    example:
                        - "6186916"
                    deprecated: true
                    items:
                        type: string
                reserved_ips:
                    type: array
                    description: An array of unique identifiers for the reserved IPs to be scheduled for deletion.
                    example:
                        - "6186916"
                    items:
                        type: string
                snapshots:
                    type: array
                    description: An array of unique identifiers for the snapshots to be scheduled for deletion.
                    example:
                        - "61486916"
                    items:
                        type: string
                volume_snapshots:
                    type: array
                    description: An array of unique identifiers for the volume snapshots to be scheduled for deletion.
                    example:
                        - edb0478d-7436-11ea-86e6-0a58ac144b91
                    items:
                        type: string
                volumes:
                    type: array
                    description: An array of unique identifiers for the volumes to be scheduled for deletion.
                    example:
                        - ba49449a-7435-11ea-b89e-0a58ac14480f
                    items:
                        type: string
        simple_charge:
            type: object
            properties:
                amount:
                    type: string
                    description: Total amount charged in USD
                    example: "3.45"
                name:
                    type: string
                    description: Name of the charge
                    example: Overages
        size:
            type: object
            required:
                - available
                - disk
                - memory
                - price_hourly
                - price_monthly
                - regions
                - slug
                - transfer
                - vcpus
                - description
            properties:
                available:
                    type: boolean
                    description: This is a boolean value that represents whether new Droplets can be created with this size.
                    default: true
                    example: true
                description:
                    type: string
                    description: 'A string describing the class of Droplets created from this size. For example: Basic, General Purpose, CPU-Optimized, Memory-Optimized, or Storage-Optimized.'
                    example: Basic
                disk:
                    type: integer
                    description: The amount of disk space set aside for Droplets of this size. The value is represented in gigabytes.
                    example: 25
                memory:
                    type: integer
                    description: The amount of RAM allocated to Droplets created of this size. The value is represented in megabytes.
                    example: 1024
                    minimum: 8
                    multipleOf: 8
                price_hourly:
                    type: number
                    format: float
                    description: This describes the price of the Droplet size as measured hourly. The value is measured in US dollars.
                    example: 0.00743999984115362
                price_monthly:
                    type: number
                    format: float
                    description: This attribute describes the monthly cost of this Droplet size if the Droplet is kept for an entire month. The value is measured in US dollars.
                    example: 5
                regions:
                    type: array
                    description: An array containing the region slugs where this size is available for Droplet creates.
                    example:
                        - ams2
                        - ams3
                        - blr1
                        - fra1
                        - lon1
                        - nyc1
                        - nyc2
                        - nyc3
                        - sfo1
                        - sfo2
                        - sfo3
                        - sgp1
                        - tor1
                    items:
                        type: string
                slug:
                    type: string
                    description: A human-readable string that is used to uniquely identify each size.
                    example: s-1vcpu-1gb
                transfer:
                    type: number
                    format: float
                    description: The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
                    example: 1
                vcpus:
                    type: integer
                    description: The integer of number CPUs allocated to Droplets of this size.
                    example: 1
        slack_details:
            type: object
            required:
                - url
                - channel
            properties:
                channel:
                    type: string
                    description: Slack channel to notify of an alert trigger.
                    example: Production Alerts
                url:
                    type: string
                    description: Slack Webhook URL.
                    example: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ
        slug:
            type: string
            description: A human-readable string that is used as a unique identifier for each region.
            example: nyc3
        snapshots:
            allOf:
                - type: object
                  required:
                    - id
                  properties:
                    id:
                        type: string
                        description: The unique identifier for the snapshot.
                        example: "6372321"
                - $ref: '#/components/schemas/snapshots_base'
                - type: object
                  required:
                    - resource_id
                    - resource_type
                    - tags
                  properties:
                    resource_id:
                        type: string
                        description: The unique identifier for the resource that the snapshot originated from.
                        example: "200776916"
                    resource_type:
                        type: string
                        description: The type of resource that the snapshot originated from.
                        enum:
                            - droplet
                            - volume
                        example: droplet
                    tags:
                        type: array
                        description: An array of Tags the snapshot has been tagged with.
                        example:
                            - web
                            - env:prod
                        nullable: true
                        items:
                            type: string
        snapshots_base:
            type: object
            required:
                - name
                - created_at
                - regions
                - min_disk_size
                - size_gigabytes
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format that represents when the snapshot was created.
                    example: "2020-07-28T16:47:44Z"
                min_disk_size:
                    type: integer
                    description: The minimum size in GB required for a volume or Droplet to use this snapshot.
                    example: 25
                name:
                    type: string
                    description: A human-readable name for the snapshot.
                    example: web-01-1595954862243
                regions:
                    type: array
                    description: An array of the regions that the snapshot is available in. The regions are represented by their identifying slug values.
                    example:
                        - nyc3
                        - sfo3
                    items:
                        type: string
                size_gigabytes:
                    type: number
                    format: float
                    description: The billable size of the snapshot in gigabytes.
                    example: 2.34
        source_database:
            type: object
            properties:
                disable_ssl:
                    type: boolean
                    description: Enables SSL encryption when connecting to the source database.
                    example: false
                source:
                    type: object
                    properties:
                        dbname:
                            type: string
                            description: The name of the default database.
                            example: defaultdb
                        host:
                            type: string
                            description: The FQDN pointing to the database cluster's current primary node.
                            example: backend-do-user-19081923-0.db.ondigitalocean.com
                        password:
                            type: string
                            description: The randomly generated password for the default user.
                            example: wv78n3zpz42xezdk
                        port:
                            type: integer
                            description: The port on which the database cluster is listening.
                            example: 25060
                        username:
                            type: string
                            description: The default user for the database.
                            example: doadmin
        sql_mode:
            type: object
            required:
                - sql_mode
            properties:
                sql_mode:
                    type: string
                    description: A string specifying the configured SQL modes for the MySQL cluster.
                    example: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES
        ssh_key_fingerprint:
            type: string
            description: A unique identifier that differentiates this key from other keys using  a format that SSH recognizes. The fingerprint is created when the key is added to your account.
            example: 3b:16:bf:e4:8b:00:8b:b8:59:8c:a9:d3:f0:19:45:fa
            readOnly: true
        ssh_key_id:
            type: integer
            description: A unique identification number for this key. Can be used to embed a  specific SSH key into a Droplet.
            example: 512189
            readOnly: true
        ssh_key_name:
            type: string
            description: A human-readable display name for this key, used to easily identify the SSH keys when they are displayed.
            example: My SSH Public Key
        sshKeys:
            type: object
            required:
                - public_key
                - name
            properties:
                fingerprint:
                    $ref: '#/components/schemas/ssh_key_fingerprint'
                id:
                    $ref: '#/components/schemas/ssh_key_id'
                name:
                    $ref: '#/components/schemas/ssh_key_name'
                public_key:
                    type: string
                    description: The entire public key string that was uploaded. Embedded into the root user's `authorized_keys` file if you include this key during Droplet creation.
                    example: ssh-rsa AEXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V example
        state:
            type: object
            properties:
                previous_outage:
                    $ref: '#/components/schemas/previous_outage'
                regions:
                    $ref: '#/components/schemas/regional_state'
        sticky_sessions:
            type: object
            description: An object specifying sticky sessions settings for the load balancer.
            properties:
                cookie_name:
                    type: string
                    description: The name of the cookie sent to the client. This attribute is only returned when using `cookies` for the sticky sessions type.
                    example: DO-LB
                cookie_ttl_seconds:
                    type: integer
                    description: The number of seconds until the cookie set by the load balancer expires. This attribute is only returned when using `cookies` for the sticky sessions type.
                    example: 300
                type:
                    type: string
                    description: An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`.
                    enum:
                        - cookies
                        - none
                    default: none
                    example: cookies
        subscription:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: The time at which the subscription was created.
                    example: "2020-01-23T21:19:12Z"
                    readOnly: true
                tier:
                    $ref: '#/components/schemas/subscription_tier_base'
                updated_at:
                    type: string
                    format: date-time
                    description: The time at which the subscription was last updated.
                    example: "2020-11-05T15:53:24Z"
                    readOnly: true
        subscription_tier_base:
            type: object
            properties:
                allow_storage_overage:
                    type: boolean
                    description: A boolean indicating whether the subscription tier supports additional storage above what is included in the base plan at an additional cost per GiB used.
                    example: true
                included_bandwidth_bytes:
                    type: integer
                    description: The amount of outbound data transfer included in the subscription tier in bytes.
                    example: 5.36870912e+09
                included_repositories:
                    type: integer
                    description: The number of repositories included in the subscription tier. `0` indicates that the subscription tier includes unlimited repositories.
                    example: 5
                included_storage_bytes:
                    type: integer
                    description: The amount of storage included in the subscription tier in bytes.
                    example: 5.36870912e+09
                monthly_price_in_cents:
                    type: integer
                    description: The monthly cost of the subscription tier in cents.
                    example: 500
                name:
                    type: string
                    description: The name of the subscription tier.
                    example: Basic
                slug:
                    type: string
                    description: The slug identifier of the subscription tier.
                    example: basic
                storage_overage_price_in_cents:
                    type: integer
                    description: The price paid in cents per GiB for additional storage beyond what is included in the subscription plan.
                    example: 2
        subscription_tier_extended:
            type: object
            properties:
                eligibility_reasons:
                    type: array
                    description: If your account is not eligible to use a certain subscription tier, this will include a list of reasons that prevent you from using the tier.
                    example:
                        - OverRepositoryLimit
                    items:
                        type: string
                        enum:
                            - OverRepositoryLimit
                            - OverStorageLimit
                eligible:
                    type: boolean
                    description: A boolean indicating whether your account it eligible to use a certain subscription tier.
                    example: true
        tags:
            type: object
            description: |-
                A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.
                Tags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.
            properties:
                name:
                    type: string
                    description: |
                        The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores.
                        There is a limit of 255 characters per tag.

                        **Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.

                        When working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named "PROD", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).

                        Tagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named "PROD", you can tag resources in the control panel by entering "prod". The tag will still display with its canonical capitalization, "PROD".
                    example: extra-awesome
                    maxLength: 255
                    pattern: ^[a-zA-Z0-9_\-\:]+$
                resources:
                    allOf:
                        - $ref: '#/components/schemas/tags_metadata'
                        - properties:
                            databases:
                                $ref: '#/components/schemas/tags_metadata'
                            droplets:
                                $ref: '#/components/schemas/tags_metadata'
                            imgages:
                                $ref: '#/components/schemas/tags_metadata'
                            volume_snapshots:
                                $ref: '#/components/schemas/tags_metadata'
                            volumes:
                                $ref: '#/components/schemas/tags_metadata'
                    type: object
                    description: An embedded object containing key value pairs of resource type and resource statistics. It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag.
                    example:
                        count: 5
                        databases:
                            count: 1
                            last_tagged_uri: https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976
                        droplets:
                            count: 1
                            last_tagged_uri: https://api.digitalocean.com/v2/droplets/3164444
                        images:
                            count: 1
                            last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                        last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                        volume_snapshots:
                            count: 1
                            last_tagged_uri: https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519
                        volumes:
                            count: 1
                            last_tagged_uri: https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933
                    readOnly: true
        tags_array:
            type: array
            description: A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
            example:
                - base-image
                - prod
            nullable: true
            items:
                type: string
        tags_metadata:
            type: object
            description: Tagged Resource Statistics include metadata regarding the resource type that has been tagged.
            properties:
                count:
                    type: integer
                    description: The number of tagged objects for this type of resource.
                    example: 5
                    minimum: 0
                last_tagged_uri:
                    type: string
                    description: The URI for the last tagged object for this type of resource.
                    example: https://api.digitalocean.com/v2/images/7555620
        tags_resource:
            type: object
            required:
                - resources
            properties:
                resources:
                    type: array
                    description: An array of objects containing resource_id and resource_type  attributes.
                    example:
                        - resource_id: "9569411"
                          resource_type: droplet
                        - resource_id: "7555620"
                          resource_type: image
                        - resource_id: 3d80cb72-342b-4aaa-b92e-4e4abb24a933
                          resource_type: volume
                    items:
                        properties:
                            resource_id:
                                type: string
                                description: The identifier of a resource.
                                example: 3d80cb72-342b-4aaa-b92e-4e4abb24a933
                            resource_type:
                                type: string
                                description: The type of the resource.
                                enum:
                                    - droplet
                                    - image
                                    - volume
                                    - volume_snapshot
                                example: volume
        timescaledb:
            type: object
            description: TimescaleDB extension configuration values
            properties:
                max_background_workers:
                    type: integer
                    description: The number of background workers for timescaledb operations.  Set to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time.
                    example: 8
                    minimum: 1
                    maximum: 4096
        trigger_info:
            type: object
            properties:
                created_at:
                    type: string
                    description: UTC time string.
                    example: "2022-11-11T04:16:45Z"
                function:
                    type: string
                    description: Name of function(action) that exists in the given namespace.
                    example: hello
                is_enabled:
                    type: boolean
                    description: Indicates weather the trigger is paused or unpaused.
                    example: true
                name:
                    type: string
                    description: The trigger's unique name within the namespace.
                    example: my trigger
                namespace:
                    type: string
                    description: A unique string format of UUID with a prefix fn-.
                    example: fn-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                scheduled_details:
                    $ref: '#/components/schemas/scheduled_details'
                scheduled_runs:
                    type: object
                    properties:
                        last_run_at:
                            type: string
                            description: Indicates last run time. null value indicates trigger not run yet.
                            example: "2022-11-11T04:16:45Z"
                            nullable: true
                        next_run_at:
                            type: string
                            description: Indicates next run time. null value indicates trigger will not run.
                            example: "2022-11-11T04:16:45Z"
                            nullable: true
                type:
                    type: string
                    description: String which indicates the type of trigger source like SCHEDULED.
                    example: SCHEDULED
                updated_at:
                    type: string
                    description: UTC time string.
                    example: "2022-11-11T04:16:45Z"
        update_endpoint:
            type: object
            properties:
                certificate_id:
                    type: string
                    format: uuid
                    description: The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
                    example: 892071a0-bb95-49bc-8021-3afd67a210bf
                custom_domain:
                    type: string
                    format: hostname
                    description: The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.
                    example: static.example.com
                ttl:
                    type: integer
                    description: The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.
                    enum:
                        - 60
                        - 600
                        - 3600
                        - 86400
                        - 604800
                    default: 3600
                    example: 3600
        update_registry:
            type: object
            properties:
                cancel:
                    type: boolean
                    description: A boolean value indicating that the garbage collection should be cancelled.
                    example: true
        update_trigger:
            type: object
            properties:
                is_enabled:
                    type: boolean
                    description: Indicates weather the trigger is paused or unpaused.
                    example: true
                scheduled_details:
                    $ref: '#/components/schemas/scheduled_details'
        urn:
            type: string
            description: The uniform resource name (URN) for the resource in the format do:resource_type:resource_id.
            example: do:droplet:13457723
            pattern: ^do:(dbaas|domain|droplet|floatingip|loadbalancer|space|volume|kubernetes|vpc):.*
        user:
            type: object
            properties:
                kubernetes_cluster_user:
                    type: object
                    properties:
                        groups:
                            type: array
                            description: A list of in-cluster groups that the user belongs to.
                            example:
                                - k8saas:authenticated
                            items:
                                type: string
                        username:
                            type: string
                            format: email
                            description: The username for the cluster admin user.
                            example: sammy@digitalocean.com
        validate_registry:
            type: object
            required:
                - name
            properties:
                name:
                    type: string
                    description: A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters.
                    example: example
                    maxLength: 63
                    pattern: ^[a-z0-9-]{1,63}$
        version:
            type: string
            description: A string representing the version of the database engine in use for the cluster.
            example: "8"
        version-2:
            type: object
            properties:
                version:
                    $ref: '#/components/schemas/version'
        volume_action_droplet_id:
            type: integer
            description: The unique identifier for the Droplet the volume will be attached or detached from.
            example: 1.161219e+07
        volume_action_post_attach:
            allOf:
                - $ref: '#/components/schemas/volume_action_post_base'
                - type: object
                  required:
                    - droplet_id
                  properties:
                    droplet_id:
                        $ref: '#/components/schemas/volume_action_droplet_id'
                    tags:
                        $ref: '#/components/schemas/tags_array'
            type: object
        volume_action_post_base:
            type: object
            required:
                - type
            properties:
                region:
                    $ref: '#/components/schemas/region_slug'
                type:
                    type: string
                    description: The volume action to initiate.
                    enum:
                        - attach
                        - detach
                        - resize
                    example: attach
        volume_action_post_detach:
            allOf:
                - $ref: '#/components/schemas/volume_action_post_base'
                - type: object
                  required:
                    - droplet_id
                  properties:
                    droplet_id:
                        $ref: '#/components/schemas/volume_action_droplet_id'
            type: object
        volume_action_post_resize:
            allOf:
                - $ref: '#/components/schemas/volume_action_post_base'
                - type: object
                  required:
                    - size_gigabytes
                  properties:
                    size_gigabytes:
                        type: integer
                        description: The new size of the block storage volume in GiB (1024^3).
                        maximum: 16384
            type: object
        volume_base:
            type: object
            properties:
                created_at:
                    type: string
                    description: A time value given in ISO8601 combined date and time format that represents when the block storage volume was created.
                    example: "2020-03-02T17:00:49Z"
                    readOnly: true
                description:
                    type: string
                    description: An optional free-form text field to describe a block storage volume.
                    example: Block store for examples
                droplet_ids:
                    type: array
                    description: An array containing the IDs of the Droplets the volume is attached to. Note that at this time, a volume can only be attached to a single Droplet.
                    example: []
                    nullable: true
                    readOnly: true
                    items:
                        type: integer
                id:
                    type: string
                    description: The unique identifier for the block storage volume.
                    example: 506f78a4-e098-11e5-ad9f-000f53306ae1
                    readOnly: true
                name:
                    type: string
                    description: A human-readable name for the block storage volume. Must be lowercase and be composed only of numbers, letters and "-", up to a limit of 64 characters. The name must begin with a letter.
                    example: example
                size_gigabytes:
                    type: integer
                    description: The size of the block storage volume in GiB (1024^3). This field does not apply  when creating a volume from a snapshot.
                    example: 10
                tags:
                    $ref: '#/components/schemas/tags_array'
        volume_full:
            allOf:
                - $ref: '#/components/schemas/volume_base'
                - type: object
                  properties:
                    filesystem_label:
                        type: string
                        description: The label currently applied to the filesystem.
                        example: example
                    filesystem_type:
                        type: string
                        description: The type of filesystem currently in-use on the volume.
                        example: ext4
                    region:
                        allOf:
                            - description: The region that the block storage volume is located in. When setting a region, the value should be the slug identifier for the region. When you query a block storage volume, the entire region object will be returned.
                            - $ref: '#/components/schemas/region'
                        example:
                            available: true
                            features:
                                - private_networking
                                - backups
                                - ipv6
                                - metadata
                            name: New York 1
                            sizes:
                                - s-1vcpu-1gb
                                - s-1vcpu-2gb
                                - s-1vcpu-3gb
                                - s-2vcpu-2gb
                                - s-3vcpu-1gb
                                - s-2vcpu-4gb
                                - s-4vcpu-8gb
                                - s-6vcpu-16gb
                                - s-8vcpu-32gb
                                - s-12vcpu-48gb
                                - s-16vcpu-64gb
                                - s-20vcpu-96gb
                                - s-24vcpu-128gb
                                - s-32vcpu-192gb
                            slug: nyc1
                        readOnly: true
            type: object
        volume_snapshot_id:
            type: object
            properties:
                snapshot_id:
                    type: string
                    description: The unique identifier for the volume snapshot from which to create the volume.
                    example: b0798135-fb76-11eb-946a-0a58ac146f33
        volume_write_file_system_label:
            type: string
            description: The label applied to the filesystem. Labels for ext4 type filesystems may contain 16 characters while labels for xfs type filesystems are limited to 12 characters. May only be used in conjunction with filesystem_type.
            example: example
        volume_write_file_system_type:
            type: object
            properties:
                filesystem_type:
                    type: string
                    description: The name of the filesystem type to be used on the volume. When provided, the volume will automatically be formatted to the specified filesystem type. Currently, the available options are `ext4` and `xfs`. Pre-formatted volumes are automatically mounted when attached to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS Droplets created on or after April 26, 2018. Attaching pre-formatted volumes to other Droplets is not recommended.
                    example: ext4
        volumeAction:
            allOf:
                - type: object
                  properties:
                    resource_id:
                        type: integer
                        nullable: true
                    type:
                        type: string
                        description: This is the type of action that the object represents. For example, this could be "attach_volume" to represent the state of a volume attach action.
                        example: attach_volume
                - $ref: '#/components/schemas/action'
            type: object
        volumes_ext4:
            allOf:
                - $ref: '#/components/schemas/volume_base'
                - $ref: '#/components/schemas/volume_snapshot_id'
                - $ref: '#/components/schemas/volume_write_file_system_type'
                - type: object
                  required:
                    - name
                    - size_gigabytes
                    - region
                  properties:
                    filesystem_label:
                        allOf:
                            - $ref: '#/components/schemas/volume_write_file_system_label'
                            - maxLength: 16
                    region:
                        $ref: '#/components/schemas/region_slug'
            type: object
        volumes_xfs:
            allOf:
                - $ref: '#/components/schemas/volume_base'
                - $ref: '#/components/schemas/volume_snapshot_id'
                - $ref: '#/components/schemas/volume_write_file_system_type'
                - type: object
                  required:
                    - name
                    - size_gigabytes
                    - region
                  properties:
                    filesystem_label:
                        allOf:
                            - $ref: '#/components/schemas/volume_write_file_system_label'
                            - maxLength: 12
                    region:
                        $ref: '#/components/schemas/region_slug'
            type: object
        vpc:
            allOf:
                - $ref: '#/components/schemas/vpc_updatable'
                - $ref: '#/components/schemas/vpc_create'
                - $ref: '#/components/schemas/vpc_default'
                - $ref: '#/components/schemas/vpc_base'
            type: object
        vpc_base:
            type: object
            properties:
                created_at:
                    type: string
                    format: date-time
                    description: A time value given in ISO8601 combined date and time format.
                    example: "2020-03-13T19:20:47.442049222Z"
                    readOnly: true
                id:
                    type: string
                    format: uuid
                    description: A unique ID that can be used to identify and reference the VPC.
                    example: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
                    readOnly: true
                urn:
                    $ref: '#/components/schemas/urn'
        vpc_create:
            type: object
            properties:
                ip_range:
                    type: string
                    description: The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/28` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account.
                    example: 10.10.10.0/24
                region:
                    type: string
                    description: The slug identifier for the region where the VPC will be created.
                    example: nyc1
        vpc_default:
            type: object
            properties:
                default:
                    type: boolean
                    description: A boolean value indicating whether or not the VPC is the default network for the region. All applicable resources are placed into the default VPC network unless otherwise specified during their creation. The `default` field cannot be unset from `true`. If you want to set a new default VPC network, update the `default` field of another VPC network in the same region. The previous network's `default` field will be set to `false` when a new default VPC has been defined.
                    example: true
        vpc_member:
            type: object
            properties:
                created_at:
                    type: string
                    description: A time value given in ISO8601 combined date and time format that represents when the resource was created.
                    example: "2020-03-13T19:30:48Z"
                name:
                    type: string
                    description: The name of the resource.
                    example: nyc1-load-balancer-01
                urn:
                    $ref: '#/components/schemas/urn'
        vpc_updatable:
            type: object
            properties:
                description:
                    type: string
                    description: A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters.
                    example: VPC for production environment
                    maxLength: 255
                name:
                    type: string
                    description: The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods.
                    example: env.prod-vpc
                    pattern: ^[a-zA-Z0-9\-\.]+$
    parameters:
        accept:
            name: Accept
            in: header
            description: The content-type that should be used by the response. By default, the response will be `application/json`. `application/yaml` is also supported.
            schema:
                type: string
                enum:
                    - application/json
                    - application/yaml
            example: application/json
        action_id:
            name: action_id
            in: path
            description: A unique numeric ID that can be used to identify and reference an action.
            required: true
            schema:
                type: integer
                minimum: 1
            example: 3.6804636e+07
        alert_id:
            name: alert_id
            in: path
            description: The alert ID
            required: true
            schema:
                type: string
            example: 5a624ab5-dd58-4b39-b7dd-8b7c36e8a91d
        alert_uuid:
            name: alert_uuid
            in: path
            description: A unique identifier for an alert policy.
            required: true
            schema:
                type: string
            example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
        app_id:
            name: app_id
            in: path
            description: The app ID
            required: true
            schema:
                type: string
            example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
        app_name:
            name: name
            in: query
            description: The name of the app to retrieve.
            schema:
                type: string
            example: myApp
        cdn_endpoint_id:
            name: cdn_id
            in: path
            description: A unique identifier for a CDN endpoint.
            required: true
            schema:
                type: string
                format: uuid
                minimum: 1
            example: 19f06b6a-3ace-4315-b086-499a0e521b76
        certificate_id:
            name: certificate_id
            in: path
            description: A unique identifier for a certificate.
            required: true
            schema:
                type: string
                format: uuid
                minimum: 1
            example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
        check_id:
            name: check_id
            in: path
            description: A unique identifier for a check.
            required: true
            schema:
                type: string
                format: uuid
            example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
        clusterlint_run_id:
            name: run_id
            in: query
            description: Specifies the clusterlint run whose results will be retrieved.
            schema:
                type: string
                format: uuid
            example: 50c2f44c-011d-493e-aee5-361a4a0d1844
        component:
            name: component_name
            in: path
            description: An optional component name. If set, logs will be limited to this component only.
            required: true
            schema:
                type: string
            example: component
        content-type:
            name: Content-Type
            in: header
            description: The content-type used for the request. By default, the requests are assumed to use `application/json`. `application/yaml` is also supported.
            schema:
                type: string
                enum:
                    - application/json
                    - application/yaml
            example: application/json
        database_cluster_uuid:
            name: database_cluster_uuid
            in: path
            description: A unique identifier for a database cluster.
            required: true
            schema:
                type: string
                format: uuid
            example: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
        database_name:
            name: database_name
            in: path
            description: The name of the database.
            required: true
            schema:
                type: string
            example: alpha
        deployment_id:
            name: deployment_id
            in: path
            description: The deployment ID
            required: true
            schema:
                type: string
            example: 3aa4d20e-5527-4c00-b496-601fbd22520a
        domain_name:
            name: domain_name
            in: path
            description: The name of the domain itself.
            required: true
            schema:
                type: string
            example: example.com
        domain_name_query:
            name: name
            in: query
            description: A fully qualified record name. For example, to only include records matching sub.example.com, send a GET request to `/v2/domains/$DOMAIN_NAME/records?name=sub.example.com`.
            schema:
                type: string
            example: sub.example.com
        domain_record_id:
            name: domain_record_id
            in: path
            description: The unique identifier of the domain record.
            required: true
            schema:
                type: integer
            example: 3.352896e+06
        domain_type_query:
            name: type
            in: query
            description: 'The type of the DNS record. For example: A, CNAME, TXT, ...'
            schema:
                type: string
                enum:
                    - A
                    - AAAA
                    - CAA
                    - CNAME
                    - MX
                    - NS
                    - SOA
                    - SRV
                    - TXT
            example: A
        droplet_delete_tag_name:
            name: tag_name
            in: query
            description: Specifies Droplets to be deleted by tag.
            required: true
            schema:
                type: string
            example: env:test
        droplet_id:
            name: droplet_id
            in: path
            description: A unique identifier for a Droplet instance.
            required: true
            schema:
                type: integer
                minimum: 1
            example: 3.164444e+06
        droplet_name:
            name: name
            in: query
            description: Used to filter list response by Droplet name returning only exact matches. It is case-insensitive and can not be combined with `tag_name`.
            schema:
                type: string
            example: web-01
        droplet_tag_name:
            name: tag_name
            in: query
            description: Used to filter Droplets by a specific tag. Can not be combined with `name`.
            schema:
                type: string
            example: env:prod
        firewall_id:
            name: firewall_id
            in: path
            description: A unique ID that can be used to identify and reference a firewall.
            required: true
            schema:
                type: string
                format: uuid
            example: bb4b2611-3d72-467b-8602-280330ecd65c
        floating_ip:
            name: floating_ip
            in: path
            description: A floating IP address.
            required: true
            schema:
                type: string
                format: ipv4
                minimum: 1
            example: 45.55.96.47
        garbage_collection_uuid:
            name: garbage_collection_uuid
            in: path
            description: The UUID of a garbage collection run.
            required: true
            schema:
                type: string
            example: eff0feee-49c7-4e8f-ba5c-a320c109c8a8
        id_app:
            name: id
            in: path
            description: The ID of the app
            required: true
            schema:
                type: string
            example: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
        image_id:
            name: image_id
            in: path
            description: A unique number that can be used to identify and reference a specific image.
            required: true
            schema:
                type: integer
            example: 6.2137902e+07
        invoice_uuid:
            name: invoice_uuid
            in: path
            description: UUID of the invoice
            required: true
            schema:
                type: string
            example: 22737513-0ea7-4206-8ceb-98a575af7681
        kubernetes_cluster_id:
            name: cluster_id
            in: path
            description: A unique ID that can be used to reference a Kubernetes cluster.
            required: true
            schema:
                type: string
                format: uuid
                minimum: 1
            example: bd5f5959-5e1e-4205-a714-a914373942af
        kubernetes_expiry_seconds:
            name: expiry_seconds
            in: query
            description: The duration in seconds that the returned Kubernetes credentials will be valid. If not set or 0, the credentials will have a 7 day expiry.
            schema:
                type: integer
                default: 0
                minimum: 0
            example: 300
        kubernetes_node_id:
            name: node_id
            in: path
            description: A unique ID that can be used to reference a node in a Kubernetes node pool.
            required: true
            schema:
                type: string
                format: uuid
                minimum: 1
            example: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
        kubernetes_node_pool_id:
            name: node_pool_id
            in: path
            description: A unique ID that can be used to reference a Kubernetes node pool.
            required: true
            schema:
                type: string
                format: uuid
                minimum: 1
            example: cdda885e-7663-40c8-bc74-3a036c66545d
        kubernetes_node_replace:
            name: replace
            in: query
            description: Specifies whether or not to replace a node after it has been deleted. Setting it to `1` causes the node to be replaced by a new one after deletion. Omitting the query parameter or setting its value to `0` deletes without replacement.
            schema:
                type: integer
                default: 0
                minimum: 0
                maximum: 1
            example: 1
        kubernetes_node_skip_drain:
            name: skip_drain
            in: query
            description: Specifies whether or not to drain workloads from a node before it is deleted. Setting it to `1` causes node draining to be skipped. Omitting the query parameter or setting its value to `0` carries out draining prior to deletion.
            schema:
                type: integer
                default: 0
                minimum: 0
                maximum: 1
            example: 1
        live_updates:
            name: follow
            in: query
            description: Whether the logs should follow live updates.
            schema:
                type: boolean
            example: true
        load_balancer_id:
            name: lb_id
            in: path
            description: A unique identifier for a load balancer.
            required: true
            schema:
                type: string
                minimum: 1
            example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
        log_type:
            name: type
            in: query
            description: |-
                The type of logs to retrieve
                - BUILD: Build-time logs
                - DEPLOY: Deploy-time logs
                - RUN: Live run-time logs
            required: true
            schema:
                type: string
                enum:
                    - UNSPECIFIED
                    - BUILD
                    - DEPLOY
                    - RUN
                default: UNSPECIFIED
            example: BUILD
        metric_timestamp_end:
            name: end
            in: query
            description: Timestamp to end metric window.
            required: true
            schema:
                type: string
            example: "1620705417"
        metric_timestamp_start:
            name: start
            in: query
            description: Timestamp to start metric window.
            required: true
            schema:
                type: string
            example: "1620683817"
        migration_id:
            name: migration_id
            in: path
            description: A unique identifier assigned to the online migration.
            required: true
            schema:
                type: string
            example: 77b28fc8-19ff-11eb-8c9c-c68e24557488
        namespace_id:
            name: namespace_id
            in: path
            description: The ID of the namespace to be managed.
            required: true
            schema:
                type: string
            example: fn-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        network_direction:
            name: direction
            in: query
            description: The traffic direction.
            required: true
            schema:
                type: string
                enum:
                    - inbound
                    - outbound
            example: inbound
        network_interface:
            name: interface
            in: query
            description: The network interface.
            required: true
            schema:
                type: string
                enum:
                    - private
                    - public
            example: private
        oneClicks_type:
            name: type
            in: query
            description: Restrict results to a certain type of 1-Click.
            schema:
                type: string
                enum:
                    - droplet
                    - kubernetes
            example: kubernetes
        page:
            name: page
            in: query
            description: Which 'page' of paginated results to return.
            schema:
                type: integer
                default: 1
                minimum: 1
            example: 1
        parameters_alert_id:
            name: alert_id
            in: path
            description: A unique identifier for an alert.
            required: true
            schema:
                type: string
                format: uuid
            example: 17f0f0ae-b7e5-4ef6-86e3-aa569db58284
        parameters_droplet_id:
            name: host_id
            in: query
            description: The droplet ID.
            required: true
            schema:
                type: string
            example: "17209102"
        per_page:
            name: per_page
            in: query
            description: Number of items returned per page
            schema:
                type: integer
                default: 20
                minimum: 1
                maximum: 200
            example: 2
        pool_name:
            name: pool_name
            in: path
            description: The name used to identify the connection pool.
            required: true
            schema:
                type: string
            example: backend-pool
        private:
            name: private
            in: query
            description: Used to filter only user images.
            schema:
                type: boolean
            example: true
        project_id:
            name: project_id
            in: path
            description: A unique identifier for a project.
            required: true
            schema:
                type: string
                format: uuid
                minimum: 1
            example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
        region:
            name: region
            in: query
            description: The slug identifier for the region where the resource is available.
            schema:
                $ref: '#/components/schemas/region_slug'
            example: nyc3
        registry_expiry_seconds:
            name: expiry_seconds
            in: query
            description: The duration in seconds that the returned registry credentials will be valid. If not set or 0, the credentials will not expire.
            schema:
                type: integer
                default: 0
                minimum: 0
            example: 3600
        registry_manifest_digest:
            name: manifest_digest
            in: path
            description: The manifest digest of a container registry repository tag.
            required: true
            schema:
                type: string
            example: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
        registry_name:
            name: registry_name
            in: path
            description: The name of a container registry.
            required: true
            schema:
                type: string
            example: example
        registry_read_write:
            name: read_write
            in: query
            description: By default, the registry credentials allow for read-only access. Set this query parameter to `true` to obtain read-write credentials.
            schema:
                type: boolean
                default: false
            example: true
        registry_repository_name:
            name: repository_name
            in: path
            description: The name of a container registry repository. If the name contains `/` characters, they must be URL-encoded, e.g. `%2F`.
            required: true
            schema:
                type: string
            example: repo-1
        registry_repository_tag:
            name: repository_tag
            in: path
            description: The name of a container registry repository tag.
            required: true
            schema:
                type: string
            example: 06a447a
        replica_name:
            name: replica_name
            in: path
            description: The name of the database replica.
            required: true
            schema:
                type: string
            example: read-nyc3-01
        reserved_ip:
            name: reserved_ip
            in: path
            description: A reserved IP address.
            required: true
            schema:
                type: string
                format: ipv4
                minimum: 1
            example: 45.55.96.47
        slug_size:
            name: slug
            in: path
            description: The slug of the instance size
            required: true
            schema:
                type: string
            example: basic-xxs
        slug_tier:
            name: slug
            in: path
            description: The slug of the tier
            required: true
            schema:
                type: string
            example: basic
        snapshot_id:
            name: snapshot_id
            in: path
            description: Either the ID of an existing snapshot. This will be an integer for a Droplet snapshot or a string for a volume snapshot.
            required: true
            schema:
                anyOf:
                    - type: integer
                      description: The ID of a Droplet snapshot.
                      example: 6.372321e+06
                    - type: string
                      description: The ID of a volume snapshot.
                      example: fbe805e8-866b-11e6-96bf-000f53315a41
            example: 6.372321e+06
        snapshot_resource_type:
            name: resource_type
            in: query
            description: Used to filter snapshots by a resource type.
            schema:
                type: string
                enum:
                    - droplet
                    - volume
            example: droplet
        ssh_key_identifier:
            name: ssh_key_identifier
            in: path
            description: Either the ID or the fingerprint of an existing SSH key.
            required: true
            schema:
                anyOf:
                    - $ref: '#/components/schemas/ssh_key_id'
                    - $ref: '#/components/schemas/ssh_key_fingerprint'
            example: 512189
        tag:
            name: tag_name
            in: query
            description: Used to filter images by a specific tag.
            schema:
                type: string
            example: base-image
        tag_id:
            name: tag_id
            in: path
            description: The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag.
            required: true
            schema:
                type: string
                maxLength: 255
                pattern: ^[a-zA-Z0-9_\-\:]+$
            example: awesome
        tag_name:
            name: tag_name
            in: query
            description: Limits the results to database clusters with a specific tag.
            schema:
                type: string
            example: production
        time_wait:
            name: pod_connection_timeout
            in: query
            description: 'An optional time duration to wait if the underlying component instance is not immediately available. Default: `3m`.'
            schema:
                type: string
            example: 3m
        token_pagination_page:
            name: page
            in: query
            description: Which 'page' of paginated results to return. Ignored when 'page_token' is provided.
            schema:
                type: integer
                default: 1
                minimum: 1
            example: 1
        token_pagination_page_token:
            name: page_token
            in: query
            description: Token to retrieve of the next or previous set of results more quickly than using 'page'.
            schema:
                type: string
            example: eyJUb2tlbiI6IkNnZGpiMjlz
        trigger_name:
            name: trigger_name
            in: path
            description: The name of the trigger to be managed.
            required: true
            schema:
                type: string
            example: my trigger
        type:
            name: type
            in: query
            description: Filters results based on image type which can be either `application` or `distribution`.
            schema:
                type: string
                enum:
                    - application
                    - distribution
            example: distribution
        username:
            name: username
            in: path
            description: The name of the database user.
            required: true
            schema:
                type: string
            example: app-01
        volume_id:
            name: volume_id
            in: path
            description: The ID of the block storage volume.
            required: true
            schema:
                type: string
                format: uuid
            example: 7724db7c-e098-11e5-b522-000f53304e51
        volume_name:
            name: name
            in: query
            description: The block storage volume's name.
            schema:
                type: string
            example: example
        vpc_id:
            name: vpc_id
            in: path
            description: A unique identifier for a VPC.
            required: true
            schema:
                type: string
                format: uuid
                minimum: 1
            example: 4de7ac8b-495b-4884-9a69-1050c6793cd6
        vpc_resource_type:
            name: resource_type
            in: query
            description: Used to filter VPC members by a resource type.
            schema:
                type: string
            example: droplet
        with_projects:
            name: with_projects
            in: query
            description: Whether the project_id of listed apps should be fetched and included.
            schema:
                type: boolean
            example: true
        x_dangerous:
            name: X-Dangerous
            in: header
            description: Acknowledge this action will destroy the Droplet and all associated resources and _can not_ be reversed.
            required: true
            schema:
                type: boolean
            example: true
    headers:
        content-disposition:
            description: Indicates if the content is expected to be displayed *inline* in the  browser, that is, as a Web page or as part of a Web page, or as an  *attachment*, that is downloaded and saved locally.
            schema:
                type: string
            example: attachment; filename="DigitalOcean Invoice 2020 Jul (6173678-418071234).csv"
        content-type:
            description: 'The type of data that is returned from a request. '
            schema:
                type: string
            example: application/json; charset=utf-8
        ratelimit-limit:
            description: The default limit on number of requests that can be made per hour and per minute. Current rate limits are 5000 requests per hour and 250 requests per minute.
            schema:
                type: integer
            example: 5000
        ratelimit-remaining:
            description: The number of requests in your hourly quota that remain before you hit your request limit. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire.
            schema:
                type: integer
            example: 4816
        ratelimit-reset:
            description: The time when the oldest request will expire. The value is given in Unix epoch time. See https://developers.digitalocean.com/documentation/v2/#rate-limit for information about how requests expire.
            schema:
                type: integer
            example: 1.444931833e+09
        x-request-id:
            description: Optionally, some endpoints may include a request ID that should be provided  when reporting bugs or opening support tickets to help identify the issue.
            schema:
                type: string
                format: uuid
            example: 515850a0-a812-50bf-aa3c-d0d21d287e40
    responses:
        accepted:
            description: The does not indicate the success or failure of any operation, just that the request has been accepted for processing.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
        account:
            description: A JSON object keyed on account with an excerpt of the current user account data.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            account:
                                $ref: '#/components/schemas/account'
        action:
            description: The result will be a JSON object with an action key.  This will be set to an action object containing the standard action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            action:
                                $ref: '#/components/schemas/action'
        actions:
            description: The results will be returned as a JSON object with an actions key.  This will be set to an array filled with action objects containing the standard action attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                actions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/action'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
        alert_policy_response:
            description: An alert policy.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            policy:
                                $ref: '#/components/schemas/alert_policy'
        all_alerts:
            description: The response will be a JSON object with a key called `alerts`. This will be set to an array of objects, each of which will contain the standard attributes associated with an uptime alert.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                alerts:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/alert'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
        all_cdn_endpoints:
            description: The result will be a JSON object with an `endpoints` key. This will be set to an array of endpoint objects, each of which will contain the standard CDN endpoint attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                endpoints:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/cdn_endpoint'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            endpoints:
                                - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                                  created_at: "2018-07-19T15:04:16Z"
                                  custom_domain: static.example.com
                                  endpoint: static-images.nyc3.cdn.digitaloceanspaces.com
                                  id: 19f06b6a-3ace-4315-b086-499a0e521b76
                                  origin: static-images.nyc3.digitaloceanspaces.com
                                  ttl: 3600
                            links: {}
                            meta:
                                total: 1
        all_certificates:
            description: The result will be a JSON object with a `certificates` key. This will be set to an array of certificate objects, each of which will contain the standard certificate attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                certificates:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/certificate'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        AllCertificates:
                            $ref: '#/components/examples/certificates_all'
        all_checks:
            description: The response will be a JSON object with a key called `checks`. This will be set to an array of objects, each of which will contain the standard attributes associated with an uptime check
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                checks:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/check'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
        all_clusters:
            description: |
                The response will be a JSON object with a key called `kubernetes_clusters`.
                This will be set to an array of objects, each of which will contain the
                standard Kubernetes cluster attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                kubernetes_clusters:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/cluster'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        All Kubernetes Clusters:
                            $ref: '#/components/examples/kubernetes_clusters_all'
        all_domain_records_response:
            description: The response will be a JSON object with a key called `domain_records`. The value of this will be an array of domain record objects, each of which contains the standard domain record attributes. For attributes that are not used by a specific record type, a value of `null` will be returned. For instance, all records other than SRV will have `null` for the `weight` and `port` attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                domain_records:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/domain_record'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        All Domain Records:
                            $ref: '#/components/examples/domain_records_all'
        all_domains_response:
            description: The response will be a JSON object with a key called `domains`. The value of this will be an array of Domain objects, each of which contain the standard domain attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              required:
                                - domains
                              properties:
                                domains:
                                    type: array
                                    description: Array of volumes.
                                    items:
                                        $ref: '#/components/schemas/domain'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            domains:
                                - name: example.com
                                  ttl: 1800
                                  zone_file: |
                                    $ORIGIN example.com.
                                    $TTL 1800
                                    example.com. IN SOA ns1.digitalocean.com. hostmaster.example.com. 1415982609 10800 3600 604800 1800
                                    example.com. 1800 IN NS ns1.digitalocean.com.
                                    example.com. 1800 IN NS ns2.digitalocean.com.
                                    example.com. 1800 IN NS ns3.digitalocean.com.
                                    example.com. 1800 IN A 1.2.3.4
                            links: {}
                            meta:
                                total: 1
        all_droplet_actions:
            description: A JSON object with an `actions` key.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                actions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/action'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    example:
                        actions:
                            - completed_at: "2020-07-20T19:37:45Z"
                              id: 9.82864273e+08
                              region:
                                available: true
                                features:
                                    - private_networking
                                    - backups
                                    - ipv6
                                    - metadata
                                    - install_agent
                                    - image_transfer
                                name: New York 3
                                sizes:
                                    - s-1vcpu-1gb
                                    - s-1vcpu-2gb
                                    - s-3vcpu-1gb
                                    - s-2vcpu-2gb
                                    - s-1vcpu-3gb
                                    - s-2vcpu-4gb
                                    - s-4vcpu-8gb
                                    - m-1vcpu-8gb
                                    - s-6vcpu-16gb
                                    - s-8vcpu-32gb
                                    - s-12vcpu-48gb
                                slug: nyc3
                              region_slug: nyc3
                              resource_id: 3.164444e+06
                              resource_type: droplet
                              started_at: "2020-07-20T19:37:30Z"
                              status: completed
                              type: create
                        links: {}
                        meta:
                            total: 1
        all_droplet_backups:
            description: A JSON object with an `backups` key.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                backups:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/droplet_snapshot'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    example:
                        backups:
                            - created_at: "2020-07-29T01:44:35Z"
                              distribution: Ubuntu
                              id: 6.7539192e+07
                              min_disk_size: 50
                              name: web-01- 2020-07-29
                              public: false
                              regions:
                                - nyc3
                              size_gigabytes: 2.34
                              slug: null
                              type: backup
                        links: {}
                        meta:
                            total: 1
        all_droplet_snapshots:
            description: A JSON object with an `snapshots` key.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                snapshots:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/droplet_snapshot'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    example:
                        links: {}
                        meta:
                            total: 1
                        snapshots:
                            - created_at: "2020-07-28T16:47:44Z"
                              id: 6.372321e+06
                              min_disk_size: 25
                              name: web-01-1595954862243
                              regions:
                                - nyc3
                                - sfo3
                              size_gigabytes: 2.34
                              type: snapshot
        all_droplets:
            description: A JSON object with a key of `droplets`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                droplets:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/droplet'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        All Droplets:
                            $ref: '#/components/examples/droplets_all'
                        Droplets Filtered By Tag:
                            $ref: '#/components/examples/droplets_tagged'
        all_firewalls:
            description: A JSON object that has a key called `firewalls`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                firewalls:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/firewall'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    example:
                        firewalls:
                            - created_at: "2020-05-23T21:24:00Z"
                              droplet_ids:
                                - 89989
                                - 33322
                              id: bb4b2611-3d72-467b-8602-280330ecd65c
                              inbound_rules:
                                - ports: 8000-9000
                                  protocol: udp
                                  sources:
                                    addresses:
                                        - 1.2.3.4
                                        - 18.0.0.0/8
                                    droplet_ids:
                                        - 8.282823e+06
                                        - 3.930392e+06
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                    tags:
                                        - base-image
                                        - dev
                              name: firewall
                              outbound_rules:
                                - destinations:
                                    addresses:
                                        - 1.2.3.4
                                        - 18.0.0.0/8
                                    droplet_ids:
                                        - 3.827493e+06
                                        - 213213
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                    tags:
                                        - base-image
                                        - prod
                                  ports: 7000-9000
                                  protocol: tcp
                              pending_changes:
                                - droplet_id: 8.043964e+06
                                  removing: true
                                  status: waiting
                              status: succeeded
                              tags:
                                - base-image
                                - prod
                        links:
                            pages: {}
                        meta:
                            total: 1
        all_images:
            description: The response will be a JSON object with a key called `images`.  This will be set to an array of image objects, each of which will contain the standard image attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              required:
                                - images
                              properties:
                                images:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/image'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        All:
                            $ref: '#/components/examples/images_all'
                        Application:
                            $ref: '#/components/examples/images_application'
                        Custom:
                            $ref: '#/components/examples/images_custom'
                        Distribution:
                            $ref: '#/components/examples/images_distribution'
                        Snapshots:
                            $ref: '#/components/examples/images_snapshots'
                        Tagged:
                            $ref: '#/components/examples/images_tagged'
        all_kernels:
            description: A JSON object that has a key called `kernels`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                kernels:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/kernel'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    example:
                        kernels:
                            - id: 7515
                              name: DigitalOcean GrubLoader v0.2 (20160714)
                              version: 2016.07.13-DigitalOcean_loader_Ubuntu
                        links:
                            pages:
                                last: https://api.digitalocean.com/v2/droplets/3164444/kernels?page=171&per_page=1
                                next: https://api.digitalocean.com/v2/droplets/3164444/kernels?page=2&per_page=1
                        meta:
                            total: 171
        all_load_balancers:
            description: A JSON object with a key of `load_balancers`. This will be set to an array of objects, each of which will contain the standard load balancer attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                load_balancers:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/load_balancer'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        All Load Balancers:
                            $ref: '#/components/examples/load_balancers_all'
        all_node_pools:
            description: |
                The response will be a JSON object with a key called `node_pools`. This will
                be set to an array of objects, each of which will contain the standard node
                pool attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            node_pools:
                                type: array
                                items:
                                    $ref: '#/components/schemas/kubernetes_node_pool'
                    example:
                        node_pools:
                            - auto_scale: false
                              count: 3
                              id: cdda885e-7663-40c8-bc74-3a036c66545d
                              labels: null
                              max_nodes: 0
                              min_nodes: 0
                              name: frontend-pool
                              nodes:
                                - created_at: "2018-11-15T16:00:11Z"
                                  droplet_id: "205545370"
                                  id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                                  name: adoring-newton-3niq
                                  status:
                                    state: running
                                  updated_at: "2018-11-15T16:00:11Z"
                                - created_at: "2018-11-15T16:00:11Z"
                                  droplet_id: "205545371"
                                  id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                                  name: adoring-newton-3nim
                                  status:
                                    state: running
                                  updated_at: "2018-11-15T16:00:11Z"
                                - created_at: "2018-11-15T16:00:11Z"
                                  droplet_id: "205545372"
                                  id: e46e8d07-f58f-4ff1-9737-97246364400e
                                  name: adoring-newton-3ni7
                                  status:
                                    state: running
                                  updated_at: "2018-11-15T16:00:11Z"
                              size: s-1vcpu-2gb
                              tags:
                                - production
                                - web-team
                                - k8s
                                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                                - k8s:worker
                            - auto_scale: true
                              count: 2
                              id: f49f4379-7e7f-4af5-aeb6-0354bd840778
                              labels:
                                priority: high
                                service: backend
                              max_nodes: 5
                              min_nodes: 2
                              name: backend-pool
                              nodes:
                                - created_at: "2018-11-15T16:00:11Z"
                                  droplet_id: "205545373"
                                  id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                                  name: affectionate-nightingale-3nif
                                  status:
                                    state: running
                                  updated_at: "2018-11-15T16:00:11Z"
                                - created_at: "2018-11-15T16:00:11Z"
                                  droplet_id: "205545374"
                                  id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                                  name: affectionate-nightingale-3niy
                                  status:
                                    state: running
                                  updated_at: "2018-11-15T16:00:11Z"
                              size: g-4vcpu-16gb
                              tags:
                                - production
                                - web-team
                                - k8s
                                - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                                - k8s:worker
        all_options:
            description: |
                The response will be a JSON object with a key called `options` which contains
                `regions`, `versions`, and `sizes` objects listing the available options and
                the matching slugs for use when creating a new cluster.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/kubernetes_options'
                    examples:
                        All Kubernetes Options:
                            $ref: '#/components/examples/kubernetes_options'
        all_regions:
            description: A JSON object with a key set to `regions`. The value is an array of `region` objects, each of which contain the standard `region` attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              required:
                                - regions
                              properties:
                                regions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/region'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links:
                                pages:
                                    last: https://api.digitalocean.com/v2/regions?page=13&per_page=1
                                    next: https://api.digitalocean.com/v2/regions?page=2&per_page=1
                            meta:
                                total: 13
                            regions:
                                - available: true
                                  features:
                                    - private_networking
                                    - backups
                                    - ipv6
                                    - metadata
                                    - install_agent
                                    - storage
                                    - image_transfer
                                  name: New York 3
                                  sizes:
                                    - s-1vcpu-1gb
                                    - s-1vcpu-2gb
                                    - s-1vcpu-3gb
                                    - s-2vcpu-2gb
                                    - s-3vcpu-1gb
                                    - s-2vcpu-4gb
                                    - s-4vcpu-8gb
                                    - s-6vcpu-16gb
                                    - s-8vcpu-32gb
                                    - s-12vcpu-48gb
                                    - s-16vcpu-64gb
                                    - s-20vcpu-96gb
                                    - s-24vcpu-128gb
                                    - s-32vcpu-192g
                                  slug: nyc3
        all_repositories:
            description: The response body will be a JSON object with a key of `repositories`. This will be set to an array containing objects each representing a repository.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                repositories:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/repository'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            meta:
                                total: 1
                            repositories:
                                - latest_tag:
                                    compressed_size_bytes: 2.803255e+06
                                    manifest_digest: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                                    registry_name: example
                                    repository: repo-1
                                    size_bytes: 5.861888e+06
                                    tag: latest
                                    updated_at: "2020-04-09T23:54:25Z"
                                  name: repo-1
                                  registry_name: example
                                  tag_count: 1
        all_repositories_v2:
            description: The response body will be a JSON object with a key of `repositories`. This will be set to an array containing objects each representing a repository.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                repositories:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/repository_v2'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links:
                                pages:
                                    last: https://api.digitalocean.com/v2/registry/example/repositoriesV2?page=5&per_page=1
                                    next: https://api.digitalocean.com/v2/registry/example/repositoriesV2?page=2&page_token=JPZmZzZXQiOjB9&per_page=1
                            meta:
                                total: 5
                            repositories:
                                - latest_manifest:
                                    blobs:
                                        - compressed_size_bytes: 1471
                                          digest: sha256:14119a10abf4669e8cdbdff324a9f9605d99697215a0d21c360fe8dfa8471bab
                                        - compressed_size_byte: 2.814446e+06
                                          digest: sha256:a0d0a0d46f8b52473982a3c466318f479767577551a53ffc9074c9fa7035982e
                                        - compressed_size_bytes: 528
                                          digest: sha256:69704ef328d05a9f806b6b8502915e6a0a4faa4d72018dc42343f511490daf8a
                                    compressed_size_bytes: 1.972332e+06
                                    digest: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                                    registry_name: example
                                    repository: repo-1
                                    size_bytes: 2.816445e+06
                                    tags:
                                        - v1
                                        - v2
                                    updated_at: "2021-04-09T23:54:25Z"
                                  manifest_count: 82
                                  name: repo-1
                                  registry_name: example
                                  tag_count: 57
        all_sizes:
            description: A JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              required:
                                - sizes
                              properties:
                                sizes:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/size'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links:
                                pages:
                                    last: https://api.digitalocean.com/v2/sizes?page=64&per_page=1
                                    next: https://api.digitalocean.com/v2/sizes?page=2&per_page=1
                            meta:
                                total: 64
                            sizes:
                                - available: true
                                  description: Basic
                                  disk: 25
                                  memory: 1024
                                  price_hourly: 0.00743999984115362
                                  price_monthly: 5
                                  regions:
                                    - ams2
                                    - ams3
                                    - blr1
                                    - fra1
                                    - lon1
                                    - nyc1
                                    - nyc2
                                    - nyc3
                                    - sfo1
                                    - sfo2
                                    - sfo3
                                    - sgp1
                                    - tor1
                                  slug: s-1vcpu-1gb
                                  transfer: 1
                                  vcpus: 1
        all_tiers:
            description: A JSON object with a `tiers` key. This will be a list of all app tiers
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_list_tiers_response'
                    examples:
                        tiers:
                            $ref: '#/components/examples/tiers'
        all_vpcs:
            description: The response will be a JSON object with a key called `vpcs`. This will be set to an array of objects, each of which will contain the standard attributes associated with a VPC
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                vpcs:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/vpc'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links: {}
                            meta:
                                total: 3
                            vpcs:
                                - created_at: "2020-03-13T19:20:47.442049222Z"
                                  default: false
                                  description: VPC for production environment
                                  id: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
                                  ip_range: 10.10.10.0/24
                                  name: env.prod-vpc
                                  region: nyc1
                                  urn: do:vpc:5a4981aa-9653-4bd1-bef5-d6bff52042e4
                                - created_at: "2020-03-13T19:29:20Z"
                                  default: true
                                  description: ""
                                  id: e0fe0f4d-596a-465e-a902-571ce57b79fa
                                  ip_range: 10.102.0.0/20
                                  name: default-nyc1
                                  region: nyc1
                                  urn: do:vpc:e0fe0f4d-596a-465e-a902-571ce57b79fa
                                - created_at: "2019-11-19T22:19:35Z"
                                  default: true
                                  description: ""
                                  id: d455e75d-4858-4eec-8c95-da2f0a5f93a7
                                  ip_range: 10.100.0.0/20
                                  name: default-nyc3
                                  region: nyc3
                                  urn: do:vpc:d455e75d-4858-4eec-8c95-da2f0a5f93a7
        apps_get:
            description: A JSON with key `app`
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/app_response'
                    examples:
                        app:
                            $ref: '#/components/examples/app'
        apps_validate_rollback:
            description: A JSON object with the validation results.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                allOf:
                                    - description: Contains the failing condition that is causing the rollback to be invalid.
                                    - $ref: '#/components/schemas/app_rollback_validation_condition'
                            valid:
                                type: boolean
                                description: Indicates whether the app can be rolled back to the specified deployment.
                            warnings:
                                type: array
                                description: Contains a list of warnings that may cause the rollback to run under unideal circumstances.
                                items:
                                    $ref: '#/components/schemas/app_rollback_validation_condition'
                    examples:
                        Invalid rollback:
                            value:
                                error:
                                    code: incompatible_result
                                    message: deployment result "failed" is unsuitable for rollback
                                valid: false
                        Valid rollback:
                            value:
                                valid: true
                        Valid rollback with warnings:
                            value:
                                valid: true
                                warnings:
                                    - code: image_source_missing_digest
                                      components:
                                        - docker-worker
                                      message: one or more components are missing an image digest and are not guaranteed rollback to the old version
        assign_alert_destinations:
            description: A JSON object with an `alert` key. This is an object of type `alert`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_alert_response'
                    examples:
                        apps:
                            $ref: '#/components/examples/alert'
        assigned_resources_list:
            description: The response will be a JSON object with a key called `resources`. The value of this will be an object with the standard resource attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            resources:
                                - assigned_at: "2018-09-28T19:26:37Z"
                                  links:
                                    self: https://api.digitalocean.com/v2/droplets/13457723
                                  status: ok
                                  urn: do:droplet:13457723
                                - assigned_at: "2019-03-31T16:24:14Z"
                                  links:
                                    self: https://api.digitalocean.com/v2/domains/example.com
                                  status: ok
                                  urn: do:domain:example.com
                        properties:
                            resources:
                                type: array
                                items:
                                    $ref: '#/components/schemas/resource'
        associated_kubernetes_resources_list:
            description: The response will be a JSON object containing `load_balancers`, `volumes`, and `volume_snapshots` keys. Each will be set to an array of objects containing the standard attributes for associated resources.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/associated_kubernetes_resources'
        associated_resources_list:
            description: A JSON object containing `snapshots`, `volumes`, and `volume_snapshots` keys.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                floating_ips:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/associated_resource'
                                reserved_ips:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/associated_resource'
                                snapshots:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/associated_resource'
                                volume_snapshots:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/associated_resource'
                                volumes:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/associated_resource'
                    example:
                        floating_ips:
                            - cost: "4.00"
                              id: "6186916"
                              name: 45.55.96.47
                        reserved_ips:
                            - cost: "4.00"
                              id: "6186916"
                              name: 45.55.96.47
                        snapshots:
                            - cost: "0.05"
                              id: "61486916"
                              name: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
                        volume_snapshots:
                            - cost: "0.04"
                              id: edb0478d-7436-11ea-86e6-0a58ac144b91
                              name: volume-nyc1-01-1585758983629
                        volumes:
                            - cost: "10.00"
                              id: ba49449a-7435-11ea-b89e-0a58ac14480f
                              name: volume-nyc1-01
        associated_resources_status:
            description: A JSON object containing containing the status of a request to destroy a Droplet and its associated resources.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/associated_resource_status'
                    example:
                        completed_at: "2020-04-01T18:11:49Z"
                        droplet:
                            destroyed_at: "2020-04-01T18:11:49Z"
                            id: "187000742"
                            name: ubuntu-s-1vcpu-1gb-nyc1-01
                        failures: 0
                        resources:
                            floating_ips:
                                - destroyed_at: "2020-04-01T18:11:44Z"
                                  id: "6186916"
                                  name: 45.55.96.47
                            reserved_ips:
                                - destroyed_at: "2020-04-01T18:11:44Z"
                                  id: "6186916"
                                  name: 45.55.96.47
                            snapshots:
                                - destroyed_at: "2020-04-01T18:11:44Z"
                                  id: "61486916"
                                  name: ubuntu-s-1vcpu-1gb-nyc1-01-1585758823330
                            volume_snapshots:
                                - destroyed_at: "2020-04-01T18:11:44Z"
                                  id: edb0478d-7436-11ea-86e6-0a58ac144b91
                                  name: volume-nyc1-01-1585758983629
                            volumes: []
        available_upgrades:
            description: |
                The response will be a JSON object with a key called
                `available_upgrade_versions`. The value of this will be an array of objects,
                representing the upgrade versions currently available for this cluster.

                If the cluster is up-to-date (i.e. there are no upgrades currently available)
                `available_upgrade_versions` will be `null`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            available_upgrade_versions:
                                type: array
                                nullable: true
                                items:
                                    $ref: '#/components/schemas/kubernetes_version'
        bad_request:
            description: Bad Request
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: bad_request
                        message: error parsing request body
                        request_id: 4851a473-1621-42ea-b2f9-5071c0ea8414
        balance:
            description: The response will be a JSON object that contains the following attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/balance'
                    example:
                        account_balance: "12.23"
                        generated_at: "2019-07-09T15:01:12Z"
                        month_to_date_balance: "23.44"
                        month_to_date_usage: "11.21"
        billing_history:
            description: The response will be a JSON object that contains the following attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                billing_history:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/billing_history'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta_optional_total'
                        example:
                            billing_history:
                                - amount: "12.34"
                                  date: "2018-06-01T08:44:38Z"
                                  description: Invoice for May 2018
                                  invoice_id: "123"
                                  invoice_uuid: example-uuid
                                  type: Invoice
                                - amount: "-12.34"
                                  date: "2018-06-02T08:44:38Z"
                                  description: Payment (MC 2018)
                                  type: Payment
                            links:
                                pages:
                                    last: https://api.digitalocean.com/v2/customers/my/billing_history?page=3&per_page=2
                                    next: https://api.digitalocean.com/v2/customers/my/billing_history?page=2&per_page=2
                            meta:
                                total: 5
        ca:
            description: A JSON object with a key of `ca`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - ca
                        properties:
                            ca:
                                $ref: '#/components/schemas/ca'
                    example:
                        ca:
                            certificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXFtZ0F3SUJBZ0lVRUZZWTdBWFZQS0Raam9jb1lpMk00Y0dvcU0wd0RRWUpLb1pJaHZjTkFRRU0KQlFBd09qRTRNRFlHQTFVRUF3d3ZOek0zT1RaaE1XRXRaamhrTUMwME9HSmpMV0V4Wm1NdFpqbGhNVFZsWXprdwpORGhsSUZCeWIycGxZM1FnUTBFd0hoY05NakF3TnpFM01UVTFNREEyV2hjTk16QXdOekUxTVRVMU1EQTJXakE2Ck1UZ3dOZ1lEVlFRRERDODNNemM1Tm1FeFlTMW1PR1F3TFRRNFltTXRZVEZtWXkxbU9XRXhOV1ZqT1RBME9HVWcKVUhKdmFtVmpkQ0JEUVRDQ0FhSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnR1BBRENDQVlvQ2dnR0JBTVdScXhycwpMZnpNdHZyUmxKVEw4MldYMVBLZkhKbitvYjNYcmVBY3FZd1dBUUp2Q3IycmhxSXZieVZzMGlaU0NzOHI4c3RGClljQ0R1bkxJNmUwTy9laERZYTBIT2RrMkFFRzE1ckVOVmNha2NSczcyQWlHVHNrdkNXS2VkUjFTUWswVWt0WCsKQUg4S1ExS3F5bzNtZ2Y2cVV1WUpzc3JNTXFselk3YTN1RVpEb2ZqTjN5Q3MvM21pTVJKcVcyNm1JV0IrUUlEbAo5YzdLRVF5MTZvdCtjeHVnd0lLMm9oZHMzaFY1bjBKMFVBM0I3QWRBdXY5aUl5L3JHaHlTNm5CNTdaWm9JZnAyCnFybXdOY0UrVjlIdXhQSGtRVjFOQjUwOFFudWZ4Z0E5VCtqU2VrdGVUbWFORkxqNjFXL3BtcndrTytOaWFXUTIKaGgzVXBKOEozY1BoNkErbHRnUmpSV2NEb2lsYVNwRVVpU09WemNNYVFvalZKYVJlNk9NbnZYc29NaSs3ZzdneApWcittQ0lUcGcvck9DaXpBWWQ2UFAxLzdYTjk1ZXNmU2tBQnM5c3hJakpjTUFqbDBYTEFzRmtGZVdyeHNIajlVCmJnaDNWYXdtcnpUeXhZT0RQcXV1cS9JcGlwc0RRT3Fpb2ZsUStkWEJJL3NUT0NNbVp6K0pNcG5HYXdJREFRQUIKb3o4d1BUQWRCZ05WSFE0RUZnUVVSekdDRlE3WEtUdHRDN3JzNS8ydFlQcExTZGN3RHdZRFZSMFRCQWd3QmdFQgovd0lCQURBTEJnTlZIUThFQkFNQ0FRWXdEUVlKS29aSWh2Y05BUUVNQlFBRGdnR0JBSWFKQ0dSVVNxUExtcmcvCmk3MW10b0NHUDdzeG1BVXVCek1oOEdrU25uaVdaZnZGMTRwSUtqTlkwbzVkWmpHKzZqK1VjalZtK0RIdGE1RjYKOWJPeEk5S0NFeEI1blBjRXpMWjNZYitNOTcrellxbm9zUm85S21DVFJBb2JrNTZ0WU1FS1h1aVJja2tkMm1yUQo4cGw2N2xxdThjM1V4c0dHZEZVT01wMkk3ZTNpdUdWVm5UR0ZWM3JQZUdaQ0J3WGVyUUQyY0F4UjkzS3BnWVZ2ClhUUzk5dnpSbm1HOHhhUm9EVy9FbEdXZ2xWd0Q5a1JrbXhUUkdoYTdDWVZCcjFQVWY2dVVFVjhmVFIxc1hFZnIKLytMR1JoSVVsSUhWT3l2Yzk3YnZYQURPbWF1MWZDVE5lWGtRdTNyZnZFSlBmaFlLeVIwT0V3eWVvdlhRNzl0LwpTV2ZGTjBreU1Pc1UrNVNIdHJKSEh1eWNWcU0yQlVVK083VjM1UnNwOU9MZGRZMFFVbTZldFpEVEhhSUhYYzRRCnl1Rm1OL1NhSFZtNE0wL3BTVlJQdVd6TmpxMnZyRllvSDRtbGhIZk95TUNJMjc2elE2aWhGNkdDSHlkOUJqajcKUm1UWGEyNHM3NWhmSi9YTDV2bnJSdEtpVHJlVHF6V21EOVhnUmNMQ0gyS1hJaVRtSWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        cancel_deployment:
            description: A JSON the `deployment` that was just cancelled.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_deployment_response'
                    examples:
                        deployment:
                            $ref: '#/components/examples/deployment'
        cluster_create:
            description: |
                The response will be a JSON object with a key called `kubernetes_cluster`. The
                value of this will be an object containing the standard attributes of a
                Kubernetes cluster.

                The IP address and cluster API server endpoint will not be available until the
                cluster has finished provisioning. The initial value of the cluster's
                `status.state` attribute will be `provisioning`. When the cluster is ready,
                this will transition to `running`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            kubernetes_cluster:
                                $ref: '#/components/schemas/cluster'
                    examples:
                        Kubernetes Cluster Response:
                            $ref: '#/components/examples/kubernetes_clusters_create_basic_response'
                        Kubernetes Cluster with Multiple Node Pools Response:
                            $ref: '#/components/examples/kubernetes_clusters_multi_pool_response'
        cluster_user:
            description: |
                The response will be a JSON object with a key called `kubernetes_cluster_user`
                containing the username and in-cluster groups that it belongs to.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/user'
        clusterlint_results:
            description: |
                The response is a JSON object which contains the diagnostics on Kubernetes
                objects in the cluster. Each diagnostic will contain some metadata information
                about the object and feedback for users to act upon.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/clusterlint_results'
        clusterlint_run:
            description: The response is a JSON object with a key called `run_id` that you can later use to fetch the run results.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            run_id:
                                type: string
                                description: ID of the clusterlint run that can be used later to fetch the diagnostics.
                                example: 50c2f44c-011d-493e-aee5-361a4a0d1844
        conflict:
            description: Conflict
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: conflict
                        message: The request could not be completed due to a conflict.
        connection_pool:
            description: A JSON object with a key of `pool`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - pool
                        properties:
                            pool:
                                $ref: '#/components/schemas/connection_pool'
                    example:
                        pool:
                            connection:
                                database: backend-pool
                                host: backend-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25061
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25061/backend-pool?sslmode=require
                                user: doadmin
                            db: defaultdb
                            mode: transaction
                            name: backend-pool
                            size: 10
                            user: doadmin
        connection_pools:
            description: A JSON object with a key of `pools`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/connection_pools'
                    example:
                        pools:
                            - connection:
                                database: foo
                                host: backend-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25061
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25061/foo?sslmode=require
                                user: doadmin
                              db: defaultdb
                              mode: session
                              name: reporting-pool
                              size: 10
                              user: doadmin
                            - connection:
                                database: backend-pool
                                host: backend-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25061
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25061/backend-pool?sslmode=require
                                user: doadmin
                              db: defaultdb
                              mode: transaction
                              name: backend-pool
                              size: 10
                              user: doadmin
        create_domain_response:
            description: The response will be a JSON object with a key called `domain`. The value of this will be an object that contains the standard attributes associated with a domain.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            domain:
                                name: example.com
                                ttl: 1800
                                zone_file: null
                        properties:
                            domain:
                                $ref: '#/components/schemas/domain'
        create_firewall_response:
            description: The response will be a JSON object with a firewall key. This will be set to an object containing the standard firewall attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            firewall:
                                $ref: '#/components/schemas/firewall'
                    example:
                        firewall:
                            created_at: "2017-05-23T21:24:00Z"
                            droplet_ids:
                                - 8.043964e+06
                            id: bb4b2611-3d72-467b-8602-280330ecd65c
                            inbound_rules:
                                - ports: "80"
                                  protocol: tcp
                                  sources:
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                - ports: "22"
                                  protocol: tcp
                                  sources:
                                    addresses:
                                        - 18.0.0.0/8
                                    tags:
                                        - gateway
                            name: firewall
                            outbound_rules:
                                - destinations:
                                    addresses:
                                        - 0.0.0.0/0
                                        - ::/0
                                  ports: "80"
                                  protocol: tcp
                            pending_changes:
                                - droplet_id: 8.043964e+06
                                  removing: false
                                  status: waiting
                            status: waiting
                            tags: []
        created_domain_record:
            description: The response body will be a JSON object with a key called `domain_record`. The value of this will be an object representing the new record. Attributes that are not applicable for the record type will be set to `null`. An `id` attribute is generated for each record as part of the object.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            domain_record:
                                data: 162.10.66.0
                                flags: null
                                id: 2.8448433e+07
                                name: www
                                port: null
                                priority: null
                                tag: null
                                ttl: 1800
                                type: A
                                weight: null
                        properties:
                            domain_record:
                                $ref: '#/components/schemas/domain_record'
        credentials:
            description: A JSON object containing credentials for a cluster.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/credentials'
        database:
            description: A JSON object with a key of `db`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - db
                        properties:
                            db:
                                $ref: '#/components/schemas/database'
                    example:
                        db:
                            name: alpha
        database_backups:
            description: A JSON object with a key of `database_backups`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - backups
                        properties:
                            backups:
                                type: array
                                items:
                                    $ref: '#/components/schemas/backup'
                    example:
                        backups:
                            - created_at: "2019-01-11T18:42:27Z"
                              size_gigabytes: 0.03357696
                            - created_at: "2019-01-12T18:42:29Z"
                              size_gigabytes: 0.03364864
        database_cluster:
            description: A JSON object with a key of `database`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - database
                        properties:
                            database:
                                $ref: '#/components/schemas/database_cluster'
                    example:
                        database:
                            connection:
                                database: ""
                                host: backend-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                                user: doadmin
                            created_at: "2019-01-11T18:37:36Z"
                            db_names:
                                - defaultdb
                            engine: pg
                            id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                            maintenance_window:
                                day: saturday
                                description:
                                    - Update TimescaleDB to version 1.2.1
                                    - Upgrade to PostgreSQL 11.2 and 10.7 bugfix releases
                                hour: "08:45:12"
                                pending: true
                            name: backend
                            num_nodes: 2
                            private_connection:
                                database: ""
                                host: private-backend-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@private-backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                                user: doadmin
                            private_network_uuid: d455e75d-4858-4eec-8c95-da2f0a5f93a7
                            region: nyc3
                            semantic_version: "14.5"
                            size: db-s-2vcpu-4gb
                            status: creating
                            tags:
                                - production
                            users:
                                - name: doadmin
                                  password: wv78n3zpz42xezdk
                                  role: primary
                            version: "14"
                            version_end_of_availability: "2023-05-09T00:00:00Z"
                            version_end_of_life: "2023-11-09T00:00:00Z"
        database_clusters:
            description: A JSON object with a key of `databases`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            databases:
                                type: array
                                items:
                                    $ref: '#/components/schemas/database_cluster'
                    example:
                        databases:
                            - connection:
                                database: ""
                                host: backend-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                                user: doadmin
                              created_at: "2019-01-11T18:37:36Z"
                              db_names:
                                - defaultdb
                              engine: pg
                              id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                              maintenance_window:
                                day: saturday
                                description:
                                    - Update TimescaleDB to version 1.2.1
                                    - Upgrade to PostgreSQL 11.2 and 10.7 bugfix releases
                                hour: "08:45:12"
                                pending: true
                              name: backend
                              num_nodes: 1
                              private_connection:
                                database: ""
                                host: private-backend-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@private-backend-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                                user: doadmin
                              private_network_uuid: d455e75d-4858-4eec-8c95-da2f0a5f93a7
                              region: nyc3
                              size: db-s-2vcpu-4gb
                              status: online
                              tags:
                                - production
                              users:
                                - name: doadmin
                                  password: wv78n3zpz42xezdk
                                  role: primary
                              version: "10"
                              version_end_of_availability: "2023-05-09T00:00:00Z"
                              version_end_of_life: "2023-11-09T00:00:00Z"
        database_config:
            description: A JSON object with a key of `config`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/database_config'
                    example:
                        config:
                            sql_mode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES
                            sql_require_primary_key: true
        database_replica:
            description: A JSON object with a key of `replica`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            replica:
                                $ref: '#/components/schemas/database_replica'
                    example:
                        replica:
                            connection:
                                database: defaultdb
                                host: read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: ""
                                user: doadmin
                            created_at: "2019-01-11T18:37:36Z"
                            name: read-nyc3-01
                            private_connection:
                                database: ""
                                host: private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                                user: doadmin
                            region: nyc3
                            status: online
        database_replicas:
            description: A JSON object with a key of `replicas`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            replicas:
                                type: array
                                items:
                                    $ref: '#/components/schemas/database_replica'
                    example:
                        replicas:
                            - connection:
                                database: defaultdb
                                host: read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: ""
                                user: doadmin
                              created_at: "2019-01-11T18:37:36Z"
                              name: read-nyc3-01
                              private_connection:
                                database: ""
                                host: private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com
                                password: wv78n3zpz42xezdk
                                port: 25060
                                ssl: true
                                uri: postgres://doadmin:wv78n3zpz42xezdk@private-read-nyc3-01-do-user-19081923-0.db.ondigitalocean.com:25060/defaultdb?sslmode=require
                                user: doadmin
                              region: nyc3
                              status: online
        databases:
            description: A JSON object with a key of `databases`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            dbs:
                                type: array
                                items:
                                    $ref: '#/components/schemas/database'
                    example:
                        dbs:
                            - name: alpha
                            - name: defaultdb
        default_project:
            description: The response will be a JSON object with a key called `project`. The value of this will be an object with the standard project attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            project:
                                created_at: "2017-10-19T21:44:20Z"
                                description: Default project
                                environment: Development
                                id: addb4547-6bab-419a-8542-76263a033cf6
                                is_default: true
                                name: Default
                                owner_id: 258992
                                owner_uuid: 99525febec065ca37b2ffe4f852fd2b2581895e7
                                purpose: Just trying out DigitalOcean
                                updated_at: "2019-11-05T18:50:03Z"
                        properties:
                            project:
                                $ref: '#/components/schemas/project'
        delete_app:
            description: the ID of the app deleted.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_delete_app_response'
                    example:
                        id: b7d64052-3706-4cb7-b21a-c5a2f44e63b3
        docker_credentials:
            description: A Docker `config.json` file for the container registry.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/docker_credentials'
        domain_record:
            description: The response will be a JSON object with a key called `domain_record`. The value of this will be a domain record object which contains the standard domain record attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            domain_record:
                                data: 162.10.66.0
                                flags: null
                                id: 3.352896e+06
                                name: blog
                                port: null
                                priority: null
                                tag: null
                                ttl: 1800
                                type: A
                                weight: null
                        properties:
                            domain_record:
                                $ref: '#/components/schemas/domain_record'
        droplet_action:
            description: The response will be a JSON object with a key called `action`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            action:
                                $ref: '#/components/schemas/action'
        droplet_actions_response:
            description: The response will be a JSON object with a key called `actions`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            actions:
                                type: array
                                items:
                                    $ref: '#/components/schemas/action'
        droplet_bandwidth_metric_response:
            description: The response will be a JSON object with a key called `data` and `status`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/metrics'
                    examples:
                        Inbound Private Bandwidth:
                            $ref: '#/components/examples/inbound_private_droplet_bandwidth'
                        Inbound Public Bandwidth:
                            $ref: '#/components/examples/inbound_public_droplet_bandwidth'
                        Outbound Private Bandwidth:
                            $ref: '#/components/examples/outbound_private_droplet_bandwidth'
                        Outbound Public Bandwidth:
                            $ref: '#/components/examples/outbound_public_droplet_bandwidth'
        droplet_cpu_metric_response:
            description: The response will be a JSON object with a key called `data` and `status`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/metrics'
                    examples:
                        CPU:
                            $ref: '#/components/examples/droplet_cpu'
        droplet_create:
            description: Accepted
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        oneOf:
                            - title: Single Droplet Response
                              required:
                                - droplet
                                - links
                              properties:
                                droplet:
                                    $ref: '#/components/schemas/droplet'
                                links:
                                    type: object
                                    properties:
                                        actions:
                                            type: array
                                            items:
                                                $ref: '#/components/schemas/action_link'
                            - title: Multiple Droplet Response
                              required:
                                - droplets
                                - links
                              properties:
                                droplets:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/droplet'
                                links:
                                    type: object
                                    properties:
                                        actions:
                                            type: array
                                            items:
                                                $ref: '#/components/schemas/action_link'
                    examples:
                        Multiple Droplet Create Response:
                            $ref: '#/components/examples/droplet_multi_create_response'
                        Single Droplet Create Response:
                            $ref: '#/components/examples/droplet_create_response'
        droplet_filesystem_metric_response:
            description: The response will be a JSON object with a key called `data` and `status`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/metrics'
                    examples:
                        Filesystem:
                            $ref: '#/components/examples/droplet_filesystem'
        droplet_neighbors_ids:
            description: A JSON object with an `neighbor_ids` key.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/neighbor_ids'
        eviction_policy_response:
            description: A JSON string with a key of `eviction_policy`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - eviction_policy
                        properties:
                            eviction_policy:
                                $ref: '#/components/schemas/eviction_policy_model'
        existing_alert:
            description: The response will be a JSON object with a key called `alert`. The value of this will be an object that contains the standard attributes associated with an uptime alert.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            alert:
                                $ref: '#/components/schemas/alert'
        existing_certificate:
            description: The response will be a JSON object with a `certificate` key. This will be set to an object containing the standard certificate attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            certificate:
                                $ref: '#/components/schemas/certificate'
                    examples:
                        Custom Certificate:
                            $ref: '#/components/examples/certificates_custom'
                        Let's Encrypt Certificate:
                            $ref: '#/components/examples/certificates_lets_encrypt'
        existing_check:
            description: The response will be a JSON object with a key called `check`. The value of this will be an object that contains the standard attributes associated with an uptime check.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            check:
                                $ref: '#/components/schemas/check'
        existing_check_state:
            description: The response will be a JSON object with a key called `state`. The value of this will be an object that contains the standard attributes associated with an uptime check's state.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            state:
                                $ref: '#/components/schemas/state'
        existing_cluster:
            description: |
                The response will be a JSON object with a key called `kubernetes_cluster`. The
                value of this will be an object containing the standard attributes of a
                Kubernetes cluster.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            kubernetes_cluster:
                                $ref: '#/components/schemas/cluster'
                    examples:
                        Single Kubernetes Cluster:
                            $ref: '#/components/examples/kubernetes_single'
        existing_deployments:
            description: A JSON object with a `deployments` key. This will be a list of all app deployments
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_deployments_response'
                    examples:
                        deployments:
                            $ref: '#/components/examples/deployments'
        existing_domain:
            description: The response will be a JSON object with a key called `domain`. The value of this will be an object that contains the standard attributes defined for a domain.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            domain:
                                name: example.com
                                ttl: 1800
                                zone_file: |
                                    $ORIGIN example.com.
                                    $TTL 1800
                                    example.com. IN SOA ns1.digitalocean.com. hostmaster.example.com. 1415982611 10800 3600 604800 1800
                                    example.com. 1800 IN NS ns1.digitalocean.com.
                                    example.com. 1800 IN NS ns2.digitalocean.com.
                                    example.com. 1800 IN NS ns3.digitalocean.com.
                                    example.com. 1800 IN A 1.2.3.4
                        properties:
                            domain:
                                $ref: '#/components/schemas/domain'
        existing_droplet:
            description: |
                The response will be a JSON object with a key called `droplet`. This will be
                set to a JSON object that contains the standard Droplet attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            droplet:
                                $ref: '#/components/schemas/droplet'
                    examples:
                        Single Droplet:
                            $ref: '#/components/examples/droplet_single'
        existing_endpoint:
            description: The response will be a JSON object with an `endpoint` key. This will be set to an object containing the standard CDN endpoint attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            endpoint:
                                $ref: '#/components/schemas/cdn_endpoint'
                    examples:
                        CDN Endpoint:
                            value:
                                endpoint:
                                    created_at: "2018-07-19T15:04:16Z"
                                    endpoint: static-images.nyc3.cdn.digitaloceanspaces.com
                                    id: 19f06b6a-3ace-4315-b086-499a0e521b76
                                    origin: static-images.nyc3.digitaloceanspaces.com
                                    ttl: 3600
                        CDN Endpoint With Custom Domain:
                            value:
                                endpoint:
                                    certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                                    created_at: "2018-07-19T15:04:16Z"
                                    custom_domain: static.example.com
                                    endpoint: static-images.nyc3.cdn.digitaloceanspaces.com
                                    id: 19f06b6a-3ace-4315-b086-499a0e521b76
                                    origin: static-images.nyc3.digitaloceanspaces.com
                                    ttl: 3600
        existing_image:
            description: The response will be a JSON object with a key called `image`.  The value of this will be an image object containing the standard image attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - image
                        properties:
                            image:
                                $ref: '#/components/schemas/image'
                    example:
                        image:
                            created_at: "2014-10-17T20:24:33Z"
                            description: ""
                            distribution: Ubuntu
                            error_message: ""
                            id: 6.91899e+06
                            min_disk_size: 20
                            name: 14.04 x64
                            public: true
                            regions:
                                - nyc1
                                - ams1
                                - sfo1
                                - nyc2
                                - ams2
                                - sgp1
                                - lon1
                                - nyc3
                                - ams3
                                - nyc3
                            size_gigabytes: 2.34
                            slug: ubuntu-16-04-x64
                            status: available
                            tags: []
        existing_load_balancer:
            description: |
                The response will be a JSON object with a key called `load_balancer`. The
                value of this will be an object that contains the standard attributes
                associated with a load balancer
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            load_balancer:
                                $ref: '#/components/schemas/load_balancer'
                    examples:
                        load_balancer_basic_response:
                            $ref: '#/components/examples/load_balancer_basic_response'
        existing_node_pool:
            description: |
                The response will be a JSON object with a key called `node_pool`. The value
                of this will be an object containing the standard attributes of a node pool.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            node_pool:
                                auto_scale: false
                                count: 3
                                id: cdda885e-7663-40c8-bc74-3a036c66545d
                                labels:
                                    priority: high
                                    service: backend
                                max_nodes: 0
                                min_nodes: 0
                                name: frontend-pool
                                nodes:
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: "205545370"
                                      id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                                      name: adoring-newton-3niq
                                      status:
                                        state: running
                                      updated_at: "2018-11-15T16:00:11Z"
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: "205545371"
                                      id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                                      name: adoring-newton-3nim
                                      status:
                                        state: running
                                      updated_at: "2018-11-15T16:00:11Z"
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: "205545372"
                                      id: e46e8d07-f58f-4ff1-9737-97246364400e
                                      name: adoring-newton-3ni7
                                      status:
                                        state: running
                                      updated_at: "2018-11-15T16:00:11Z"
                                size: s-1vcpu-2gb
                                tags:
                                    - production
                                    - web-team
                                    - k8s
                                    - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                                    - k8s:worker
                                taints:
                                    - effect: NoSchedule
                                      key: priority
                                      value: high
                        properties:
                            node_pool:
                                $ref: '#/components/schemas/kubernetes_node_pool'
        existing_project:
            description: The response will be a JSON object with a key called `project`. The value of this will be an object with the standard project attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            project:
                                $ref: '#/components/schemas/project'
        existing_vpc:
            description: The response will be a JSON object with a key called `vpc`. The value of this will be an object that contains the standard attributes associated with a VPC.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            vpc:
                                $ref: '#/components/schemas/vpc'
        firewall_rules:
            description: A JSON object with a key of `rules`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            rules:
                                type: array
                                items:
                                    $ref: '#/components/schemas/firewall_rule'
                    example:
                        rules:
                            - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                              created_at: "2019-11-14T20:30:28Z"
                              type: k8s
                              uuid: 79f26d28-ea8a-41f2-8ad8-8cfcdd020095
                              value: ff2a6c52-5a44-4b63-b99c-0e98e7a63d61
                            - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                              created_at: "2019-11-14T20:30:28Z"
                              type: ip_addr
                              uuid: adfe81a8-0fa1-4e2d-973f-06aa5af19b44
                              value: 192.168.1.1
                            - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                              created_at: "2019-11-14T20:30:28Z"
                              type: droplet
                              uuid: b9b42276-8295-4313-b40f-74173a7f46e6
                              value: "163973392"
                            - cluster_uuid: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                              created_at: "2019-11-14T20:30:28Z"
                              type: tag
                              uuid: 718d23e0-13d7-4129-8a00-47fb72ee0deb
                              value: backend
        floating_ip:
            description: The response will be a JSON object with a key called `floating_ip`. The value of this will be an object that contains the standard attributes associated with a floating IP.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            floating_ip:
                                $ref: '#/components/schemas/floating_ip'
                    examples:
                        floating_ip_assigned:
                            $ref: '#/components/examples/floating_ip_assigned'
                        floating_ip_reserved:
                            $ref: '#/components/examples/floating_ip_reserved'
        floating_ip_action:
            description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard floating IP action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            action:
                                completed_at: "2015-11-12T17:51:14Z"
                                id: 7.2531856e+07
                                project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                                region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                    name: New York 3
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192gb
                                    slug: nyc3
                                region_slug: nyc3
                                resource_id: 7.58604968e+08
                                resource_type: floating_ip
                                started_at: "2015-11-12T17:51:03Z"
                                status: completed
                                type: assign_ip
                        properties:
                            action:
                                allOf:
                                    - $ref: '#/components/schemas/action'
                                    - type: object
                                      properties:
                                        project_id:
                                            type: string
                                            format: uuid
                                            description: The UUID of the project to which the reserved IP currently belongs.
                                            example: 746c6152-2fa2-11ed-92d3-27aaa54e4988
        floating_ip_actions:
            description: The results will be returned as a JSON object with an `actions` key. This will be set to an array filled with action objects containing the standard floating IP action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                actions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/action'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            actions:
                                - completed_at: "2015-11-21T21:51:09Z"
                                  id: 7.2531856e+07
                                  region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                    name: New York 3
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192gb
                                    slug: nyc3
                                  region_slug: nyc3
                                  resource_id: 7.58604197e+08
                                  resource_type: floating_ip
                                  started_at: "2015-11-21T21:51:09Z"
                                  status: completed
                                  type: reserve_ip
                            links: {}
                            meta:
                                total: 1
        floating_ip_created:
            description: |-
                The response will be a JSON object with a key called `floating_ip`. The value of this will be an object that contains the standard attributes associated with a floating IP.
                When assigning a floating IP to a Droplet at same time as it created, the response's `links` object will contain links to both the Droplet and the assignment action. The latter can be used to check the status of the action.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            floating_ip:
                                $ref: '#/components/schemas/floating_ip'
                            links:
                                type: object
                                properties:
                                    actions:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/action_link'
                                    droplets:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/action_link'
                    examples:
                        floating_ip_assigning:
                            $ref: '#/components/examples/floating_ip_assigning'
                        floating_ip_reserving:
                            $ref: '#/components/examples/floating_ip_reserving'
        floating_ip_list:
            description: The response will be a JSON object with a key called `floating_ips`. This will be set to an array of floating IP objects, each of which will contain the standard floating IP attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                floating_ips:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/floating_ip'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            floating_ips:
                                - droplet: null
                                  ip: 45.55.96.47
                                  locked: false
                                  project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                                  region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                        - install_agent
                                        - storage
                                        - image_transfer
                                    name: New York 3
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192g
                                    slug: nyc3
                            links: {}
                            meta:
                                total: 1
        garbage_collection:
            description: The response will be a JSON object with a key of `garbage_collection`. This will be a json object with attributes representing the currently-active garbage collection.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            garbage_collection:
                                $ref: '#/components/schemas/garbage_collection'
        garbage_collections:
            description: The response will be a JSON object with a key of `garbage_collections`. This will be set to an array containing objects representing each past garbage collection. Each will contain the standard Garbage Collection attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            garbage_collections:
                                type: array
                                items:
                                    $ref: '#/components/schemas/garbage_collection'
                    example:
                        garbage_collections:
                            - blobs_deleted: 42
                              created_at: "2020-10-30T21:03:24.000Z"
                              freed_bytes: 667
                              registry_name: example
                              status: requested
                              updated_at: "2020-10-30T21:03:44.000Z"
                              uuid: eff0feee-49c7-4e8f-ba5c-a320c109c8a8
                        meta:
                            total: 1
        get_firewall_response:
            description: The response will be a JSON object with a firewall key. This will be set to an object containing the standard firewall attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            firewall:
                                $ref: '#/components/schemas/firewall'
                    example:
                        firewall:
                            created_at: "2017-05-23T21:24:00Z"
                            droplet_ids:
                                - 8.043964e+06
                            id: bb4b2611-3d72-467b-8602-280330ecd65c
                            inbound_rules:
                                - ports: "80"
                                  protocol: tcp
                                  sources:
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                - ports: "22"
                                  protocol: tcp
                                  sources:
                                    addresses:
                                        - 18.0.0.0/8
                                    tags:
                                        - gateway
                            name: firewall
                            outbound_rules:
                                - destinations:
                                    addresses:
                                        - 0.0.0.0/0
                                        - ::/0
                                  ports: "80"
                                  protocol: tcp
                            pending_changes: []
                            status: succeeded
                            tags: []
        get_image_action_response:
            description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard image action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/action'
                    example:
                        action:
                            completed_at: null
                            id: 3.6805527e+07
                            region:
                                available: true
                                features:
                                    - private_networking
                                    - backups
                                    - ipv6
                                    - metadata
                                    - server_id
                                    - install_agent
                                    - storage
                                    - image_transfer
                                name: New York 3
                                sizes:
                                    - s-1vcpu-3gb
                                    - m-1vcpu-8gb
                                    - s-3vcpu-1gb
                                    - s-1vcpu-2gb
                                    - s-2vcpu-2gb
                                    - s-2vcpu-4gb
                                    - s-4vcpu-8gb
                                    - s-6vcpu-16gb
                                    - s-8vcpu-32gb
                                    - s-12vcpu-48gb
                                    - s-16vcpu-64gb
                                    - s-20vcpu-96gb
                                    - s-1vcpu-1gb
                                    - c-1vcpu-2gb
                                    - s-24vcpu-128gb
                                slug: nyc3
                            region_slug: nyc3
                            resource_id: 7.938269e+06
                            resource_type: image
                            started_at: "2014-11-14T16:42:45Z"
                            status: in-progress
                            type: transfer
        get_image_actions_response:
            description: The results will be returned as a JSON object with an `actions` key. This will be set to an array filled with action objects containing the standard action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                actions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/action'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    example:
                        actions:
                            - completed_at: "2014-07-25T15:10:20Z"
                              id: 2.9410565e+07
                              region:
                                available: true
                                features:
                                    - private_networking
                                    - backups
                                    - ipv6
                                    - metadata
                                    - server_id
                                    - install_agent
                                    - storage
                                    - image_transfer
                                name: New York 2
                                sizes:
                                    - s-1vcpu-3gb
                                    - m-1vcpu-8gb
                                    - s-3vcpu-1gb
                                    - s-1vcpu-2gb
                                    - s-2vcpu-2gb
                                    - s-2vcpu-4gb
                                    - s-4vcpu-8gb
                                    - s-6vcpu-16gb
                                    - s-8vcpu-32gb
                                    - s-12vcpu-48gb
                                    - s-16vcpu-64gb
                                    - s-20vcpu-96gb
                                    - s-1vcpu-1gb
                                    - c-1vcpu-2gb
                                    - s-24vcpu-128gb
                                slug: nyc2
                              region_slug: nyc2
                              resource_id: 7.55562e+06
                              resource_type: image
                              started_at: "2014-07-25T15:04:21Z"
                              status: completed
                              type: transfer
                        links:
                            pages:
                                last: https://api.digitalocean.com/v2/images/7555620/actions?page=5&per_page=1
                                next: https://api.digitalocean.com/v2/images/7555620/actions?page=2&per_page=1
                        meta:
                            total: 5
        get_instance:
            description: A JSON with key `instance_size`
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_get_instance_size_response'
                    examples:
                        instance_size:
                            $ref: '#/components/examples/instance_size'
        get_metrics_bandwidth_usage:
            description: A JSON object with a `app_bandwidth_usage` key
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/app_metrics_bandwidth_usage'
                    examples:
                        app_bandwidth_usage:
                            $ref: '#/components/examples/app_bandwidth_usage'
        get_tier:
            description: A JSON with the key `tier`
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_get_tier_response'
                    examples:
                        tier:
                            $ref: '#/components/examples/tier'
        invoice:
            description: The response will be a JSON object with a key called `invoice_items`. This will be set to an array of invoice item objects.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                invoice_items:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/invoice_item'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            invoice_items:
                                - amount: "12.34"
                                  description: a56e086a317d8410c8b4cfd1f4dc9f82
                                  duration: "744"
                                  duration_unit: Hours
                                  end_time: "2020-02-01T00:00:00Z"
                                  group_description: my-doks-cluster
                                  product: Kubernetes Clusters
                                  resource_uuid: 711157cb-37c8-4817-b371-44fa3504a39c
                                  start_time: "2020-01-01T00:00:00Z"
                                - amount: "34.45"
                                  description: Spaces ($5/mo 250GB storage & 1TB bandwidth)
                                  duration: "744"
                                  duration_unit: Hours
                                  end_time: "2020-02-01T00:00:00Z"
                                  product: Spaces Subscription
                                  start_time: "2020-01-01T00:00:00Z"
                            links:
                                pages:
                                    last: https://api.digitalocean.com/v2/customers/my/invoices/22737513-0ea7-4206-8ceb-98a575af7681?page=3&per_page=2
                                    next: https://api.digitalocean.com/v2/customers/my/invoices/22737513-0ea7-4206-8ceb-98a575af7681?page=2&per_page=2
                            meta:
                                total: 6
        invoice_csv:
            description: The response will be a CSV file.
            headers:
                content-disposition:
                    $ref: '#/components/headers/content-disposition'
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                text/csv:
                    schema:
                        type: string
                    example: |
                        product,group_description,description,hours,start,end,USD,project_name,category
                        Floating IPs,,Unused Floating IP - 1.1.1.1,100,2020-07-01 00:00:00 +0000,2020-07-22 18:14:39 +0000,$3.11,,iaas
                        Taxes,,STATE SALES TAX (6.25%),,2020-07-01 00:00:00 +0000,2020-07-31 23:59:59 +0000,$0.16,,iaas
        invoice_pdf:
            description: The response will be a PDF file.
            headers:
                content-disposition:
                    $ref: '#/components/headers/content-disposition'
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/pdf:
                    schema:
                        type: string
                        format: binary
        invoice_summary:
            description: To retrieve a summary for an invoice, send a GET request to  `/v2/customers/my/invoices/$INVOICE_UUID/summary`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/invoice_summary'
                    example:
                        amount: "27.13"
                        billing_period: 2020-01
                        credits_and_adjustments:
                            amount: "6.78"
                            name: Credits & adjustments
                        invoice_uuid: 22737513-0ea7-4206-8ceb-98a575af7681
                        overages:
                            amount: "3.45"
                            name: Overages
                        product_charges:
                            amount: "12.34"
                            items:
                                - amount: "10.00"
                                  count: "1"
                                  name: Spaces Subscription
                                - amount: "2.34"
                                  count: "1"
                                  name: Database Clusters
                            name: Product usage charges
                        taxes:
                            amount: "4.56"
                            name: Taxes
                        user_billing_address:
                            address_line1: 101 Shark Row
                            city: Atlantis
                            country_iso2_code: US
                            created_at: "2019-09-03T16:34:46.000+00:00"
                            postal_code: "12345"
                            region: OC
                            updated_at: "2019-09-03T16:34:46.000+00:00"
                        user_company: DigitalOcean
                        user_email: sammy@digitalocean.com
                        user_name: Sammy Shark
        invoices:
            description: |-
                The response will be a JSON object contains that contains a list of invoices under the `invoices` key, and the invoice preview under the `invoice_preview` key.
                Each element contains the invoice summary attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                invoice_preview:
                                    $ref: '#/components/schemas/invoice_preview'
                                invoices:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/invoice_preview'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            invoice_preview:
                                amount: "34.56"
                                invoice_period: 2020-02
                                invoice_uuid: 1afe95e6-0958-4eb0-8d9a-9c5060d3ef03
                                updated_at: "2020-02-23T06:31:50Z"
                            invoices:
                                - amount: "12.34"
                                  invoice_period: 2019-12
                                  invoice_uuid: 22737513-0ea7-4206-8ceb-98a575af7681
                                - amount: "23.45"
                                  invoice_period: 2019-11
                                  invoice_uuid: fdabb512-6faf-443c-ba2e-665452332a9e
                            links:
                                pages:
                                    last: https://api.digitalocean.com/v2/customers/my/invoices?page=35&per_page=2
                                    next: https://api.digitalocean.com/v2/customers/my/invoices?page=2&per_page=2
                            meta:
                                total: 70
        kubeconfig:
            description: A kubeconfig file for the cluster in YAML format.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/yaml:
                    example: |
                        apiVersion: v1
                        clusters:
                        - cluster:
                            certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUxCUUF3TXpFVk1CTUdBMVVFQ2ftTVJHbG4KYVhSaGJFOWpaV0Z1TVJvd0dUSREERXhGck9ITmhZWE1nUTJ4MWMzUmxjaUJEUVRBZUZ3MHhPREV4TVRVeApOakF3TWpCYUZ3MHpPREV4TVRVeE5qQXdNakJhTURNeEZUQVRCZ05WQkFvVERFUnBaMmwwWVd4UFkyVmhiakVhCk1CZ0dBMVVFQXhNUmF6aHpZV0Z6SUVOc2RYTjBaWElnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDK2Z0L05Nd3pNaUxFZlFvTFU2bDgrY0hMbWttZFVKdjl4SmlhZUpIU0dZOGhPZFVEZQpGd1Zoc0pDTnVFWkpJUFh5Y0orcGpkU3pYc1lFSE03WVNKWk9xNkdaYThPMnZHUlJjN2ZQaUFJaFBRK0ZpUmYzCmRhMHNIUkZlM2hCTmU5ZE5SeTliQ2VCSTRSUlQrSEwzRFR3L2I5KytmRkdZQkRoVTEvTTZUWWRhUHR3WU0rdWgKb1pKcWJZVGJZZTFhb3R1ekdnYUpXaXRhdFdHdnNJYU8xYWthdkh0WEIOOHFxa2lPemdrSDdvd3RVY3JYM05iawozdmlVeFU4TW40MmlJaGFyeHNvTnlwdGhHOWZLMi9OdVdKTXJJS2R0Mzhwc0tkdDBFbng0MWg5K0dsMjUzMzhWCk1mdjBDVDF6SG1JanYwblIrakNkcFd0eFVLRyt0YjYzZFhNbkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUUKQXdJQmhqQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlNQMmJrOXJiUGJpQnZOd1Z1NQpUL0dwTFdvOTdEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFEVjFMSGZyc1JiYVdONHE5SnBFVDMxMlluRDZ6Cm5rM3BpU1ZSYVEvM09qWG8wdHJ6Z2N4KzlVTUQxeDRHODI1RnYxc0ROWUExZEhFc2dHUmNyRkVmdGZJQWUrUVYKTitOR3NMRnQrOGZrWHdnUlpoNEU4ZUJsSVlrdEprOWptMzFMT25vaDJYZno0aGs3VmZwYkdvVVlsbmVoak1JZApiL3ZMUk05Y2EwVTJlYTB5OTNveE5pdU9PcXdrZGFjU1orczJtb3JNdGZxc3VRSzRKZDA3SENIbUFIeWpXT2k4ClVOQVUyTnZnSnBKY2RiZ3VzN2I5S3ppR1ZERklFUk04cEo4U1Nob1ZvVFFJd3d5Y2xVTU9EUUJreFFHOHNVRk8KRDE3ZjRod1dNbW5qVHY2MEJBM0dxaTZRcjdsWVFSL3drSEtQcnZjMjhoNXB0NndPWEY1b1M4OUZkUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
                            server: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
                          name: do-nyc1-prod-cluster-01
                        contexts:
                        - context:
                            cluster: do-nyc1-prod-cluster-01
                            user: do-nyc1-prod-cluster-01-admin
                          name: do-nyc1-prod-cluster-01
                        current-context: do-nyc1-prod-cluster-01
                        kind: Config
                        preferences: {}
                        users:
                        - name: do-nyc1-prod-cluster-01-admin
                          user:
                            token: 403d085aaa80102277d8da97ffd2db2b6a4f129d0e2146098fdfb0cec624babc
        list_alert_policy_response:
            description: A list of alert policies.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - $ref: '#/components/schemas/list_alert_policy'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links:
                                first: https//api.digitalocean.com/v2/monitoring/alerts?page=1&per_page=10
                                last: https//api.digitalocean.com/v2/monitoring/alerts?page=5&per_page=10
                                next: https//api.digitalocean.com/v2/monitoring/alerts?page=4&per_page=10
                                prev: https//api.digitalocean.com/v2/monitoring/alerts?page=2&per_page=10
                            meta:
                                total: 50
                            policies:
                                - alerts:
                                    email:
                                        - bob@example.com
                                    slack:
                                        - channel: Production Alerts
                                          url: https://hooks.slack.com/services/T1234567/AAAAAAAA/ZZZZZZ"
                                  compare: GreaterThan
                                  description: CPU Alert
                                  enabled: true
                                  entities:
                                    - "192018292"
                                  tags:
                                    - production_droplets
                                  type: v1/insights/droplet/cpu
                                  uuid: 78b3da62-27e5-49ba-ac70-5db0b5935c64
                                  value: 80
                                  window: 5m
        list_alerts:
            description: A JSON object with a `alerts` key. This is list of object `alerts`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_list_alerts_response'
                    examples:
                        apps:
                            $ref: '#/components/examples/alerts'
        list_apps:
            description: A JSON object with a `apps` key. This is list of object `apps`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_response'
                    examples:
                        apps:
                            $ref: '#/components/examples/apps'
        list_deployment:
            description: A JSON of the requested deployment
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_deployment_response'
                    examples:
                        deployment:
                            $ref: '#/components/examples/deployment'
        list_firewalls_response:
            description: To list all of the firewalls available on your account, send a GET request to `/v2/firewalls`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                firewalls:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/firewall'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    example:
                        firewalls:
                            - created_at: "2017-05-23T21:23:59Z"
                              droplet_ids:
                                - 8.043964e+06
                              id: fb6045f1-cf1d-4ca3-bfac-18832663025b
                              inbound_rules:
                                - ports: "80"
                                  protocol: tcp
                                  sources:
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                - ports: "22"
                                  protocol: tcp
                                  sources:
                                    addresses:
                                        - 18.0.0.0/8
                                    tags:
                                        - gateway
                              name: firewall
                              outbound_rules:
                                - destinations:
                                    addresses:
                                        - 0.0.0.0/0
                                        - ::/0
                                  ports: "80"
                                  protocol: tcp
                              pending_changes: []
                              status: succeeded
                              tags: []
                        links: {}
                        meta:
                            total: 1
        list_instance:
            description: A JSON with key `instance_sizes`
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_list_instance_sizes_response'
                    examples:
                        instance_sizes:
                            $ref: '#/components/examples/instance_sizes'
        list_logs:
            description: A JSON object with urls that point to archived logs
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_get_logs_response'
                    examples:
                        logs:
                            $ref: '#/components/examples/logs'
        list_metrics_bandwidth_usage:
            description: A JSON object with a `app_bandwidth_usage` key
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/app_metrics_bandwidth_usage'
                    examples:
                        app_bandwidth_usage:
                            $ref: '#/components/examples/app_bandwidth_usage_multiple'
        list_namespaces:
            description: "An array of JSON objects with a key called `namespaces`.  Each object represents a namespace and contains\nthe properties associated with it. "
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                namespaces:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/namespace_info'
        list_regions:
            description: A JSON object with key `regions`
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_list_regions_response'
                    examples:
                        regions:
                            $ref: '#/components/examples/regions'
        list_triggers:
            description: "An array of JSON objects with a key called `namespaces`.  Each object represents a namespace and contains\nthe properties associated with it. "
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                triggers:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/trigger_info'
        load_balancer_create:
            description: Accepted
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            load_balancer:
                                $ref: '#/components/schemas/load_balancer'
                    examples:
                        Basic Create Response:
                            $ref: '#/components/examples/load_balancer_basic_response'
                        Create Response Using Droplet Tag:
                            $ref: '#/components/examples/load_balancer_using_tag_response'
                        SSL Termination Create Response:
                            $ref: '#/components/examples/load_balancer_ssl_termination_response'
                        Sticky Sessions and Custom Health Check:
                            $ref: '#/components/examples/load_balancer_sticky_sessions_and_health_check_response'
        metric_response:
            description: The response will be a JSON object with a key called `data` and `status`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/metrics'
        namespace_bad_request:
            description: Bad Request.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: bad_request
                        message: 'Invalid request payload: missing label field'
                        request_id: 4851a473-1621-42ea-b2f9-5071c0ea8414
        namespace_created:
            description: |-
                A JSON response object with a key called `namespace`. The object contains the properties associated
                with the namespace.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            namespace:
                                $ref: '#/components/schemas/namespace_info'
        namespace_limit_reached:
            description: Limit Reached
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: unprocessable_entity
                        message: namespace limit reached
                        request_id: a3275238-3d04-4405-a123-55c389b406c0
        namespace_not_allowed:
            description: Not Allowed.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: forbidden
                        message: not allowed to get namespace
                        request_id: b11e45a4-892c-48c9-9001-b6cffe9fe795
        namespace_not_found:
            description: Bad Request.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: not_found
                        message: namespace not found
                        request_id: 88d17b7a-630b-4083-99ce-5b91045efdb4
        neighbor_droplets:
            description: A JSON object with an `droplets` key.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                droplets:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/droplet'
        new_app:
            description: A JSON or YAML of a `spec` object.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/app_response'
                    examples:
                        app:
                            $ref: '#/components/examples/app'
        new_app_deployment:
            description: A JSON object with a `deployment` key.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/apps_deployment_response'
                    examples:
                        deployment:
                            $ref: '#/components/examples/deployment'
        new_certificate:
            description: |-
                The response will be a JSON object with a key called `certificate`. The value of this will be an object that contains the standard attributes associated with a certificate.
                When using Let's Encrypt, the initial value of the certificate's `state` attribute will be `pending`. When the certificate has been successfully issued by Let's Encrypt, this will transition to `verified` and be ready for use.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            certificate:
                                $ref: '#/components/schemas/certificate'
                    examples:
                        Custom Certificate:
                            $ref: '#/components/examples/certificates_custom'
                        Let's Encrypt Certificate:
                            $ref: '#/components/examples/certificates_lets_encrypt_pending'
        new_custom_image:
            description: The response will be a JSON object with a key set to `image`.  The value of this will be an image object containing a subset of the standard  image attributes as listed below, including the image's `id` and `status`.  After initial creation, the `status` will be `NEW`. Using the image's id, you  may query the image's status by sending a `GET` request to the  `/v2/images/$IMAGE_ID` endpoint.  When the `status` changes to `available`, the image will be ready for use.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            image:
                                $ref: '#/components/schemas/image'
                    example:
                        image:
                            created_at: "2018-09-20T19:28:00Z"
                            description: Cloud-optimized image w/ small footprint
                            distribution: Ubuntu
                            error_message: ""
                            id: 3.8413969e+07
                            name: ubuntu-18.04-minimal
                            regions: []
                            status: NEW
                            tags:
                                - base-image
                                - prod
                            type: custom
        no_content:
            description: The action was successful and the response body is empty.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
        no_content_with_content_type:
            description: The action was successful and the response body is empty. This response has content-type set.
            headers:
                content-type:
                    $ref: '#/components/headers/content-type'
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
        node_pool_create:
            description: |
                The response will be a JSON object with a key called `node_pool`. The value of
                this will be an object containing the standard attributes of a node pool.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            node_pool:
                                auto_scale: true
                                count: 3
                                id: cdda885e-7663-40c8-bc74-3a036c66545d
                                labels: null
                                max_nodes: 6
                                min_nodes: 3
                                name: new-pool
                                nodes:
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: ' '
                                      id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                                      name: ' '
                                      status:
                                        state: provisioning
                                      updated_at: "2018-11-15T16:00:11Z"
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: ' '
                                      id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                                      name: ' '
                                      status:
                                        state: provisioning
                                      updated_at: "2018-11-15T16:00:11Z"
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: ' '
                                      id: e46e8d07-f58f-4ff1-9737-97246364400e
                                      name: ' '
                                      status:
                                        state: provisioning
                                      updated_at: "2018-11-15T16:00:11Z"
                                size: s-1vcpu-2gb
                                tags:
                                    - production
                                    - web-team
                                    - front-end
                                    - k8s
                                    - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                                    - k8s:worker
                                taints: []
                        properties:
                            node_pool:
                                $ref: '#/components/schemas/kubernetes_node_pool'
        node_pool_update:
            description: |
                The response will be a JSON object with a key called `node_pool`. The value of
                this will be an object containing the standard attributes of a node pool.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            node_pool:
                                auto_scale: true
                                count: 3
                                id: cdda885e-7663-40c8-bc74-3a036c66545d
                                labels: null
                                max_nodes: 6
                                min_nodes: 3
                                name: renamed-pool
                                nodes:
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: "205545370"
                                      id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                                      name: adoring-newton-3niq
                                      status:
                                        state: running
                                      updated_at: "2018-11-15T16:00:11Z"
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: "205545371"
                                      id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                                      name: adoring-newton-3nim
                                      status:
                                        state: running
                                      updated_at: "2018-11-15T16:00:11Z"
                                    - created_at: "2018-11-15T16:00:11Z"
                                      droplet_id: "205545372"
                                      id: e46e8d07-f58f-4ff1-9737-97246364400e
                                      name: adoring-newton-3ni7
                                      status:
                                        state: running
                                      updated_at: "2018-11-15T16:00:11Z"
                                size: s-1vcpu-2gb
                                tags:
                                    - production
                                    - web-team
                                    - front-end
                                    - new-tag
                                    - k8s
                                    - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                                    - k8s:worker
                                taints: []
                        properties:
                            node_pool:
                                $ref: '#/components/schemas/kubernetes_node_pool'
        not_found:
            description: The resource was not found.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: not_found
                        message: The resource you requested could not be found.
        oneClicks_all:
            description: A JSON object with a key of `1_clicks`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            1_clicks:
                                type: array
                                items:
                                    $ref: '#/components/schemas/oneClicks'
                    examples:
                        All 1-Click Applications:
                            value:
                                1_clicks:
                                    - slug: monitoring
                                      type: kubernetes
                                    - slug: wordpress-18-04
                                      type: droplet
        oneClicks_create:
            description: |
                The response will verify that a job has been successfully created to install a 1-Click. The
                post-installation lifecycle of a 1-Click application can not be managed via the DigitalOcean
                API. For additional details specific to the 1-Click, find and view its
                [DigitalOcean Marketplace](https://marketplace.digitalocean.com) page.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            message:
                                type: string
                                description: A message about the result of the request.
                                example: Successfully kicked off addon job.
                    examples:
                        Install a 1-Click Application:
                            value:
                                message: Successfully kicked off addon job.
        online_migration:
            description: A JSON object.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/online_migration'
                    example:
                        created_at: "2020-10-29T15:57:38Z"
                        id: 77b28fc8-19ff-11eb-8c9c-c68e24557488
                        status: running
        options:
            description: A JSON string with a key of `options`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/options'
                    example:
                        options:
                            mongodb:
                                layouts:
                                    - num_nodes: 1
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                    - num_nodes: 3
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                        - db-s-2vcpu-4gb
                                        - db-s-4vcpu-8gb
                                regions:
                                    - ams3
                                    - blr1
                                versions:
                                    - "4.4"
                                    - "5.0"
                            mysql:
                                layouts:
                                    - num_nodes: 1
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                    - num_nodes: 2
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                        - db-s-2vcpu-4gb
                                        - db-s-4vcpu-8gb
                                    - num_nodes: 3
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                        - db-s-2vcpu-4gb
                                        - db-s-4vcpu-8gb
                                regions:
                                    - ams3
                                    - blr1
                                versions:
                                    - "8"
                            pg:
                                layouts:
                                    - num_nodes: 1
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                    - num_nodes: 2
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                        - db-s-2vcpu-4gb
                                        - db-s-4vcpu-8gb
                                regions:
                                    - ams3
                                    - blr1
                                versions:
                                    - "11"
                                    - "12"
                                    - "13"
                                    - "14"
                            redis:
                                layouts:
                                    - num_nodes: 1
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                    - num_nodes: 2
                                      sizes:
                                        - db-s-1vcpu-1gb
                                        - db-s-1vcpu-2gb
                                        - db-s-2vcpu-4gb
                                        - db-s-4vcpu-8gb
                                regions:
                                    - ams3
                                    - blr1
                                versions:
                                    - "6"
                        version_availability:
                            mongodb:
                                - end_of_availability: "null"
                                  end_of_life: "2024-02-01T08:00:00Z"
                                  version: "4.4"
                                - end_of_availability: "null"
                                  end_of_life: "2024-10-01T07:00:00Z"
                                  version: "5.0"
                            mysql:
                                - end_of_availability: "null"
                                  end_of_life: "null"
                                  version: "8"
                            pg:
                                - end_of_availability: "2023-05-09T00:00:00Z"
                                  end_of_life: "2023-11-09T00:00:00Z"
                                  version: "11"
                                - end_of_availability: "2024-05-14T00:00:00Z"
                                  end_of_life: "2024-11-14T00:00:00Z"
                                  version: "12"
                                - end_of_availability: "2025-05-13T00:00:00Z"
                                  end_of_life: "2025-11-13T00:00:00Z"
                                  version: "13"
                                - end_of_availability: "2026-05-12T00:00:00Z"
                                  end_of_life: "2026-11-12T00:00:00Z"
                                  version: "14"
                            redis:
                                - end_of_availability: "null"
                                  end_of_life: "null"
                                  version: "7"
        post_image_action_response:
            description: The response will be a JSON object with a key called `action`. The value of this will be an object containing the standard image action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/action'
                    example:
                        action:
                            completed_at: null
                            id: 3.6805527e+07
                            region:
                                available: true
                                features:
                                    - private_networking
                                    - backups
                                    - ipv6
                                    - metadata
                                    - server_id
                                    - install_agent
                                    - storage
                                    - image_transfer
                                name: New York 3
                                sizes:
                                    - s-1vcpu-3gb
                                    - m-1vcpu-8gb
                                    - s-3vcpu-1gb
                                    - s-1vcpu-2gb
                                    - s-2vcpu-2gb
                                    - s-2vcpu-4gb
                                    - s-4vcpu-8gb
                                    - s-6vcpu-16gb
                                    - s-8vcpu-32gb
                                    - s-12vcpu-48gb
                                    - s-16vcpu-64gb
                                    - s-20vcpu-96gb
                                    - s-1vcpu-1gb
                                    - c-1vcpu-2gb
                                    - s-24vcpu-128gb
                                slug: nyc3
                            region_slug: nyc3
                            resource_id: 7.938269e+06
                            resource_type: image
                            started_at: "2014-11-14T16:42:45Z"
                            status: in-progress
                            type: transfer
        precondition_failed:
            description: Only an empty project can be deleted.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: precondition_failed
                        message: cannot delete a project with resources. move or remove the resources first
        projects_list:
            description: The response will be a JSON object with a key called `projects`. The value of this will be an object with the standard project attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                projects:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/project'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links:
                                pages:
                                    first: https://api.digitalocean.com/v2/projects?page=1
                                    last: https://api.digitalocean.com/v2/projects?page=1
                            meta:
                                total: 2
                            projects:
                                - created_at: "2018-09-27T20:10:35Z"
                                  description: My website API
                                  environment: Production
                                  id: 4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679
                                  is_default: false
                                  name: my-web-api
                                  owner_id: 258992
                                  owner_uuid: 99525febec065ca37b2ffe4f852fd2b2581895e7
                                  purpose: Service or API
                                  updated_at: "2018-09-27T20:10:35Z"
                                - created_at: "2017-10-19T21:44:20Z"
                                  description: Default project
                                  environment: Development
                                  id: addb4547-6bab-419a-8542-76263a033cf6
                                  is_default: true
                                  name: Default
                                  owner_id: 258992
                                  owner_uuid: 99525febec065ca37b2ffe4f852fd2b2581895e7
                                  purpose: Just trying out DigitalOcean
                                  updated_at: "2019-11-05T18:50:03Z"
        propose_app:
            description: A JSON object.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/app_propose_response'
                    examples:
                        propose:
                            $ref: '#/components/examples/propose'
        put_firewall_response:
            description: The response will be a JSON object with a `firewall` key. This will be set to an object containing the standard firewall attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            firewall:
                                $ref: '#/components/schemas/firewall'
                    example:
                        firewall:
                            created_at: "2020-05-23T21:24:00Z"
                            droplet_ids:
                                - 8.043964e+06
                            id: bb4b2611-3d72-467b-8602-280330ecd65c
                            inbound_rules:
                                - ports: "80"
                                  protocol: tcp
                                  sources:
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                - ports: "22"
                                  protocol: tcp
                                  sources:
                                    addresses:
                                        - 18.0.0.0/8
                                    tags:
                                        - gateway
                            name: frontend-firewall
                            outbound_rules:
                                - destinations:
                                    addresses:
                                        - 0.0.0.0/0
                                        - ::/0
                                  ports: "80"
                                  protocol: tcp
                            pending_changes:
                                - droplet_id: 8.043964e+06
                                  removing: false
                                  status: waiting
                            status: waiting
                            tags:
                                - frontend
        registry_info:
            description: The response will be a JSON object with the key `registry` containing information about your registry.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            registry:
                                $ref: '#/components/schemas/registry'
        registry_options_response:
            description: The response will be a JSON object with a key called `options` which contains a key called `subscription_tiers` listing the available tiers.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            options:
                                type: object
                                properties:
                                    available_regions:
                                        type: array
                                        example:
                                            - nyc3
                                        items:
                                            type: string
                                    subscription_tiers:
                                        type: array
                                        items:
                                            allOf:
                                                - $ref: '#/components/schemas/subscription_tier_base'
                                                - $ref: '#/components/schemas/subscription_tier_extended'
                    example:
                        options:
                            available_regions:
                                - nyc3
                                - sfo3
                                - ams3
                                - sgp1
                                - fra1
                            subscription_tiers:
                                - allow_storage_overage: false
                                  eligibility_reasons:
                                    - OverRepositoryLimit
                                  eligible: false
                                  included_bandwidth_bytes: 5.24288e+08
                                  included_repositories: 1
                                  included_storage_bytes: 5.24288e+08
                                  monthly_price_in_cents: 0
                                  name: Starter
                                  slug: starter
                                - allow_storage_overage: true
                                  eligible: true
                                  included_bandwidth_bytes: 5.36870912e+09
                                  included_repositories: 5
                                  included_storage_bytes: 5.36870912e+09
                                  monthly_price_in_cents: 500
                                  name: Basic
                                  slug: basic
                                - allow_storage_overage: true
                                  eligible: true
                                  included_bandwidth_bytes: 1.073741824e+11
                                  included_repositories: 0
                                  included_storage_bytes: 1.073741824e+11
                                  monthly_price_in_cents: 2000
                                  name: Professional
                                  slug: professional
        repository_manifests:
            description: The response body will be a JSON object with a key of `manifests`. This will be set to an array containing objects each representing a manifest.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                manifests:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/repository_manifest'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links:
                                pages:
                                    first: https://api.digitalocean.com/v2/registry/example/repositories/repo-1/digests?page=1&per_page=1
                                    last: https://api.digitalocean.com/v2/registry/example/repositories/repo-1/digests?page=3&per_page=1
                                    next: https://api.digitalocean.com/v2/registry/example/repositories/repo-1/digests?page=3&per_page=1
                                    prev: https://api.digitalocean.com/v2/registry/example/repositories/repo-1/digests?page=1&per_page=1
                            manifests:
                                - blobs:
                                    - compressed_size_bytes: 1471
                                      digest: sha256:14119a10abf4669e8cdbdff324a9f9605d99697215a0d21c360fe8dfa8471bab
                                    - compressed_size_byte: 2.814446e+06
                                      digest: sha256:a0d0a0d46f8b52473982a3c466318f479767577551a53ffc9074c9fa7035982e
                                    - compressed_size_bytes: 528
                                      digest: sha256:69704ef328d05a9f806b6b8502915e6a0a4faa4d72018dc42343f511490daf8a
                                  compressed_size_bytes: 1.972332e+06
                                  digest: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                                  registry_name: example
                                  repository: repo-1
                                  size_bytes: 2.816445e+06
                                  tags:
                                    - v1
                                    - v2
                                  updated_at: "2021-04-09T23:54:25Z"
                            meta:
                                total: 3
        repository_tags:
            description: The response body will be a JSON object with a key of `tags`. This will be set to an array containing objects each representing a tag.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                tags:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/repository_tag'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            meta:
                                total: 1
                            tags:
                                - compressed_size_bytes: 2.803255e+06
                                  manifest_digest: sha256:cb8a924afdf0229ef7515d9e5b3024e23b3eb03ddbba287f4a19c6ac90b8d221
                                  registry_name: example
                                  repository: repo-1
                                  size_bytes: 5.861888e+06
                                  tag: latest
                                  updated_at: "2020-04-09T23:54:25Z"
        reserved_ip:
            description: The response will be a JSON object with a key called `reserved_ip`. The value of this will be an object that contains the standard attributes associated with a reserved IP.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            reserved_ip:
                                $ref: '#/components/schemas/reserved_ip'
                    examples:
                        reserved_ip_assigned:
                            $ref: '#/components/examples/reserved_ip_assigned'
                        reserved_ip_reserved:
                            $ref: '#/components/examples/reserved_ip_reserved'
        reserved_ip_action:
            description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard reserved IP action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            action:
                                completed_at: "2015-11-12T17:51:14Z"
                                id: 7.2531856e+07
                                project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                                region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                    name: New York 3
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192gb
                                    slug: nyc3
                                region_slug: nyc3
                                resource_id: 7.58604968e+08
                                resource_type: reserved_ip
                                started_at: "2015-11-12T17:51:03Z"
                                status: completed
                                type: assign_ip
                        properties:
                            action:
                                allOf:
                                    - $ref: '#/components/schemas/action'
                                    - type: object
                                      properties:
                                        project_id:
                                            type: string
                                            format: uuid
                                            description: The UUID of the project to which the reserved IP currently belongs.
                                            example: 746c6152-2fa2-11ed-92d3-27aaa54e4988
        reserved_ip_actions:
            description: The results will be returned as a JSON object with an `actions` key. This will be set to an array filled with action objects containing the standard reserved IP action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                actions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/action'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            actions:
                                - completed_at: "2015-11-21T21:51:09Z"
                                  id: 7.2531856e+07
                                  region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                    name: New York 3
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192gb
                                    slug: nyc3
                                  region_slug: nyc3
                                  resource_id: 7.58604197e+08
                                  resource_type: reserved_ip
                                  started_at: "2015-11-21T21:51:09Z"
                                  status: completed
                                  type: reserve_ip
                            links: {}
                            meta:
                                total: 1
        reserved_ip_created:
            description: |-
                The response will be a JSON object with a key called `reserved_ip`. The value of this will be an object that contains the standard attributes associated with a reserved IP.
                When assigning a reserved IP to a Droplet at same time as it created, the response's `links` object will contain links to both the Droplet and the assignment action. The latter can be used to check the status of the action.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            links:
                                type: object
                                properties:
                                    actions:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/action_link'
                                    droplets:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/action_link'
                            reserved_ip:
                                $ref: '#/components/schemas/reserved_ip'
                    examples:
                        reserved_ip_assigning:
                            $ref: '#/components/examples/reserved_ip_assigning'
                        reserved_ip_reserving:
                            $ref: '#/components/examples/reserved_ip_reserving'
        reserved_ip_list:
            description: The response will be a JSON object with a key called `reserved_ips`. This will be set to an array of reserved IP objects, each of which will contain the standard reserved IP attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                reserved_ips:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/reserved_ip'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links: {}
                            meta:
                                total: 1
                            reserved_ips:
                                - droplet: null
                                  ip: 45.55.96.47
                                  locked: false
                                  project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                                  region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                        - install_agent
                                        - storage
                                        - image_transfer
                                    name: New York 3
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192g
                                    slug: nyc3
        resources_list:
            description: The response will be a JSON object with a key called `resources`. The value of this will be an object with the standard resource attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                resources:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/resource'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links:
                                pages:
                                    first: https://api.digitalocean.com/v2/projects/4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679/resources?page=1
                                    last: https://api.digitalocean.com/v2/projects/4e1bfbc3-dc3e-41f2-a18f-1b4d7ba71679/resources?page=1
                            meta:
                                total: 2
                            resources:
                                - assigned_at: "2018-09-28T19:26:37Z"
                                  links:
                                    self: https://api.digitalocean.com/v2/droplets/13457723
                                  status: ok
                                  urn: do:droplet:13457723
                                - assigned_at: "2019-03-31T16:24:14Z"
                                  links:
                                    self: https://api.digitalocean.com/v2/domains/example.com
                                  status: ok
                                  urn: do:domain:example.com
        server_error:
            description: Server error.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: server_error
                        message: Unexpected server-side error
        snapshots:
            description: A JSON object with a key of `snapshots`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                snapshots:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/snapshots'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        All Snapshots:
                            $ref: '#/components/examples/snapshots_all'
                        Droplets Snapshots:
                            $ref: '#/components/examples/snapshots_droplets_only'
                        Volume Snapshots:
                            $ref: '#/components/examples/snapshots_volumes_only'
        snapshots_existing:
            description: |
                A JSON object with a key called `snapshot`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            snapshot:
                                $ref: '#/components/schemas/snapshots'
        sql_mode:
            description: A JSON string with a key of `sql_mode`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/sql_mode'
                    example:
                        sql_mode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES
        sshKeys_all:
            description: A JSON object with the key set to `ssh_keys`. The value is an array of `ssh_key` objects, each of which contains the standard `ssh_key` attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                ssh_keys:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/sshKeys'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links: {}
                            meta:
                                total: 1
                            ssh_keys:
                                - fingerprint: 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
                                  id: 289794
                                  name: Other Public Key
                                  public_key: ssh-rsa ANOTHEREXAMPLEaC1yc2EAAAADAQABAAAAQQDDHr/jh2Jy4yALcK4JyWbVkPRaWmhck3IgCoeOO3z1e2dBowLh64QAM+Qb72pxekALga2oi4GvT+TlWNhzPH4V anotherexample
        sshKeys_existing:
            description: A JSON object with the key set to `ssh_key`. The value is an `ssh_key` object containing the standard `ssh_key` attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            ssh_key:
                                $ref: '#/components/schemas/sshKeys'
            links:
                sshKeys_delete_by_fingerprint:
                    $ref: '#/components/links/sshKeys_delete_by_fingerprint'
                sshKeys_delete_by_id:
                    $ref: '#/components/links/sshKeys_delete_by_id'
                sshKeys_get_by_fingerprint:
                    $ref: '#/components/links/sshKeys_get_by_fingerprint'
                sshKeys_get_by_id:
                    $ref: '#/components/links/sshKeys_get_by_id'
        sshKeys_new:
            description: The response body will be a JSON object with a key set to `ssh_key`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            ssh_key:
                                $ref: '#/components/schemas/sshKeys'
            links:
                sshKeys_delete_by_fingerprint:
                    $ref: '#/components/links/sshKeys_delete_by_fingerprint'
                sshKeys_delete_by_id:
                    $ref: '#/components/links/sshKeys_delete_by_id'
                sshKeys_get_by_fingerprint:
                    $ref: '#/components/links/sshKeys_get_by_fingerprint'
                sshKeys_get_by_id:
                    $ref: '#/components/links/sshKeys_get_by_id'
        subscription_response:
            description: The response will be a JSON object with a key called `subscription` containing information about your subscription.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            subscription:
                                $ref: '#/components/schemas/subscription'
        tags_all:
            description: To list all of your tags, you can send a `GET` request to `/v2/tags`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                tags:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/tags'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links: {}
                            meta:
                                total: 1
                            tags:
                                - name: extra-awesome
                                  resources:
                                    count: 5
                                    databases:
                                        count: 1
                                        last_tagged_uri: https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976
                                    droplets:
                                        count: 1
                                        last_tagged_uri: https://api.digitalocean.com/v2/droplets/3164444
                                    images:
                                        count: 1
                                        last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                                    last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                                    volume_snapshots:
                                        count: 1
                                        last_tagged_uri: https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519
                                    volumes:
                                        count: 1
                                        last_tagged_uri: https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933
        tags_bad_request:
            description: Bad Request
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
                x-request-id:
                    $ref: '#/components/headers/x-request-id'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error_with_root_causes'
                    examples:
                        InvalidCharacters:
                            value:
                                error: 'Error validating resource tag: \"tag-name \\\"здорово\\\" contains invalid characters\"'
                                messages: null
                                root_causes:
                                    - 'rpc error: code = InvalidArgument desc = Error validating resource tag: \"tag-name \\\"здорово\\\" contains invalid characters\"'
        tags_existing:
            description: The response will be a JSON object with a key called `tag`.  The value of this will be a tag object containing the standard tag attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            tag:
                                tag:
                                    name: extra-awesome
                                    resources:
                                        count: 5
                                        databases:
                                            count: 1
                                            last_tagged_uri: https://api.digitalocean.com/v2/databases/b92438f6-ba03-416c-b642-e9236db91976
                                        droplets:
                                            count: 1
                                            last_tagged_uri: https://api.digitalocean.com/v2/droplets/3164444
                                        images:
                                            count: 1
                                            last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                                        last_tagged_uri: https://api.digitalocean.com/v2/images/7555620
                                        volume_snapshots:
                                            count: 1
                                            last_tagged_uri: https://api.digitalocean.com/v2/snapshots/1f6f46e8-6b60-11e9-be4e-0a58ac144519
                                        volumes:
                                            count: 1
                                            last_tagged_uri: https://api.digitalocean.com/v2/volumes/3d80cb72-342b-4aaa-b92e-4e4abb24a933
                        properties:
                            tag:
                                $ref: '#/components/schemas/tags'
        tags_new:
            description: The response will be a JSON object with a key called tag.  The value of this will be a tag object containing the standard tag attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            tag:
                                name: extra-awesome
                                resources:
                                    count: 0
                                    databases:
                                        count: 0
                                    droplets:
                                        count: 0
                                    images:
                                        count: 0
                                    volume_snapshots:
                                        count: 0
                                    volumes:
                                        count: 0
                        properties:
                            tag:
                                $ref: '#/components/schemas/tags'
        too_many_requests:
            description: API Rate limit exceeded
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: too_many_requests
                        message: API Rate limit exceeded.
        trigger_bad_request:
            description: Bad Request.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: bad_request
                        message: 'validating create trigger: validation error: missing trigger name, missing function name, missing source details'
                        request_id: 4851a473-1621-42ea-b2f9-5071c0ea8414
        trigger_limit_reached:
            description: Limit Reached
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: unprocessable_entity
                        message: triggers limit reached
                        request_id: 7ba99a43-6618-4fe0-9af7-092752ad0d56
        trigger_not_found:
            description: Bad Request.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    examples:
                        namespace not found:
                            value:
                                id: not_found
                                message: namespace not found
                                request_id: 88d17b7a-630b-4083-99ce-5b91045efdb4
                        trigger not found:
                            value:
                                id: not_found
                                message: trigger not found
                                request_id: 88d17b7a-630b-4083-99ce-5b91045efdb4
        trigger_response:
            description: |-
                A JSON response object with a key called `trigger`. The object contains the properties associated
                with the trigger.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            trigger:
                                $ref: '#/components/schemas/trigger_info'
        unauthorized:
            description: Unauthorized
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: unauthorized
                        message: Unable to authenticate you.
        unexpected_error:
            description: Unexpected error
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/error'
                    example:
                        id: example_error
                        message: some error message
        update_app:
            description: A JSON object of the updated `app`
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/app_response'
                    examples:
                        app:
                            $ref: '#/components/examples/app'
        updated_cluster:
            description: |
                The response will be a JSON object with a key called `kubernetes_cluster`. The
                value of this will be an object containing the standard attributes of a
                Kubernetes cluster.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            kubernetes_cluster:
                                $ref: '#/components/schemas/cluster'
                    examples:
                        Updated Kubernetes Cluster:
                            $ref: '#/components/examples/kubernetes_updated'
        updated_image:
            description: The response will be a JSON object with a key set to `image`.  The value of this will be an image object containing the standard image attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - image
                        properties:
                            image:
                                $ref: '#/components/schemas/image'
                    example:
                        image:
                            created_at: "2014-11-14T16:44:03Z"
                            description: ""
                            distribution: Ubuntu
                            error_message: ""
                            id: 7.938391e+06
                            min_disk_size: 20
                            name: new-image-name
                            public: false
                            regions:
                                - nyc3
                                - nyc3
                            size_gigabytes: 2.34
                            slug: null
                            status: available
                            tags: []
        updated_load_balancer:
            description: |
                The response will be a JSON object with a key called `load_balancer`. The
                value of this will be an object containing the standard attributes of a
                load balancer.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            load_balancer:
                                $ref: '#/components/schemas/load_balancer'
                    examples:
                        load_balancer_update_response:
                            $ref: '#/components/examples/load_balancer_update_response'
        user:
            description: A JSON object with a key of `user`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        required:
                            - user
                        properties:
                            user:
                                $ref: '#/components/schemas/database_user'
                    examples:
                        New User:
                            value:
                                user:
                                    name: app-01
                                    password: jge5lfxtzhx42iff
                                    role: normal
                        New User with MySQL Auth Plugin:
                            value:
                                user:
                                    mysql_settings:
                                        auth_plugin: mysql_native_password
                                    name: app-02
                                    password: wv78n3zpz42xezdk
                                    role: normal
        users:
            description: A JSON object with a key of `users`.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            users:
                                type: array
                                items:
                                    $ref: '#/components/schemas/database_user'
                    example:
                        users:
                            - name: app-01
                              password: jge5lfxtzhx42iff
                              role: normal
                            - name: doadmin
                              password: wv78n3zpz42xezd
                              role: primary
        volume:
            description: The response will be a JSON object with a key called `volume`. The value will be an object containing the standard attributes associated with a volume.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            volume:
                                created_at: "2020-03-02T17:00:49Z"
                                description: Block store for examples
                                droplet_ids: []
                                filesystem_label: example
                                filesystem_type: ext4
                                id: 506f78a4-e098-11e5-ad9f-000f53306ae1
                                name: example
                                region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                    name: New York 1
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192gb
                                    slug: nyc1
                                size_gigabytes: 10
                        properties:
                            volume:
                                $ref: '#/components/schemas/volume_full'
        volumeAction:
            description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard volume action attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            action:
                                $ref: '#/components/schemas/volumeAction'
                    examples:
                        VolumeActionDetachResponse:
                            $ref: '#/components/examples/volume_action_detach_response'
                        volume_action_attach_response:
                            $ref: '#/components/examples/volume_action_attach_response'
        volumeActions:
            description: The response will be an object with a key called `action`. The value of this will be an object that contains the standard volume action attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                actions:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/volumeAction'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            actions:
                                - completed_at: "2020-11-21T21:51:09Z"
                                  id: 7.2531856e+07
                                  region:
                                    available: true
                                    features:
                                        - private_networking
                                        - backups
                                        - ipv6
                                        - metadata
                                    name: New York 1
                                    sizes:
                                        - s-1vcpu-1gb
                                        - s-1vcpu-2gb
                                        - s-1vcpu-3gb
                                        - s-2vcpu-2gb
                                        - s-3vcpu-1gb
                                        - s-2vcpu-4gb
                                        - s-4vcpu-8gb
                                        - s-6vcpu-16gb
                                        - s-8vcpu-32gb
                                        - s-12vcpu-48gb
                                        - s-16vcpu-64gb
                                        - s-20vcpu-96gb
                                        - s-24vcpu-128gb
                                        - s-32vcpu-192gb
                                    slug: nyc1
                                  region_slug: nyc1
                                  resource_type: volume
                                  started_at: "2020-11-21T21:51:09Z"
                                  status: completed
                                  type: attach_volume
                            links: {}
                            meta:
                                total: 1
        volumeSnapshot:
            description: You will get back a JSON object that has a `snapshot` key. This will contain the standard snapshot attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        type: object
                        example:
                            snapshot:
                                created_at: "2020-09-30T18:56:14Z"
                                id: 8fa70202-873f-11e6-8b68-000f533176b1
                                min_disk_size: 10
                                name: big-data-snapshot1475261774
                                regions:
                                    - nyc1
                                resource_id: 82a48a18-873f-11e6-96bf-000f53315a41
                                resource_type: volume
                                size_gigabytes: 10
                                tags:
                                    - aninterestingtag
                        properties:
                            snapshot:
                                $ref: '#/components/schemas/snapshots'
        volumeSnapshots:
            description: You will get back a JSON object that has a `snapshots` key. This will be set to an array of snapshot objects, each of which contain the standard snapshot attributes
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                snapshots:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/snapshots'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links: {}
                            meta:
                                total: 1
                            snapshots:
                                - created_at: "2020-09-30T18:56:12Z"
                                  id: 8eb4d51a-873f-11e6-96bf-000f53315a41
                                  min_disk_size: 10
                                  name: big-data-snapshot1475261752
                                  regions:
                                    - nyc1
                                  resource_id: 82a48a18-873f-11e6-96bf-000f53315a41
                                  resource_type: volume
                                  size_gigabytes: 0
                                  tags: null
        volumes:
            description: The response will be a JSON object with a key called `volumes`. This will be set to an array of volume objects, each of which will contain the standard volume attributes.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              required:
                                - volumes
                              properties:
                                volumes:
                                    type: array
                                    description: Array of volumes.
                                    items:
                                        $ref: '#/components/schemas/volume_full'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                    examples:
                        All Volumes:
                            $ref: '#/components/examples/volumes_all'
                        Filtered by Name:
                            $ref: '#/components/examples/volumes_filtered_by_name'
                        Filtered by Region:
                            $ref: '#/components/examples/volumes_filtered_by_region'
        vpc_members:
            description: The response will be a JSON object with a key called members. This will be set to an array of objects, each of which will contain the standard attributes associated with a VPC member.
            headers:
                ratelimit-limit:
                    $ref: '#/components/headers/ratelimit-limit'
                ratelimit-remaining:
                    $ref: '#/components/headers/ratelimit-remaining'
                ratelimit-reset:
                    $ref: '#/components/headers/ratelimit-reset'
            content:
                application/json:
                    schema:
                        allOf:
                            - type: object
                              properties:
                                members:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/vpc_member'
                            - $ref: '#/components/schemas/pagination'
                            - $ref: '#/components/schemas/meta'
                        example:
                            links: {}
                            members:
                                - created_at: "2020-03-13T19:30:48Z"
                                  name: nyc1-load-balancer-01
                                  urn: do:loadbalancer:fb294d78-d193-4cb2-8737-ea620993591b
                                - created_at: "2020-03-13T19:30:18Z"
                                  name: db-postgresql-nyc1-55986
                                  urn: do:dbaas:13f7a2f6-43df-4c4a-8129-8733267ddeea
                                - created_at: "2020-03-13T19:30:16Z"
                                  name: k8s-nyc1-1584127772221
                                  urn: do:kubernetes:da39d893-96e1-4e4d-971d-1fdda33a46b1
                                - created_at: "2020-03-13T19:29:20Z"
                                  name: ubuntu-s-1vcpu-1gb-nyc1-01
                                  urn: do:droplet:86e29982-03a7-4946-8a07-a0114dff8754
                            meta:
                                total: 4
    securitySchemes:
        bearer_auth:
            type: http
            description: |
                ## OAuth Authentication

                In order to interact with the DigitalOcean API, you or your application must
                authenticate.

                The DigitalOcean API handles this through OAuth, an open standard for
                authorization. OAuth allows you to delegate access to your account in full
                or in read-only mode.

                You can generate an OAuth token by visiting the [Apps & API](https://cloud.digitalocean.com/account/api/tokens)
                section of the DigitalOcean control panel for your account.

                An OAuth token functions as a complete authentication request. In effect, it
                acts as a substitute for a username and password pair.

                Because of this, it is absolutely **essential** that you keep your OAuth
                tokens secure. In fact, upon generation, the web interface will only display
                each token a single time in order to prevent the token from being compromised.

                DigitalOcean access tokens begin with an identifiable prefix in order to
                distinguish them from other similar tokens.

                - `dop_v1_` for personal access tokens generated in the control panel
                - `doo_v1_` for tokens generated by applications using [the OAuth flow](https://docs.digitalocean.com/reference/api/oauth-api/)
                - `dor_v1_` for OAuth refresh tokens

                ### How to Authenticate with OAuth

                In order to make an authenticated request, include a bearer-type
                `Authorization` header containing your OAuth token. All requests must be
                made over HTTPS.

                ### Authenticate with a Bearer Authorization Header

                ```
                curl -X $HTTP_METHOD -H "Authorization: Bearer $DIGITALOCEAN_TOKEN" "https://api.digitalocean.com/v2/$OBJECT"
                ```
            scheme: bearer
    examples:
        alert:
            value:
                alert:
                    emails:
                        - sammy@digitalocean.com
                    id: e552e1f9-c1b0-4e6d-8777-ad6f27767306
                    phase: ACTIVE
                    progress:
                        steps:
                            - ended_at: "2020-07-28T18:00:00Z"
                              name: alert-configure-insight-alert
                              started_at: "2020-07-28T18:00:00Z"
                              status: SUCCESS
                    spec:
                        rule: DEPLOYMENT_FAILED
        alerts:
            value:
                alerts:
                    - emails:
                        - sammy@digitalocean.com
                      id: e552e1f9-c1b0-4e6d-8777-ad6f27767306
                      phase: ACTIVE
                      progress:
                        steps:
                            - ended_at: "2020-07-28T18:00:00Z"
                              name: alert-configure-insight-alert
                              started_at: "2020-07-28T18:00:00Z"
                              status: SUCCESS
                      spec:
                        rule: DEPLOYMENT_FAILED
                    - emails:
                        - sammy@digitalocean.com
                      id: b58cc9d4-0702-4ffd-ab45-4c2a8d979527
                      phase: ACTIVE
                      progress:
                        steps:
                            - ended_at: "2020-07-28T18:00:00Z"
                              name: alert-configure-insight-alert
                              started_at: "2020-07-28T18:00:00Z"
                              status: SUCCESS
                      spec:
                        operator: GREATER_THAN
                        rule: CPU_UTILIZATION
                        value: 85
                        window: FIVE_MINUTES
        app:
            value:
                app:
                    active_deployment:
                        cause: manual
                        created_at: "2021-02-10T17:05:30Z"
                        id: 991dfa59-6a23-459f-86d6-67dfa2c6f1e3
                        phase: ACTIVE
                        phase_last_updated_at: "2021-02-10T17:06:53Z"
                        progress:
                            steps:
                                - ended_at: "2021-02-10T17:06:19.807834070Z"
                                  name: build
                                  started_at: "2021-02-10T17:05:35.572287990Z"
                                  status: SUCCESS
                                  steps:
                                    - ended_at: "2021-02-10T17:05:36.093995229Z"
                                      name: initialize
                                      started_at: "2021-02-10T17:05:35.572347485Z"
                                      status: SUCCESS
                                    - ended_at: "2021-02-10T17:06:19.461737040Z"
                                      name: components
                                      started_at: "2021-02-10T17:05:36.094015928Z"
                                      status: SUCCESS
                                      steps:
                                        - component_name: web
                                          message_base: Building service
                                          name: web
                                          status: SUCCESS
                                - ended_at: "2021-02-10T17:06:53.404104185Z"
                                  name: deploy
                                  started_at: "2021-02-10T17:06:25.143932418Z"
                                  status: SUCCESS
                                  steps:
                                    - ended_at: "2021-02-10T17:06:26.120343872Z"
                                      name: initialize
                                      started_at: "2021-02-10T17:06:25.143957508Z"
                                      status: SUCCESS
                                    - ended_at: "2021-02-10T17:06:50.029695913Z"
                                      name: components
                                      started_at: "2021-02-10T17:06:26.120385561Z"
                                      status: SUCCESS
                                      steps:
                                        - component_name: web
                                          name: web
                                          status: SUCCESS
                                          steps:
                                            - component_name: web
                                              message_base: Deploying service
                                              name: deploy
                                              status: SUCCESS
                                            - component_name: web
                                              message_base: Waiting for service
                                              name: wait
                                              status: SUCCESS
                                    - ended_at: "2021-02-10T17:06:53.404065961Z"
                                      name: finalize
                                      started_at: "2021-02-10T17:06:50.348459495Z"
                                      status: SUCCESS
                            success_steps: 6
                            total_steps: 6
                        services:
                            - name: web
                              source_commit_hash: db6936cb46047c576962962eed81ad52c21f35d7
                        spec:
                            domains:
                                - domain: sample-golang.example.com
                                  minimum_tls_version: "1.3"
                                  zone: example.com
                            name: sample-golang
                            region: ams
                            services:
                                - environment_slug: go
                                  github:
                                    branch: main
                                    repo: ChiefMateStarbuck/sample-golang
                                  http_port: 8080
                                  instance_count: 1
                                  instance_size_slug: basic-xxs
                                  name: web
                                  routes:
                                    - path: /
                                  run_command: bin/sample-golang
                        tier_slug: basic
                        updated_at: "2021-02-10T17:06:53Z"
                    created_at: "2021-02-10T16:45:14Z"
                    default_ingress: https://sample-golang-zyhgn.ondigitalocean.app
                    domains:
                        - certificate_expires_at: "2024-01-29T23:59:59Z"
                          id: e206c64e-a1a3-11ed-9e6e-9b7b6dc9a52b
                          phase: CONFIGURING
                          progress:
                            steps:
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: default-ingress-ready
                                  started_at: "2023-01-30T22:15:45.021896292Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-zone
                                  started_at: "2023-01-30T22:15:45.022017004Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:42:28.50752065Z"
                                  name: ensure-ns-records
                                  started_at: "2023-01-30T22:15:45.025567874Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: verify-nameservers
                                  started_at: "2023-01-30T22:15:45.033591906Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-record
                                  started_at: "2023-01-30T22:15:45.156750604Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.258626422Z"
                                  name: ensure-alias-record
                                  started_at: "2023-01-30T22:15:45.165933869Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.258808279Z"
                                  name: ensure-wildcard-record
                                  started_at: "2023-01-30T22:15:45.166093422Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: verify-cname
                                  started_at: "2023-01-30T22:15:45.166205559Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.475903785Z"
                                  name: ensure-ssl-txt-record-saved
                                  started_at: "2023-01-30T22:15:45.295237186Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.476017236Z"
                                  name: ensure-ssl-txt-record
                                  started_at: "2023-01-30T22:15:45.295315291Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.476094058Z"
                                  name: ensure-renewal-email
                                  started_at: "2023-01-30T22:15:45.295374087Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-CA-authorization
                                  started_at: "2023-01-30T22:15:45.295428101Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-certificate
                                  started_at: "2023-01-30T22:15:45.978756406Z"
                                  status: RUNNING
                                - ended_at: 0001-01-01T00:00:00
                                  name: create-deployment
                                  started_at: "0001-01-01T00:00:00Z"
                                  status: PENDING
                                - ended_at: 0001-01-01T00:00:00
                                  name: configuration-alert
                                  started_at: 0001-01-01T00:00:00
                                  status: PENDING
                          rotate_validation_records: false
                          spec:
                            domain: sample-golang.example.com
                            minimum_tls_version: "1.3"
                            type: PRIMARY
                            zone: example.com
                    id: c2a93513-8d9b-4223-9d61-5e7272c81cf5
                    last_deployment_created_at: "2021-02-10T17:05:30Z"
                    live_domain: sample-golang-zyhgn.ondigitalocean.app
                    live_url: https://sample-golang-zyhgn.ondigitalocean.app
                    live_url_base: https://sample-golang-zyhgn.ondigitalocean.app
                    owner_uuid: a4e16f25-cdd1-4483-b246-d77f283c9209
                    pending_deployment:
                        id: 3aa4d20e-5527-4c00-b496-601fbd22520a
                        spec:
                            domains:
                                - domain: sample-php.example.com
                                  minimum_tls_version: "1.3"
                                  type: PRIMARY
                                  zone: example.com
                            name: sample-php
                            region: fra
                            services:
                                - environment_slug: php
                                  git:
                                    branch: main
                                    repo_clone_url: https://github.com/digitalocean/sample-php.git
                                  http_port: 8080
                                  instance_count: 1
                                  instance_size_slug: basic-xxs
                                  name: sample-php
                                  routes:
                                    - path: /
                                  run_command: heroku-php-apache2
                    project_id: 88b72d1a-b78a-4d9f-9090-b53c4399073f
                    region:
                        continent: Europe
                        data_centers:
                            - ams3
                        flag: netherlands
                        label: Amsterdam
                        slug: ams
                    spec:
                        domains:
                            - domain: sample-golang.example.com
                              minimum_tls_version: "1.3"
                              zone: example.com
                        name: sample-golang
                        region: ams
                        services:
                            - environment_slug: go
                              github:
                                branch: main
                                repo: ChiefMateStarbuck/sample-golang
                              http_port: 8080
                              instance_count: 1
                              instance_size_slug: basic-xxs
                              name: web
                              routes:
                                - path: /
                              run_command: bin/sample-golang
                    tier_slug: basic
                    updated_at: "2021-02-10T17:06:56Z"
        app_bandwidth_usage:
            value:
                app_bandwidth_usage:
                    - app_id: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                      bandwidth_bytes: "513668"
                date: "2023-01-17T00:00:00Z"
        app_bandwidth_usage_multiple:
            value:
                app_bandwidth_usage:
                    - app_id: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                      bandwidth_bytes: "513668"
                    - app_id: c2a93513-8d9b-4223-9d61-5e7272c81cf5
                      bandwidth_bytes: "254847"
                date: "2023-01-17T00:00:00Z"
        apps:
            value:
                apps:
                    - active_deployment:
                        created_at: "2020-12-01T00:40:05Z"
                        id: 3aa4d20e-5527-4c00-b496-601fbd22520a
                        phase_last_updated_at: "2020-12-01T00:42:12Z"
                        services:
                            - name: sample-php
                              source_commit_hash: 54d4a727f457231062439895000d45437c7bb405
                        spec:
                            domains:
                                - domain: sample-php.example.com
                                  minimum_tls_version: "1.3"
                                  type: PRIMARY
                                  zone: example.com
                            name: sample-php
                            region: fra
                            services:
                                - environment_slug: php
                                  git:
                                    branch: main
                                    repo_clone_url: https://github.com/digitalocean/sample-php.git
                                  http_port: 8080
                                  instance_count: 1
                                  instance_size_slug: basic-xxs
                                  name: sample-php
                                  routes:
                                    - path: /
                                  run_command: heroku-php-apache2
                        updated_at: "2020-12-01T00:42:12Z"
                      cause: app spec updated
                      created_at: "2020-11-19T20:27:18Z"
                      default_ingress: https://sample-php-iaj87.ondigitalocean.app
                      domains:
                        - certificate_expires_at: "2024-01-29T23:59:59Z"
                          id: 0831f444-a1a7-11ed-828c-ef59494480b5
                          phase: ACTIVE
                          progress:
                            steps:
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: default-ingress-ready
                                  started_at: "2023-01-30T22:15:45.021896292Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-zone
                                  started_at: "2023-01-30T22:15:45.022017004Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:42:28.50752065Z"
                                  name: ensure-ns-records
                                  started_at: "2023-01-30T22:15:45.025567874Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: verify-nameservers
                                  started_at: "2023-01-30T22:15:45.033591906Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-record
                                  started_at: "2023-01-30T22:15:45.156750604Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.258626422Z"
                                  name: ensure-alias-record
                                  started_at: "2023-01-30T22:15:45.165933869Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.258808279Z"
                                  name: ensure-wildcard-record
                                  started_at: "2023-01-30T22:15:45.166093422Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: verify-cname
                                  started_at: "2023-01-30T22:15:45.166205559Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.475903785Z"
                                  name: ensure-ssl-txt-record-saved
                                  started_at: "2023-01-30T22:15:45.295237186Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.476017236Z"
                                  name: ensure-ssl-txt-record
                                  started_at: "2023-01-30T22:15:45.295315291Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:30.476094058Z"
                                  name: ensure-renewal-email
                                  started_at: "2023-01-30T22:15:45.295374087Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-CA-authorization
                                  started_at: "2023-01-30T22:15:45.295428101Z"
                                  status: SUCCESS
                                - ended_at: "0001-01-01T00:00:00Z"
                                  name: ensure-certificate
                                  started_at: "2023-01-30T22:15:45.978756406Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:52.570612857Z"
                                  name: create-deployment
                                  started_at: "0001-01-01T00:00:00Z"
                                  status: SUCCESS
                                - ended_at: "2023-01-30T15:43:31.333582377Z"
                                  name: configuration-alert
                                  started_at: "2023-01-30T22:15:46.278987808Z"
                                  status: SUCCESS
                          rotate_validation_records: false
                          spec:
                            domain: sample-php.example.com
                            minimum_tls_version: "1.3"
                            type: PRIMARY
                            zone: example.com
                      id: 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                      last_deployment_created_at: "2020-12-01T00:40:05Z"
                      live_domain: sample-php.example.com
                      live_url: https://sample-php.example.com
                      live_url_base: https://sample-php.example.com
                      owner_uuid: ff36cbc6fd350fe12577f5123133bb5ba01a2419
                      pending_deployment:
                        created_at: "2020-12-01T00:40:05Z"
                        id: 3aa4d20e-5527-4c00-b496-601fbd22520a
                        phase_last_updated_at: "2020-12-01T00:42:12Z"
                        services:
                            - name: sample-php
                              source_commit_hash: 54d4a727f457231062439895000d45437c7bb405
                        spec:
                            domains:
                                - domain: sample-php.example.com
                                  minimum_tls_version: "1.3"
                                  type: PRIMARY
                                  zone: example.com
                            name: sample-php
                            region: fra
                            services:
                                - environment_slug: php
                                  git:
                                    branch: main
                                    repo_clone_url: https://github.com/digitalocean/sample-php.git
                                  http_port: 8080
                                  instance_count: 1
                                  instance_size_slug: basic-xxs
                                  name: sample-php
                                  routes:
                                    - path: /
                                  run_command: heroku-php-apache2
                        updated_at: "2020-12-01T00:42:12Z"
                      progress:
                        phase: ACTIVE
                        steps:
                            - ended_at: "2020-12-01T00:41:26.653989756Z"
                              name: build
                              started_at: "2020-12-01T00:40:11.979257919Z"
                              status: SUCCESS
                              steps:
                                - ended_at: "2020-12-01T00:40:12.470972033Z"
                                  name: initialize
                                  started_at: "2020-12-01T00:40:11.979305214Z"
                                  status: SUCCESS
                                - ended_at: "2020-12-01T00:41:26.180360487Z"
                                  name: components
                                  started_at: "2020-12-01T00:40:12.470996857Z"
                                  status: SUCCESS
                                  steps:
                                    - component_name: sample-php
                                      ended_at: "0001-01-01T00:00:00Z"
                                      message_base: Building service
                                      name: sample-php
                                      started_at: "0001-01-01T00:00:00Z"
                                      status: SUCCESS
                        success_steps: 6
                        tier_slug: basic
                        total_steps: 6
                      region:
                        continent: Europe
                        data_centers:
                            - fra1
                        flag: germany
                        label: Frankfurt
                        slug: fra
                      spec:
                        domains:
                            - domain: sample-php.example.com
                              minimum_tls_version: "1.3"
                              type: PRIMARY
                              zone: example.com
                        name: sample-php
                        services:
                            - environment_slug: php
                              git:
                                branch: main
                                repo_clone_url: https://github.com/digitalocean/sample-php.git
                              http_port: 8080
                              instance_count: 1
                              instance_size_slug: basic-xxs
                              name: sample-php
                              routes:
                                - path: /
                              run_command: heroku-php-apache2
                      tier_slug: basic
                      updated_at: "2020-12-01T00:42:16Z"
                links:
                    pages: {}
                meta:
                    total: 1
        certificates_all:
            value:
                certificates:
                    - created_at: "2017-02-08T16:02:37Z"
                      dns_names:
                        - ""
                      id: 892071a0-bb95-49bc-8021-3afd67a210bf
                      name: web-cert-01
                      not_after: "2017-02-22T00:23:00Z"
                      sha1_fingerprint: dfcc9f57d86bf58e321c2c6c31c7a971be244ac7
                      state: verified
                      type: custom
                    - created_at: "2018-03-09T18:44:11Z"
                      dns_names:
                        - www.example.com
                        - example.com
                      id: ba9b9c18-6c59-46c2-99df-70da170a42ba
                      name: web-cert-02
                      not_after: "2018-06-07T17:44:12Z"
                      sha1_fingerprint: 479c82b5c63cb6d3e6fac4624d58a33b267e166c
                      state: verified
                      type: lets_encrypt
                links: {}
                meta:
                    total: 2
        certificates_custom:
            value:
                certificate:
                    created_at: "2017-02-08T16:02:37Z"
                    dns_names:
                        - ""
                    id: 892071a0-bb95-49bc-8021-3afd67a210bf
                    name: web-cert-01
                    not_after: "2017-02-22T00:23:00Z"
                    sha1_fingerprint: dfcc9f57d86bf58e321c2c6c31c7a971be244ac7
                    state: verified
                    type: custom
        certificates_lets_encrypt:
            value:
                certificate:
                    created_at: "2018-03-09T18:44:11Z"
                    dns_names:
                        - www.example.com
                        - example.com
                    id: ba9b9c18-6c59-46c2-99df-70da170a42ba
                    name: web-cert-02
                    not_after: "2018-06-07T17:44:12Z"
                    sha1_fingerprint: 479c82b5c63cb6d3e6fac4624d58a33b267e166c
                    state: verified
                    type: lets_encrypt
        certificates_lets_encrypt_pending:
            value:
                certificate:
                    created_at: "2018-03-09T18:44:11Z"
                    dns_names:
                        - www.example.com
                        - example.com
                    id: ba9b9c18-6c59-46c2-99df-70da170a42ba
                    name: web-cert-02
                    not_after: "2018-06-07T17:44:12Z"
                    sha1_fingerprint: 479c82b5c63cb6d3e6fac4624d58a33b267e166c
                    state: pending
                    type: lets_encrypt
        deployment:
            value:
                deployment:
                    cause: commit 9a4df0b pushed to github/digitalocean/sample-golang
                    created_at: "2020-07-28T18:00:00Z"
                    id: b6bdf840-2854-4f87-a36c-5f231c617c84
                    phase: PENDING_BUILD
                    phase_last_updated_at: "0001-01-01T00:00:00Z"
                    progress:
                        pending_steps: 6
                        steps:
                            - name: build
                              status: PENDING
                              steps:
                                - name: initialize
                                  status: PENDING
                                - name: components
                                  status: PENDING
                                  steps:
                                    - component_name: web
                                      message_base: Building service
                                      name: web
                                      status: PENDING
                            - name: deploy
                              status: PENDING
                              steps:
                                - name: initialize
                                  status: PENDING
                                - name: components
                                  status: PENDING
                                  steps:
                                    - component_name: web
                                      name: web
                                      status: PENDING
                                      steps:
                                        - component_name: web
                                          message_base: Deploying service
                                          name: deploy
                                          status: PENDING
                                        - component_name: web
                                          message_base: Waiting for service
                                          name: wait
                                          status: PENDING
                                - name: finalize
                                  status: PENDING
                        total_steps: 6
                    services:
                        - name: web
                          source_commit_hash: 9a4df0b8e161e323bc3cdf1dc71878080fe144fa
                    spec:
                        name: sample-golang
                        region: ams
                        services:
                            - environment_slug: go
                              github:
                                branch: branch
                                repo: digitalocean/sample-golang
                              instance_count: 2
                              instance_size_slug: basic-xxs
                              name: web
                              routes:
                                - path: /
                              run_command: bin/sample-golang
                    tier_slug: basic
                    updated_at: "2020-07-28T18:00:00Z"
        deployments:
            value:
                deployments:
                    - cause: commit 9a4df0b pushed to github/digitalocean/sample-golang
                      created_at: "2020-07-28T18:00:00Z"
                      id: b6bdf840-2854-4f87-a36c-5f231c617c84
                      phase: PENDING_BUILD
                      phase_last_updated_at: "0001-01-01T00:00:00Z"
                      progress:
                        pending_steps: 6
                        steps:
                            - name: build
                              status: PENDING
                              steps:
                                - name: initialize
                                  status: PENDING
                                - name: components
                                  status: PENDING
                                  steps:
                                    - component_name: web
                                      message_base: Building service
                                      name: web
                                      status: PENDING
                            - name: deploy
                              status: PENDING
                              steps:
                                - name: initialize
                                  status: PENDING
                                - name: components
                                  status: PENDING
                                  steps:
                                    - component_name: web
                                      name: web
                                      status: PENDING
                                      steps:
                                        - component_name: web
                                          message_base: Deploying service
                                          name: deploy
                                          status: PENDING
                                        - component_name: web
                                          message_base: Waiting for service
                                          name: wait
                                          status: PENDING
                                - name: finalize
                                  status: PENDING
                        total_steps: 6
                      services:
                        - name: web
                          source_commit_hash: 9a4df0b8e161e323bc3cdf1dc71878080fe144fa
                      spec:
                        name: sample-golang
                        region: ams
                        services:
                            - environment_slug: go
                              github:
                                branch: branch
                                repo: digitalocean/sample-golang
                              instance_count: 2
                              instance_size_slug: basic-xxs
                              name: web
                              routes:
                                - path: /
                              run_command: bin/sample-golang
                      tier_slug: basic
                      updated_at: "2020-07-28T18:00:00Z"
                links:
                    pages: {}
                meta:
                    total: 1
        domain_records_all:
            value:
                domain_records:
                    - data: ns1.digitalocean.com
                      flags: null
                      id: 2.8448429e+07
                      name: '@'
                      port: null
                      priority: null
                      tag: null
                      ttl: 1800
                      type: NS
                      weight: null
                    - data: ns2.digitalocean.com
                      flags: null
                      id: 2.844843e+07
                      name: '@'
                      port: null
                      priority: null
                      tag: null
                      ttl: 1800
                      type: NS
                      weight: null
                    - data: ns3.digitalocean.com
                      flags: null
                      id: 2.8448431e+07
                      name: '@'
                      port: null
                      priority: null
                      tag: null
                      ttl: 1800
                      type: NS
                      weight: null
                    - data: 1.2.3.4
                      flags: null
                      id: 2.8448432e+07
                      name: '@'
                      port: null
                      priority: null
                      tag: null
                      ttl: 1800
                      type: A
                      weight: null
                links: {}
                meta:
                    total: 4
        droplet_cpu:
            value:
                data:
                    result:
                        - metric:
                            host_id: "222651441"
                            mode: idle
                          values:
                            - - 1.63538688e+09
                              - "122901.18"
                            - - 1.635387e+09
                              - "123020.92"
                            - - 1.63538712e+09
                              - "123140.8"
                        - metric:
                            host_id: "222651441"
                            mode: iowait
                          values:
                            - - 1.63538688e+09
                              - "14.99"
                            - - 1.635387e+09
                              - "15.01"
                            - - 1.63538712e+09
                              - "15.01"
                        - metric:
                            host_id: "222651441"
                            mode: irq
                          values:
                            - - 1.63538688e+09
                              - "0"
                            - - 1.635387e+09
                              - "0"
                            - - 1.63538712e+09
                              - "0"
                        - metric:
                            host_id: "222651441"
                            mode: nice
                          values:
                            - - 1.63538688e+09
                              - "66.35"
                            - - 1.635387e+09
                              - "66.35"
                            - - 1.63538712e+09
                              - "66.35"
                        - metric:
                            host_id: "222651441"
                            mode: softirq
                          values:
                            - - 1.63538688e+09
                              - "2.13"
                            - - 1.635387e+09
                              - "2.13"
                            - - 1.63538712e+09
                              - "2.13"
                        - metric:
                            host_id: "222651441"
                            mode: steal
                          values:
                            - - 1.63538688e+09
                              - "7.89"
                            - - 1.635387e+09
                              - "7.9"
                            - - 1.63538712e+09
                              - "7.91"
                        - metric:
                            host_id: "222651441"
                            mode: system
                          values:
                            - - 1.63538688e+09
                              - "140.09"
                            - - 1.635387e+09
                              - "140.2"
                            - - 1.63538712e+09
                              - "140.23"
                        - metric:
                            host_id: "222651441"
                            mode: user
                          values:
                            - - 1.63538688e+09
                              - "278.57"
                            - - 1.635387e+09
                              - "278.65"
                            - - 1.63538712e+09
                              - "278.69"
                    resultType: matrix
                status: success
        droplet_create_request:
            value:
                backups: true
                image: ubuntu-20-04-x64
                ipv6: true
                monitoring: true
                name: example.com
                region: nyc3
                size: s-1vcpu-1gb
                ssh_keys:
                    - 289794
                    - 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
                tags:
                    - env:prod
                    - web
                user_data: |
                    #cloud-config
                    runcmd:
                      - touch /test.txt
                vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
        droplet_create_response:
            value:
                droplet:
                    backup_ids: []
                    created_at: "2020-07-21T18:37:44Z"
                    disk: 25
                    features:
                        - backups
                        - private_networking
                        - ipv6
                        - monitoring
                    id: 3.164444e+06
                    image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                    kernel: null
                    locked: false
                    memory: 1024
                    name: example.com
                    networks:
                        v4: []
                        v6: []
                    next_backup_window: null
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                    size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                    size_slug: s-1vcpu-1gb
                    snapshot_ids: []
                    status: new
                    tags:
                        - web
                        - env:prod
                    vcpus: 1
                    volume_ids: []
                links:
                    actions:
                        - href: https://api.digitalocean.com/v2/actions/7515
                          id: 7515
                          rel: create
        droplet_filesystem:
            value:
                data:
                    result:
                        - metric:
                            device: /dev/vda1
                            fstype: ext4
                            host_id: "222651441"
                            mountpoint: /
                          values:
                            - - 1.63538688e+09
                              - "25832407040"
                            - - 1.635387e+09
                              - "25832407040"
                            - - 1.63538712e+09
                              - "25832407040"
                    resultType: matrix
                status: success
        droplet_multi_create_request:
            value:
                backups: true
                image: ubuntu-20-04-x64
                ipv6: true
                monitoring: true
                names:
                    - sub-01.example.com
                    - sub-02.example.com
                region: nyc3
                size: s-1vcpu-1gb
                ssh_keys:
                    - 289794
                    - 3b:16:e4:bf:8b:00:8b:b8:59:8c:a9:d3:f0:19:fa:45
                tags:
                    - env:prod
                    - web
                user_data: |
                    #cloud-config
                    runcmd:
                      - touch /test.txt
                vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
        droplet_multi_create_response:
            value:
                droplets:
                    - backup_ids: []
                      created_at: "2020-07-21T18:37:44Z"
                      disk: 25
                      features:
                        - backups
                        - private_networking
                        - ipv6
                        - monitoring
                      id: 3.164444e+06
                      image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                      kernel: null
                      locked: false
                      memory: 1024
                      name: sub-01.example.com
                      networks:
                        v4: []
                        v6: []
                      next_backup_window: null
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                      size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                      size_slug: s-1vcpu-1gb
                      snapshot_ids: []
                      status: new
                      tags:
                        - web
                        - env:prod
                      vcpus: 1
                      volume_ids: []
                    - backup_ids: []
                      created_at: "2020-07-21T18:37:44Z"
                      disk: 25
                      features:
                        - backups
                        - private_networking
                        - ipv6
                        - monitoring
                      id: 3.164445e+06
                      image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                      kernel: null
                      locked: false
                      memory: 1024
                      name: sub-02.example.com
                      networks:
                        v4: []
                        v6: []
                      next_backup_window: null
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                      size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                      size_slug: s-1vcpu-1gb
                      snapshot_ids: []
                      status: new
                      tags:
                        - web
                        - env:prod
                      vcpus: 1
                      volume_ids: []
                links:
                    actions:
                        - href: https://api.digitalocean.com/v2/actions/7515
                          id: 7515
                          rel: create
                        - href: https://api.digitalocean.com/v2/actions/7516
                          id: 7516
                          rel: create
        droplet_single:
            value:
                droplet:
                    backup_ids:
                        - 5.3893572e+07
                    created_at: "2020-07-21T18:37:44Z"
                    disk: 25
                    features:
                        - backups
                        - private_networking
                        - ipv6
                    id: 3.164444e+06
                    image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                    kernel: null
                    locked: false
                    memory: 1024
                    name: example.com
                    networks:
                        v4:
                            - gateway: nil
                              ip_address: 10.128.192.124
                              netmask: 255.255.0.0
                              type: private
                            - gateway: 192.241.165.1
                              ip_address: 192.241.165.154
                              netmask: 255.255.255.0
                              type: public
                        v6:
                            - gateway: 2604:a880:0:1010::1
                              ip_address: 2604:a880:0:1010::18a:a001
                              netmask: 64
                              type: public
                    next_backup_window:
                        end: "2020-07-30T23:00:00Z"
                        start: "2020-07-30T00:00:00Z"
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                    size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                    size_slug: s-1vcpu-1gb
                    snapshot_ids:
                        - 6.7512819e+07
                    status: active
                    tags:
                        - web
                        - env:prod
                    vcpus: 1
                    volume_ids: []
                    vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
        droplets_all:
            value:
                droplets:
                    - backup_ids:
                        - 5.3893572e+07
                      created_at: "2020-07-21T18:37:44Z"
                      disk: 25
                      features:
                        - backups
                        - private_networking
                        - ipv6
                      id: 3.164444e+06
                      image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                      kernel: null
                      locked: false
                      memory: 1024
                      name: example.com
                      networks:
                        v4:
                            - gateway: nil
                              ip_address: 10.128.192.124
                              netmask: 255.255.0.0
                              type: private
                            - gateway: 192.241.165.1
                              ip_address: 192.241.165.154
                              netmask: 255.255.255.0
                              type: public
                        v6:
                            - gateway: 2604:a880:0:1010::1
                              ip_address: 2604:a880:0:1010::18a:a001
                              netmask: 64
                              type: public
                      next_backup_window:
                        end: "2020-07-30T23:00:00Z"
                        start: "2020-07-30T00:00:00Z"
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                      size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                      size_slug: s-1vcpu-1gb
                      snapshot_ids:
                        - 6.7512819e+07
                      status: active
                      tags:
                        - web
                        - env:prod
                      vcpus: 1
                      volume_ids: []
                      vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
                    - backup_ids: []
                      created_at: "2020-07-21T18:42:27Z"
                      disk: 25
                      features:
                        - private_networking
                      id: 3.164459e+06
                      image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                      kernel: null
                      locked: false
                      memory: 1024
                      name: assets.example.com
                      networks:
                        v4:
                            - gateway: nil
                              ip_address: 10.128.192.138
                              netmask: 255.255.0.0
                              type: private
                            - gateway: 162.243.0.1
                              ip_address: 162.243.0.4
                              netmask: 255.255.255.0
                              type: public
                        v6: []
                      next_backup_window:
                        end: "2020-07-30T23:00:00Z"
                        start: "2020-07-30T00:00:00Z"
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                      size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                      size_slug: s-1vcpu-1gb
                      snapshot_ids: []
                      status: active
                      tags:
                        - storage
                        - env:prod
                      vcpus: 1
                      volume_ids:
                        - 506f78a4-e098-11e5-ad9f-000f53306ae1
                      vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
                    - backup_ids: []
                      created_at: "2020-07-21T18:32:55Z"
                      disk: 25
                      features:
                        - private_networking
                      id: 3.164412e+06
                      image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                      kernel: null
                      locked: false
                      memory: 1024
                      name: stage.example.com
                      networks:
                        v4:
                            - gateway: nil
                              ip_address: 10.128.192.125
                              netmask: 255.255.0.0
                              type: private
                            - gateway: 192.241.247.1
                              ip_address: 192.241.247.248
                              netmask: 255.255.255.0
                              type: public
                        v6: []
                      next_backup_window:
                        end: "2020-07-30T23:00:00Z"
                        start: "2020-07-30T00:00:00Z"
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                      size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                      size_slug: s-1vcpu-1gb
                      snapshot_ids: []
                      status: active
                      tags:
                        - env:stage
                      vcpus: 1
                      volume_ids:
                        - 7724db7c-e098-11e5-b522-000f53304e51
                      vpc_uuid: 5a4981aa-9653-4bd1-bef5-d6bff52042e4
                links:
                    pages: {}
                meta:
                    total: 3
        droplets_tagged:
            value:
                droplets:
                    - backup_ids:
                        - 5.3893572e+07
                      created_at: "2020-07-21T18:37:44Z"
                      disk: 25
                      features:
                        - backups
                        - private_networking
                        - ipv6
                      id: 3.164444e+06
                      image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                      kernel: null
                      locked: false
                      memory: 1024
                      name: example.com
                      networks:
                        v4:
                            - gateway: nil
                              ip_address: 10.128.192.124
                              netmask: 255.255.0.0
                              type: private
                            - gateway: 192.241.165.1
                              ip_address: 192.241.165.154
                              netmask: 255.255.255.0
                              type: public
                        v6:
                            - gateway: 2604:a880:0:1010::1
                              ip_address: 2604:a880:0:1010::18a:a001
                              netmask: 64
                              type: public
                      next_backup_window:
                        end: "2020-07-30T23:00:00Z"
                        start: "2020-07-30T00:00:00Z"
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                      size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                      size_slug: s-1vcpu-1gb
                      snapshot_ids:
                        - 6.7512819e+07
                      status: active
                      tags:
                        - web
                        - env:prod
                      vcpus: 1
                      volume_ids: []
                      vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
                    - backup_ids: []
                      created_at: "2020-07-21T18:42:27Z"
                      disk: 25
                      features:
                        - private_networking
                      id: 3.164459e+06
                      image:
                        created_at: "2020-05-15T05:47:50Z"
                        description: ""
                        distribution: Ubuntu
                        error_message: ""
                        id: 6.366398e+07
                        min_disk_size: 20
                        name: 20.04 (LTS) x64
                        public: true
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        size_gigabytes: 2.36
                        slug: ubuntu-20-04-x64
                        status: available
                        tags: []
                        type: snapshot
                      kernel: null
                      locked: false
                      memory: 1024
                      name: assets.example.com
                      networks:
                        v4:
                            - gateway: nil
                              ip_address: 10.128.192.138
                              netmask: 255.255.0.0
                              type: private
                            - gateway: 162.243.0.1
                              ip_address: 162.243.0.4
                              netmask: 255.255.255.0
                              type: public
                        v6: []
                      next_backup_window:
                        end: "2020-07-30T23:00:00Z"
                        start: "2020-07-30T00:00:00Z"
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                      size:
                        available: true
                        description: Basic
                        disk: 25
                        memory: 1024
                        price_hourly: 0.00743999984115362
                        price_monthly: 5
                        regions:
                            - ams2
                            - ams3
                            - blr1
                            - fra1
                            - lon1
                            - nyc1
                            - nyc2
                            - nyc3
                            - sfo1
                            - sfo2
                            - sfo3
                            - sgp1
                            - tor1
                        slug: s-1vcpu-1gb
                        transfer: 1
                        vcpus: 1
                      size_slug: s-1vcpu-1gb
                      snapshot_ids: []
                      status: active
                      tags:
                        - storage
                        - env:prod
                      vcpus: 1
                      volume_ids:
                        - 506f78a4-e098-11e5-ad9f-000f53306ae1
                      vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
                links:
                    pages: {}
                meta:
                    total: 2
        floating_ip_assigned:
            summary: Assigned to Droplet
            value:
                floating_ip:
                    droplet:
                        backup_ids:
                            - 5.3893572e+07
                        created_at: "2020-07-21T18:37:44Z"
                        disk: 25
                        features:
                            - backups
                            - private_networking
                            - ipv6
                        id: 3.164444e+06
                        image:
                            created_at: "2020-05-15T05:47:50Z"
                            description: ""
                            distribution: Ubuntu
                            error_message: ""
                            id: 6.366398e+07
                            min_disk_size: 20
                            name: 20.04 (LTS) x64
                            public: true
                            regions:
                                - ams2
                                - ams3
                                - blr1
                                - fra1
                                - lon1
                                - nyc1
                                - nyc2
                                - nyc3
                                - sfo1
                                - sfo2
                                - sfo3
                                - sgp1
                                - tor1
                            size_gigabytes: 2.36
                            slug: ubuntu-20-04-x64
                            status: available
                            tags: []
                            type: base
                        kernel: null
                        locked: false
                        memory: 1024
                        name: example.com
                        networks:
                            v4:
                                - gateway: nil
                                  ip_address: 10.128.192.124
                                  netmask: 255.255.0.0
                                  type: private
                                - gateway: 192.241.165.1
                                  ip_address: 192.241.165.154
                                  netmask: 255.255.255.0
                                  type: public
                            v6:
                                - gateway: 2604:a880:0:1010::1
                                  ip_address: 2604:a880:0:1010::18a:a001
                                  netmask: 64
                                  type: public
                        next_backup_window:
                            end: "2020-07-30T23:00:00Z"
                            start: "2020-07-30T00:00:00Z"
                        region:
                            available: true
                            features:
                                - backups
                                - ipv6
                                - metadata
                                - install_agent
                                - storage
                                - image_transfer
                            name: New York 3
                            sizes:
                                - s-1vcpu-1gb
                                - s-1vcpu-2gb
                                - s-1vcpu-3gb
                                - s-2vcpu-2gb
                                - s-3vcpu-1gb
                                - s-2vcpu-4gb
                                - s-4vcpu-8gb
                                - s-6vcpu-16gb
                                - s-8vcpu-32gb
                                - s-12vcpu-48gb
                                - s-16vcpu-64gb
                                - s-20vcpu-96gb
                                - s-24vcpu-128gb
                                - s-32vcpu-192g
                            slug: nyc3
                        size:
                            available: true
                            description: Basic
                            disk: 25
                            memory: 1024
                            price_hourly: 0.00743999984115362
                            price_monthly: 5
                            regions:
                                - ams2
                                - ams3
                                - blr1
                                - fra1
                                - lon1
                                - nyc1
                                - nyc2
                                - nyc3
                                - sfo1
                                - sfo2
                                - sfo3
                                - sgp1
                                - tor1
                            slug: s-1vcpu-1gb
                            transfer: 1
                            vcpus: 1
                        size_slug: s-1vcpu-1gb
                        snapshot_ids:
                            - 6.7512819e+07
                        status: active
                        tags:
                            - web
                            - env:prod
                        vcpus: 1
                        volume_ids: []
                        vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
                    ip: 45.55.96.47
                    locked: false
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
        floating_ip_assigning:
            summary: Assigning to Droplet
            value:
                floating_ip:
                    droplet: null
                    ip: 45.55.96.47
                    locked: true
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                links:
                    actions:
                        - href: https://api.digitalocean.com/v2/actions/1088924622
                          id: 1.088924622e+09
                          rel: assign_ip
                    droplets:
                        - href: https://api.digitalocean.com/v2/droplets/213939433
                          id: 2.13939433e+08
                          rel: droplet
        floating_ip_reserved:
            summary: Reserved to Region
            value:
                floating_ip:
                    droplet: null
                    ip: 45.55.96.47
                    locked: false
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
        floating_ip_reserving:
            summary: Reserving to Region
            value:
                floating_ip:
                    droplet: null
                    ip: 45.55.96.47
                    locked: false
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
                links: {}
        images_all:
            value:
                images:
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Ubuntu
                      error_message: ""
                      id: 7.55562e+06
                      min_disk_size: 20
                      name: Nifty New Snapshot
                      public: false
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: snapshot
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Ubuntu
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: Another Snapshot
                      public: false
                      regions:
                        - nyc2
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: snapshot
                    - created_at: "2020-05-15T05:47:50Z"
                      description: ""
                      distribution: Ubuntu
                      error_message: ""
                      id: 6.366398e+07
                      min_disk_size: 20
                      name: 20.04 (LTS) x64
                      public: true
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.36
                      slug: ubuntu-20-04-x64
                      status: available
                      tags: []
                      type: snapshot
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Arch Linux
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: A custom image
                      public: false
                      regions:
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: custom
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Fedora
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: An APP image
                      public: false
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: snapshot
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: CentOS
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: A simple tagged image
                      public: false
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags:
                        - simple-image
                      type: snapshot
                links:
                    pages: {}
                meta:
                    total: 6
        images_application:
            description: "**Important:**  \nThe `type` query parameter is not directly related to the `type` attribute.\n"
            value:
                images:
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Fedora
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: An APP image
                      public: false
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: snapshot
                links:
                    pages: {}
                meta:
                    total: 1
        images_custom:
            value:
                images:
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Arch Linux
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: A custom image
                      public: false
                      regions:
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: custom
                links:
                    pages: {}
                meta:
                    total: 1
        images_distribution:
            description: "**Important:**  \nThe `type` query parameter is not directly related to the `type` attribute.\nThe main thing to remember here is that DigitalOcean-produced distribution images will have `snapshot` as the type attribute. \n"
            value:
                images:
                    - created_at: "2020-05-15T05:47:50Z"
                      description: ""
                      distribution: Ubuntu
                      error_message: ""
                      id: 6.366398e+07
                      min_disk_size: 20
                      name: 20.04 (LTS) x64
                      public: true
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.36
                      slug: ubuntu-20-04-x64
                      status: available
                      tags: []
                      type: snapshot
                links:
                    pages: {}
                meta:
                    total: 1
        images_snapshots:
            value:
                images:
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Ubuntu
                      error_message: ""
                      id: 7.55562e+06
                      min_disk_size: 20
                      name: Nifty New Snapshot
                      public: false
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: snapshot
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: Ubuntu
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: Another Snapshot
                      public: false
                      regions:
                        - nyc2
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags: []
                      type: snapshot
                links:
                    pages: {}
                meta:
                    total: 2
        images_tagged:
            value:
                images:
                    - created_at: "2014-11-04T22:23:02Z"
                      description: ""
                      distribution: CentOS
                      error_message: ""
                      id: 7.555621e+06
                      min_disk_size: 20
                      name: A simple tagged image
                      public: false
                      regions:
                        - nyc2
                        - nyc3
                      size_gigabytes: 2.34
                      slug: null
                      status: available
                      tags:
                        - simple-image
                      type: snapshot
                links:
                    pages: {}
                meta:
                    total: 1
        inbound_private_droplet_bandwidth:
            value:
                data:
                    result:
                        - metric:
                            direction: inbound
                            host_id: "222651441"
                            interface: private
                          values:
                            - - 1.63405236e+09
                              - "0.016600450090265357"
                            - - 1.63405248e+09
                              - "0.015085955677299055"
                            - - 1.6340526e+09
                              - "0.014941163855322308"
                            - - 1.63405272e+09
                              - "0.016214285714285712"
                    resultType: matrix
                status: success
        inbound_public_droplet_bandwidth:
            value:
                data:
                    result:
                        - metric:
                            direction: inbound
                            host_id: "222651441"
                            interface: public
                          values:
                            - - 1.63405236e+09
                              - "0.016600450090265357"
                            - - 1.63405248e+09
                              - "0.015085955677299055"
                            - - 1.6340526e+09
                              - "0.014941163855322308"
                            - - 1.63405272e+09
                              - "0.016214285714285712"
                    resultType: matrix
                status: success
        instance_size:
            value:
                instance_size:
                    cpu_type: SHARED
                    cpus: "1"
                    memory_bytes: "536870912"
                    name: Basic XXS
                    slug: basic-xxs
                    tier_slug: basic
                    tier_upgrade_to: professional-xs
                    usd_per_month: "5.00"
                    usd_per_second: "0.000002066799"
        instance_sizes:
            value:
                instance_sizes:
                    - cpu_type: SHARED
                      cpus: "1"
                      memory_bytes: "536870912"
                      name: Basic XXS
                      slug: basic-xxs
                      tier_slug: basic
                      tier_upgrade_to: professional-xs
                      usd_per_month: "5.00"
                      usd_per_second: "0.000002066799"
                    - cpu_type: SHARED
                      cpus: "1"
                      memory_bytes: "1073741824"
                      name: Basic XS
                      slug: basic-xs
                      tier_slug: basic
                      tier_upgrade_to: professional-xs
                      usd_per_month: "10.00"
                      usd_per_second: "0.000004133598"
                    - cpu_type: SHARED
                      cpus: "1"
                      memory_bytes: "2147483648"
                      name: Basic S
                      slug: basic-s
                      tier_slug: basic
                      tier_upgrade_to: professional-s
                      usd_per_month: "20.00"
                      usd_per_second: "0.000008267196"
                    - cpu_type: SHARED
                      cpus: "2"
                      memory_bytes: "4294967296"
                      name: Basic M
                      slug: basic-m
                      tier_slug: basic
                      tier_upgrade_to: professional-m
                      usd_per_month: "40.00"
                      usd_per_second: "0.000016534392"
                    - cpu_type: SHARED
                      cpus: "1"
                      memory_bytes: "1073741824"
                      name: Professional XS
                      slug: professional-xs
                      tier_downgrade_to: basic-xs
                      tier_slug: professional
                      usd_per_month: "12.00"
                      usd_per_second: "0.000004960317"
                    - cpu_type: SHARED
                      cpus: "1"
                      memory_bytes: "2147483648"
                      name: Professional S
                      slug: professional-s
                      tier_downgrade_to: basic-s
                      tier_slug: professional
                      usd_per_month: "25.00"
                      usd_per_second: "0.000010333995"
                    - cpu_type: SHARED
                      cpus: "2"
                      memory_bytes: "4294967296"
                      name: Professional M
                      slug: professional-m
                      tier_downgrade_to: basic-s
                      tier_slug: professional
                      usd_per_month: "50.00"
                      usd_per_second: "0.000020667989"
                    - cpu_type: DEDICATED
                      cpus: "1"
                      memory_bytes: "4294967296"
                      name: Professional 1L
                      slug: professional-1l
                      tier_downgrade_to: basic-m
                      tier_slug: professional
                      usd_per_month: "75.00"
                      usd_per_second: "0.000031001984"
                    - cpu_type: DEDICATED
                      cpus: "2"
                      memory_bytes: "8589934592"
                      name: Professional L
                      slug: professional-l
                      tier_downgrade_to: basic-s
                      tier_slug: professional
                      usd_per_month: "150.00"
                      usd_per_second: "0.000062003968"
                    - cpu_type: DEDICATED
                      cpus: "4"
                      memory_bytes: "17179869184"
                      name: Professional XL
                      slug: professional-xl
                      tier_downgrade_to: basic-s
                      tier_slug: professional
                      usd_per_month: "300.00"
                      usd_per_second: "0.000124007937"
        kubernetes_clusters_all:
            value:
                kubernetes_clusters:
                    - auto_upgrade: false
                      cluster_subnet: 10.244.0.0/16
                      created_at: "2018-11-15T16:00:11Z"
                      endpoint: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
                      ha: false
                      id: bd5f5959-5e1e-4205-a714-a914373942af
                      ipv4: 68.183.121.157
                      maintenance_policy:
                        day: any
                        duration: 4h0m0s
                        start_time: "00:00"
                      name: prod-cluster-01
                      node_pools:
                        - auto_scale: false
                          count: 3
                          id: cdda885e-7663-40c8-bc74-3a036c66545d
                          labels: null
                          max_nodes: 0
                          min_nodes: 0
                          name: frontend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545370"
                              id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                              name: adoring-newton-3niq
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545371"
                              id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                              name: adoring-newton-3nim
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545372"
                              id: e46e8d07-f58f-4ff1-9737-97246364400e
                              name: adoring-newton-3ni7
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                          size: s-1vcpu-2gb
                          tags:
                            - production
                            - web-team
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                        - auto_scale: true
                          count: 2
                          id: f49f4379-7e7f-4af5-aeb6-0354bd840778
                          labels:
                            priority: high
                            service: backend
                          max_nodes: 5
                          min_nodes: 2
                          name: backend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545373"
                              id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                              name: affectionate-nightingale-3nif
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545374"
                              id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                              name: affectionate-nightingale-3niy
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                          size: g-4vcpu-16gb
                          tags:
                            - production
                            - web-team
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                      region: nyc1
                      registry_enabled: false
                      service_subnet: 10.245.0.0/16
                      status:
                        message: provisioning
                        state: provisioning
                      surge_upgrade: false
                      tags:
                        - production
                        - web-team
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                      updated_at: "2018-11-15T16:00:11Z"
                      version: 1.18.6-do.0
                      vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
                meta:
                    total: 1
        kubernetes_clusters_basic_request:
            value:
                name: prod-cluster-01
                node_pools:
                    - count: 3
                      name: worker-pool
                      size: s-1vcpu-2gb
                region: nyc1
                version: 1.18.6-do.0
        kubernetes_clusters_create_basic_response:
            value:
                kubernetes_cluster:
                    auto_upgrade: false
                    cluster_subnet: 10.244.0.0/16
                    created_at: "2018-11-15T16:00:11Z"
                    endpoint: ""
                    ha: false
                    id: bd5f5959-5e1e-4205-a714-a914373942af
                    ipv4: ""
                    maintenance_policy:
                        day: any
                        duration: 4h0m0s
                        start_time: "00:00"
                    name: prod-cluster-01
                    node_pools:
                        - auto_scale: false
                          count: 3
                          id: cdda885e-7663-40c8-bc74-3a036c66545d
                          labels: null
                          max_nodes: 0
                          min_nodes: 0
                          name: worker-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: e46e8d07-f58f-4ff1-9737-97246364400e
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                          size: s-1vcpu-2gb
                          tags:
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                    region: nyc1
                    registry_enabled: false
                    service_subnet: 10.245.0.0/16
                    status:
                        message: provisioning
                        state: provisioning
                    surge_upgrade: false
                    tags:
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                    updated_at: "2018-11-15T16:00:11Z"
                    version: 1.18.6-do.0
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        kubernetes_clusters_multi_pool_request:
            description: |
                This example request creates a Kubernetes cluster with two node pools. It
                also demonstrates setting tags, labels, auto scaling, and a maintenance
                policy.
            value:
                maintenance_policy:
                    day: any
                    start_time: "12:00"
                name: prod-cluster-01
                node_pools:
                    - count: 3
                      name: frontend-pool
                      size: s-1vcpu-2gb
                      tags:
                        - frontend
                    - auto_scale: true
                      count: 2
                      labels:
                        priority: high
                        service: backend
                      max_nodes: 5
                      min_nodes: 2
                      name: backend-pool
                      size: g-4vcpu-16gb
                region: nyc1
                tags:
                    - production
                    - web-team
                version: 1.18.6-do.0
        kubernetes_clusters_multi_pool_response:
            value:
                kubernetes_clusters:
                    auto_upgrade: false
                    cluster_subnet: 10.244.0.0/16
                    created_at: "2018-11-15T16:00:11Z"
                    endpoint: ""
                    ha: false
                    id: bd5f5959-5e1e-4205-a714-a914373942af
                    ipv4: ""
                    maintenance_policy:
                        day: any
                        duration: 4h0m0s
                        start_time: "12:00"
                    name: prod-cluster-01
                    node_pools:
                        - auto_scale: false
                          count: 3
                          id: cdda885e-7663-40c8-bc74-3a036c66545d
                          labels: null
                          max_nodes: 0
                          min_nodes: 0
                          name: frontend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: e46e8d07-f58f-4ff1-9737-97246364400e
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                          size: s-1vcpu-2gb
                          tags:
                            - production
                            - web-team
                            - frontend
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                        - auto_scale: true
                          count: 2
                          id: f49f4379-7e7f-4af5-aeb6-0354bd840778
                          labels:
                            priority: high
                            service: backend
                          max_nodes: 5
                          min_nodes: 2
                          name: backend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: ""
                              id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                              name: ""
                              status:
                                state: provisioning
                              updated_at: "2018-11-15T16:00:11Z"
                          size: g-4vcpu-16gb
                          tags:
                            - production
                            - web-team
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                    region: nyc1
                    registry_enabled: false
                    service_subnet: 10.245.0.0/16
                    status:
                        message: provisioning
                        state: provisioning
                    surge_upgrade: false
                    tags:
                        - production
                        - web-team
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                    updated_at: "2018-11-15T16:00:11Z"
                    version: 1.18.6-do.0
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        kubernetes_options:
            value:
                options:
                    regions:
                        - name: New York 1
                          slug: nyc1
                        - name: Singapore 1
                          slug: sgp1
                        - name: London 1
                          slug: lon1
                        - name: New York 3
                          slug: nyc3
                        - name: Amsterdam 3
                          slug: ams3
                        - name: Frankfurt 1
                          slug: fra1
                        - name: Toronto 1
                          slug: tor1
                        - name: San Francisco 2
                          slug: sfo2
                        - name: Bangalore 1
                          slug: blr1
                        - name: San Francisco 3
                          slug: sfo3
                    sizes:
                        - name: s-1vcpu-2gb
                          slug: s-1vcpu-2gb
                        - name: s-2vcpu-2gb
                          slug: s-2vcpu-2gb
                        - name: s-1vcpu-3gb
                          slug: s-1vcpu-3gb
                        - name: s-2vcpu-4gb
                          slug: s-2vcpu-4gb
                        - name: s-4vcpu-8gb
                          slug: s-4vcpu-8gb
                        - name: c-2-4GiB
                          slug: c-2
                        - name: g-2vcpu-8gb
                          slug: g-2vcpu-8gb
                        - name: gd-2vcpu-8gb
                          slug: gd-2vcpu-8gb
                        - name: s-8vcpu-16gb
                          slug: s-8vcpu-16gb
                        - name: s-6vcpu-16gb
                          slug: s-6vcpu-16gb
                        - name: c-4-8GiB
                          slug: c-4
                        - name: m-2vcpu-16gb
                          slug: m-2vcpu-16gb
                        - name: m3-2vcpu-16gb
                          slug: m3-2vcpu-16gb
                        - name: g-4vcpu-16gb
                          slug: g-4vcpu-16gb
                        - name: gd-4vcpu-16gb
                          slug: gd-4vcpu-16gb
                        - name: m6-2vcpu-16gb
                          slug: m6-2vcpu-16gb
                        - name: s-8vcpu-32gb
                          slug: s-8vcpu-32gb
                        - name: c-8-16GiB
                          slug: c-8
                        - name: m-4vcpu-32gb
                          slug: m-4vcpu-32gb
                        - name: m3-4vcpu-32gb
                          slug: m3-4vcpu-32gb
                        - name: g-8vcpu-32gb
                          slug: g-8vcpu-32gb
                        - name: s-12vcpu-48gb
                          slug: s-12vcpu-48gb
                        - name: gd-8vcpu-32gb
                          slug: gd-8vcpu-32gb
                        - name: m6-4vcpu-32gb
                          slug: m6-4vcpu-32gb
                        - name: s-16vcpu-64gb
                          slug: s-16vcpu-64gb
                        - name: c-16
                          slug: c-16
                        - name: m-8vcpu-64gb
                          slug: m-8vcpu-64gb
                        - name: m3-8vcpu-64gb
                          slug: m3-8vcpu-64gb
                        - name: g-16vcpu-64gb
                          slug: g-16vcpu-64gb
                        - name: s-20vcpu-96gb
                          slug: s-20vcpu-96gb
                        - name: gd-16vcpu-64gb
                          slug: gd-16vcpu-64gb
                        - name: m6-8vcpu-64gb
                          slug: m6-8vcpu-64gb
                        - name: s-24vcpu-128gb
                          slug: s-24vcpu-128gb
                        - name: c-32-64GiB
                          slug: c-32
                        - name: m-16vcpu-128gb
                          slug: m-16vcpu-128gb
                        - name: m3-16vcpu-128gb
                          slug: m3-16vcpu-128gb
                        - name: g-32vcpu-128gb
                          slug: g-32vcpu-128gb
                        - name: s-32vcpu-192gb
                          slug: s-32vcpu-192gb
                        - name: gd-32vcpu-128gb
                          slug: gd-32vcpu-128gb
                        - name: m-24vcpu-192gb
                          slug: m-24vcpu-192gb
                        - name: m6-16vcpu-128gb
                          slug: m6-16vcpu-128gb
                        - name: g-40vcpu-160gb
                          slug: g-40vcpu-160gb
                        - name: gd-40vcpu-160gb
                          slug: gd-40vcpu-160gb
                        - name: m3-24vcpu-192gb
                          slug: m3-24vcpu-192gb
                        - name: m-32vcpu-256gb
                          slug: m-32vcpu-256gb
                        - name: m6-24vcpu-192gb
                          slug: m6-24vcpu-192gb
                        - name: m3-32vcpu-256gb
                          slug: m3-32vcpu-256gb
                        - name: m6-32vcpu-256gb
                          slug: m6-32vcpu-256gb
                    versions:
                        - kubernetes_version: 1.18.8
                          slug: 1.18.8-do.0
                          supported_features:
                            - cluster-autoscaler
                            - docr-integration
                            - token-authentication
                        - kubernetes_version: 1.17.11
                          slug: 1.17.11-do.0
                          supported_features:
                            - cluster-autoscaler
                            - docr-integration
                            - token-authentication
                        - kubernetes_version: 1.16.14
                          slug: 1.16.14-do.0
                          supported_features:
                            - cluster-autoscaler
                            - docr-integration
                            - token-authentication
        kubernetes_single:
            value:
                kubernetes_cluster:
                    auto_upgrade: false
                    cluster_subnet: 10.244.0.0/16
                    created_at: "2018-11-15T16:00:11Z"
                    endpoint: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
                    ha: false
                    id: bd5f5959-5e1e-4205-a714-a914373942af
                    ipv4: 68.183.121.157
                    maintenance_policy:
                        day: any
                        duration: 4h0m0s
                        start_time: "00:00"
                    name: prod-cluster-01
                    node_pools:
                        - auto_scale: false
                          count: 3
                          id: cdda885e-7663-40c8-bc74-3a036c66545d
                          labels: null
                          max_nodes: 0
                          min_nodes: 0
                          name: frontend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545370"
                              id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                              name: adoring-newton-3niq
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545371"
                              id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                              name: adoring-newton-3nim
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545372"
                              id: e46e8d07-f58f-4ff1-9737-97246364400e
                              name: adoring-newton-3ni7
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                          size: s-1vcpu-2gb
                          tags:
                            - production
                            - web-team
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                        - auto_scale: true
                          count: 2
                          id: f49f4379-7e7f-4af5-aeb6-0354bd840778
                          labels:
                            priority: high
                            service: backend
                          max_nodes: 5
                          min_nodes: 2
                          name: backend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545373"
                              id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                              name: affectionate-nightingale-3nif
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545374"
                              id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                              name: affectionate-nightingale-3niy
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                          size: g-4vcpu-16gb
                          tags:
                            - production
                            - web-team
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                    region: nyc1
                    registry_enabled: false
                    service_subnet: 10.245.0.0/16
                    status:
                        state: running
                    surge_upgrade: false
                    tags:
                        - production
                        - web-team
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                    updated_at: "2018-11-15T16:00:11Z"
                    version: 1.18.6-do.0
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        kubernetes_updated:
            value:
                kubernetes_cluster:
                    auto_upgrade: true
                    cluster_subnet: 10.244.0.0/16
                    created_at: "2018-11-15T16:00:11Z"
                    endpoint: https://bd5f5959-5e1e-4205-a714-a914373942af.k8s.ondigitalocean.com
                    ha: false
                    id: bd5f5959-5e1e-4205-a714-a914373942af
                    ipv4: 68.183.121.157
                    maintenance_policy:
                        day: any
                        duration: 4h0m0s
                        start_time: "00:00"
                    name: prod-cluster-01
                    node_pools:
                        - auto_scale: false
                          count: 3
                          id: cdda885e-7663-40c8-bc74-3a036c66545d
                          labels: null
                          max_nodes: 0
                          min_nodes: 0
                          name: frontend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545370"
                              id: 478247f8-b1bb-4f7a-8db9-2a5f8d4b8f8f
                              name: adoring-newton-3niq
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545371"
                              id: ad12e744-c2a9-473d-8aa9-be5680500eb1
                              name: adoring-newton-3nim
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545372"
                              id: e46e8d07-f58f-4ff1-9737-97246364400e
                              name: adoring-newton-3ni7
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                          size: s-1vcpu-2gb
                          tags:
                            - production
                            - web-team
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                        - auto_scale: true
                          count: 2
                          id: f49f4379-7e7f-4af5-aeb6-0354bd840778
                          labels:
                            priority: high
                            service: backend
                          max_nodes: 5
                          min_nodes: 2
                          name: backend-pool
                          nodes:
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545373"
                              id: 3385619f-8ec3-42ba-bb23-8d21b8ba7518
                              name: affectionate-nightingale-3nif
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                            - created_at: "2018-11-15T16:00:11Z"
                              droplet_id: "205545374"
                              id: 4b8f60ff-ba06-4523-a6a4-b8148244c7e6
                              name: affectionate-nightingale-3niy
                              status:
                                state: running
                              updated_at: "2018-11-15T16:00:11Z"
                          size: g-4vcpu-16gb
                          tags:
                            - production
                            - web-team
                            - k8s
                            - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                            - k8s:worker
                          taints: []
                    region: nyc1
                    registry_enabled: false
                    service_subnet: 10.245.0.0/16
                    status:
                        state: running
                    surge_upgrade: true
                    tags:
                        - production
                        - web-team
                        - k8s
                        - k8s:bd5f5959-5e1e-4205-a714-a914373942af
                    updated_at: "2018-11-15T16:00:11Z"
                    version: 1.18.6-do.0
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancer_basic_create_request:
            description: Passing requests directly through to 80 and 443.
            value:
                droplet_ids:
                    - 3.164444e+06
                    - 3.164445e+06
                firewall:
                    allow:
                        - ip:1.2.3.4
                        - cidr:2.3.4.0/24
                    deny:
                        - cidr:1.2.0.0/16
                        - ip:2.3.4.5
                forwarding_rules:
                    - entry_port: 80
                      entry_protocol: http
                      target_port: 80
                      target_protocol: http
                    - entry_port: 443
                      entry_protocol: https
                      target_port: 443
                      target_protocol: https
                      tls_passthrough: true
                http_idle_timeout_seconds: 60
                name: example-lb-01
                project_id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                region: nyc3
        load_balancer_basic_response:
            value:
                load_balancer:
                    algorithm: round_robin
                    created_at: "2017-02-01T22:22:58Z"
                    disable_lets_encrypt_dns_records: false
                    droplet_ids:
                        - 3.164444e+06
                        - 3.164445e+06
                    enable_backend_keepalive: false
                    enable_proxy_protocol: false
                    firewall:
                        allow:
                            - ip:1.2.3.4
                            - cidr:2.3.4.0/24
                        deny:
                            - cidr:1.2.0.0/16
                            - ip:2.3.4.5
                    forwarding_rules:
                        - certificate_id: ""
                          entry_port: 80
                          entry_protocol: http
                          target_port: 80
                          target_protocol: http
                          tls_passthrough: false
                        - certificate_id: ""
                          entry_port: 443
                          entry_protocol: https
                          target_port: 443
                          target_protocol: https
                          tls_passthrough: true
                    health_check:
                        check_interval_seconds: 10
                        healthy_threshold: 5
                        path: /
                        port: 80
                        protocol: http
                        response_timeout_seconds: 5
                        unhealthy_threshold: 3
                    http_idle_timeout_seconds: 60
                    id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    ip: 104.131.186.241
                    name: example-lb-01
                    project_id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                    redirect_http_to_https: false
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                    size: lb-small
                    status: new
                    sticky_sessions:
                        type: none
                    tag: ""
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancer_ssl_termination_create_request:
            description: Terminating SSL at the load balancer using a managed SSL certificate specifying Droplets using `droplet_ids`.
            value:
                droplet_ids:
                    - 3.164444e+06
                    - 3.164445e+06
                forwarding_rules:
                    - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                      entry_port: 443
                      entry_protocol: https
                      target_port: 8080
                      target_protocol: http
                name: example-lb-01
                region: nyc3
        load_balancer_ssl_termination_response:
            value:
                load_balancer:
                    algorithm: round_robin
                    created_at: "2017-02-01T22:22:58Z"
                    disable_lets_encrypt_dns_records: false
                    droplet_ids:
                        - 3.164444e+06
                        - 3.164445e+06
                    enable_backend_keepalive: false
                    enable_proxy_protocol: false
                    forwarding_rules:
                        - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                          entry_port: 443
                          entry_protocol: https
                          target_port: 8080
                          target_protocol: http
                    health_check:
                        check_interval_seconds: 10
                        healthy_threshold: 5
                        path: /
                        port: 80
                        protocol: http
                        response_timeout_seconds: 5
                        unhealthy_threshold: 3
                    id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    ip: 104.131.186.241
                    name: example-lb-01
                    redirect_http_to_https: false
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                    size: lb-small
                    status: new
                    sticky_sessions:
                        type: none
                    tag: ""
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancer_sticky_sessions_and_health_check_create_request:
            description: Terminating SSL at the load balancer using a managed SSL certificate specifying Droplets using `tag`.
            value:
                forwarding_rules:
                    - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                      entry_port: 443
                      entry_protocol: https
                      target_port: 8080
                      target_protocol: http
                health_check:
                    check_interval_seconds: 10
                    healthy_threshold: 5
                    path: /health
                    port: 8080
                    protocol: http
                    response_timeout_seconds: 5
                    unhealthy_threshold: 3
                name: example-lb-01
                region: nyc3
                sticky_sessions:
                    cookie_name: LB_COOKIE
                    cookie_ttl_seconds: 300
                    type: cookies
                tag: prod:web
        load_balancer_sticky_sessions_and_health_check_response:
            value:
                load_balancer:
                    algorithm: round_robin
                    created_at: "2017-02-01T22:22:58Z"
                    disable_lets_encrypt_dns_records: false
                    droplet_ids:
                        - 3.164444e+06
                        - 3.164445e+06
                    enable_backend_keepalive: false
                    enable_proxy_protocol: false
                    forwarding_rules:
                        - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                          entry_port: 443
                          entry_protocol: https
                          target_port: 8080
                          target_protocol: http
                    health_check:
                        check_interval_seconds: 10
                        healthy_threshold: 5
                        path: /health
                        port: 8080
                        protocol: http
                        response_timeout_seconds: 5
                        unhealthy_threshold: 3
                    id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    ip: 104.131.186.241
                    name: example-lb-01
                    project_id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                    redirect_http_to_https: false
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                    size: lb-small
                    status: new
                    sticky_sessions:
                        cookie_name: LB_COOKIE
                        cookie_ttl_seconds: 300
                        type: cookies
                    tag: prod:web
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancer_update_request:
            value:
                algorithm: round_robin
                droplet_ids:
                    - 3.164444e+06
                    - 3.164445e+06
                enable_backend_keepalive: true
                enable_proxy_protocol: true
                firewall:
                    allow:
                        - ip:1.2.3.4
                        - cidr:2.3.4.0/24
                    deny:
                        - cidr:1.2.0.0/16
                        - ip:2.3.4.5
                forwarding_rules:
                    - certificate_id: ""
                      entry_port: 80
                      entry_protocol: http
                      target_port: 80
                      target_protocol: http
                      tls_passthrough: false
                    - certificate_id: ""
                      entry_port: 443
                      entry_protocol: https
                      target_port: 443
                      target_protocol: https
                      tls_passthrough: true
                health_check:
                    check_interval_seconds: 10
                    healthy_threshold: 5
                    path: /
                    port: 80
                    protocol: http
                    response_timeout_seconds: 5
                    unhealthy_threshold: 3
                http_idle_timeout_seconds: 60
                name: updated-example-lb-01
                project_id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                redirect_http_to_https: false
                region: nyc3
                sticky_sessions:
                    type: none
                vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancer_update_response:
            value:
                load_balancer:
                    algorithm: round_robin
                    created_at: "2017-02-01T22:22:58Z"
                    disable_lets_encrypt_dns_records: false
                    droplet_ids:
                        - 3.164444e+06
                        - 3.164445e+06
                    enable_backend_keepalive: true
                    enable_proxy_protocol: true
                    firewall:
                        allow:
                            - ip:1.2.3.4
                            - cidr:2.3.4.0/24
                        deny:
                            - cidr:1.2.0.0/16
                            - ip:2.3.4.5
                    forwarding_rules:
                        - certificate_id: ""
                          entry_port: 80
                          entry_protocol: http
                          target_port: 80
                          target_protocol: http
                          tls_passthrough: false
                        - certificate_id: ""
                          entry_port: 443
                          entry_protocol: https
                          target_port: 443
                          target_protocol: https
                          tls_passthrough: true
                    health_check:
                        check_interval_seconds: 10
                        healthy_threshold: 5
                        path: /
                        port: 80
                        protocol: http
                        response_timeout_seconds: 5
                        unhealthy_threshold: 3
                    http_idle_timeout_seconds: 60
                    id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    ip: 104.131.186.241
                    name: updated-example-lb-01
                    project_id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                    redirect_http_to_https: false
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                    size: lb-small
                    status: new
                    sticky_sessions:
                        type: none
                    tag: ""
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancer_using_tag_create_request:
            description: Terminating SSL at the load balancer using a managed SSL certificate specifying Droplets using `tag`.
            value:
                forwarding_rules:
                    - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                      entry_port: 443
                      entry_protocol: https
                      target_port: 8080
                      target_protocol: http
                name: example-lb-01
                region: nyc3
                tag: prod:web
        load_balancer_using_tag_response:
            value:
                load_balancer:
                    algorithm: round_robin
                    created_at: "2017-02-01T22:22:58Z"
                    disable_lets_encrypt_dns_records: false
                    droplet_ids:
                        - 3.164444e+06
                        - 3.164445e+06
                    enable_backend_keepalive: false
                    enable_proxy_protocol: false
                    forwarding_rules:
                        - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                          entry_port: 443
                          entry_protocol: https
                          target_port: 8080
                          target_protocol: http
                    health_check:
                        check_interval_seconds: 10
                        healthy_threshold: 5
                        path: /
                        port: 80
                        protocol: http
                        response_timeout_seconds: 5
                        unhealthy_threshold: 3
                    id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                    ip: 104.131.186.241
                    name: example-lb-01
                    project_id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                    redirect_http_to_https: false
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                    size: lb-small
                    status: new
                    sticky_sessions:
                        type: none
                    tag: prod:web
                    vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
        load_balancers_all:
            value:
                links: {}
                load_balancers:
                    - algorithm: round_robin
                      created_at: "2017-02-01T22:22:58Z"
                      disable_lets_encrypt_dns_records: false
                      droplet_ids:
                        - 3.164444e+06
                        - 3.164445e+06
                      enable_backend_keepalive: false
                      enable_proxy_protocol: false
                      firewall:
                        allow:
                            - ip:1.2.3.4
                            - cidr:2.3.4.0/24
                        deny:
                            - cidr:1.2.0.0/16
                            - ip:2.3.4.5
                      forwarding_rules:
                        - certificate_id: ""
                          entry_port: 80
                          entry_protocol: http
                          target_port: 80
                          target_protocol: http
                          tls_passthrough: false
                        - certificate_id: ""
                          entry_port: 443
                          entry_protocol: https
                          target_port: 443
                          target_protocol: https
                          tls_passthrough: true
                      health_check:
                        check_interval_seconds: 10
                        healthy_threshold: 5
                        path: /
                        port: 80
                        protocol: http
                        response_timeout_seconds: 5
                        unhealthy_threshold: 3
                      id: 4de7ac8b-495b-4884-9a69-1050c6793cd6
                      ip: 104.131.186.241
                      name: example-lb-01
                      redirect_http_to_https: false
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                      size: lb-small
                      status: new
                      sticky_sessions:
                        type: none
                      tag: ""
                      vpc_uuid: c33931f2-a26a-4e61-b85c-4e95a2ec431b
                    - algorithm: round_robin
                      created_at: "2020-09-08T18:58:04Z"
                      disable_lets_encrypt_dns_records: false
                      droplet_ids:
                        - 5.5806512e+07
                        - 5.5806515e+07
                        - 5.5806524e+07
                      enable_backend_keepalive: false
                      enable_proxy_protocol: false
                      firewall:
                        allow:
                            - ip:1.2.3.4
                            - cidr:2.3.4.0/24
                        deny:
                            - cidr:1.2.0.0/16
                            - ip:2.3.4.5
                      forwarding_rules:
                        - certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                          entry_port: 443
                          entry_protocol: https
                          target_port: 8080
                          target_protocol: http
                          tls_passthrough: false
                      health_check:
                        check_interval_seconds: 10
                        healthy_threshold: 5
                        path: /
                        port: 443
                        protocol: https
                        response_timeout_seconds: 5
                        unhealthy_threshold: 3
                      http_idle_timeout_seconds: 60
                      id: 56775c3f-04ab-4fb3-a7ed-40ef9bc8eece
                      ip: 45.55.125.24
                      name: prod-web-lb-01
                      project_id: 9cc10173-e9ea-4176-9dbc-a4cee4c4ff30
                      redirect_http_to_https: true
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                      size: lb-small
                      status: active
                      sticky_sessions:
                        cookie_name: DO-LB
                        cookie_ttl_seconds: 300
                        type: cookies
                      tag: prod:web
                      vpc_uuid: 587d698c-de84-11e8-80bc-3cfdfea9fcd1
                meta:
                    total: 2
        logs:
            value:
                historic_logs:
                    - https://logs-example/archive/build.log
                live_url: https://logs-example/build.log
                url: https://logs/build.log
        outbound_private_droplet_bandwidth:
            value:
                data:
                    result:
                        - metric:
                            direction: outbound
                            host_id: "222651441"
                            interface: private
                          values:
                            - - 1.63405236e+09
                              - "0.016600450090265357"
                            - - 1.63405248e+09
                              - "0.015085955677299055"
                            - - 1.6340526e+09
                              - "0.014941163855322308"
                            - - 1.63405272e+09
                              - "0.016214285714285712"
                    resultType: matrix
                status: success
        outbound_public_droplet_bandwidth:
            value:
                data:
                    result:
                        - metric:
                            direction: outbound
                            host_id: "222651441"
                            interface: public
                          values:
                            - - 1.63405236e+09
                              - "0.016600450090265357"
                            - - 1.63405248e+09
                              - "0.015085955677299055"
                            - - 1.6340526e+09
                              - "0.014941163855322308"
                            - - 1.63405272e+09
                              - "0.016214285714285712"
                    resultType: matrix
                status: success
        propose:
            value:
                app_cost: 5
                app_name_available: true
                app_tier_upgrade_cost: 17
                existing_static_apps: "2"
                max_free_static_apps: "3"
                spec:
                    name: sample-golang
                    region: ams
                    services:
                        - environment_slug: go
                          github:
                            branch: branch
                            repo: digitalocean/sample-golang
                          http_port: 8080
                          instance_count: 1
                          instance_size_slug: basic-xxs
                          name: web
                          routes:
                            - path: /
                          run_command: bin/sample-golang
        regions:
            value:
                regions:
                    - continent: Europe
                      data_centers:
                        - ams3
                      flag: netherlands
                      label: Amsterdam
                      slug: ams
                    - continent: North America
                      data_centers:
                        - nyc1
                        - nyc3
                      default: true
                      flag: usa
                      label: New York
                      slug: nyc
                    - continent: Europe
                      data_centers:
                        - fra1
                      flag: germany
                      label: Frankfurt
                      slug: fra
                    - continent: North America
                      data_centers:
                        - sfo3
                      flag: usa
                      label: San Francisco
                      slug: sfo
                    - continent: Asia
                      data_centers:
                        - sgp1
                      flag: singapore
                      label: Singapore
                      slug: sgp
                    - continent: Asia
                      data_centers:
                        - blr1
                      flag: india
                      label: Bangalore
                      slug: blr
                    - continent: North America
                      data_centers:
                        - tor1
                      flag: canada
                      label: Toronto
                      slug: tor
                    - continent: Europe
                      data_centers:
                        - lon1
                      flag: uk
                      label: London
                      slug: lon
        reserved_ip_assigned:
            summary: Assigned to Droplet
            value:
                reserved_ip:
                    droplet:
                        backup_ids:
                            - 5.3893572e+07
                        created_at: "2020-07-21T18:37:44Z"
                        disk: 25
                        features:
                            - backups
                            - private_networking
                            - ipv6
                        id: 3.164444e+06
                        image:
                            created_at: "2020-05-15T05:47:50Z"
                            description: ""
                            distribution: Ubuntu
                            error_message: ""
                            id: 6.366398e+07
                            min_disk_size: 20
                            name: 20.04 (LTS) x64
                            public: true
                            regions:
                                - ams2
                                - ams3
                                - blr1
                                - fra1
                                - lon1
                                - nyc1
                                - nyc2
                                - nyc3
                                - sfo1
                                - sfo2
                                - sfo3
                                - sgp1
                                - tor1
                            size_gigabytes: 2.36
                            slug: ubuntu-20-04-x64
                            status: available
                            tags: []
                            type: base
                        kernel: null
                        locked: false
                        memory: 1024
                        name: example.com
                        networks:
                            v4:
                                - gateway: nil
                                  ip_address: 10.128.192.124
                                  netmask: 255.255.0.0
                                  type: private
                                - gateway: 192.241.165.1
                                  ip_address: 192.241.165.154
                                  netmask: 255.255.255.0
                                  type: public
                            v6:
                                - gateway: 2604:a880:0:1010::1
                                  ip_address: 2604:a880:0:1010::18a:a001
                                  netmask: 64
                                  type: public
                        next_backup_window:
                            end: "2020-07-30T23:00:00Z"
                            start: "2020-07-30T00:00:00Z"
                        region:
                            available: true
                            features:
                                - backups
                                - ipv6
                                - metadata
                                - install_agent
                                - storage
                                - image_transfer
                            name: New York 3
                            sizes:
                                - s-1vcpu-1gb
                                - s-1vcpu-2gb
                                - s-1vcpu-3gb
                                - s-2vcpu-2gb
                                - s-3vcpu-1gb
                                - s-2vcpu-4gb
                                - s-4vcpu-8gb
                                - s-6vcpu-16gb
                                - s-8vcpu-32gb
                                - s-12vcpu-48gb
                                - s-16vcpu-64gb
                                - s-20vcpu-96gb
                                - s-24vcpu-128gb
                                - s-32vcpu-192g
                            slug: nyc3
                        size:
                            available: true
                            description: Basic
                            disk: 25
                            memory: 1024
                            price_hourly: 0.00743999984115362
                            price_monthly: 5
                            regions:
                                - ams2
                                - ams3
                                - blr1
                                - fra1
                                - lon1
                                - nyc1
                                - nyc2
                                - nyc3
                                - sfo1
                                - sfo2
                                - sfo3
                                - sgp1
                                - tor1
                            slug: s-1vcpu-1gb
                            transfer: 1
                            vcpus: 1
                        size_slug: s-1vcpu-1gb
                        snapshot_ids:
                            - 6.7512819e+07
                        status: active
                        tags:
                            - web
                            - env:prod
                        vcpus: 1
                        volume_ids: []
                        vpc_uuid: 760e09ef-dc84-11e8-981e-3cfdfeaae000
                    ip: 45.55.96.47
                    locked: false
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
        reserved_ip_assigning:
            summary: Assigning to Droplet
            value:
                links:
                    actions:
                        - href: https://api.digitalocean.com/v2/actions/1088924622
                          id: 1.088924622e+09
                          rel: assign_ip
                    droplets:
                        - href: https://api.digitalocean.com/v2/droplets/213939433
                          id: 2.13939433e+08
                          rel: droplet
                reserved_ip:
                    droplet: null
                    ip: 45.55.96.47
                    locked: true
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
        reserved_ip_reserved:
            summary: Reserved to Region
            value:
                reserved_ip:
                    droplet: null
                    ip: 45.55.96.47
                    locked: false
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
        reserved_ip_reserving:
            summary: Reserving to Region
            value:
                links: {}
                reserved_ip:
                    droplet: null
                    ip: 45.55.96.47
                    locked: false
                    project_id: 746c6152-2fa2-11ed-92d3-27aaa54e4988
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                            - install_agent
                            - storage
                            - image_transfer
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192g
                        slug: nyc3
        snapshots_all:
            value:
                links: {}
                meta:
                    total: 2
                snapshots:
                    - created_at: "2020-07-28T16:47:44Z"
                      id: "6372321"
                      min_disk_size: 25
                      name: web-01-1595954862243
                      regions:
                        - nyc3
                        - sfo3
                      resource_id: "200776916"
                      resource_type: droplet
                      size_gigabytes: 2.34
                      tags:
                        - web
                        - env:prod
                    - created_at: "2019-09-28T23:14:30Z"
                      id: fbe805e8-866b-11e6-96bf-000f53315a41
                      min_disk_size: 2
                      name: pvc-01-1595954862243
                      regions:
                        - nyc1
                      resource_id: 89bcc42f-85cf-11e6-a004-000f53315871
                      resource_type: volume
                      size_gigabytes: 0.1008
                      tags:
                        - k8s
        snapshots_droplets_only:
            value:
                links: {}
                meta:
                    total: 1
                snapshots:
                    - created_at: "2020-07-28T16:47:44Z"
                      id: "6372321"
                      min_disk_size: 25
                      name: web-01-1595954862243
                      regions:
                        - nyc3
                        - sfo3
                      resource_id: "200776916"
                      resource_type: droplet
                      size_gigabytes: 2.34
                      tags:
                        - web
                        - env:prod
        snapshots_volumes_only:
            value:
                links: {}
                meta:
                    total: 1
                snapshots:
                    - created_at: "2019-09-28T23:14:30Z"
                      id: fbe805e8-866b-11e6-96bf-000f53315a41
                      min_disk_size: 2
                      name: pvc-01-1595954862243
                      regions:
                        - nyc1
                      resource_id: 89bcc42f-85cf-11e6-a004-000f53315871
                      resource_type: volume
                      size_gigabytes: 0.1008
                      tags:
                        - k8s
        tier:
            value:
                tier:
                    build_seconds: "24000"
                    egress_bandwidth_bytes: "42949672960"
                    name: Basic
                    slug: basic
        tiers:
            value:
                tiers:
                    - build_seconds: "6000"
                      egress_bandwidth_bytes: "1073741824"
                      name: Starter
                      slug: starter
                    - build_seconds: "24000"
                      egress_bandwidth_bytes: "42949672960"
                      name: Basic
                      slug: basic
                    - build_seconds: "60000"
                      egress_bandwidth_bytes: "107374182400"
                      name: Professional
                      slug: professional
        volume_action_attach_response:
            value:
                action:
                    completed_at: "2020-11-12T17:51:14Z"
                    id: 7.2531856e+07
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                        name: New York 1
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc1
                    region_slug: nyc1
                    resource_type: volume
                    started_at: "2020-11-12T17:51:03Z"
                    status: completed
                    type: attach_volume
        volume_action_detach_response:
            value:
                action:
                    completed_at: null
                    id: 6.8212773e+07
                    region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                        name: New York 1
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc1
                    region_slug: nyc1
                    resource_id: null
                    resource_type: backend
                    started_at: "2015-10-15T17:46:15Z"
                    status: in-progress
                    type: detach_volume
        volumes_all:
            value:
                links: {}
                meta:
                    total: 2
                volumes:
                    - created_at: "2016-03-02T17:00:49Z"
                      description: Block store for examples
                      droplet_ids: []
                      filesystem_label: example
                      filesystem_type: ext4
                      id: 506f78a4-e098-11e5-ad9f-000f53306ae1
                      name: example
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                        name: New York 1
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc1
                      size_gigabytes: 10
                      tags:
                        - aninterestingtag
                    - created_at: "2016-03-02T17:01:49Z"
                      description: Block store for examples
                      droplet_ids: []
                      filesystem_label: example
                      filesystem_type: ext4
                      id: 506f78a4-e098-11e5-ad9f-000f53305eb2
                      name: example
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                        name: New York 3
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc3
                      size_gigabytes: 10
                      tags:
                        - aninterestingtag
        volumes_filtered_by_name:
            value:
                links: {}
                meta:
                    total: 1
                volumes:
                    - created_at: "2016-03-02T17:00:49Z"
                      description: Block store for examples
                      droplet_ids: []
                      filesystem_label: example
                      filesystem_type: ext4
                      id: 506f78a4-e098-11e5-ad9f-000f53306ae1
                      name: example
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                        name: New York 1
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc1
                      size_gigabytes: 10
                      tags:
                        - aninterestingtag
        volumes_filtered_by_region:
            value:
                links: {}
                meta:
                    total: 1
                volumes:
                    - created_at: "2016-03-02T17:00:49Z"
                      description: Block store for examples
                      droplet_ids: []
                      filesystem_label: example
                      filesystem_type: ext4
                      id: 506f78a4-e098-11e5-ad9f-000f53306ae1
                      name: example
                      region:
                        available: true
                        features:
                            - private_networking
                            - backups
                            - ipv6
                            - metadata
                        name: New York 1
                        sizes:
                            - s-1vcpu-1gb
                            - s-1vcpu-2gb
                            - s-1vcpu-3gb
                            - s-2vcpu-2gb
                            - s-3vcpu-1gb
                            - s-2vcpu-4gb
                            - s-4vcpu-8gb
                            - s-6vcpu-16gb
                            - s-8vcpu-32gb
                            - s-12vcpu-48gb
                            - s-16vcpu-64gb
                            - s-20vcpu-96gb
                            - s-24vcpu-128gb
                            - s-32vcpu-192gb
                        slug: nyc1
                      size_gigabytes: 10
                      tags:
                        - aninterestingtag
    links:
        sshKeys_delete_by_fingerprint:
            operationId: ssh_keys_delete_by_fingerprint
            description: The `fingerprint` value returned in the response can be used as the  `ssh_key_identifier` parameter in `DELETE /v2/account/keys/{ssh_key_identifier}`.
            parameters:
                ssh_key_identifier: $response.body#/ssh_key/fingerprint
        sshKeys_delete_by_id:
            operationId: sshKeys_delete_by_id
            description: The `id` value returned in the response can be used as the  `ssh_key_identifier` parameter in `DELETE /v2/account/keys/{ssh_key_identifier}`.
            parameters:
                ssh_key_identifier: $response.body#/ssh_key/id
        sshKeys_get_by_fingerprint:
            operationId: sshKeys_get_by_fingerprint
            description: The `fingerprint` value returned in the response can be used as the `ssh_key_identifier` parameter in `GET /v2/account/keys/{ssh_key_identifier}`.
            parameters:
                ssh_key_identifier: $response.body#/ssh_key/fingerprint
        sshKeys_get_by_id:
            operationId: sshKeys_get_by_id
            description: The `id` value returned in the response can be used as the `ssh_key_identifier` parameter in `GET /v2/account/keys/{ssh_key_identifier}`.
            parameters:
                ssh_key_identifier: $response.body#/ssh_key/id
info:
    title: DigitalOcean API
    description: "# Introduction\n\nThe DigitalOcean API allows you to manage Droplets and resources within the\nDigitalOcean cloud in a simple, programmatic way using conventional HTTP requests.\n\nAll of the functionality that you are familiar with in the DigitalOcean\ncontrol panel is also available through the API, allowing you to script the\ncomplex actions that your situation requires.\n\nThe API documentation will start with a general overview about the design\nand technology that has been implemented, followed by reference information\nabout specific endpoints.\n\n## Requests\n\nAny tool that is fluent in HTTP can communicate with the API simply by\nrequesting the correct URI. Requests should be made using the HTTPS protocol\nso that traffic is encrypted. The interface responds to different methods\ndepending on the action required.\n\n|Method|Usage|\n|--- |--- |\n|GET|For simple retrieval of information about your account, Droplets, or environment, you should use the GET method.  The information you request will be returned to you as a JSON object. The attributes defined by the JSON object can be used to form additional requests.  Any request using the GET method is read-only and will not affect any of the objects you are querying.|\n|DELETE|To destroy a resource and remove it from your account and environment, the DELETE method should be used.  This will remove the specified object if it is found.  If it is not found, the operation will return a response indicating that the object was not found. This idempotency means that you do not have to check for a resource's availability prior to issuing a delete command, the final state will be the same regardless of its existence.|\n|PUT|To update the information about a resource in your account, the PUT method is available. Like the DELETE Method, the PUT method is idempotent.  It sets the state of the target using the provided values, regardless of their current values. Requests using the PUT method do not need to check the current attributes of the object.|\n|PATCH|Some resources support partial modification. In these cases, the PATCH method is available. Unlike PUT which generally requires a complete representation of a resource, a PATCH request is is a set of instructions on how to modify a resource updating only specific attributes.|\n|POST|To create a new object, your request should specify the POST method. The POST request includes all of the attributes necessary to create a new object.  When you wish to create a new object, send a POST request to the target endpoint.|\n|HEAD|Finally, to retrieve metadata information, you should use the HEAD method to get the headers.  This returns only the header of what would be returned with an associated GET request. Response headers contain some useful information about your API access and the results that are available for your request. For instance, the headers contain your current rate-limit value and the amount of time available until the limit resets. It also contains metrics about the total number of objects found, pagination information, and the total content length.|\n\n\n## HTTP Statuses\n\nAlong with the HTTP methods that the API responds to, it will also return\nstandard HTTP statuses, including error codes.\n\nIn the event of a problem, the status will contain the error code, while the\nbody of the response will usually contain additional information about the\nproblem that was encountered.\n\nIn general, if the status returned is in the 200 range, it indicates that\nthe request was fulfilled successfully and that no error was encountered.\n\nReturn codes in the 400 range typically indicate that there was an issue\nwith the request that was sent. Among other things, this could mean that you\ndid not authenticate correctly, that you are requesting an action that you\ndo not have authorization for, that the object you are requesting does not\nexist, or that your request is malformed.\n\nIf you receive a status in the 500 range, this generally indicates a\nserver-side problem. This means that we are having an issue on our end and\ncannot fulfill your request currently.\n\n400 and 500 level error responses will include a JSON object in their body,\nincluding the following attributes:\n\n|Name|Type|Description|\n|--- |--- |--- |\n|id|string|A short identifier corresponding to the HTTP status code returned. For example, the ID for a response returning a 404 status code would be \"not_found.\"|\n|message|string|A message providing additional information about the error, including details to help resolve it when possible.|\n|request_id|string|Optionally, some endpoints may include a request ID that should be provided when reporting bugs or opening support tickets to help identify the issue.|\n\n### Example Error Response\n\n```\n    HTTP/1.1 403 Forbidden\n    {\n      \"id\":       \"forbidden\",\n      \"message\":  \"You do not have access for the attempted action.\"\n    }\n```\n\n## Responses\n\nWhen a request is successful, a response body will typically be sent back in\nthe form of a JSON object. An exception to this is when a DELETE request is\nprocessed, which will result in a successful HTTP 204 status and an empty\nresponse body.\n\nInside of this JSON object, the resource root that was the target of the\nrequest will be set as the key. This will be the singular form of the word\nif the request operated on a single object, and the plural form of the word\nif a collection was processed.\n\nFor example, if you send a GET request to `/v2/droplets/$DROPLET_ID` you\nwill get back an object with a key called \"`droplet`\". However, if you send\nthe GET request to the general collection at `/v2/droplets`, you will get\nback an object with a key called \"`droplets`\".\n\nThe value of these keys will generally be a JSON object for a request on a\nsingle object and an array of objects for a request on a collection of\nobjects.\n\n### Response for a Single Object\n\n```\n    {\n        \"droplet\": {\n            \"name\": \"example.com\"\n            . . .\n        }\n    }\n```\n\n### Response for an Object Collection\n\n```\n    {\n        \"droplets\": [\n            {\n                \"name\": \"example.com\"\n                . . .\n            },\n            {\n                \"name\": \"second.com\"\n                . . .\n            }\n        ]\n    }\n```\n\n## Meta\n\nIn addition to the main resource root, the response may also contain a\n`meta` object. This object contains information about the response itself.\n\nThe `meta` object contains a `total` key that is set to the total number of\nobjects returned by the request. This has implications on the `links` object\nand pagination.\n\nThe `meta` object will only be displayed when it has a value. Currently, the\n`meta` object will have a value when a request is made on a collection (like\n`droplets` or `domains`).\n\n\n### Sample Meta Object\n\n```\n    {\n        . . .\n        \"meta\": {\n            \"total\": 43\n        }\n        . . .\n    }\n```\n\n## Links & Pagination\n\nThe `links` object is returned as part of the response body when pagination\nis enabled. By default, 20 objects are returned per page. If the response\ncontains 20 objects or fewer, no `links` object will be returned. If the\nresponse contains more than 20 objects, the first 20 will be returned along\nwith the `links` object.\n\nYou can request a different pagination limit or force pagination by\nappending `?per_page=` to the request with the number of items you would\nlike per page. For instance, to show only two results per page, you could\nadd `?per_page=2` to the end of your query. The maximum number of results\nper page is 200.\n\nThe `links` object contains a `pages` object. The `pages` object, in turn,\ncontains keys indicating the relationship of additional pages. The values of\nthese are the URLs of the associated pages. The keys will be one of the\nfollowing:\n\n*   **first**: The URI of the first page of results.\n*   **prev**: The URI of the previous sequential page of results.\n*   **next**: The URI of the next sequential page of results.\n*   **last**: The URI of the last page of results.\n\nThe `pages` object will only include the links that make sense. So for the\nfirst page of results, no `first` or `prev` links will ever be set. This\nconvention holds true in other situations where a link would not make sense.\n\n### Sample Links Object\n\n```\n    {\n        . . .\n        \"links\": {\n            \"pages\": {\n                \"last\": \"https://api.digitalocean.com/v2/images?page=2\",\n                \"next\": \"https://api.digitalocean.com/v2/images?page=2\"\n            }\n        }\n        . . .\n    }\n```\n\n## Rate Limit\n\nRequests through the API are rate limited per OAuth token. Current rate limits:\n\n*   5,000 requests per hour\n*   250 requests per minute (5% of the hourly total)\n\nOnce you exceed either limit, you will be rate limited until the next cycle\nstarts. Space out any requests that you would otherwise issue in bursts for\nthe best results.\n\nThe rate limiting information is contained within the response headers of\neach request. The relevant headers are:\n\n*   **ratelimit-limit**: The number of requests that can be made per hour.\n*   **ratelimit-remaining**: The number of requests that remain before you hit your request limit. See the information below for how the request limits expire.\n*   **ratelimit-reset**: This represents the time when the oldest request will expire. The value is given in [Unix epoch time](http://en.wikipedia.org/wiki/Unix_time). See below for more information about how request limits expire.\n\nMore rate limiting information is returned only within burst limit error response headers:\n*   **retry-after**: The number of seconds to wait before making another request when rate limited.\n\nAs long as the `ratelimit-remaining` count is above zero, you will be able\nto make additional requests.\n\nThe way that a request expires and is removed from the current limit count\nis important to understand. Rather than counting all of the requests for an\nhour and resetting the `ratelimit-remaining` value at the end of the hour,\neach request instead has its own timer.\n\nThis means that each request contributes toward the `ratelimit-remaining`\ncount for one complete hour after the request is made. When that request's\ntimer runs out, it is no longer counted towards the request limit.\n\nThis has implications on the meaning of the `ratelimit-reset` header as\nwell. Because the entire rate limit is not reset at one time, the value of\nthis header is set to the time when the _oldest_ request will expire.\n\nKeep this in mind if you see your `ratelimit-reset` value change, but not\nmove an entire hour into the future.\n\nIf the `ratelimit-remaining` reaches zero, subsequent requests will receive\na 429 error code until the request reset has been reached. \n\n`ratelimit-remaining` reaching zero can also indicate that the \"burst limit\" of 250 \nrequests per minute limit was met, even if the 5,000 requests per hour limit was not. \nIn this case, the 429 error response will include a retry-after header to indicate how \nlong to wait (in seconds) until the request may be retried.\n\nYou can see the format of the response in the examples. \n\n**Note:** The following endpoints have special rate limit requirements that\nare independent of the limits defined above.\n\n*   Only 12 `POST` requests to the `/v2/floating_ips` endpoint to create Floating IPs can be made per 60 seconds.\n*   Only 10 `GET` requests to the `/v2/account/keys` endpoint to list SSH keys can be made per 60 seconds.\n*   Only 5 requests to any and all `v2/cdn/endpoints` can be made per 10 seconds. This includes `v2/cdn/endpoints`, \n    `v2/cdn/endpoints/$ENDPOINT_ID`, and `v2/cdn/endpoints/$ENDPOINT_ID/cache`.\n*   Only 50 strings within the `files` json struct in the `v2/cdn/endpoints/$ENDPOINT_ID/cache` [payload](https://docs.digitalocean.com/reference/api/api-reference/#operation/cdn_purge_cache) \n    can be requested every 20 seconds.\n\n### Sample Rate Limit Headers\n\n```\n    . . .\n    ratelimit-limit: 1200\n    ratelimit-remaining: 1193\n    rateLimit-reset: 1402425459\n    . . .\n```\n\n  ### Sample Rate Limit Headers When Burst Limit is Reached:\n\n```\n    . . .\n    ratelimit-limit: 5000\n    ratelimit-remaining: 0\n    rateLimit-reset: 1402425459\n    retry-after: 29\n    . . .\n```\n\n### Sample Rate Exceeded Response\n\n```\n    429 Too Many Requests\n    {\n            id: \"too_many_requests\",\n            message: \"API Rate limit exceeded.\"\n    }\n```\n\n## Curl Examples\n\nThroughout this document, some example API requests will be given using the\n`curl` command. This will allow us to demonstrate the various endpoints in a\nsimple, textual format.\n  \n  These examples assume that you are using a Linux or macOS command line. To run\nthese commands on a Windows machine, you can either use cmd.exe, PowerShell, or WSL:\n\n* For cmd.exe, use the `set VAR=VALUE` [syntax](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/set_1)\nto define environment variables, call them with `%VAR%`, then replace all backslashes (`\\`) in the examples with carets (`^`).\n\n* For PowerShell, use the `$Env:VAR = \"VALUE\"` [syntax](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_environment_variables?view=powershell-7.2)\nto define environment variables, call them with `$Env:VAR`, then replace `curl` with `curl.exe` and all backslashes (`\\`) in the examples with backticks (`` ` ``).\n\n* WSL is a compatibility layer that allows you to emulate a Linux terminal on a Windows machine.\nInstall WSL with our [community tutorial](https://www.digitalocean.com/community/tutorials/how-to-install-the-windows-subsystem-for-linux-2-on-microsoft-windows-10), \nthen follow this API documentation normally.\n\nThe names of account-specific references (like Droplet IDs, for instance)\nwill be represented by variables. For instance, a Droplet ID may be\nrepresented by a variable called `$DROPLET_ID`. You can set the associated\nvariables in your environment if you wish to use the examples without\nmodification.\n\nThe first variable that you should set to get started is your OAuth\nauthorization token. The next section will go over the details of this, but\nyou can set an environmental variable for it now.\n\nGenerate a token by going to the [Apps & API](https://cloud.digitalocean.com/settings/applications)\nsection of the DigitalOcean control panel. Use an existing token if you have\nsaved one, or generate a new token with the \"Generate new token\" button.\nCopy the generated token and use it to set and export the TOKEN variable in\nyour environment as the example shows.\n\nYou may also wish to set some other variables now or as you go along. For\nexample, you may wish to set the `DROPLET_ID` variable to one of your\nDroplet IDs since this will be used frequently in the API.\n\nIf you are following along, make sure you use a Droplet ID that you control\nso that your commands will execute correctly.\n\nIf you need access to the headers of a response through `curl`, you can pass\nthe `-i` flag to display the header information along with the body. If you\nare only interested in the header, you can instead pass the `-I` flag, which\nwill exclude the response body entirely.\n\n\n### Set and Export your OAuth Token\n\n```\nexport DIGITALOCEAN_TOKEN=your_token_here\n```\n\n### Set and Export a Variable\n\n```\nexport DROPLET_ID=1111111\n```\n\n## Parameters\n\nThere are two different ways to pass parameters in a request with the API.\n\nWhen passing parameters to create or update an object, parameters should be\npassed as a JSON object containing the appropriate attribute names and\nvalues as key-value pairs. When you use this format, you should specify that\nyou are sending a JSON object in the header. This is done by setting the\n`Content-Type` header to `application/json`. This ensures that your request\nis interpreted correctly.\n\nWhen passing parameters to filter a response on GET requests, parameters can\nbe passed using standard query attributes. In this case, the parameters\nwould be embedded into the URI itself by appending a `?` to the end of the\nURI and then setting each attribute with an equal sign. Attributes can be\nseparated with a `&`. Tools like `curl` can create the appropriate URI when\ngiven parameters and values; this can also be done using the `-F` flag and\nthen passing the key and value as an argument. The argument should take the\nform of a quoted string with the attribute being set to a value with an\nequal sign.\n\n### Pass Parameters as a JSON Object\n\n```\n    curl -H \"Authorization: Bearer $DIGITALOCEAN_TOKEN\" \\\n        -H \"Content-Type: application/json\" \\\n        -d '{\"name\": \"example.com\", \"ip_address\": \"127.0.0.1\"}' \\\n        -X POST \"https://api.digitalocean.com/v2/domains\"\n```\n\n### Pass Filter Parameters as a Query String\n\n```\n     curl -H \"Authorization: Bearer $DIGITALOCEAN_TOKEN\" \\\n         -X GET \\\n         \"https://api.digitalocean.com/v2/images?private=true\"\n```\n\n## Cross Origin Resource Sharing\n\nIn order to make requests to the API from other domains, the API implements\nCross Origin Resource Sharing (CORS) support.\n\nCORS support is generally used to create AJAX requests outside of the domain\nthat the request originated from. This is necessary to implement projects\nlike control panels utilizing the API. This tells the browser that it can\nsend requests to an outside domain.\n\nThe procedure that the browser initiates in order to perform these actions\n(other than GET requests) begins by sending a \"preflight\" request. This sets\nthe `Origin` header and uses the `OPTIONS` method. The server will reply\nback with the methods it allows and some of the limits it imposes. The\nclient then sends the actual request if it falls within the allowed\nconstraints.\n\nThis process is usually done in the background by the browser, but you can\nuse curl to emulate this process using the example provided. The headers\nthat will be set to show the constraints are:\n\n*   **Access-Control-Allow-Origin**: This is the domain that is sent by the client or browser as the origin of the request. It is set through an `Origin` header.\n*   **Access-Control-Allow-Methods**: This specifies the allowed options for requests from that domain. This will generally be all available methods.\n*   **Access-Control-Expose-Headers**: This will contain the headers that will be available to requests from the origin domain.\n*   **Access-Control-Max-Age**: This is the length of time that the access is considered valid. After this expires, a new preflight should be sent.\n*   **Access-Control-Allow-Credentials**: This will be set to `true`. It basically allows you to send your OAuth token for authentication.\n\nYou should not need to be concerned with the details of these headers,\nbecause the browser will typically do all of the work for you.\n"
    termsOfService: https://www.digitalocean.com/legal/terms-of-service-agreement/
    contact:
        name: DigitalOcean API Team
        email: api-engineering@digitalocean.com
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
    version: "2.0"
paths:
    /v2/1-clicks:
        get:
            tags:
                - 1-Click Applications
            summary: List 1-Click Applications
            description: |
                To list all available 1-Click applications, send a GET request to `/v2/1-clicks`. The `type` may
                be provided as query paramater in order to restrict results to a certain type of 1-Click, for
                example: `/v2/1-clicks?type=droplet`. Current supported types are `kubernetes` and `droplet`.

                The response will be a JSON object with a key called `1_clicks`. This will be set to an array of
                1-Click application data, each of which will contain the the slug and type for the 1-Click.
            operationId: oneClicks_list
            parameters:
                - $ref: '#/components/parameters/oneClicks_type'
            responses:
                "200":
                    $ref: '#/components/responses/oneClicks_all'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/1-clicks/kubernetes:
        post:
            tags:
                - 1-Click Applications
            summary: Install Kubernetes 1-Click Applications
            description: |
                To install a Kubernetes 1-Click application on a cluster, send a POST request to
                `/v2/1-clicks/kubernetes`. The `addon_slugs` and `cluster_uuid` must be provided as body
                parameter in order to specify which 1-Click application(s) to install. To list all available
                1-Click Kubernetes applications, send a request to `/v2/1-clicks?type=kubernetes`.
            operationId: oneClicks_install_kubernetes
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/oneClicks_create'
            responses:
                "200":
                    $ref: '#/components/responses/oneClicks_create'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/account:
        get:
            tags:
                - Account
            summary: Get User Information
            description: To show information about the current user account, send a GET request to `/v2/account`.
            operationId: account_get
            responses:
                "200":
                    $ref: '#/components/responses/account'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/account/keys:
        get:
            tags:
                - SSH Keys
            summary: List All SSH Keys
            description: To list all of the keys in your account, send a GET request to `/v2/account/keys`. The response will be a JSON object with a key set to `ssh_keys`. The value of this will be an array of ssh_key objects, each of which contains the standard ssh_key attributes.
            operationId: sshKeys_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/sshKeys_all'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - SSH Keys
            summary: Create a New SSH Key
            description: To add a new SSH public key to your DigitalOcean account, send a POST request to `/v2/account/keys`. Set the `name` attribute to the name you wish to use and the `public_key` attribute to the full public key you are adding.
            operationId: sshKeys_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/sshKeys'
            responses:
                "201":
                    $ref: '#/components/responses/sshKeys_new'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/account/keys/{ssh_key_identifier}:
        delete:
            tags:
                - SSH Keys
            summary: Delete an SSH Key
            description: |-
                To destroy a public SSH key that you have in your account, send a DELETE request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.
                A 204 status will be returned, indicating that the action was successful and that the response body is empty.
            operationId: sshKeys_delete
            parameters:
                - $ref: '#/components/parameters/ssh_key_identifier'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - SSH Keys
            summary: Retrieve an Existing SSH Key
            description: |-
                To get information about a key, send a GET request to `/v2/account/keys/$KEY_ID` or `/v2/account/keys/$KEY_FINGERPRINT`.
                The response will be a JSON object with the key `ssh_key` and value an ssh_key object which contains the standard ssh_key attributes.
            operationId: sshKeys_get
            parameters:
                - $ref: '#/components/parameters/ssh_key_identifier'
            responses:
                "200":
                    $ref: '#/components/responses/sshKeys_existing'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - SSH Keys
            summary: Update an SSH Key's Name
            description: To update the name of an SSH key, send a PUT request to either `/v2/account/keys/$SSH_KEY_ID` or `/v2/account/keys/$SSH_KEY_FINGERPRINT`. Set the `name` attribute to the new name you want to use.
            operationId: sshKeys_update
            parameters:
                - $ref: '#/components/parameters/ssh_key_identifier'
            requestBody:
                description: Set the `name` attribute to the new name you want to use.
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    $ref: '#/components/schemas/ssh_key_name'
            responses:
                "200":
                    $ref: '#/components/responses/sshKeys_existing'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/actions:
        get:
            tags:
                - Actions
            summary: List All Actions
            description: This will be the entire list of actions taken on your account, so it will be quite large. As with any large collection returned by the API, the results will be paginated with only 20 on each page by default.
            operationId: actions_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/actions'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/actions/{action_id}:
        get:
            tags:
                - Actions
            summary: Retrieve an Existing Action
            description: To retrieve a specific action object, send a GET request to `/v2/actions/$ACTION_ID`.
            operationId: actions_get
            parameters:
                - $ref: '#/components/parameters/action_id'
            responses:
                "200":
                    $ref: '#/components/responses/action'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps:
        get:
            tags:
                - Apps
            summary: List All Apps
            description: List all apps on your account. Information about the current active deployment as well as any in progress ones will also be included for each app.
            operationId: apps_list
            parameters:
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/with_projects'
            responses:
                "200":
                    $ref: '#/components/responses/list_apps'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Apps
            summary: Create a New App
            description: Create a new app by submitting an app specification. For documentation on app specifications (`AppSpec` objects), please refer to [the product documentation](https://docs.digitalocean.com/products/app-platform/reference/app-spec/).
            operationId: apps_create
            parameters:
                - $ref: '#/components/parameters/accept'
                - $ref: '#/components/parameters/content-type'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/apps_create_app_request'
                        example:
                            spec:
                                name: web-app
                                region: nyc
                                services:
                                    - environment_slug: node-js
                                      github:
                                        branch: main
                                        deploy_on_push: true
                                        repo: digitalocean/sample-golang
                                      instance_count: 2
                                      instance_size_slug: basic-xxs
                                      name: api
                                      routes:
                                        - path: /api
                                      run_command: bin/api
            responses:
                "200":
                    $ref: '#/components/responses/new_app'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{app_id}/alerts:
        get:
            tags:
                - Apps
            summary: List all app alerts
            description: List alerts associated to the app and any components. This includes configuration information about the alerts including emails, slack webhooks, and triggering events or conditions.
            operationId: apps_list_alerts
            parameters:
                - $ref: '#/components/parameters/app_id'
            responses:
                "200":
                    $ref: '#/components/responses/list_alerts'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/{app_id}/alerts/{alert_id}/destinations:
        post:
            tags:
                - Apps
            summary: Update destinations for alerts
            description: Updates the emails and slack webhook destinations for app alerts. Emails must be associated to a user with access to the app.
            operationId: apps_assign_alertDestinations
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/alert_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/apps_assign_app_alert_destinations_request'
            responses:
                "200":
                    $ref: '#/components/responses/assign_alert_destinations'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{app_id}/components/{component_name}/logs:
        get:
            tags:
                - Apps
            summary: Retrieve Active Deployment Logs
            description: Retrieve the logs of the active deployment if one exists. The response will include links to either real-time logs of an in-progress or active deployment or archived logs of a past deployment. Note log_type=BUILD logs will return logs associated with the current active deployment (being served). To view build logs associated with in-progress build, the query must explicitly reference the deployment id.
            operationId: apps_get_logs_active_deployment
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/component'
                - $ref: '#/components/parameters/live_updates'
                - $ref: '#/components/parameters/log_type'
                - $ref: '#/components/parameters/time_wait'
            responses:
                "200":
                    $ref: '#/components/responses/list_logs'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/{app_id}/deployments:
        get:
            tags:
                - Apps
            summary: List App Deployments
            description: List all deployments of an app.
            operationId: apps_list_deployments
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/per_page'
            responses:
                "200":
                    $ref: '#/components/responses/existing_deployments'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Apps
            summary: Create an App Deployment
            description: Creating an app deployment will pull the latest changes from your repository and schedule a new deployment for your app.
            operationId: apps_create_deployment
            parameters:
                - $ref: '#/components/parameters/app_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/apps_create_deployment_request'
            responses:
                "200":
                    $ref: '#/components/responses/new_app_deployment'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{app_id}/deployments/{deployment_id}:
        get:
            tags:
                - Apps
            summary: Retrieve an App Deployment
            description: Retrieve information about an app deployment.
            operationId: apps_get_deployment
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/deployment_id'
            responses:
                "200":
                    $ref: '#/components/responses/list_deployment'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/{app_id}/deployments/{deployment_id}/cancel:
        post:
            tags:
                - Apps
            summary: Cancel a Deployment
            description: Immediately cancel an in-progress deployment.
            operationId: apps_cancel_deployment
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/deployment_id'
            responses:
                "200":
                    $ref: '#/components/responses/cancel_deployment'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{app_id}/deployments/{deployment_id}/components/{component_name}/logs:
        get:
            tags:
                - Apps
            summary: Retrieve Deployment Logs
            description: Retrieve the logs of a past, in-progress, or active deployment. The response will include links to either real-time logs of an in-progress or active deployment or archived logs of a past deployment.
            operationId: apps_get_logs
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/deployment_id'
                - $ref: '#/components/parameters/component'
                - $ref: '#/components/parameters/live_updates'
                - $ref: '#/components/parameters/log_type'
                - $ref: '#/components/parameters/time_wait'
            responses:
                "200":
                    $ref: '#/components/responses/list_logs'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/{app_id}/deployments/{deployment_id}/logs:
        get:
            tags:
                - Apps
            summary: Retrieve Aggregate Deployment Logs
            description: Retrieve the logs of a past, in-progress, or active deployment. If a component name is specified, the logs will be limited to only that component. The response will include links to either real-time logs of an in-progress or active deployment or archived logs of a past deployment.
            operationId: apps_get_logs_aggregate
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/deployment_id'
                - $ref: '#/components/parameters/live_updates'
                - $ref: '#/components/parameters/log_type'
                - $ref: '#/components/parameters/time_wait'
            responses:
                "200":
                    $ref: '#/components/responses/list_logs'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/{app_id}/logs:
        get:
            tags:
                - Apps
            summary: Retrieve Active Deployment Aggregate Logs
            description: Retrieve the logs of the active deployment if one exists. The response will include links to either real-time logs of an in-progress or active deployment or archived logs of a past deployment. Note log_type=BUILD logs will return logs associated with the current active deployment (being served). To view build logs associated with in-progress build, the query must explicitly reference the deployment id.
            operationId: apps_get_logs_active_deployment_aggregate
            parameters:
                - $ref: '#/components/parameters/app_id'
                - $ref: '#/components/parameters/live_updates'
                - $ref: '#/components/parameters/log_type'
                - $ref: '#/components/parameters/time_wait'
            responses:
                "200":
                    $ref: '#/components/responses/list_logs'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/{app_id}/metrics/bandwidth_daily:
        get:
            tags:
                - Apps
            summary: Retrieve App Daily Bandwidth Metrics
            description: Retrieve daily bandwidth usage metrics for a single app.
            operationId: apps_get_metrics_bandwidth_daily
            parameters:
                - $ref: '#/components/parameters/app_id'
                - name: date
                  in: query
                  description: 'Optional day to query. Only the date component of the timestamp will be considered. Default: yesterday.'
                  schema:
                    type: string
                    format: date-time
                  example: "2023-01-17T00:00:00Z"
            responses:
                "200":
                    $ref: '#/components/responses/get_metrics_bandwidth_usage'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/{app_id}/rollback:
        post:
            tags:
                - Apps
            summary: Rollback App
            description: |
                Rollback an app to a previous deployment. A new deployment will be created to perform the rollback.
                The app will be pinned to the rollback deployment preventing any new deployments from being created,
                either manually or through Auto Deploy on Push webhooks. To resume deployments, the rollback must be
                either committed or reverted.

                It is recommended to use the Validate App Rollback endpoint to double check if the rollback is
                valid and if there are any warnings.
            operationId: apps_create_rollback
            parameters:
                - $ref: '#/components/parameters/app_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/apps_rollback_app_request'
            responses:
                "200":
                    $ref: '#/components/responses/new_app_deployment'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{app_id}/rollback/commit:
        post:
            tags:
                - Apps
            summary: Commit App Rollback
            description: |
                Commit an app rollback. This action permanently applies the rollback and unpins the app to resume new deployments.
            operationId: apps_commit_rollback
            parameters:
                - $ref: '#/components/parameters/app_id'
            responses:
                "200":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{app_id}/rollback/revert:
        post:
            tags:
                - Apps
            summary: Revert App Rollback
            description: |
                Revert an app rollback. This action reverts the active rollback by creating a new deployment from the
                latest app spec prior to the rollback and unpins the app to resume new deployments.
            operationId: apps_revert_rollback
            parameters:
                - $ref: '#/components/parameters/app_id'
            responses:
                "200":
                    $ref: '#/components/responses/new_app_deployment'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{app_id}/rollback/validate:
        post:
            tags:
                - Apps
            summary: Validate App Rollback
            description: |
                Check whether an app can be rolled back to a specific deployment. This endpoint can also be used
                to check if there are any warnings or validation conditions that will cause the rollback to proceed
                under unideal circumstances. For example, if a component must be rebuilt as part of the rollback
                causing it to take longer than usual.
            operationId: apps_validate_rollback
            parameters:
                - $ref: '#/components/parameters/app_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/apps_rollback_app_request'
            responses:
                "200":
                    $ref: '#/components/responses/apps_validate_rollback'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/{id}:
        delete:
            tags:
                - Apps
            summary: Delete an App
            description: Delete an existing app. Once deleted, all active deployments will be permanently shut down and the app deleted. If needed, be sure to back up your app specification so that you may re-create it at a later time.
            operationId: apps_delete
            parameters:
                - $ref: '#/components/parameters/id_app'
            responses:
                "200":
                    $ref: '#/components/responses/delete_app'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Apps
            summary: Retrieve an Existing App
            description: Retrieve details about an existing app by either its ID or name. To retrieve an app by its name, do not include an ID in the request path. Information about the current active deployment as well as any in progress ones will also be included in the response.
            operationId: apps_get
            parameters:
                - $ref: '#/components/parameters/id_app'
                - $ref: '#/components/parameters/app_name'
            responses:
                "200":
                    $ref: '#/components/responses/apps_get'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Apps
            summary: Update an App
            description: Update an existing app by submitting a new app specification. For documentation on app specifications (`AppSpec` objects), please refer to [the product documentation](https://docs.digitalocean.com/products/app-platform/reference/app-spec/).
            operationId: apps_update
            parameters:
                - $ref: '#/components/parameters/id_app'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/apps_update_app_request'
            responses:
                "200":
                    $ref: '#/components/responses/update_app'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/apps/metrics/bandwidth_daily:
        post:
            tags:
                - Apps
            summary: Retrieve Multiple Apps' Daily Bandwidth Metrics
            description: Retrieve daily bandwidth usage metrics for multiple apps.
            operationId: apps_list_metrics_bandwidth_daily
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app_metrics_bandwidth_usage_request'
                        example:
                            app_ids:
                                - 4f6c71e2-1e90-4762-9fee-6cc4a0a9f2cf
                                - c2a93513-8d9b-4223-9d61-5e7272c81cf5
                            date: "2023-01-17T00:00:00Z"
            responses:
                "200":
                    $ref: '#/components/responses/list_metrics_bandwidth_usage'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/propose:
        post:
            tags:
                - Apps
            summary: Propose an App Spec
            description: To propose and validate a spec for a new or existing app, send a POST request to the `/v2/apps/propose` endpoint. The request returns some information about the proposed app, including app cost and upgrade cost. If an existing app ID is specified, the app spec is treated as a proposed update to the existing app.
            operationId: apps_validate_appSpec
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/app_propose'
                        example:
                            app_id: b6bdf840-2854-4f87-a36c-5f231c617c84
                            spec:
                                name: web-app
                                region: nyc
                                services:
                                    - environment_slug: node-js
                                      github:
                                        branch: main
                                        deploy_on_push: true
                                        repo: digitalocean/sample-golang
                                      instance_count: 2
                                      instance_size_slug: basic-xxs
                                      name: api
                                      routes:
                                        - path: /api
                                      run_command: bin/api
            responses:
                "200":
                    $ref: '#/components/responses/propose_app'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/regions:
        get:
            tags:
                - Apps
            summary: List App Regions
            description: List all regions supported by App Platform.
            operationId: apps_list_regions
            responses:
                "200":
                    $ref: '#/components/responses/list_regions'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/tiers:
        get:
            tags:
                - Apps
            summary: List App Tiers
            description: List all app tiers.
            operationId: apps_list_tiers
            responses:
                "200":
                    $ref: '#/components/responses/all_tiers'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/tiers/{slug}:
        get:
            tags:
                - Apps
            summary: Retrieve an App Tier
            description: Retrieve information about a specific app tier.
            operationId: apps_get_tier
            parameters:
                - $ref: '#/components/parameters/slug_tier'
            responses:
                "200":
                    $ref: '#/components/responses/get_tier'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/tiers/instance_sizes:
        get:
            tags:
                - Apps
            summary: List Instance Sizes
            description: List all instance sizes for `service`, `worker`, and `job` components.
            operationId: apps_list_instanceSizes
            responses:
                "200":
                    $ref: '#/components/responses/list_instance'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/apps/tiers/instance_sizes/{slug}:
        get:
            tags:
                - Apps
            summary: Retrieve an Instance Size
            description: Retrieve information about a specific instance size for `service`, `worker`, and `job` components.
            operationId: apps_get_instanceSize
            parameters:
                - $ref: '#/components/parameters/slug_size'
            responses:
                "200":
                    $ref: '#/components/responses/get_instance'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/cdn/endpoints:
        get:
            tags:
                - CDN Endpoints
            summary: List All CDN Endpoints
            description: To list all of the CDN endpoints available on your account, send a GET request to `/v2/cdn/endpoints`.
            operationId: cdn_list_endpoints
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_cdn_endpoints'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - CDN Endpoints
            summary: Create a New CDN Endpoint
            description: |
                To create a new CDN endpoint, send a POST request to `/v2/cdn/endpoints`. The
                origin attribute must be set to the fully qualified domain name (FQDN) of a
                DigitalOcean Space. Optionally, the TTL may be configured by setting the `ttl`
                attribute.

                A custom subdomain may be configured by specifying the `custom_domain` and
                `certificate_id` attributes.
            operationId: cdn_create_endpoint
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cdn_endpoint'
                        examples:
                            CDN Endpoint:
                                value:
                                    origin: static-images.nyc3.digitaloceanspaces.com
                                    ttl: 3600
                            CDN Endpoint With Custom Domain:
                                value:
                                    certificate_id: 892071a0-bb95-49bc-8021-3afd67a210bf
                                    custom_domain: static.example.com
                                    origin: static-images.nyc3.digitaloceanspaces.com
                                    ttl: 3600
            responses:
                "201":
                    $ref: '#/components/responses/existing_endpoint'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/cdn/endpoints/{cdn_id}:
        delete:
            tags:
                - CDN Endpoints
            summary: Delete a CDN Endpoint
            description: |
                To delete a specific CDN endpoint, send a DELETE request to
                `/v2/cdn/endpoints/$ENDPOINT_ID`.

                A status of 204 will be given. This indicates that the request was processed
                successfully, but that no response body is needed.
            operationId: cdn_delete_endpoint
            parameters:
                - $ref: '#/components/parameters/cdn_endpoint_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - CDN Endpoints
            summary: Retrieve an Existing CDN Endpoint
            description: To show information about an existing CDN endpoint, send a GET request to `/v2/cdn/endpoints/$ENDPOINT_ID`.
            operationId: cdn_get_endpoint
            parameters:
                - $ref: '#/components/parameters/cdn_endpoint_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_endpoint'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - CDN Endpoints
            summary: Update a CDN Endpoint
            description: |
                To update the TTL, certificate ID, or the FQDN of the custom subdomain for
                an existing CDN endpoint, send a PUT request to
                `/v2/cdn/endpoints/$ENDPOINT_ID`.
            operationId: cdn_update_endpoints
            parameters:
                - $ref: '#/components/parameters/cdn_endpoint_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update_endpoint'
            responses:
                "200":
                    $ref: '#/components/responses/existing_endpoint'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/cdn/endpoints/{cdn_id}/cache:
        delete:
            tags:
                - CDN Endpoints
            summary: Purge the Cache for an Existing CDN Endpoint
            description: "To purge cached content from a CDN endpoint, send a DELETE request to\n`/v2/cdn/endpoints/$ENDPOINT_ID/cache`. The body of the request should include\na `files` attribute containing a list of cached file paths to be purged. A\npath may be for a single file or may contain a wildcard (`*`) to recursively\npurge all files under a directory. When only a wildcard is provided, all\ncached files will be purged. There is a rate limit of 50 files per 20 seconds \nthat can be purged.\n"
            operationId: cdn_purge_cache
            parameters:
                - $ref: '#/components/parameters/cdn_endpoint_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/purge_cache'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/certificates:
        get:
            tags:
                - Certificates
            summary: List All Certificates
            description: To list all of the certificates available on your account, send a GET request to `/v2/certificates`.
            operationId: certificates_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_certificates'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Certificates
            summary: Create a New Certificate
            description: |
                To upload new SSL certificate which you have previously generated, send a POST
                request to `/v2/certificates`.

                When uploading a user-generated certificate, the `private_key`,
                `leaf_certificate`, and optionally the `certificate_chain` attributes should
                be provided. The type must be set to `custom`.

                When using Let's Encrypt to create a certificate, the `dns_names` attribute
                must be provided, and the type must be set to `lets_encrypt`.
            operationId: certificates_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            oneOf:
                                - $ref: '#/components/schemas/certificate_request_lets_encrypt'
                                - $ref: '#/components/schemas/certificate_request_custom'
            responses:
                "201":
                    $ref: '#/components/responses/new_certificate'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/certificates/{certificate_id}:
        delete:
            tags:
                - Certificates
            summary: Delete a Certificate
            description: |
                To delete a specific certificate, send a DELETE request to
                `/v2/certificates/$CERTIFICATE_ID`.
            operationId: certificates_delete
            parameters:
                - $ref: '#/components/parameters/certificate_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Certificates
            summary: Retrieve an Existing Certificate
            description: To show information about an existing certificate, send a GET request to `/v2/certificates/$CERTIFICATE_ID`.
            operationId: certificates_get
            parameters:
                - $ref: '#/components/parameters/certificate_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_certificate'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/customers/my/balance:
        get:
            tags:
                - Billing
            summary: Get Customer Balance
            description: To retrieve the balances on a customer's account, send a GET request to `/v2/customers/my/balance`.
            operationId: balance_get
            responses:
                "200":
                    $ref: '#/components/responses/balance'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/customers/my/billing_history:
        get:
            tags:
                - Billing
            summary: List Billing History
            description: To retrieve a list of all billing history entries, send a GET request to `/v2/customers/my/billing_history`.
            operationId: billingHistory_list
            responses:
                "200":
                    $ref: '#/components/responses/billing_history'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/customers/my/invoices:
        get:
            tags:
                - Billing
            summary: List All Invoices
            description: To retrieve a list of all invoices, send a GET request to `/v2/customers/my/invoices`.
            operationId: invoices_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/invoices'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/customers/my/invoices/{invoice_uuid}:
        get:
            tags:
                - Billing
            summary: Retrieve an Invoice by UUID
            description: To retrieve the invoice items for an invoice, send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID`.
            operationId: invoices_get_byUUID
            parameters:
                - $ref: '#/components/parameters/invoice_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/invoice'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/customers/my/invoices/{invoice_uuid}/csv:
        get:
            tags:
                - Billing
            summary: Retrieve an Invoice CSV by UUID
            description: To retrieve a CSV for an invoice, send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID/csv`.
            operationId: invoices_get_csvByUUID
            parameters:
                - $ref: '#/components/parameters/invoice_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/invoice_csv'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/customers/my/invoices/{invoice_uuid}/pdf:
        get:
            tags:
                - Billing
            summary: Retrieve an Invoice PDF by UUID
            description: To retrieve a PDF for an invoice, send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID/pdf`.
            operationId: invoices_get_pdfByUUID
            parameters:
                - $ref: '#/components/parameters/invoice_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/invoice_pdf'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/customers/my/invoices/{invoice_uuid}/summary:
        get:
            tags:
                - Billing
            summary: Retrieve an Invoice Summary by UUID
            description: To retrieve a summary for an invoice, send a GET request to `/v2/customers/my/invoices/$INVOICE_UUID/summary`.
            operationId: invoices_get_summaryByUUID
            parameters:
                - $ref: '#/components/parameters/invoice_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/invoice_summary'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases:
        get:
            tags:
                - Databases
            summary: List All Database Clusters
            description: |-
                To list all of the database clusters available on your account, send a GET request to `/v2/databases`. To limit the results to database clusters with a specific tag, include the `tag_name` query parameter set to the name of the tag. For example, `/v2/databases?tag_name=$TAG_NAME`.
                The result will be a JSON object with a `databases` key. This will be set to an array of database objects, each of which will contain the standard database attributes.
                The embedded `connection` and `private_connection` objects will contain the information needed to access the database cluster:
                The embedded `maintenance_window` object will contain information about any scheduled maintenance for the database cluster.
            operationId: databases_list_clusters
            parameters:
                - $ref: '#/components/parameters/tag_name'
            responses:
                "200":
                    $ref: '#/components/responses/database_clusters'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Databases
            summary: Create a New Database Cluster
            description: |-
                To create a database cluster, send a POST request to `/v2/databases`.
                The response will be a JSON object with a key called `database`. The value of this will be an object that contains the standard attributes associated with a database cluster. The initial value of the database cluster's `status` attribute will be `creating`. When the cluster is ready to receive traffic, this will transition to `online`.
                The embedded `connection` and `private_connection` objects will contain the information needed to access the database cluster.
                DigitalOcean managed PostgreSQL and MySQL database clusters take automated daily backups. To create a new database cluster based on a backup of an existing cluster, send a POST request to `/v2/databases`. In addition to the standard database cluster attributes, the JSON body must include a key named `backup_restore` with the name of the original database cluster and the timestamp of the backup to be restored. Creating a database from a backup is the same as forking a database in the control panel.
                Note: Backups are not supported for Redis clusters.
            operationId: databases_create_cluster
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/database_cluster'
                                - type: object
                                  properties:
                                    backup_restore:
                                        $ref: '#/components/schemas/database_backup'
                        examples:
                            Create a New Database Cluster:
                                value:
                                    engine: pg
                                    name: backend
                                    num_nodes: 2
                                    region: nyc3
                                    size: db-s-2vcpu-4gb
                                    tags:
                                        - production
                                    version: "14"
                            Create a New Database Cluster with trusted sources:
                                value:
                                    engine: pg
                                    name: backend
                                    num_nodes: 2
                                    region: nyc3
                                    rules:
                                        - type: ip_addr
                                          value: 192.168.1.1
                                        - type: k8s
                                          value: ff2a6c52-5a44-4b63-b99c-0e98e7a63d61
                                        - type: droplet
                                          value: "163973392"
                                        - type: tag
                                          value: test
                                    size: db-s-2vcpu-4gb
                                    tags:
                                        - production
                                    version: "14"
                            Restore from a Database Cluster Backup:
                                value:
                                    backup_restore:
                                        backup_created_at: "2019-01-31T19:25:22Z"
                                        database_name: backend
                                    engine: pg
                                    name: backend-restored
                                    num_nodes: 2
                                    region: nyc3
                                    size: db-s-2vcpu-4gb
                                    version: "14"
            responses:
                "201":
                    $ref: '#/components/responses/database_cluster'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}:
        delete:
            tags:
                - Databases
            summary: Destroy a Database Cluster
            description: |-
                To destroy a specific database, send a DELETE request to `/v2/databases/$DATABASE_ID`.
                A status of 204 will be given. This indicates that the request was processed successfully, but that no response body is needed.
            operationId: databases_destroy_cluster
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Databases
            summary: Retrieve an Existing Database Cluster
            description: |-
                To show information about an existing database cluster, send a GET request to `/v2/databases/$DATABASE_ID`.
                The response will be a JSON object with a database key. This will be set to an object containing the standard database cluster attributes.
                The embedded connection and private_connection objects will contain the information needed to access the database cluster.
                The embedded maintenance_window object will contain information about any scheduled maintenance for the database cluster.
            operationId: databases_get_cluster
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/database_cluster'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases/{database_cluster_uuid}/backups:
        get:
            tags:
                - Databases
            summary: List Backups for a Database Cluster
            description: |-
                To list all of the available backups of a PostgreSQL or MySQL database cluster, send a GET request to `/v2/databases/$DATABASE_ID/backups`.
                **Note**: Backups are not supported for Redis clusters.
                The result will be a JSON object with a `backups key`. This will be set to an array of backup objects, each of which will contain the size of the backup and the timestamp at which it was created.
            operationId: databases_list_backups
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/database_backups'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases/{database_cluster_uuid}/ca:
        get:
            tags:
                - Databases
            summary: Retrieve the Public Certificate
            description: |
                To retrieve the public certificate used to secure the connection to the database cluster send a GET request to
                `/v2/databases/$DATABASE_ID/ca`.

                The response will be a JSON object with a `ca` key. This will be set to an object
                containing the base64 encoding of the public key certificate.
            operationId: databases_get_ca
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/ca'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases/{database_cluster_uuid}/config:
        get:
            tags:
                - Databases
            summary: Retrieve an Existing Database Cluster Configuration
            description: |
                Shows configuration parameters for an existing database cluster by sending a GET request to
                `/v2/databases/$DATABASE_ID/config`.
                The response is a JSON object with a `config` key, which is set to an object
                containing any database configuration parameters.
            operationId: databases_get_config
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/database_config'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        patch:
            tags:
                - Databases
            summary: Update the Database Configuration for an Existing Database
            description: |
                To update the configuration for an existing database cluster, send a PATCH request to
                `/v2/databases/$DATABASE_ID/config`.
            operationId: databases_patch_config
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/database_config'
                        example:
                            config:
                                sql_mode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES
                                sql_require_primary_key: true
            responses:
                "200":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/dbs:
        get:
            tags:
                - Databases
            summary: List All Databases
            description: |
                To list all of the databases in a clusters, send a GET request to
                `/v2/databases/$DATABASE_ID/dbs`.

                The result will be a JSON object with a `dbs` key. This will be set to an array
                of database objects, each of which will contain the standard database attributes.

                Note: Database management is not supported for Redis clusters.
            operationId: databases_list
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/databases'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Databases
            summary: Add a New Database
            description: |
                To add a new database to an existing cluster, send a POST request to
                `/v2/databases/$DATABASE_ID/dbs`.

                Note: Database management is not supported for Redis clusters.

                The response will be a JSON object with a key called `db`. The value of this will be
                an object that contains the standard attributes associated with a database.
            operationId: databases_add
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/database'
                        example:
                            name: alpha
            responses:
                "201":
                    $ref: '#/components/responses/database'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/dbs/{database_name}:
        delete:
            tags:
                - Databases
            summary: Delete a Database
            description: |
                To delete a specific database, send a DELETE request to
                `/v2/databases/$DATABASE_ID/dbs/$DB_NAME`.

                A status of 204 will be given. This indicates that the request was processed
                successfully, but that no response body is needed.

                Note: Database management is not supported for Redis clusters.
            operationId: databases_delete
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/database_name'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Databases
            summary: Retrieve an Existing Database
            description: |
                To show information about an existing database cluster, send a GET request to
                `/v2/databases/$DATABASE_ID/dbs/$DB_NAME`.

                Note: Database management is not supported for Redis clusters.

                The response will be a JSON object with a `db` key. This will be set to an object
                containing the standard database attributes.
            operationId: databases_get
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/database_name'
            responses:
                "200":
                    $ref: '#/components/responses/database'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases/{database_cluster_uuid}/eviction_policy:
        get:
            tags:
                - Databases
            summary: Retrieve the Eviction Policy for a Redis Cluster
            description: |-
                To retrieve the configured eviction policy for an existing Redis cluster, send a GET request to `/v2/databases/$DATABASE_ID/eviction_policy`.
                The response will be a JSON object with an `eviction_policy` key. This will be set to a string representing the eviction policy.
            operationId: databases_get_evictionPolicy
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/eviction_policy_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Databases
            summary: Configure the Eviction Policy for a Redis Cluster
            description: To configure an eviction policy for an existing Redis cluster, send a PUT request to `/v2/databases/$DATABASE_ID/eviction_policy` specifying the desired policy.
            operationId: databases_update_evictionPolicy
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - eviction_policy
                            properties:
                                eviction_policy:
                                    $ref: '#/components/schemas/eviction_policy_model'
                        example:
                            eviction_policy: allkeys_lru
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/firewall:
        get:
            tags:
                - Databases
            summary: List Firewall Rules (Trusted Sources) for a Database Cluster
            description: |-
                To list all of a database cluster's firewall rules (known as "trusted sources" in the control panel), send a GET request to `/v2/databases/$DATABASE_ID/firewall`.
                The result will be a JSON object with a `rules` key.
            operationId: databases_list_firewall_rules
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/firewall_rules'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Databases
            summary: Update Firewall Rules (Trusted Sources) for a Database
            description: |-
                To update a database cluster's firewall rules (known as "trusted sources" in the control panel), send a PUT request to `/v2/databases/$DATABASE_ID/firewall` specifying which resources should be able to open connections to the database. You may limit connections to specific Droplets, Kubernetes clusters, or IP addresses. When a tag is provided, any Droplet or Kubernetes node with that tag applied to it will have access. The firewall is limited to 100 rules (or trusted sources). When possible, we recommend [placing your databases into a VPC network](https://www.digitalocean.com/docs/networking/vpc/) to limit access to them instead of using a firewall.
                A successful
            operationId: databases_update_firewall_rules
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                rules:
                                    type: array
                                    items:
                                        $ref: '#/components/schemas/firewall_rule'
                        example:
                            rules:
                                - type: ip_addr
                                  value: 192.168.1.1
                                - type: k8s
                                  value: ff2a6c52-5a44-4b63-b99c-0e98e7a63d61
                                - type: droplet
                                  value: "163973392"
                                - type: tag
                                  value: backend
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/maintenance:
        put:
            tags:
                - Databases
            summary: Configure a Database Cluster's Maintenance Window
            description: |-
                To configure the window when automatic maintenance should be performed for a database cluster, send a PUT request to `/v2/databases/$DATABASE_ID/maintenance`.
                A successful request will receive a 204 No Content status code with no body in response.
            operationId: databases_update_maintenanceWindow
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/database_maintenance_window'
                        example:
                            day: tuesday
                            hour: "14:00"
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/migrate:
        put:
            tags:
                - Databases
            summary: Migrate a Database Cluster to a New Region
            description: |
                To migrate a database cluster to a new region, send a `PUT` request to
                `/v2/databases/$DATABASE_ID/migrate`. The body of the request must specify a
                `region` attribute.

                A successful request will receive a 202 Accepted status code with no body in
                response. Querying the database cluster will show that its `status` attribute
                will now be set to `migrating`. This will transition back to `online` when the
                migration has completed.
            operationId: databases_update_region
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            example:
                                region: lon1
                            required:
                                - region
                            properties:
                                region:
                                    type: string
                                    description: A slug identifier for the region to which the database cluster will be migrated.
                                    example: lon1
            responses:
                "202":
                    $ref: '#/components/responses/accepted'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/online-migration:
        get:
            tags:
                - Databases
            summary: Retrieve the Status of an Online Migration
            description: 'To retrieve the status of the most recent online migration, send a GET request to `/v2/databases/$DATABASE_ID/online-migration`. '
            operationId: databases_get_migrationStatus
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/online_migration'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Databases
            summary: Start an Online Migration
            description: To start an online migration, send a PUT request to `/v2/databases/$DATABASE_ID/online-migration` endpoint. Migrating a cluster establishes a connection with an existing cluster and replicates its contents to the target cluster. Online migration is only available for MySQL, PostgreSQL, and Redis clusters.
            operationId: databases_update_onlineMigration
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/source_database'
                        example:
                            disable_ssl: false
                            source:
                                dbname: defaultdb
                                host: source-do-user-6607903-0.b.db.ondigitalocean.com
                                password: paakjnfe10rsrsmf
                                port: 25060
                                username: doadmin
            responses:
                "200":
                    $ref: '#/components/responses/online_migration'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/online-migration/{migration_id}:
        delete:
            tags:
                - Databases
            summary: Stop an Online Migration
            description: |
                To stop an online migration, send a DELETE request to `/v2/databases/$DATABASE_ID/online-migration/$MIGRATION_ID`.

                A status of 204 will be given. This indicates that the request was processed successfully, but that no response body is needed.
            operationId: databases_delete_onlineMigration
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/migration_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/pools:
        get:
            tags:
                - Databases
            summary: List Connection Pools (PostgreSQL)
            description: |-
                To list all of the connection pools available to a PostgreSQL database cluster, send a GET request to `/v2/databases/$DATABASE_ID/pools`.
                The result will be a JSON object with a `pools` key. This will be set to an array of connection pool objects.
            operationId: databases_list_connectionPools
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/connection_pools'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Databases
            summary: Add a New Connection Pool (PostgreSQL)
            description: |
                For PostgreSQL database clusters, connection pools can be used to allow a
                database to share its idle connections. The popular PostgreSQL connection
                pooling utility PgBouncer is used to provide this service. [See here for more information](https://www.digitalocean.com/docs/databases/postgresql/how-to/manage-connection-pools/)
                about how and why to use PgBouncer connection pooling including
                details about the available transaction modes.

                To add a new connection pool to a PostgreSQL database cluster, send a POST
                request to `/v2/databases/$DATABASE_ID/pools` specifying a name for the pool,
                the user to connect with, the database to connect to, as well as its desired
                size and transaction mode.
            operationId: databases_add_connectionPool
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/connection_pool'
                        example:
                            db: defaultdb
                            mode: transaction
                            name: backend-pool
                            size: 10
                            user: doadmin
            responses:
                "201":
                    $ref: '#/components/responses/connection_pool'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/pools/{pool_name}:
        delete:
            tags:
                - Databases
            summary: Delete a Connection Pool (PostgreSQL)
            description: |
                To delete a specific connection pool for a PostgreSQL database cluster, send
                a DELETE request to `/v2/databases/$DATABASE_ID/pools/$POOL_NAME`.

                A status of 204 will be given. This indicates that the request was processed
                successfully, but that no response body is needed.
            operationId: databases_delete_connectionPool
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/pool_name'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Databases
            summary: Retrieve Existing Connection Pool (PostgreSQL)
            description: |-
                To show information about an existing connection pool for a PostgreSQL database cluster, send a GET request to `/v2/databases/$DATABASE_ID/pools/$POOL_NAME`.
                The response will be a JSON object with a `pool` key.
            operationId: databases_get_connectionPool
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/pool_name'
            responses:
                "200":
                    $ref: '#/components/responses/connection_pool'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Databases
            summary: Update Connection Pools (PostgreSQL)
            description: To update a connection pool for a PostgreSQL database cluster, send a PUT request to  `/v2/databases/$DATABASE_ID/pools/$POOL_NAME`.
            operationId: databases_update_connectionPool
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/pool_name'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/connection_pool_update'
                        example:
                            db: defaultdb
                            mode: transaction
                            size: 10
                            user: doadmin
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases/{database_cluster_uuid}/replicas:
        get:
            tags:
                - Databases
            summary: List All Read-only Replicas
            description: |-
                To list all of the read-only replicas associated with a database cluster, send a GET request to `/v2/databases/$DATABASE_ID/replicas`.

                **Note**: Read-only replicas are not supported for Redis clusters.

                The result will be a JSON object with a `replicas` key. This will be set to an array of database replica objects, each of which will contain the standard database replica attributes.
            operationId: databases_list_replicas
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/database_replicas'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Databases
            summary: Create a Read-only Replica
            description: |-
                To create a read-only replica for a PostgreSQL or MySQL database cluster, send a POST request to `/v2/databases/$DATABASE_ID/replicas` specifying the name it should be given, the size of the node to be used, and the region where it will be located.

                **Note**: Read-only replicas are not supported for Redis clusters.

                The response will be a JSON object with a key called `replica`. The value of this will be an object that contains the standard attributes associated with a database replica. The initial value of the read-only replica's `status` attribute will be `forking`. When the replica is ready to receive traffic, this will transition to `active`.
            operationId: databases_create_replica
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/database_replica'
                            required:
                                - name
                                - size
                        example:
                            name: read-nyc3-01
                            region: nyc3
                            size: db-s-2vcpu-4gb
            responses:
                "201":
                    $ref: '#/components/responses/database_replica'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/replicas/{replica_name}:
        delete:
            tags:
                - Databases
            summary: Destroy a Read-only Replica
            description: |-
                To destroy a specific read-only replica, send a DELETE request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME`.

                **Note**: Read-only replicas are not supported for Redis clusters.

                A status of 204 will be given. This indicates that the request was processed successfully, but that no response body is needed.
            operationId: databases_destroy_replica
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/replica_name'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Databases
            summary: Retrieve an Existing Read-only Replica
            description: |-
                To show information about an existing database replica, send a GET request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME`.

                **Note**: Read-only replicas are not supported for Redis clusters.

                The response will be a JSON object with a `replica key`. This will be set to an object containing the standard database replica attributes.
            operationId: databases_get_replica
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/replica_name'
            responses:
                "200":
                    $ref: '#/components/responses/database_replica'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases/{database_cluster_uuid}/replicas/{replica_name}/promote:
        put:
            tags:
                - Databases
            summary: Promote a Read-only Replica to become a Primary Cluster
            description: |-
                To promote a specific read-only replica, send a PUT request to `/v2/databases/$DATABASE_ID/replicas/$REPLICA_NAME/promote`.

                **Note**: Read-only replicas are not supported for Redis clusters.

                A status of 204 will be given. This indicates that the request was processed successfully, but that no response body is needed.
            operationId: databases_promote_replica
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/replica_name'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/resize:
        put:
            tags:
                - Databases
            summary: Resize a Database Cluster
            description: |-
                To resize a database cluster, send a PUT request to `/v2/databases/$DATABASE_ID/resize`. The body of the request must specify both the size and num_nodes attributes.
                A successful request will receive a 202 Accepted status code with no body in response. Querying the database cluster will show that its status attribute will now be set to resizing. This will transition back to online when the resize operation has completed.
            operationId: databases_update_clusterSize
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/database_cluster_resize'
                        example:
                            num_nodes: 3
                            size: db-s-4vcpu-8gb
            responses:
                "202":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/sql_mode:
        get:
            tags:
                - Databases
            summary: Retrieve the SQL Modes for a MySQL Cluster
            description: |-
                To retrieve the configured SQL modes for an existing MySQL cluster, send a GET request to `/v2/databases/$DATABASE_ID/sql_mode`.
                The response will be a JSON object with a `sql_mode` key. This will be set to a string representing the configured SQL modes.
            operationId: databases_get_sql_mode
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/sql_mode'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Databases
            summary: Update SQL Mode for a Cluster
            description: |-
                To configure the SQL modes for an existing MySQL cluster, send a PUT request to `/v2/databases/$DATABASE_ID/sql_mode` specifying the desired modes. See the official MySQL 8 documentation for a [full list of supported SQL modes](https://dev.mysql.com/doc/refman/8.0/en/sql-mode.html#sql-mode-full).
                A successful request will receive a 204 No Content status code with no body in response.
            operationId: databases_update_sql_mode
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/sql_mode'
                        example:
                            sql_mode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/upgrade:
        put:
            tags:
                - Databases
            summary: Upgrade Major Version for a Database
            description: |-
                To upgrade the major version of a database, send a PUT request to `/v2/databases/$DATABASE_ID/upgrade`, specifying the target version.
                A successful request will receive a 204 No Content status code with no body in response.
            operationId: databases_update_major_version
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/version-2'
                        example:
                            version: "14"
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/users:
        get:
            tags:
                - Databases
            summary: List all Database Users
            description: |
                To list all of the users for your database cluster, send a GET request to
                `/v2/databases/$DATABASE_ID/users`.

                Note: User management is not supported for Redis clusters.

                The result will be a JSON object with a `users` key. This will be set to an array
                of database user objects, each of which will contain the standard database user attributes.

                For MySQL clusters, additional options will be contained in the mysql_settings object.
            operationId: databases_list_users
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/users'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Databases
            summary: Add a Database User
            description: |
                To add a new database user, send a POST request to `/v2/databases/$DATABASE_ID/users`
                with the desired username.

                Note: User management is not supported for Redis clusters.

                When adding a user to a MySQL cluster, additional options can be configured in the
                `mysql_settings` object.

                The response will be a JSON object with a key called `user`. The value of this will be an
                object that contains the standard attributes associated with a database user including
                its randomly generated password.
            operationId: databases_add_user
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/database_user'
                                - type: object
                                  properties:
                                    readonly:
                                        type: boolean
                                        description: |
                                            For MongoDB clusters, set to `true` to create a read-only user.
                                            This option is not currently supported for other database engines.
                                        example: true
                        examples:
                            Add New Read Only User (MongoDB Only):
                                value:
                                    name: my-readonly
                                    readonly: true
                            Add New User:
                                value:
                                    name: app-01
                            Add New User with MySQL Auth Plugin:
                                value:
                                    mysql_settings:
                                        auth_plugin: mysql_native_password
                                    name: app-02
            responses:
                "201":
                    $ref: '#/components/responses/user'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/{database_cluster_uuid}/users/{username}:
        delete:
            tags:
                - Databases
            summary: Remove a Database User
            description: |
                To remove a specific database user, send a DELETE request to
                `/v2/databases/$DATABASE_ID/users/$USERNAME`.

                A status of 204 will be given. This indicates that the request was processed
                successfully, but that no response body is needed.

                Note: User management is not supported for Redis clusters.
            operationId: databases_delete_user
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/username'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Databases
            summary: Retrieve an Existing Database User
            description: |
                To show information about an existing database user, send a GET request to
                `/v2/databases/$DATABASE_ID/users/$USERNAME`.

                Note: User management is not supported for Redis clusters.

                The response will be a JSON object with a `user` key. This will be set to an object
                containing the standard database user attributes.

                For MySQL clusters, additional options will be contained in the mysql_settings
                object.
            operationId: databases_get_user
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/username'
            responses:
                "200":
                    $ref: '#/components/responses/user'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/databases/{database_cluster_uuid}/users/{username}/reset_auth:
        post:
            tags:
                - Databases
            summary: Reset a Database User's Password or Authentication Method
            description: |
                To reset the password for a database user, send a POST request to
                `/v2/databases/$DATABASE_ID/users/$USERNAME/reset_auth`.

                For `mysql` databases, the authentication method can be specifying by
                including a key in the JSON body called `mysql_settings` with the `auth_plugin`
                value specified.

                The response will be a JSON object with a `user` key. This will be set to an
                object containing the standard database user attributes.
            operationId: databases_reset_auth
            parameters:
                - $ref: '#/components/parameters/database_cluster_uuid'
                - $ref: '#/components/parameters/username'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                mysql_settings:
                                    $ref: '#/components/schemas/mysql_settings'
                        example:
                            mysql_settings:
                                auth_plugin: caching_sha2_password
            responses:
                "200":
                    $ref: '#/components/responses/user'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/databases/options:
        get:
            tags:
                - Databases
            summary: List Database Options
            description: |-
                To list all of the options available for the offered database engines, send a GET request to `/v2/databases/options`.
                The result will be a JSON object with an `options` key.
            operationId: databases_list_options
            responses:
                "200":
                    $ref: '#/components/responses/options'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/domains:
        get:
            tags:
                - Domains
            summary: List All Domains
            description: To retrieve a list of all of the domains in your account, send a GET request to `/v2/domains`.
            operationId: domains_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_domains_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Domains
            summary: Create a New Domain
            description: |
                To create a new domain, send a POST request to `/v2/domains`. Set the "name"
                attribute to the domain name you are adding. Optionally, you may set the
                "ip_address" attribute, and an A record will be automatically created pointing
                to the apex domain.
            operationId: domains_create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/domain'
                        example:
                            name: example.com
            responses:
                "201":
                    $ref: '#/components/responses/create_domain_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/domains/{domain_name}:
        delete:
            tags:
                - Domains
            summary: Delete a Domain
            description: |
                To delete a domain, send a DELETE request to `/v2/domains/$DOMAIN_NAME`.
            operationId: domains_delete
            parameters:
                - $ref: '#/components/parameters/domain_name'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Domains
            summary: Retrieve an Existing Domain
            description: To get details about a specific domain, send a GET request to `/v2/domains/$DOMAIN_NAME`.
            operationId: domains_get
            parameters:
                - $ref: '#/components/parameters/domain_name'
            responses:
                "200":
                    $ref: '#/components/responses/existing_domain'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/domains/{domain_name}/records:
        get:
            tags:
                - Domain Records
            summary: List All Domain Records
            description: |+
                To get a listing of all records configured for a domain, send a GET request to `/v2/domains/$DOMAIN_NAME/records`.
                The list of records returned can be filtered by using the `name` and `type` query parameters. For example, to only include A records for a domain, send a GET request to `/v2/domains/$DOMAIN_NAME/records?type=A`. `name` must be a fully qualified record name. For example, to only include records matching `sub.example.com`, send a GET request to `/v2/domains/$DOMAIN_NAME/records?name=sub.example.com`. Both name and type may be used together.

            operationId: domains_list_records
            parameters:
                - $ref: '#/components/parameters/domain_name'
                - $ref: '#/components/parameters/domain_name_query'
                - $ref: '#/components/parameters/domain_type_query'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_domain_records_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Domain Records
            summary: Create a New Domain Record
            description: |
                To create a new record to a domain, send a POST request to
                `/v2/domains/$DOMAIN_NAME/records`.

                The request must include all of the required fields for the domain record type
                being added.

                See the [attribute table](#tag/Domain-Records) for details regarding record
                types and their respective required attributes.
            operationId: domains_create_record
            parameters:
                - $ref: '#/components/parameters/domain_name'
            requestBody:
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/domain_record_a'
                                - $ref: '#/components/schemas/domain_record_aaaa'
                                - $ref: '#/components/schemas/domain_record_caa'
                                - $ref: '#/components/schemas/domain_record_cname'
                                - $ref: '#/components/schemas/domain_record_mx'
                                - $ref: '#/components/schemas/domain_record_ns'
                                - $ref: '#/components/schemas/domain_record_soa'
                                - $ref: '#/components/schemas/domain_record_srv'
                                - $ref: '#/components/schemas/domain_record_txt'
                            discriminator:
                                propertyName: type
                                mapping:
                                    A: '#/components/schemas/domain_record_a'
                                    AAAA: '#/components/schemas/domain_record_aaaa'
                                    CAA: '#/components/schemas/domain_record_caa'
                                    CNAME: '#/components/schemas/domain_record_cname'
                                    MX: '#/components/schemas/domain_record_mx'
                                    NS: '#/components/schemas/domain_record_ns'
                                    SOA: '#/components/schemas/domain_record_soa'
                                    SRV: '#/components/schemas/domain_record_srv'
                                    TXT: '#/components/schemas/domain_record_txt'
                        example:
                            data: 162.10.66.0
                            flags: null
                            name: www
                            port: null
                            priority: null
                            tag: null
                            ttl: 1800
                            type: A
                            weight: null
            responses:
                "201":
                    $ref: '#/components/responses/created_domain_record'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/domains/{domain_name}/records/{domain_record_id}:
        delete:
            tags:
                - Domain Records
            summary: Delete a Domain Record
            description: |
                To delete a record for a domain, send a DELETE request to
                `/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`.

                The record will be deleted and the response status will be a 204. This
                indicates a successful request with no body returned.
            operationId: domains_delete_record
            parameters:
                - $ref: '#/components/parameters/domain_name'
                - $ref: '#/components/parameters/domain_record_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Domain Records
            summary: Retrieve an Existing Domain Record
            description: To retrieve a specific domain record, send a GET request to `/v2/domains/$DOMAIN_NAME/records/$RECORD_ID`.
            operationId: domains_get_record
            parameters:
                - $ref: '#/components/parameters/domain_name'
                - $ref: '#/components/parameters/domain_record_id'
            responses:
                "200":
                    $ref: '#/components/responses/domain_record'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        patch:
            tags:
                - Domain Records
            summary: Update a Domain Record
            description: |
                To update an existing record, send a PATCH request to
                `/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`. Any attribute valid for
                the record type can be set to a new value for the record.

                See the [attribute table](#tag/Domain-Records) for details regarding record
                types and their respective attributes.
            operationId: domains_patch_record
            parameters:
                - $ref: '#/components/parameters/domain_name'
                - $ref: '#/components/parameters/domain_record_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/domain_record'
                        example:
                            name: blog
                            type: A
            responses:
                "200":
                    $ref: '#/components/responses/domain_record'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        put:
            tags:
                - Domain Records
            summary: Update a Domain Record
            description: |
                To update an existing record, send a PUT request to
                `/v2/domains/$DOMAIN_NAME/records/$DOMAIN_RECORD_ID`. Any attribute valid for
                the record type can be set to a new value for the record.

                See the [attribute table](#tag/Domain-Records) for details regarding record
                types and their respective attributes.
            operationId: domains_update_record
            parameters:
                - $ref: '#/components/parameters/domain_name'
                - $ref: '#/components/parameters/domain_record_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/domain_record'
                        example:
                            name: blog
                            type: CNAME
            responses:
                "200":
                    $ref: '#/components/responses/domain_record'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/droplets:
        get:
            tags:
                - Droplets
            summary: List All Droplets
            description: |
                To list all Droplets in your account, send a GET request to `/v2/droplets`.

                The response body will be a JSON object with a key of `droplets`. This will be
                set to an array containing objects each representing a Droplet. These will
                contain the standard Droplet attributes.

                ### Filtering Results by Tag

                It's possible to request filtered results by including certain query parameters.
                To only list Droplets assigned to a specific tag, include the `tag_name` query
                parameter set to the name of the tag in your GET request. For example,
                `/v2/droplets?tag_name=$TAG_NAME`.
            operationId: droplets_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/droplet_tag_name'
                - $ref: '#/components/parameters/droplet_name'
            responses:
                "200":
                    $ref: '#/components/responses/all_droplets'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Droplets
            summary: Create a New Droplet
            description: |
                To create a new Droplet, send a POST request to `/v2/droplets` setting the
                required attributes.

                A Droplet will be created using the provided information. The response body
                will contain a JSON object with a key called `droplet`. The value will be an
                object containing the standard attributes for your new Droplet. The response
                code, 202 Accepted, does not indicate the success or failure of the operation,
                just that the request has been accepted for processing. The `actions` returned
                as part of the response's `links` object can be used to check the status
                of the Droplet create event.

                ### Create Multiple Droplets

                Creating multiple Droplets is very similar to creating a single Droplet.
                Instead of sending `name` as a string, send `names` as an array of strings. A
                Droplet will be created for each name you send using the associated
                information. Up to ten Droplets may be created this way at a time.

                Rather than returning a single Droplet, the response body will contain a JSON
                array with a key called `droplets`. This will be set to an array of JSON
                objects, each of which will contain the standard Droplet attributes. The
                response code, 202 Accepted, does not indicate the success or failure of any
                operation, just that the request has been accepted for processing. The array
                of `actions` returned as part of the response's `links` object can be used to
                check the status of each individual Droplet create event.
            operationId: droplet_create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/droplet_single_create'
                        examples:
                            Multiple Droplet Create Request:
                                $ref: '#/components/examples/droplet_multi_create_request'
                            Single Droplet Create Request:
                                $ref: '#/components/examples/droplet_create_request'
            responses:
                "202":
                    $ref: '#/components/responses/droplet_create'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/droplets/{droplet_id}:
        delete:
            tags:
                - Droplets
            summary: Delete an Existing Droplet
            description: |
                To delete a Droplet, send a DELETE request to `/v2/droplets/$DROPLET_ID`.

                A successful request will receive a 204 status code with no body in response.
                This indicates that the request was processed successfully.
            operationId: droplet_delete
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content_with_content_type'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Droplets
            summary: Retrieve an Existing Droplet
            description: |
                To show information about an individual Droplet, send a GET request to
                `/v2/droplets/$DROPLET_ID`.
            operationId: droplets_get
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_droplet'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/actions:
        get:
            tags:
                - Droplet Actions
            summary: List Actions for a Droplet
            description: |
                To retrieve a list of all actions that have been executed for a Droplet, send
                a GET request to `/v2/droplets/$DROPLET_ID/actions`.

                The results will be returned as a JSON object with an `actions` key. This will
                be set to an array filled with `action` objects containing the standard
                `action` attributes.
            operationId: dropletActions_list
            parameters:
                - $ref: '#/components/parameters/droplet_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_droplet_actions'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Droplet Actions
            summary: Initiate a Droplet Action
            description: |
                To initiate an action on a Droplet send a POST request to
                `/v2/droplets/$DROPLET_ID/actions`. In the JSON body to the request,
                set the `type` attribute to on of the supported action types:

                | Action                                   | Details |
                | ---------------------------------------- | ----------- |
                | <nobr>`enable_backups`</nobr>            | Enables backups for a Droplet |
                | <nobr>`disable_backups`</nobr>           | Disables backups for a Droplet |
                | <nobr>`reboot`</nobr>                    | Reboots a Droplet. A `reboot` action is an attempt to reboot the Droplet in a graceful way, similar to using the `reboot` command from the console. |
                | <nobr>`power_cycle`</nobr>               | Power cycles a Droplet. A `powercycle` action is similar to pushing the reset button on a physical machine, it's similar to booting from scratch. |
                | <nobr>`shutdown`</nobr>                  | Shutsdown a Droplet. A shutdown action is an attempt to shutdown the Droplet in a graceful way, similar to using the `shutdown` command from the console. Since a `shutdown` command can fail, this action guarantees that the command is issued, not that it succeeds. The preferred way to turn off a Droplet is to attempt a shutdown, with a reasonable timeout, followed by a `power_off` action to ensure the Droplet is off. |
                | <nobr>`power_off`</nobr>                 | Powers off a Droplet. A `power_off` event is a hard shutdown and should only be used if the `shutdown` action is not successful. It is similar to cutting the power on a server and could lead to complications. |
                | <nobr>`power_on`</nobr>                  | Powers on a Droplet. |
                | <nobr>`restore`</nobr>                   | Restore a Droplet using a backup image. The image ID that is passed in must be a backup of the current Droplet instance. The operation will leave any embedded SSH keys intact. |
                | <nobr>`password_reset`</nobr>            | Resets the root password for a Droplet. A new password will be provided via email. It must be changed after first use. |
                | <nobr>`resize`</nobr>                    | Resizes a Droplet. Set the `size` attribute to a size slug. If a permanent resize with disk changes included is desired, set the `disk` attribute to `true`. |
                | <nobr>`rebuild`</nobr>                   | Rebuilds a Droplet from a new base image. Set the `image` attribute to an image ID or slug. |
                | <nobr>`rename`</nobr>                    | Renames a Droplet. |
                | <nobr>`change_kernel`</nobr>             | Changes a Droplet's kernel. Only applies to Droplets with externally managed kernels. All Droplets created after March 2017 use internal kernels by default. |
                | <nobr>`enable_ipv6`</nobr>               | Enables IPv6 for a Droplet. |
                | <nobr>`snapshot`</nobr>                  | Takes a snapshot of a Droplet. |
            operationId: dropletActions_post
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            requestBody:
                description: |
                    The `type` attribute set in the request body will specify the  action that
                    will be taken on the Droplet. Some actions will require additional
                    attributes to be set as well.
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/droplet_action'
                                - $ref: '#/components/schemas/droplet_action_restore'
                                - $ref: '#/components/schemas/droplet_action_resize'
                                - $ref: '#/components/schemas/droplet_action_rebuild'
                                - $ref: '#/components/schemas/droplet_action_rename'
                                - $ref: '#/components/schemas/droplet_action_change_kernel'
                                - $ref: '#/components/schemas/droplet_action_snapshot'
                            discriminator:
                                propertyName: type
                                mapping:
                                    change_kernel: '#/components/schemas/droplet_action_change_kernel'
                                    disable_backups: '#/components/schemas/droplet_action'
                                    enable_backups: '#/components/schemas/droplet_action'
                                    enable_ipv6: '#/components/schemas/droplet_action'
                                    password_reset: '#/components/schemas/droplet_action'
                                    power_cycle: '#/components/schemas/droplet_action'
                                    power_off: '#/components/schemas/droplet_action'
                                    power_on: '#/components/schemas/droplet_action'
                                    reboot: '#/components/schemas/droplet_action'
                                    rebuild: '#/components/schemas/droplet_action_rebuild'
                                    rename: '#/components/schemas/droplet_action_rename'
                                    resize: '#/components/schemas/droplet_action_resize'
                                    restore: '#/components/schemas/droplet_action_restore'
                                    shutdown: '#/components/schemas/droplet_action'
                                    snapshot: '#/components/schemas/droplet_action_snapshot'
            responses:
                "201":
                    $ref: '#/components/responses/droplet_action'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/droplets/{droplet_id}/actions/{action_id}:
        get:
            tags:
                - Droplet Actions
            summary: Retrieve a Droplet Action
            description: |
                To retrieve a Droplet action, send a GET request to
                `/v2/droplets/$DROPLET_ID/actions/$ACTION_ID`.

                The response will be a JSON object with a key called `action`. The value will
                be a Droplet action object.
            operationId: dropletActions_get
            parameters:
                - $ref: '#/components/parameters/droplet_id'
                - $ref: '#/components/parameters/action_id'
            responses:
                "200":
                    $ref: '#/components/responses/action'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/backups:
        get:
            tags:
                - Droplets
            summary: List Backups for a Droplet
            description: |
                To retrieve any backups associated with a Droplet, send a GET request to
                `/v2/droplets/$DROPLET_ID/backups`.

                You will get back a JSON object that has a `backups` key. This will be set to
                an array of backup objects, each of which contain the standard
                Droplet backup attributes.
            operationId: droplets_list_backups
            parameters:
                - $ref: '#/components/parameters/droplet_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_droplet_backups'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/destroy_with_associated_resources:
        get:
            tags:
                - Droplets
            summary: List Associated Resources for a Droplet
            description: |
                To list the associated billable resources that can be destroyed along with a
                Droplet, send a GET request to the
                `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources` endpoint.

                The response will be a JSON object containing `snapshots`, `volumes`, and
                `volume_snapshots` keys. Each will be set to an array of objects containing
                information about the associated resources.
            operationId: droplets_list_associatedResources
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            responses:
                "200":
                    $ref: '#/components/responses/associated_resources_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/destroy_with_associated_resources/dangerous:
        delete:
            tags:
                - Droplets
            summary: Destroy a Droplet and All of its Associated Resources (Dangerous)
            description: |
                To destroy a Droplet along with all of its associated resources, send a DELETE
                request to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/dangerous`
                endpoint. The headers of this request must include an `X-Dangerous` key set to
                `true`. To preview which resources will be destroyed, first query the
                Droplet's associated resources. This operation _can not_ be reverse and should
                be used with caution.

                A successful response will include a 202 response code and no content. Use the
                status endpoint to check on the success or failure of the destruction of the
                individual resources.
            operationId: droplets_destroy_withAssociatedResourcesDangerous
            parameters:
                - $ref: '#/components/parameters/droplet_id'
                - $ref: '#/components/parameters/x_dangerous'
            responses:
                "202":
                    $ref: '#/components/responses/accepted'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/droplets/{droplet_id}/destroy_with_associated_resources/retry:
        post:
            tags:
                - Droplets
            summary: Retry a Droplet Destroy with Associated Resources Request
            description: |
                If the status of a request to destroy a Droplet with its associated resources
                reported any errors, it can be retried by sending a POST request to the
                `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/retry` endpoint.

                Only one destroy can be active at a time per Droplet. If a retry is issued
                while another destroy is in progress for the Droplet a 409 status code will
                be returned. A successful response will include a 202 response code and no
                content.
            operationId: droplets_destroy_retryWithAssociatedResources
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            responses:
                "202":
                    $ref: '#/components/responses/accepted'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "409":
                    $ref: '#/components/responses/conflict'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/droplets/{droplet_id}/destroy_with_associated_resources/selective:
        delete:
            tags:
                - Droplets
            summary: Selectively Destroy a Droplet and its Associated Resources
            description: |
                To destroy a Droplet along with a sub-set of its associated resources, send a
                DELETE request to the `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/selective`
                endpoint. The JSON body of the request should include `reserved_ips`, `snapshots`, `volumes`,
                or `volume_snapshots` keys each set to an array of IDs for the associated
                resources to be destroyed. The IDs can be found by querying the Droplet's
                associated resources. Any associated resource not included in the request
                will remain and continue to accrue changes on your account.

                A successful response will include a 202 response code and no content. Use
                the status endpoint to check on the success or failure of the destruction of
                the individual resources.
            operationId: droplets_destroy_withAssociatedResourcesSelective
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/selective_destroy_associated_resource'
            responses:
                "202":
                    $ref: '#/components/responses/accepted'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/droplets/{droplet_id}/destroy_with_associated_resources/status:
        get:
            tags:
                - Droplets
            summary: Check Status of a Droplet Destroy with Associated Resources Request
            description: |
                To check on the status of a request to destroy a Droplet with its associated
                resources, send a GET request to the
                `/v2/droplets/$DROPLET_ID/destroy_with_associated_resources/status` endpoint.
            operationId: droplets_get_DestroyAssociatedResourcesStatus
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            responses:
                "200":
                    $ref: '#/components/responses/associated_resources_status'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/firewalls:
        get:
            tags:
                - Droplets
            summary: List all Firewalls Applied to a Droplet
            description: |
                To retrieve a list of all firewalls available to a Droplet, send a GET request
                to `/v2/droplets/$DROPLET_ID/firewalls`

                The response will be a JSON object that has a key called `firewalls`. This will
                be set to an array of `firewall` objects, each of which contain the standard
                `firewall` attributes.
            operationId: droplets_list_firewalls
            parameters:
                - $ref: '#/components/parameters/droplet_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_firewalls'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/kernels:
        get:
            tags:
                - Droplets
            summary: List All Available Kernels for a Droplet
            description: |
                To retrieve a list of all kernels available to a Droplet, send a GET request
                to `/v2/droplets/$DROPLET_ID/kernels`

                The response will be a JSON object that has a key called `kernels`. This will
                be set to an array of `kernel` objects, each of which contain the standard
                `kernel` attributes.
            operationId: droplets_list_kernels
            parameters:
                - $ref: '#/components/parameters/droplet_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_kernels'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/neighbors:
        get:
            tags:
                - Droplets
            summary: List Neighbors for a Droplet
            description: |
                To retrieve a list of any "neighbors" (i.e. Droplets that are co-located on
                the same physical hardware) for a specific Droplet, send a GET request to
                `/v2/droplets/$DROPLET_ID/neighbors`.

                The results will be returned as a JSON object with a key of `droplets`. This
                will be set to an array containing objects representing any other Droplets
                that share the same physical hardware. An empty array indicates that the
                Droplet is not co-located any other Droplets associated with your account.
            operationId: droplets_list_neighbors
            parameters:
                - $ref: '#/components/parameters/droplet_id'
            responses:
                "200":
                    $ref: '#/components/responses/neighbor_droplets'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/{droplet_id}/snapshots:
        get:
            tags:
                - Droplets
            summary: List Snapshots for a Droplet
            description: |
                To retrieve the snapshots that have been created from a Droplet, send a GET
                request to `/v2/droplets/$DROPLET_ID/snapshots`.

                You will get back a JSON object that has a `snapshots` key. This will be set
                to an array of snapshot objects, each of which contain the standard Droplet
                snapshot attributes.
            operationId: droplets_list_snapshots
            parameters:
                - $ref: '#/components/parameters/droplet_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_droplet_snapshots'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/droplets/actions:
        post:
            tags:
                - Droplet Actions
            summary: Acting on Tagged Droplets
            description: |
                Some actions can be performed in bulk on tagged Droplets. The actions can be
                initiated by sending a POST to `/v2/droplets/actions?tag_name=$TAG_NAME` with
                the action arguments.

                Only a sub-set of action types are supported:

                - `power_cycle`
                - `power_on`
                - `power_off`
                - `shutdown`
                - `enable_ipv6`
                - `enable_backups`
                - `disable_backups`
                - `snapshot`
            operationId: dropletActions_post_byTag
            parameters:
                - $ref: '#/components/parameters/droplet_tag_name'
            requestBody:
                description: |
                    The `type` attribute set in the request body will specify the  action that
                    will be taken on the Droplet. Some actions will require additional
                    attributes to be set as well.
                content:
                    application/json:
                        schema:
                            oneOf:
                                - $ref: '#/components/schemas/droplet_action'
                                - $ref: '#/components/schemas/droplet_action_snapshot'
                            discriminator:
                                propertyName: type
                                mapping:
                                    disable_backups: '#/components/schemas/droplet_action'
                                    enable_backups: '#/components/schemas/droplet_action'
                                    enable_ipv6: '#/components/schemas/droplet_action'
                                    power_cycle: '#/components/schemas/droplet_action'
                                    power_off: '#/components/schemas/droplet_action'
                                    power_on: '#/components/schemas/droplet_action'
                                    shutdown: '#/components/schemas/droplet_action'
                                    snapshot: '#/components/schemas/droplet_action_snapshot'
            responses:
                "201":
                    $ref: '#/components/responses/droplet_actions_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/firewalls:
        get:
            tags:
                - Firewalls
            summary: List All Firewalls
            description: To list all of the firewalls available on your account, send a GET request to `/v2/firewalls`.
            operationId: firewalls_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/list_firewalls_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Firewalls
            summary: Create a New Firewall
            description: |
                To create a new firewall, send a POST request to `/v2/firewalls`. The request
                must contain at least one inbound or outbound access rule.
            operationId: firewalls_create
            requestBody:
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/firewall'
                                - required:
                                    - name
                                - anyOf:
                                    - title: Inbound Rules
                                      required:
                                        - inbound_rules
                                    - title: Outbound Rules
                                      required:
                                        - outbound_rules
                        example:
                            droplet_ids:
                                - 8.043964e+06
                            inbound_rules:
                                - ports: "80"
                                  protocol: tcp
                                  sources:
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                - ports: "22"
                                  protocol: tcp
                                  sources:
                                    addresses:
                                        - 18.0.0.0/8
                                    tags:
                                        - gateway
                            name: firewall
                            outbound_rules:
                                - destinations:
                                    addresses:
                                        - 0.0.0.0/0
                                        - ::/0
                                  ports: "80"
                                  protocol: tcp
            responses:
                "202":
                    $ref: '#/components/responses/create_firewall_response'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/firewalls/{firewall_id}:
        delete:
            tags:
                - Firewalls
            summary: Delete a Firewall
            description: |
                To delete a firewall send a DELETE request to `/v2/firewalls/$FIREWALL_ID`.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: firewalls_delete
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Firewalls
            summary: Retrieve an Existing Firewall
            description: To show information about an existing firewall, send a GET request to `/v2/firewalls/$FIREWALL_ID`.
            operationId: firewalls_get
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            responses:
                "200":
                    $ref: '#/components/responses/get_firewall_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Firewalls
            summary: Update a Firewall
            description: |
                To update the configuration of an existing firewall, send a PUT request to
                `/v2/firewalls/$FIREWALL_ID`. The request should contain a full representation
                of the firewall including existing attributes. **Note that any attributes that
                are not provided will be reset to their default values.**
            operationId: firewalls_update
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/firewall'
                                - anyOf:
                                    - title: Inbound Rules
                                      required:
                                        - inbound_rules
                                    - title: Outbound Rules
                                      required:
                                        - outbound_rules
                            required:
                                - name
                        example:
                            droplet_ids:
                                - 8.043964e+06
                            inbound_rules:
                                - ports: "8080"
                                  protocol: tcp
                                  sources:
                                    load_balancer_uids:
                                        - 4de7ac8b-495b-4884-9a69-1050c6793cd6
                                - ports: "22"
                                  protocol: tcp
                                  sources:
                                    addresses:
                                        - 18.0.0.0/8
                                    tags:
                                        - gateway
                            name: frontend-firewall
                            outbound_rules:
                                - destinations:
                                    addresses:
                                        - 0.0.0.0/0
                                        - ::/0
                                  ports: "8080"
                                  protocol: tcp
                            tags:
                                - frontend
            responses:
                "200":
                    $ref: '#/components/responses/put_firewall_response'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/firewalls/{firewall_id}/droplets:
        delete:
            tags:
                - Firewalls
            summary: Remove Droplets from a Firewall
            description: |
                To remove a Droplet from a firewall, send a DELETE request to
                `/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, there should
                be a `droplet_ids` attribute containing a list of Droplet IDs.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: firewalls_delete_droplets
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - droplet_ids
                            properties:
                                droplet_ids:
                                    type: array
                                    description: An array containing the IDs of the Droplets to be removed from the firewall.
                                    example:
                                        - 4.9696269e+07
                                    items:
                                        type: integer
                        example:
                            droplet_ids:
                                - 4.9696269e+07
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Firewalls
            summary: Add Droplets to a Firewall
            description: |
                To assign a Droplet to a firewall, send a POST request to
                `/v2/firewalls/$FIREWALL_ID/droplets`. In the body of the request, there
                should be a `droplet_ids` attribute containing a list of Droplet IDs.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: firewalls_assign_droplets
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - droplet_ids
                            properties:
                                droplet_ids:
                                    type: array
                                    description: An array containing the IDs of the Droplets to be assigned to the firewall.
                                    example:
                                        - 4.9696269e+07
                                    items:
                                        type: integer
                        example:
                            droplet_ids:
                                - 4.9696269e+07
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/firewalls/{firewall_id}/rules:
        delete:
            tags:
                - Firewalls
            summary: Remove Rules from a Firewall
            description: |
                To remove access rules from a firewall, send a DELETE request to
                `/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include an
                `inbound_rules` and/or `outbound_rules` attribute containing an array of rules
                to be removed.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: firewalls_delete_rules
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/firewall_rules'
                                - anyOf:
                                    - title: Inbound Rules
                                      required:
                                        - inbound_rules
                                    - title: Outbound Rules
                                      required:
                                        - outbound_rules
                        example:
                            inbound_rules:
                                - ports: "3306"
                                  protocol: tcp
                                  sources:
                                    droplet_ids:
                                        - 4.9696269e+07
                            outbound_rules:
                                - destinations:
                                    droplet_ids:
                                        - 4.9696269e+07
                                  ports: "3306"
                                  protocol: tcp
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Firewalls
            summary: Add Rules to a Firewall
            description: |
                To add additional access rules to a firewall, send a POST request to
                `/v2/firewalls/$FIREWALL_ID/rules`. The body of the request may include an
                inbound_rules and/or outbound_rules attribute containing an array of rules to
                be added.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: firewalls_add_rules
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/firewall_rules'
                                - anyOf:
                                    - title: Inbound Rules
                                      required:
                                        - inbound_rules
                                    - title: Outbound Rules
                                      required:
                                        - outbound_rules
                        example:
                            inbound_rules:
                                - ports: "3306"
                                  protocol: tcp
                                  sources:
                                    droplet_ids:
                                        - 4.9696269e+07
                            outbound_rules:
                                - destinations:
                                    droplet_ids:
                                        - 4.9696269e+07
                                  ports: "3306"
                                  protocol: tcp
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/firewalls/{firewall_id}/tags:
        delete:
            tags:
                - Firewalls
            summary: Remove Tags from a Firewall
            description: |
                To remove a tag representing a group of Droplets from a firewall, send a
                DELETE request to `/v2/firewalls/$FIREWALL_ID/tags`. In the body of the
                request, there should be a `tags` attribute containing a list of tag names.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: firewalls_delete_tags
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - tags
                            properties:
                                tags:
                                    allOf:
                                        - $ref: '#/components/schemas/tags_array'
                                        - description: An array containing the names of the Tags to be removed from the firewall.
                        example:
                            tags:
                                - frontend
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Firewalls
            summary: Add Tags to a Firewall
            description: |
                To assign a tag representing a group of Droplets to a firewall, send a POST
                request to `/v2/firewalls/$FIREWALL_ID/tags`. In the body of the request,
                there should be a `tags` attribute containing a list of tag names.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: firewalls_add_tags
            parameters:
                - $ref: '#/components/parameters/firewall_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            required:
                                - tags
                            properties:
                                tags:
                                    allOf:
                                        - $ref: '#/components/schemas/tags_array'
                                        - description: An array containing the names of the Tags to be assigned to the firewall.
                        example:
                            tags:
                                - frontend
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/floating_ips:
        get:
            tags:
                - Floating IPs
            summary: List All Floating IPs
            description: To list all of the floating IPs available on your account, send a GET request to `/v2/floating_ips`.
            operationId: floatingIPs_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/floating_ip_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Floating IPs
            summary: Create a New Floating IP
            description: |-
                On creation, a floating IP must be either assigned to a Droplet or reserved to a region.
                * To create a new floating IP assigned to a Droplet, send a POST
                  request to `/v2/floating_ips` with the `droplet_id` attribute.

                * To create a new floating IP reserved to a region, send a POST request to
                  `/v2/floating_ips` with the `region` attribute.

                **Note**:  In addition to the standard rate limiting, only 12 floating IPs may be created per 60 seconds.
            operationId: floatingIPs_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/floating_ip_create'
            responses:
                "202":
                    $ref: '#/components/responses/floating_ip_created'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/floating_ips/{floating_ip}:
        delete:
            tags:
                - Floating IPs
            summary: Delete a Floating IP
            description: |
                To delete a floating IP and remove it from your account, send a DELETE request
                to `/v2/floating_ips/$FLOATING_IP_ADDR`.

                A successful request will receive a 204 status code with no body in response.
                This indicates that the request was processed successfully.
            operationId: floatingIPs_delete
            parameters:
                - $ref: '#/components/parameters/floating_ip'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Floating IPs
            summary: Retrieve an Existing Floating IP
            description: To show information about a floating IP, send a GET request to `/v2/floating_ips/$FLOATING_IP_ADDR`.
            operationId: floatingIPs_get
            parameters:
                - $ref: '#/components/parameters/floating_ip'
            responses:
                "200":
                    $ref: '#/components/responses/floating_ip'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/floating_ips/{floating_ip}/actions:
        get:
            tags:
                - Floating IP Actions
            summary: List All Actions for a Floating IP
            description: To retrieve all actions that have been executed on a floating IP, send a GET request to `/v2/floating_ips/$FLOATING_IP/actions`.
            operationId: floatingIPsAction_list
            parameters:
                - $ref: '#/components/parameters/floating_ip'
            responses:
                "200":
                    $ref: '#/components/responses/floating_ip_actions'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Floating IP Actions
            summary: Initiate a Floating IP Action
            description: |
                To initiate an action on a floating IP send a POST request to
                `/v2/floating_ips/$FLOATING_IP/actions`. In the JSON body to the request,
                set the `type` attribute to on of the supported action types:

                | Action     | Details
                |------------|--------
                | `assign`   | Assigns a floating IP to a Droplet
                | `unassign` | Unassign a floating IP from a Droplet
            operationId: floatingIPsAction_post
            parameters:
                - $ref: '#/components/parameters/floating_ip'
            requestBody:
                description: |
                    The `type` attribute set in the request body will specify the action that
                    will be taken on the floating IP.
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/floating_ip_action_unassign'
                                - $ref: '#/components/schemas/floating_ip_action_assign'
                            discriminator:
                                propertyName: type
                                mapping:
                                    assign: '#/components/schemas/floating_ip_action_assign'
                                    unassign: '#/components/schemas/floating_ip_action_unassign'
            responses:
                "201":
                    $ref: '#/components/responses/floating_ip_action'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/floating_ips/{floating_ip}/actions/{action_id}:
        get:
            tags:
                - Floating IP Actions
            summary: Retrieve an Existing Floating IP Action
            description: To retrieve the status of a floating IP action, send a GET request to `/v2/floating_ips/$FLOATING_IP/actions/$ACTION_ID`.
            operationId: floatingIPsAction_get
            parameters:
                - $ref: '#/components/parameters/floating_ip'
                - $ref: '#/components/parameters/action_id'
            responses:
                "200":
                    $ref: '#/components/responses/floating_ip_action'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/functions/namespaces:
        get:
            tags:
                - Functions
            summary: List Namespaces
            description: Returns a list of namespaces associated with the current user. To get all namespaces, send a GET request to `/v2/functions/namespaces`.
            operationId: functions_list_namespaces
            responses:
                "200":
                    $ref: '#/components/responses/list_namespaces'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Functions
            summary: Create Namespace
            description: Creates a new serverless functions namespace in the desired region and associates it with the provided label. A namespace is a collection of functions and their associated packages, triggers, and project specifications. To create a namespace, send a POST request to `/v2/functions/namespaces` with the `region` and `label` properties.
            operationId: functions_create_namespace
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/create_namespace'
            responses:
                "200":
                    $ref: '#/components/responses/namespace_created'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/namespace_bad_request'
                "422":
                    $ref: '#/components/responses/namespace_limit_reached'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/functions/namespaces/{namespace_id}:
        delete:
            tags:
                - Functions
            summary: Delete Namespace
            description: |-
                Deletes the given namespace.  When a namespace is deleted all assets, in the namespace are deleted, this includes packages, functions and triggers. Deleting a namespace is a destructive operation and assets in the namespace are not recoverable after deletion. Some metadata is retained, such as activations, or soft deleted for reporting purposes.
                To delete namespace, send a DELETE request to `/v2/functions/namespaces/$NAMESPACE_ID`.
                A successful deletion returns a 204 response.
            operationId: functions_delete_namespace
            parameters:
                - $ref: '#/components/parameters/namespace_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/namespace_not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Functions
            summary: Get Namespace
            description: Gets the namespace details for the given namespace UUID. To get namespace details, send a GET request to `/v2/functions/namespaces/$NAMESPACE_ID` with no parameters.
            operationId: functions_get_namespace
            parameters:
                - $ref: '#/components/parameters/namespace_id'
            responses:
                "200":
                    $ref: '#/components/responses/namespace_created'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "403":
                    $ref: '#/components/responses/namespace_not_allowed'
                "404":
                    $ref: '#/components/responses/namespace_not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/functions/namespaces/{namespace_id}/triggers:
        get:
            tags:
                - Functions
            summary: List Triggers
            description: Returns a list of triggers associated with the current user and namespace. To get all triggers, send a GET request to `/v2/functions/namespaces/$NAMESPACE_ID/triggers`.
            operationId: functions_list_triggers
            parameters:
                - $ref: '#/components/parameters/namespace_id'
            responses:
                "200":
                    $ref: '#/components/responses/list_triggers'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/namespace_not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Functions
            summary: Create Trigger
            description: Creates a new trigger for a given function in a namespace. To create a trigger, send a POST request to `/v2/functions/namespaces/$NAMESPACE_ID/triggers` with the `name`, `function`, `type`, `is_enabled` and `scheduled_details` properties.
            operationId: functions_create_trigger
            parameters:
                - $ref: '#/components/parameters/namespace_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/create_trigger'
            responses:
                "200":
                    $ref: '#/components/responses/trigger_response'
                "400":
                    $ref: '#/components/responses/trigger_bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/namespace_not_found'
                "422":
                    $ref: '#/components/responses/trigger_limit_reached'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/functions/namespaces/{namespace_id}/triggers/{trigger_name}:
        delete:
            tags:
                - Functions
            summary: Delete Trigger
            description: |-
                Deletes the given trigger.
                To delete trigger, send a DELETE request to `/v2/functions/namespaces/$NAMESPACE_ID/triggers/$TRIGGER_NAME`.
                A successful deletion returns a 204 response.
            operationId: functions_delete_trigger
            parameters:
                - $ref: '#/components/parameters/namespace_id'
                - $ref: '#/components/parameters/trigger_name'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/trigger_not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        get:
            tags:
                - Functions
            summary: Get Trigger
            description: Gets the trigger details. To get the trigger details, send a GET request to `/v2/functions/namespaces/$NAMESPACE_ID/triggers/$TRIGGER_NAME`.
            operationId: functions_get_trigger
            parameters:
                - $ref: '#/components/parameters/namespace_id'
                - $ref: '#/components/parameters/trigger_name'
            responses:
                "200":
                    $ref: '#/components/responses/trigger_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/trigger_not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Functions
            summary: Update Trigger
            description: Updates the details of the given trigger. To update a trigger, send a PUT request to `/v2/functions/namespaces/$NAMESPACE_ID/triggers/$TRIGGER_NAME` with new values for the `is_enabled ` or `scheduled_details` properties.
            operationId: functions_update_trigger
            parameters:
                - $ref: '#/components/parameters/namespace_id'
                - $ref: '#/components/parameters/trigger_name'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update_trigger'
            responses:
                "200":
                    $ref: '#/components/responses/trigger_response'
                "400":
                    $ref: '#/components/responses/trigger_bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/trigger_not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/images:
        get:
            tags:
                - Images
            summary: List All Images
            description: |
                To list all of the images available on your account, send a GET request to /v2/images.

                ## Filtering Results
                -----

                It's possible to request filtered results by including certain query parameters.

                **Image Type**

                Either 1-Click Application or OS Distribution images can be filtered by using the `type` query parameter.

                > Important: The `type` query parameter does not directly relate to the `type` attribute.

                To retrieve only ***distribution*** images, include the `type` query parameter set to distribution, `/v2/images?type=distribution`.

                To retrieve only ***application*** images, include the `type` query parameter set to application, `/v2/images?type=application`.

                **User Images**

                To retrieve only the private images of a user, include the `private` query parameter set to true, `/v2/images?private=true`.

                **Tags**

                To list all images assigned to a specific tag, include the `tag_name` query parameter set to the name of the tag in your GET request. For example, `/v2/images?tag_name=$TAG_NAME`.
            operationId: images_list
            parameters:
                - $ref: '#/components/parameters/type'
                - $ref: '#/components/parameters/private'
                - $ref: '#/components/parameters/tag'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_images'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Images
            summary: Create a Custom Image
            description: |
                To create a new custom image, send a POST request to /v2/images.
                The body must contain a url attribute pointing to a Linux virtual machine
                image to be imported into DigitalOcean.
                The image must be in the raw, qcow2, vhdx, vdi, or vmdk format.
                It may be compressed using gzip or bzip2 and must be smaller than 100 GB after
                 being decompressed.
            operationId: images_create_custom
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image_new_custom'
            responses:
                "202":
                    $ref: '#/components/responses/new_custom_image'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/images/{image_id}:
        delete:
            tags:
                - Images
            summary: Delete an Image
            description: |
                To delete a snapshot or custom image, send a `DELETE` request to `/v2/images/$IMAGE_ID`.
            operationId: images_delete
            parameters:
                - $ref: '#/components/parameters/image_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Images
            summary: Retrieve an Existing Image
            description: |
                To retrieve information about an image, send a `GET` request to
                `/v2/images/$IDENTIFIER`.
            operationId: images_get
            parameters:
                - name: image_id
                  in: path
                  description: |
                    A unique number (id) or string (slug) used to identify and reference a
                    specific image.

                    **Public** images can be identified by image `id` or `slug`.

                    **Private** images *must* be identified by image `id`.
                  required: true
                  schema:
                    anyOf:
                        - type: integer
                        - type: string
                  examples:
                    byId:
                        summary: Retrieve a public or private image by id
                        value: 6.2137902e+07
                    bySlug:
                        summary: Retrieve a public image by slug
                        value: ubuntu-16-04-x64
            responses:
                "200":
                    $ref: '#/components/responses/existing_image'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Images
            summary: Update an Image
            description: |
                To update an image, send a `PUT` request to `/v2/images/$IMAGE_ID`.
                Set the `name` attribute to the new value you would like to use.
                For custom images, the `description` and `distribution` attributes may also be updated.
            operationId: images_update
            parameters:
                - $ref: '#/components/parameters/image_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/image_update'
            responses:
                "200":
                    $ref: '#/components/responses/updated_image'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/images/{image_id}/actions:
        get:
            tags:
                - Image Actions
            summary: List All Actions for an Image
            description: To retrieve all actions that have been executed on an image, send a GET request to `/v2/images/$IMAGE_ID/actions`.
            operationId: imageActions_list
            parameters:
                - $ref: '#/components/parameters/image_id'
            responses:
                "200":
                    $ref: '#/components/responses/get_image_actions_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Image Actions
            summary: Initiate an Image Action
            description: |
                The following actions are available on an Image.

                ## Convert an Image to a Snapshot

                To convert an image, for example, a backup to a snapshot, send a POST request
                to `/v2/images/$IMAGE_ID/actions`. Set the `type` attribute to `convert`.

                ## Transfer an Image

                To transfer an image to another region, send a POST request to
                `/v2/images/$IMAGE_ID/actions`. Set the `type` attribute to `transfer` and set
                `region` attribute to the slug identifier of the region you wish to transfer
                to.
            operationId: imageActions_post
            parameters:
                - $ref: '#/components/parameters/image_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/image_action_base'
                                - $ref: '#/components/schemas/image_action_transfer'
                            discriminator:
                                propertyName: type
                                mapping:
                                    convert: '#/components/schemas/image_action_base'
                                    transfer: '#/components/schemas/image_action_transfer'
            responses:
                "201":
                    $ref: '#/components/responses/post_image_action_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/images/{image_id}/actions/{action_id}:
        get:
            tags:
                - Image Actions
            summary: Retrieve an Existing Action
            description: To retrieve the status of an image action, send a GET request to `/v2/images/$IMAGE_ID/actions/$IMAGE_ACTION_ID`.
            operationId: imageActions_get
            parameters:
                - $ref: '#/components/parameters/image_id'
                - $ref: '#/components/parameters/action_id'
            responses:
                "200":
                    $ref: '#/components/responses/get_image_action_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/clusters:
        get:
            tags:
                - Kubernetes
            summary: List All Kubernetes Clusters
            description: |
                To list all of the Kubernetes clusters on your account, send a GET request
                to `/v2/kubernetes/clusters`.
            operationId: kubernetes_list_clusters
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_clusters'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Kubernetes
            summary: Create a New Kubernetes Cluster
            description: |
                To create a new Kubernetes cluster, send a POST request to
                `/v2/kubernetes/clusters`. The request must contain at least one node pool
                with at least one worker.

                The request may contain a maintenance window policy describing a time period
                when disruptive maintenance tasks may be carried out. Omitting the policy
                implies that a window will be chosen automatically. See
                [here](https://www.digitalocean.com/docs/kubernetes/how-to/upgrade-cluster/)
                for details.
            operationId: kubernetes_create_cluster
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster'
                        examples:
                            Kubernetes Cluster Request:
                                $ref: '#/components/examples/kubernetes_clusters_basic_request'
                            Kubernetes Cluster with Multiple Node Pools Request:
                                $ref: '#/components/examples/kubernetes_clusters_multi_pool_request'
            responses:
                "201":
                    $ref: '#/components/responses/cluster_create'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}:
        delete:
            tags:
                - Kubernetes
            summary: Delete a Kubernetes Cluster
            description: |
                To delete a Kubernetes cluster and all services deployed to it, send a DELETE
                request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID`.

                A 204 status code with no body will be returned in response to a successful
                request.
            operationId: kubernetes_delete_cluster
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Kubernetes
            summary: Retrieve an Existing Kubernetes Cluster
            description: |
                To show information about an existing Kubernetes cluster, send a GET request
                to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID`.
            operationId: kubernetes_get_cluster
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_cluster'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Kubernetes
            summary: Update a Kubernetes Cluster
            description: |
                To update a Kubernetes cluster, send a PUT request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID` and specify one or more of the
                attributes below.
            operationId: kubernetes_update_cluster
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster_update'
            responses:
                "202":
                    $ref: '#/components/responses/updated_cluster'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/clusterlint:
        get:
            tags:
                - Kubernetes
            summary: Fetch Clusterlint Diagnostics for a Kubernetes Cluster
            description: |
                To request clusterlint diagnostics for your cluster, send a GET request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/clusterlint`. If the `run_id` query
                parameter is provided, then the diagnostics for the specific run is fetched.
                By default, the latest results are shown.

                To find out how to address clusterlint feedback, please refer to
                [the clusterlint check documentation](https://github.com/digitalocean/clusterlint/blob/master/checks.md).
            operationId: kubernetes_get_clusterLintResults
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/clusterlint_run_id'
            responses:
                "200":
                    $ref: '#/components/responses/clusterlint_results'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Kubernetes
            summary: Run Clusterlint Checks on a Kubernetes Cluster
            description: |
                Clusterlint helps operators conform to Kubernetes best practices around
                resources, security and reliability to avoid common problems while operating
                or upgrading the clusters.

                To request a clusterlint run on your cluster, send a POST request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/clusterlint`. This will run all
                checks present in the `doks` group by default, if a request body is not
                specified. Optionally specify the below attributes.

                For information about the available checks, please refer to
                [the clusterlint check documentation](https://github.com/digitalocean/clusterlint/blob/master/checks.md).
            operationId: kubernetes_run_clusterLint
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/clusterlint_request'
            responses:
                "202":
                    $ref: '#/components/responses/clusterlint_run'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/clusters/{cluster_id}/credentials:
        get:
            tags:
                - Kubernetes
            summary: Retrieve Credentials for a Kubernetes Cluster
            description: |
                This endpoint returns a JSON object . It can be used to programmatically
                construct Kubernetes clients which cannot parse kubeconfig files.

                The resulting JSON object contains token-based authentication for clusters
                supporting it, and certificate-based authentication otherwise. For a list of
                supported versions and more information, see "[How to Connect to a DigitalOcean
                Kubernetes Cluster with kubectl](https://www.digitalocean.com/docs/kubernetes/how-to/connect-with-kubectl/)".

                To retrieve credentials for accessing a Kubernetes cluster, send a GET
                request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/credentials`.

                Clusters supporting token-based authentication may define an expiration by
                passing a duration in seconds as a query parameter to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/kubeconfig?expiry_seconds=$DURATION_IN_SECONDS`.
                If not set or 0, then the token will have a 7 day expiry. The query parameter
                has no impact in certificate-based authentication.
            operationId: kubernetes_get_credentials
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/kubernetes_expiry_seconds'
            responses:
                "200":
                    $ref: '#/components/responses/credentials'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources:
        get:
            tags:
                - Kubernetes
            summary: List Associated Resources for Cluster Deletion
            description: To list the associated billable resources that can be destroyed along with a cluster, send a GET request to the `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/destroy_with_associated_resources` endpoint.
            operationId: kubernetes_list_associatedResources
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            responses:
                "200":
                    $ref: '#/components/responses/associated_kubernetes_resources_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/dangerous:
        delete:
            tags:
                - Kubernetes
            summary: Delete a Cluster and All of its Associated Resources (Dangerous)
            description: |
                To delete a Kubernetes cluster with all of its associated resources, send a
                DELETE request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/destroy_with_associated_resources/dangerous`.
                A 204 status code with no body will be returned in response to a successful request.
            operationId: kubernetes_destroy_associatedResourcesDangerous
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/destroy_with_associated_resources/selective:
        delete:
            tags:
                - Kubernetes
            summary: Selectively Delete a Cluster and its Associated Resources
            description: |
                To delete a Kubernetes cluster along with a subset of its associated resources,
                send a DELETE request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/destroy_with_associated_resources/selective`.

                The JSON body of the request should include `load_balancers`, `volumes`, or
                `volume_snapshots` keys each set to an array of IDs for the associated
                resources to be destroyed.

                The IDs can be found by querying the cluster's associated resources endpoint.
                Any associated resource not included in the request will remain and continue
                to accrue changes on your account.
            operationId: kubernetes_destroy_associatedResourcesSelective
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/destroy_associated_kubernetes_resources'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/kubeconfig:
        get:
            tags:
                - Kubernetes
            summary: Retrieve the kubeconfig for a Kubernetes Cluster
            description: |
                This endpoint returns a kubeconfig file in YAML format. It can be used to
                connect to and administer the cluster using the Kubernetes command line tool,
                `kubectl`, or other programs supporting kubeconfig files (e.g., client libraries).

                The resulting kubeconfig file uses token-based authentication for clusters
                supporting it, and certificate-based authentication otherwise. For a list of
                supported versions and more information, see "[How to Connect to a DigitalOcean
                Kubernetes Cluster with kubectl](https://www.digitalocean.com/docs/kubernetes/how-to/connect-with-kubectl/)".

                To retrieve a kubeconfig file for use with a Kubernetes cluster, send a GET
                request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/kubeconfig`.

                Clusters supporting token-based authentication may define an expiration by
                passing a duration in seconds as a query parameter to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/kubeconfig?expiry_seconds=$DURATION_IN_SECONDS`.
                If not set or 0, then the token will have a 7 day expiry. The query parameter
                has no impact in certificate-based authentication.
            operationId: kubernetes_get_kubeconfig
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/kubernetes_expiry_seconds'
            responses:
                "200":
                    $ref: '#/components/responses/kubeconfig'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/clusters/{cluster_id}/node_pools:
        get:
            tags:
                - Kubernetes
            summary: List All Node Pools in a Kubernetes Clusters
            description: |
                To list all of the node pools in a Kubernetes clusters, send a GET request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools`.
            operationId: kubernetes_list_nodePools
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            responses:
                "200":
                    $ref: '#/components/responses/all_node_pools'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Kubernetes
            summary: Add a Node Pool to a Kubernetes Cluster
            description: |
                To add an additional node pool to a Kubernetes clusters, send a POST request
                to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools` with the following
                attributes.
            operationId: kubernetes_add_nodePool
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kubernetes_node_pool'
                        example:
                            auto_scale: true
                            count: 3
                            max_nodes: 6
                            min_nodes: 3
                            name: new-pool
                            size: s-1vcpu-2gb
                            tags:
                                - frontend
            responses:
                "201":
                    $ref: '#/components/responses/node_pool_create'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}:
        delete:
            tags:
                - Kubernetes
            summary: Delete a Node Pool in a Kubernetes Cluster
            description: |
                To delete a node pool, send a DELETE request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID`.

                A 204 status code with no body will be returned in response to a successful
                request. Nodes in the pool will subsequently be drained and deleted.
            operationId: kubernetes_delete_nodePool
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/kubernetes_node_pool_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Kubernetes
            summary: Retrieve a Node Pool for a Kubernetes Cluster
            description: |
                To show information about a specific node pool in a Kubernetes cluster, send
                a GET request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID`.
            operationId: kubernetes_get_nodePool
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/kubernetes_node_pool_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_node_pool'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Kubernetes
            summary: Update a Node Pool in a Kubernetes Cluster
            description: |
                To update the name of a node pool, edit the tags applied to it, or adjust its
                number of nodes, send a PUT request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID` with the
                following attributes.
            operationId: kubernetes_update_nodePool
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/kubernetes_node_pool_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kubernetes_node_pool_update'
            responses:
                "202":
                    $ref: '#/components/responses/node_pool_update'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/nodes/{node_id}:
        delete:
            tags:
                - Kubernetes
            summary: Delete a Node in a Kubernetes Cluster
            description: |
                To delete a single node in a pool, send a DELETE request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID/nodes/$NODE_ID`.

                Appending the `skip_drain=1` query parameter to the request causes node
                draining to be skipped. Omitting the query parameter or setting its value to
                `0` carries out draining prior to deletion.

                Appending the `replace=1` query parameter to the request causes the node to
                be replaced by a new one after deletion. Omitting the query parameter or
                setting its value to `0` deletes without replacement.
            operationId: kubernetes_delete_node
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/kubernetes_node_pool_id'
                - $ref: '#/components/parameters/kubernetes_node_id'
                - $ref: '#/components/parameters/kubernetes_node_skip_drain'
                - $ref: '#/components/parameters/kubernetes_node_replace'
            responses:
                "202":
                    $ref: '#/components/responses/accepted'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/node_pools/{node_pool_id}/recycle:
        post:
            tags:
                - Kubernetes
            summary: Recycle a Kubernetes Node Pool
            description: |
                The endpoint has been deprecated. Please use the DELETE
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/node_pools/$NODE_POOL_ID/nodes/$NODE_ID`
                method instead.
            operationId: kubernetes_recycle_node_pool
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
                - $ref: '#/components/parameters/kubernetes_node_pool_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            properties:
                                nodes:
                                    type: array
                                    example:
                                        - d8db5e1a-6103-43b5-a7b3-8a948210a9fc
                                    items:
                                        type: string
            responses:
                "202":
                    $ref: '#/components/responses/accepted'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            deprecated: true
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/upgrade:
        post:
            tags:
                - Kubernetes
            summary: Upgrade a Kubernetes Cluster
            description: |
                To immediately upgrade a Kubernetes cluster to a newer patch release of
                Kubernetes, send a POST request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrade`.
                The body of the request must specify a version attribute.

                Available upgrade versions for a cluster can be fetched from
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrades`.
            operationId: kubernetes_upgrade_cluster
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            properties:
                                version:
                                    type: string
                                    description: The slug identifier for the version of Kubernetes that the cluster will be upgraded to.
                                    example: 1.16.13-do.0
            responses:
                "202":
                    $ref: '#/components/responses/accepted'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/kubernetes/clusters/{cluster_id}/upgrades:
        get:
            tags:
                - Kubernetes
            summary: Retrieve Available Upgrades for an Existing Kubernetes Cluster
            description: |
                To determine whether a cluster can be upgraded, and the versions to which it
                can be upgraded, send a GET request to
                `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/upgrades`.
            operationId: kubernetes_get_availableUpgrades
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            responses:
                "200":
                    $ref: '#/components/responses/available_upgrades'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/clusters/{cluster_id}/user:
        get:
            tags:
                - Kubernetes
            summary: Retrieve User Information for a Kubernetes Cluster
            description: |
                To show information the user associated with a Kubernetes cluster, send a GET
                request to `/v2/kubernetes/clusters/$K8S_CLUSTER_ID/user`.
            operationId: kubernetes_get_clusterUser
            parameters:
                - $ref: '#/components/parameters/kubernetes_cluster_id'
            responses:
                "200":
                    $ref: '#/components/responses/cluster_user'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/options:
        get:
            tags:
                - Kubernetes
            summary: List Available Regions, Node Sizes, and Versions of Kubernetes
            description: To list the versions of Kubernetes available for use, the regions that support Kubernetes, and the available node sizes, send a GET request to `/v2/kubernetes/options`.
            operationId: kubernetes_list_options
            responses:
                "200":
                    $ref: '#/components/responses/all_options'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/kubernetes/registry:
        delete:
            tags:
                - Kubernetes
            summary: Remove Container Registry from Kubernetes Clusters
            description: To remove the container registry from Kubernetes clusters, send a DELETE request to `/v2/kubernetes/registry`.
            operationId: kubernetes_remove_registry
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster_registries'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Kubernetes
            summary: Add Container Registry to Kubernetes Clusters
            description: To integrate the container registry with Kubernetes clusters, send a POST request to `/v2/kubernetes/registry`.
            operationId: kubernetes_add_registry
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/cluster_registries'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/load_balancers:
        get:
            tags:
                - Load Balancers
            summary: List All Load Balancers
            description: |
                To list all of the load balancer instances on your account, send a GET request
                to `/v2/load_balancers`.
            operationId: loadBalancers_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_load_balancers'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Load Balancers
            summary: Create a New Load Balancer
            description: |
                To create a new load balancer instance, send a POST request to
                `/v2/load_balancers`.

                You can specify the Droplets that will sit behind the load balancer using one
                of two methods:

                * Set `droplet_ids` to a list of specific Droplet IDs.
                * Set `tag` to the name of a tag. All Droplets with this tag applied will be
                  assigned to the load balancer. Additional Droplets will be automatically
                  assigned as they are tagged.

                These methods are mutually exclusive.
            operationId: loadBalancers_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/load_balancer_create'
                        examples:
                            Basic Create Request:
                                $ref: '#/components/examples/load_balancer_basic_create_request'
                            Create Request Using Droplet Tag:
                                $ref: '#/components/examples/load_balancer_using_tag_create_request'
                            SSL Termination Create Request:
                                $ref: '#/components/examples/load_balancer_ssl_termination_create_request'
                            Sticky Sessions and Custom Health Check:
                                $ref: '#/components/examples/load_balancer_sticky_sessions_and_health_check_create_request'
            responses:
                "202":
                    $ref: '#/components/responses/load_balancer_create'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/load_balancers/{lb_id}:
        delete:
            tags:
                - Load Balancers
            summary: Delete a Load Balancer
            description: |
                To delete a load balancer instance, disassociating any Droplets assigned to it
                and removing it from your account, send a DELETE request to
                `/v2/load_balancers/$LOAD_BALANCER_ID`.

                A successful request will receive a 204 status code with no body in response.
                This indicates that the request was processed successfully.
            operationId: loadBalancers_delete
            parameters:
                - $ref: '#/components/parameters/load_balancer_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Load Balancers
            summary: Retrieve an Existing Load Balancer
            description: |
                To show information about a load balancer instance, send a GET request to
                `/v2/load_balancers/$LOAD_BALANCER_ID`.
            operationId: loadBalancers_get
            parameters:
                - $ref: '#/components/parameters/load_balancer_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_load_balancer'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Load Balancers
            summary: Update a Load Balancer
            description: |
                To update a load balancer's settings, send a PUT request to
                `/v2/load_balancers/$LOAD_BALANCER_ID`. The request should contain a full
                representation of the load balancer including existing attributes. It may
                contain _one of_ the `droplets_ids` or `tag` attributes as they are mutually
                exclusive. **Note that any attribute that is not provided will be reset to its
                default value.**
            operationId: loadBalancers_update
            parameters:
                - $ref: '#/components/parameters/load_balancer_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/load_balancer_create'
                        examples:
                            load_balancer_update_request:
                                $ref: '#/components/examples/load_balancer_update_request'
            responses:
                "200":
                    $ref: '#/components/responses/updated_load_balancer'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/load_balancers/{lb_id}/droplets:
        delete:
            tags:
                - Load Balancers
            summary: Remove Droplets from a Load Balancer
            description: |
                To remove a Droplet from a load balancer instance, send a DELETE request to
                `/v2/load_balancers/$LOAD_BALANCER_ID/droplets`. In the body of the request,
                there should be a `droplet_ids` attribute containing a list of Droplet IDs.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: loadBalancers_remove_droplets
            parameters:
                - $ref: '#/components/parameters/load_balancer_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            required:
                                - droplet_ids
                            properties:
                                droplet_ids:
                                    type: array
                                    description: An array containing the IDs of the Droplets assigned to the load balancer.
                                    example:
                                        - 3.164444e+06
                                        - 3.164445e+06
                                    items:
                                        type: integer
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Load Balancers
            summary: Add Droplets to a Load Balancer
            description: |
                To assign a Droplet to a load balancer instance, send a POST request to
                `/v2/load_balancers/$LOAD_BALANCER_ID/droplets`. In the body of the request,
                there should be a `droplet_ids` attribute containing a list of Droplet IDs.
                Individual Droplets can not be added to a load balancer configured with a
                Droplet tag. Attempting to do so will result in a "422 Unprocessable Entity"
                response from the API.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: loadBalancers_add_droplets
            parameters:
                - $ref: '#/components/parameters/load_balancer_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            required:
                                - droplet_ids
                            properties:
                                droplet_ids:
                                    type: array
                                    description: An array containing the IDs of the Droplets assigned to the load balancer.
                                    example:
                                        - 3.164444e+06
                                        - 3.164445e+06
                                    items:
                                        type: integer
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/load_balancers/{lb_id}/forwarding_rules:
        delete:
            tags:
                - Load Balancers
            summary: Remove Forwarding Rules from a Load Balancer
            description: |
                To remove forwarding rules from a load balancer instance, send a DELETE
                request to `/v2/load_balancers/$LOAD_BALANCER_ID/forwarding_rules`. In the
                body of the request, there should be a `forwarding_rules` attribute containing
                an array of rules to be removed.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: loadBalancers_remove_forwardingRules
            parameters:
                - $ref: '#/components/parameters/load_balancer_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            required:
                                - forwarding_rules
                            properties:
                                forwarding_rules:
                                    type: array
                                    minItems: 1
                                    items:
                                        $ref: '#/components/schemas/forwarding_rule'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Load Balancers
            summary: Add Forwarding Rules to a Load Balancer
            description: |
                To add an additional forwarding rule to a load balancer instance, send a POST
                request to `/v2/load_balancers/$LOAD_BALANCER_ID/forwarding_rules`. In the body
                of the request, there should be a `forwarding_rules` attribute containing an
                array of rules to be added.

                No response body will be sent back, but the response code will indicate
                success. Specifically, the response code will be a 204, which means that the
                action was successful with no returned body data.
            operationId: loadBalancers_add_forwardingRules
            parameters:
                - $ref: '#/components/parameters/load_balancer_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            required:
                                - forwarding_rules
                            properties:
                                forwarding_rules:
                                    type: array
                                    minItems: 1
                                    items:
                                        $ref: '#/components/schemas/forwarding_rule'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/monitoring/alerts:
        get:
            tags:
                - Monitoring
            summary: List Alert Policies
            description: Returns all alert policies that are configured for the given account. To List all alert policies, send a GET request to `/v2/monitoring/alerts`.
            operationId: monitoring_list_alertPolicy
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/list_alert_policy_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Monitoring
            summary: Create Alert Policy
            description: To create a new alert, send a POST request to `/v2/monitoring/alerts`.
            operationId: monitoring_create_alertPolicy
            requestBody:
                description: |
                    The `type` field dictates what type of entity that the alert policy applies to and hence what type of entity is passed in the `entities` array. If both the `tags` array and `entities` array are empty the alert policy applies to all entities of the relevant type that are owned by the user account. Otherwise the following table shows the valid entity types for each type of alert policy:

                    Type | Description | Valid Entity Type
                    -----|-------------|--------------------
                    `v1/insights/droplet/memory_utilization_percent` | alert on the percent of memory utilization | Droplet ID
                    `v1/insights/droplet/disk_read` | alert on the rate of disk read I/O in MBps | Droplet ID
                    `v1/insights/droplet/load_5` | alert on the 5 minute load average | Droplet ID
                    `v1/insights/droplet/load_15` | alert on the 15 minute load average | Droplet ID
                    `v1/insights/droplet/disk_utilization_percent` | alert on the percent of disk utilization | Droplet ID
                    `v1/insights/droplet/cpu` | alert on the percent of CPU utilization | Droplet ID
                    `v1/insights/droplet/disk_write` | alert on the rate of disk write I/O in MBps | Droplet ID
                    `v1/insights/droplet/public_outbound_bandwidth` | alert on the rate of public outbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/public_inbound_bandwidth` | alert on the rate of public inbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/private_outbound_bandwidth` | alert on the rate of private outbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/private_inbound_bandwidth` | alert on the rate of private inbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/load_1` | alert on the 1 minute load average | Droplet ID
                    `v1/insights/lbaas/avg_cpu_utilization_percent`|alert on the percent of CPU utilization|load balancer ID
                    `v1/insights/lbaas/connection_utilization_percent`|alert on the percent of connection utilization|load balancer ID
                    `v1/insights/lbaas/droplet_health`|alert on Droplet health status changes|load balancer ID
                    `v1/insights/lbaas/tls_connections_per_second_utilization_percent`|alert on the percent of TLS connections per second utilization|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx`|alert on the percent increase of 5xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx`|alert on the percent increase of 4xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_count_5xx`|alert on the count of 5xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_count_4xx`|alert on the count of 4xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time`|alert on high average http response time|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time_50p`|alert on high 50th percentile http response time|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time_95p`|alert on high 95th percentile http response time|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time_99p`|alert on high 99th percentile http response time|load balancer ID
                    `v1/dbaas/alerts/load_15_alerts` | alert on 15 minute load average across the database cluster | database cluster UUID
                    `v1/dbaas/alerts/memory_utilization_alerts` | alert on the percent memory utilization average across the database cluster | database cluster UUID
                    `v1/dbaas/alerts/disk_utilization_alerts` | alert on the percent disk utilization average across the database cluster | database cluster UUID
                    `v1/dbaas/alerts/cpu_alerts` | alert on the percent CPU usage average across the database cluster | database cluster UUID
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/alert_policy_request'
            responses:
                "200":
                    $ref: '#/components/responses/alert_policy_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/monitoring/alerts/{alert_uuid}:
        delete:
            tags:
                - Monitoring
            summary: Delete an Alert Policy
            description: To delete an alert policy, send a DELETE request to `/v2/monitoring/alerts/{alert_uuid}`
            operationId: monitoring_delete_alertPolicy
            parameters:
                - $ref: '#/components/parameters/alert_uuid'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Monitoring
            summary: Retrieve an Existing Alert Policy
            description: To retrieve a given alert policy, send a GET request to `/v2/monitoring/alerts/{alert_uuid}`
            operationId: monitoring_get_alertPolicy
            parameters:
                - $ref: '#/components/parameters/alert_uuid'
            responses:
                "200":
                    $ref: '#/components/responses/alert_policy_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Monitoring
            summary: Update an Alert Policy
            description: To update en existing policy, send a PUT request to `v2/monitoring/alerts/{alert_uuid}`.
            operationId: monitoring_update_alertPolicy
            parameters:
                - $ref: '#/components/parameters/alert_uuid'
            requestBody:
                description: |
                    The `type` field dictates what type of entity that the alert policy applies to and hence what type of entity is passed in the `entities` array. If both the `tags` array and `entities` array are empty the alert policy applies to all entities of the relevant type that are owned by the user account. Otherwise the following table shows the valid entity types for each type of alert policy:

                    Type | Description | Valid Entity Type
                    -----|-------------|--------------------
                    `v1/insights/droplet/memory_utilization_percent` | alert on the percent of memory utilization | Droplet ID
                    `v1/insights/droplet/disk_read` | alert on the rate of disk read I/O in MBps | Droplet ID
                    `v1/insights/droplet/load_5` | alert on the 5 minute load average | Droplet ID
                    `v1/insights/droplet/load_15` | alert on the 15 minute load average | Droplet ID
                    `v1/insights/droplet/disk_utilization_percent` | alert on the percent of disk utilization | Droplet ID
                    `v1/insights/droplet/cpu` | alert on the percent of CPU utilization | Droplet ID
                    `v1/insights/droplet/disk_write` | alert on the rate of disk write I/O in MBps | Droplet ID
                    `v1/insights/droplet/public_outbound_bandwidth` | alert on the rate of public outbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/public_inbound_bandwidth` | alert on the rate of public inbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/private_outbound_bandwidth` | alert on the rate of private outbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/private_inbound_bandwidth` | alert on the rate of private inbound bandwidth in Mbps | Droplet ID
                    `v1/insights/droplet/load_1` | alert on the 1 minute load average | Droplet ID
                    `v1/insights/lbaas/avg_cpu_utilization_percent`|alert on the percent of CPU utilization|load balancer ID
                    `v1/insights/lbaas/connection_utilization_percent`|alert on the percent of connection utilization|load balancer ID
                    `v1/insights/lbaas/droplet_health`|alert on Droplet health status changes|load balancer ID
                    `v1/insights/lbaas/tls_connections_per_second_utilization_percent`|alert on the percent of TLS connections per second utilization|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx`|alert on the percent increase of 5xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx`|alert on the percent increase of 4xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_count_5xx`|alert on the count of 5xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/increase_in_http_error_rate_count_4xx`|alert on the count of 4xx level http errors over 5m|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time`|alert on high average http response time|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time_50p`|alert on high 50th percentile http response time|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time_95p`|alert on high 95th percentile http response time|load balancer ID
                    `v1/insights/lbaas/high_http_request_response_time_99p`|alert on high 99th percentile http response time|load balancer ID
                    `v1/dbaas/alerts/load_15_alerts` | alert on 15 minute load average across the database cluster | database cluster UUID
                    `v1/dbaas/alerts/memory_utilization_alerts` | alert on the percent memory utilization average across the database cluster | database cluster UUID
                    `v1/dbaas/alerts/disk_utilization_alerts` | alert on the percent disk utilization average across the database cluster | database cluster UUID
                    `v1/dbaas/alerts/cpu_alerts` | alert on the percent CPU usage average across the database cluster | database cluster UUID
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/alert_policy_request'
            responses:
                "200":
                    $ref: '#/components/responses/alert_policy_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/monitoring/metrics/droplet/bandwidth:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Bandwidth Metrics
            description: To retrieve bandwidth metrics for a given Droplet, send a GET request to `/v2/monitoring/metrics/droplet/bandwidth`. Use the `interface` query parameter to specify if the results should be for the `private` or `public` interface. Use the `direction` query parameter to specify if the results should be for `inbound` or `outbound` traffic.
            operationId: monitoring_get_dropletBandwidthMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/network_interface'
                - $ref: '#/components/parameters/network_direction'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/droplet_bandwidth_metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/cpu:
        get:
            tags:
                - Monitoring
            summary: Get Droplet CPU Metrics
            description: To retrieve CPU metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/cpu`.
            operationId: monitoring_get_DropletCpuMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/droplet_cpu_metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/filesystem_free:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Filesystem Free Metrics
            description: To retrieve filesystem free metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/filesystem_free`.
            operationId: monitoring_get_dropletFilesystemFreeMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/droplet_filesystem_metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/filesystem_size:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Filesystem Size Metrics
            description: To retrieve filesystem size metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/filesystem_size`.
            operationId: monitoring_get_dropletFilesystemSizeMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/droplet_filesystem_metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/load_1:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Load1 Metrics
            description: To retrieve 1 minute load average metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/load_1`.
            operationId: monitoring_get_dropletLoad1Metrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/load_5:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Load5 Metrics
            description: To retrieve 5 minute load average metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/load_5`.
            operationId: monitoring_get_dropletLoad5Metrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/load_15:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Load15 Metrics
            description: To retrieve 15 minute load average metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/load_15`.
            operationId: monitoring_get_dropletLoad15Metrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/memory_available:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Available Memory Metrics
            description: To retrieve available memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_available`.
            operationId: monitoring_get_dropletMemoryAvailableMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/memory_cached:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Cached Memory Metrics
            description: To retrieve cached memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_cached`.
            operationId: monitoring_get_dropletMemoryCachedMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/memory_free:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Free Memory Metrics
            description: To retrieve free memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_free`.
            operationId: monitoring_get_dropletMemoryFreeMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/monitoring/metrics/droplet/memory_total:
        get:
            tags:
                - Monitoring
            summary: Get Droplet Total Memory Metrics
            description: To retrieve total memory metrics for a given droplet, send a GET request to `/v2/monitoring/metrics/droplet/memory_total`.
            operationId: monitoring_get_dropletMemoryTotalMetrics
            parameters:
                - $ref: '#/components/parameters/parameters_droplet_id'
                - $ref: '#/components/parameters/metric_timestamp_start'
                - $ref: '#/components/parameters/metric_timestamp_end'
            responses:
                "200":
                    $ref: '#/components/responses/metric_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/projects:
        get:
            tags:
                - Projects
            summary: List All Projects
            description: To list all your projects, send a GET request to `/v2/projects`.
            operationId: projects_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/projects_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Projects
            summary: Create a Project
            description: To create a project, send a POST request to `/v2/projects`.
            operationId: projects_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/project_base'
                            required:
                                - name
                                - purpose
            responses:
                "201":
                    $ref: '#/components/responses/existing_project'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/projects/{project_id}:
        delete:
            tags:
                - Projects
            summary: Delete an Existing Project
            description: |
                To delete a project, send a DELETE request to `/v2/projects/$PROJECT_ID`. To
                be deleted, a project must not have any resources assigned to it. Any existing
                resources must first be reassigned or destroyed, or you will receive a 412 error.

                A successful request will receive a 204 status code with no body in response.
                This indicates that the request was processed successfully.
            operationId: projects_delete
            parameters:
                - $ref: '#/components/parameters/project_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "412":
                    $ref: '#/components/responses/precondition_failed'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Projects
            summary: Retrieve an Existing Project
            description: To get a project, send a GET request to `/v2/projects/$PROJECT_ID`.
            operationId: projects_get
            parameters:
                - $ref: '#/components/parameters/project_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_project'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        patch:
            tags:
                - Projects
            summary: Patch a Project
            description: To update only specific attributes of a project, send a PATCH request to `/v2/projects/$PROJECT_ID`. At least one of the following attributes needs to be sent.
            operationId: projects_patch
            parameters:
                - $ref: '#/components/parameters/project_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project'
                        example:
                            name: my-web-api
            responses:
                "200":
                    $ref: '#/components/responses/existing_project'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        put:
            tags:
                - Projects
            summary: Update a Project
            description: To update a project, send a PUT request to `/v2/projects/$PROJECT_ID`. All of the following attributes must be sent.
            operationId: projects_update
            parameters:
                - $ref: '#/components/parameters/project_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/project'
                            required:
                                - name
                                - description
                                - purpose
                                - environment
                                - is_default
            responses:
                "200":
                    $ref: '#/components/responses/existing_project'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/projects/{project_id}/resources:
        get:
            tags:
                - Project Resources
            summary: List Project Resources
            description: To list all your resources in a project, send a GET request to `/v2/projects/$PROJECT_ID/resources`.
            operationId: projects_list_resources
            parameters:
                - $ref: '#/components/parameters/project_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/resources_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Project Resources
            summary: Assign Resources to a Project
            description: To assign resources to a project, send a POST request to `/v2/projects/$PROJECT_ID/resources`.
            operationId: projects_assign_resources
            parameters:
                - $ref: '#/components/parameters/project_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project_assignment'
                        examples:
                            assign_resources:
                                value:
                                    resources:
                                        - do:droplet:13457723
                                        - do:domain:example.com
            responses:
                "200":
                    $ref: '#/components/responses/assigned_resources_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/projects/default:
        get:
            tags:
                - Projects
            summary: Retrieve the Default Project
            description: To get your default project, send a GET request to `/v2/projects/default`.
            operationId: projects_get_default
            responses:
                "200":
                    $ref: '#/components/responses/default_project'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        patch:
            tags:
                - Projects
            summary: Patch the Default Project
            description: To update only specific attributes of your default project, send a PATCH request to `/v2/projects/default`. At least one of the following attributes needs to be sent.
            operationId: projects_patch_default
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project'
                        example:
                            name: my-web-api
            responses:
                "200":
                    $ref: '#/components/responses/existing_project'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        put:
            tags:
                - Projects
            summary: Update the Default Project
            description: To update you default project, send a PUT request to `/v2/projects/default`. All of the following attributes must be sent.
            operationId: projects_update_default
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/project'
                            required:
                                - name
                                - description
                                - purpose
                                - environment
                                - is_default
            responses:
                "200":
                    $ref: '#/components/responses/existing_project'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/projects/default/resources:
        get:
            tags:
                - Project Resources
            summary: List Default Project Resources
            description: To list all your resources in your default project, send a GET request to `/v2/projects/default/resources`.
            operationId: projects_list_resources_default
            responses:
                "200":
                    $ref: '#/components/responses/resources_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Project Resources
            summary: Assign Resources to Default Project
            description: To assign resources to your default project, send a POST request to `/v2/projects/default/resources`.
            operationId: projects_assign_resources_default
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/project_assignment'
                        examples:
                            assign_resources:
                                value:
                                    resources:
                                        - do:droplet:13457723
                                        - do:domain:example.com
            responses:
                "200":
                    $ref: '#/components/responses/assigned_resources_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/regions:
        get:
            tags:
                - Regions
            summary: List All Data Center Regions
            description: |-
                To list all of the regions that are available, send a GET request to `/v2/regions`.
                The response will be a JSON object with a key called `regions`. The value of this will be an array of `region` objects, each of which will contain the standard region attributes.
            operationId: regions_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_regions'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/registry:
        delete:
            tags:
                - Container Registry
            summary: Delete Container Registry
            description: To delete your container registry, destroying all container image data stored in it, send a DELETE request to `/v2/registry`.
            operationId: registry_delete
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Container Registry
            summary: Get Container Registry Information
            description: To get information about your container registry, send a GET request to `/v2/registry`.
            operationId: registry_get
            responses:
                "200":
                    $ref: '#/components/responses/registry_info'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Container Registry
            summary: Create Container Registry
            description: |
                To create your container registry, send a POST request to `/v2/registry`.

                The `name` becomes part of the URL for images stored in the registry. For
                example, if your registry is called `example`, an image in it will have the
                URL `registry.digitalocean.com/example/image:tag`.
            operationId: registry_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/registry_create'
            responses:
                "201":
                    $ref: '#/components/responses/registry_info'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/registry/{registry_name}/garbage-collection:
        get:
            tags:
                - Container Registry
            summary: Get Active Garbage Collection
            description: To get information about the currently-active garbage collection for a registry, send a GET request to `/v2/registry/$REGISTRY_NAME/garbage-collection`.
            operationId: registry_get_garbageCollection
            parameters:
                - $ref: '#/components/parameters/registry_name'
            responses:
                "200":
                    $ref: '#/components/responses/garbage_collection'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Container Registry
            summary: Start Garbage Collection
            description: |
                Garbage collection enables users to clear out unreferenced blobs (layer &
                manifest data) after deleting one or more manifests from a repository. If
                there are no unreferenced blobs resulting from the deletion of one or more
                manifests, garbage collection is effectively a noop.
                [See here for more information](https://www.digitalocean.com/docs/container-registry/how-to/clean-up-container-registry/)
                about how and why you should clean up your container registry periodically.

                To request a garbage collection run on your registry, send a POST request to
                `/v2/registry/$REGISTRY_NAME/garbage-collection`. This will initiate the
                following sequence of events on your registry.

                * Set the registry to read-only mode, meaning no further write-scoped
                  JWTs will be issued to registry clients. Existing write-scoped JWTs will
                  continue to work until they expire which can take up to 15 minutes.
                * Wait until all existing write-scoped JWTs have expired.
                * Scan all registry manifests to determine which blobs are unreferenced.
                * Delete all unreferenced blobs from the registry.
                * Record the number of blobs deleted and bytes freed, mark the garbage
                  collection status as `success`.
                * Remove the read-only mode restriction from the registry, meaning write-scoped
                  JWTs will once again be issued to registry clients.
            operationId: registry_run_garbageCollection
            parameters:
                - $ref: '#/components/parameters/registry_name'
            responses:
                "201":
                    $ref: '#/components/responses/garbage_collection'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/registry/{registry_name}/garbage-collection/{garbage_collection_uuid}:
        put:
            tags:
                - Container Registry
            summary: Update Garbage Collection
            description: To cancel the currently-active garbage collection for a registry, send a PUT request to `/v2/registry/$REGISTRY_NAME/garbage-collection/$GC_UUID` and specify one or more of the attributes below.
            operationId: registry_update_garbageCollection
            parameters:
                - $ref: '#/components/parameters/registry_name'
                - $ref: '#/components/parameters/garbage_collection_uuid'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/update_registry'
            responses:
                "200":
                    $ref: '#/components/responses/garbage_collection'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/registry/{registry_name}/garbage-collections:
        get:
            tags:
                - Container Registry
            summary: List Garbage Collections
            description: To get information about past garbage collections for a registry, send a GET request to `/v2/registry/$REGISTRY_NAME/garbage-collections`.
            operationId: registry_list_garbageCollections
            parameters:
                - $ref: '#/components/parameters/registry_name'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/garbage_collections'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/registry/{registry_name}/repositories:
        get:
            tags:
                - Container Registry
            summary: List All Container Registry Repositories
            description: |
                This endpoint has been deprecated in favor of the _List All Container Registry Repositories [V2]_ endpoint.

                To list all repositories in your container registry, send a GET
                request to `/v2/registry/$REGISTRY_NAME/repositories`.
            operationId: registry_list_repositories
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/registry_name'
            responses:
                "200":
                    $ref: '#/components/responses/all_repositories'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            deprecated: true
            security:
                - bearer_auth:
                    - read
    /v2/registry/{registry_name}/repositories/{repository_name}/digests:
        get:
            tags:
                - Container Registry
            summary: List All Container Registry Repository Manifests
            description: |
                To list all manifests in your container registry repository, send a GET
                request to `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/digests`.

                Note that if your repository name contains `/` characters, it must be
                URL-encoded in the request URL. For example, to list manifests for
                `registry.digitalocean.com/example/my/repo`, the path would be
                `/v2/registry/example/repositories/my%2Frepo/digests`.
            operationId: registry_list_repositoryManifests
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/registry_name'
                - $ref: '#/components/parameters/registry_repository_name'
            responses:
                "200":
                    $ref: '#/components/responses/repository_manifests'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/registry/{registry_name}/repositories/{repository_name}/digests/{manifest_digest}:
        delete:
            tags:
                - Container Registry
            summary: Delete Container Registry Repository Manifest
            description: |
                To delete a container repository manifest by digest, send a DELETE request to
                `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/digests/$MANIFEST_DIGEST`.

                Note that if your repository name contains `/` characters, it must be
                URL-encoded in the request URL. For example, to delete
                `registry.digitalocean.com/example/my/repo@sha256:abcd`, the path would be
                `/v2/registry/example/repositories/my%2Frepo/digests/sha256:abcd`.

                A successful request will receive a 204 status code with no body in response.
                This indicates that the request was processed successfully.
            operationId: registry_delete_repositoryManifest
            parameters:
                - $ref: '#/components/parameters/registry_name'
                - $ref: '#/components/parameters/registry_repository_name'
                - $ref: '#/components/parameters/registry_manifest_digest'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/registry/{registry_name}/repositories/{repository_name}/tags:
        get:
            tags:
                - Container Registry
            summary: List All Container Registry Repository Tags
            description: |
                To list all tags in your container registry repository, send a GET
                request to `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/tags`.

                Note that if your repository name contains `/` characters, it must be
                URL-encoded in the request URL. For example, to list tags for
                `registry.digitalocean.com/example/my/repo`, the path would be
                `/v2/registry/example/repositories/my%2Frepo/tags`.
            operationId: registry_list_repositoryTags
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/registry_name'
                - $ref: '#/components/parameters/registry_repository_name'
            responses:
                "200":
                    $ref: '#/components/responses/repository_tags'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/registry/{registry_name}/repositories/{repository_name}/tags/{repository_tag}:
        delete:
            tags:
                - Container Registry
            summary: Delete Container Registry Repository Tag
            description: |
                To delete a container repository tag, send a DELETE request to
                `/v2/registry/$REGISTRY_NAME/repositories/$REPOSITORY_NAME/tags/$TAG`.

                Note that if your repository name contains `/` characters, it must be
                URL-encoded in the request URL. For example, to delete
                `registry.digitalocean.com/example/my/repo:mytag`, the path would be
                `/v2/registry/example/repositories/my%2Frepo/tags/mytag`.

                A successful request will receive a 204 status code with no body in response.
                This indicates that the request was processed successfully.
            operationId: registry_delete_repositoryTag
            parameters:
                - $ref: '#/components/parameters/registry_name'
                - $ref: '#/components/parameters/registry_repository_name'
                - $ref: '#/components/parameters/registry_repository_tag'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/registry/{registry_name}/repositoriesV2:
        get:
            tags:
                - Container Registry
            summary: List All Container Registry Repositories (V2)
            description: To list all repositories in your container registry, send a GET request to `/v2/registry/$REGISTRY_NAME/repositoriesV2`.
            operationId: registry_list_repositoriesV2
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/token_pagination_page'
                - $ref: '#/components/parameters/token_pagination_page_token'
                - $ref: '#/components/parameters/registry_name'
            responses:
                "200":
                    $ref: '#/components/responses/all_repositories_v2'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/registry/docker-credentials:
        get:
            tags:
                - Container Registry
            summary: Get Docker Credentials for Container Registry
            description: |
                In order to access your container registry with the Docker client or from a
                Kubernetes cluster, you will need to configure authentication. The necessary
                JSON configuration can be retrieved by sending a GET request to
                `/v2/registry/docker-credentials`.

                The response will be in the format of a Docker `config.json` file. To use the
                config in your Kubernetes cluster, create a Secret with:

                    kubectl create secret generic docr \
                      --from-file=.dockerconfigjson=config.json \
                      --type=kubernetes.io/dockerconfigjson

                By default, the returned credentials have read-only access to your registry
                and cannot be used to push images. This is appropriate for most Kubernetes
                clusters. To retrieve read/write credentials, suitable for use with the Docker
                client or in a CI system, read_write may be provided as query parameter. For
                example: `/v2/registry/docker-credentials?read_write=true`

                By default, the returned credentials will not expire. To retrieve credentials
                with an expiry set, expiry_seconds may be provided as a query parameter. For
                example: `/v2/registry/docker-credentials?expiry_seconds=3600` will return
                credentials that expire after one hour.
            operationId: registry_get_dockerCredentials
            parameters:
                - $ref: '#/components/parameters/registry_expiry_seconds'
                - $ref: '#/components/parameters/registry_read_write'
            responses:
                "200":
                    $ref: '#/components/responses/docker_credentials'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/registry/options:
        get:
            tags:
                - Container Registry
            summary: List Registry Options (Subscription Tiers and Available Regions)
            description: |-
                This endpoint serves to provide additional information as to which option values are available when creating a container registry.
                There are multiple subscription tiers available for container registry. Each tier allows a different number of image repositories to be created in your registry, and has a different amount of storage and transfer included.
                There are multiple regions available for container registry and controls where your data is stored.
                To list the available options, send a GET request to `/v2/registry/options`.
            operationId: registry_get_options
            responses:
                "200":
                    $ref: '#/components/responses/registry_options_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/registry/subscription:
        get:
            tags:
                - Container Registry
            summary: Get Subscription Information
            description: A subscription is automatically created when you configure your container registry. To get information about your subscription, send a GET request to `/v2/registry/subscription`.
            operationId: registry_get_subscription
            responses:
                "200":
                    $ref: '#/components/responses/subscription_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Container Registry
            summary: Update Subscription Tier
            description: After creating your registry, you can switch to a different subscription tier to better suit your needs. To do this, send a POST request to `/v2/registry/subscription`.
            operationId: registry_update_subscription
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                tier_slug:
                                    type: string
                                    description: The slug of the subscription tier to sign up for.
                                    enum:
                                        - starter
                                        - basic
                                        - professional
                                    example: basic
            responses:
                "200":
                    $ref: '#/components/responses/subscription_response'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/registry/validate-name:
        post:
            tags:
                - Container Registry
            summary: Validate a Container Registry Name
            description: |
                To validate that a container registry name is available for use, send a POST
                request to `/v2/registry/validate-name`.

                If the name is both formatted correctly and available, the response code will
                be 204 and contain no body. If the name is already in use, the response will
                be a 409 Conflict.
            operationId: registry_validate_name
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/validate_registry'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "409":
                    $ref: '#/components/responses/conflict'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/reports/droplet_neighbors_ids:
        get:
            tags:
                - Droplets
            summary: List All Droplet Neighbors
            description: |
                To retrieve a list of all Droplets that are co-located on the same physical
                hardware, send a GET request to `/v2/reports/droplet_neighbors_ids`.

                The results will be returned as a JSON object with a key of `neighbor_ids`.
                This will be set to an array of arrays. Each array will contain a set of
                Droplet IDs for Droplets that share a physical server. An empty array
                indicates that all Droplets associated with your account are located on
                separate physical hardware.
            operationId: droplets_list_neighborsIds
            responses:
                "200":
                    $ref: '#/components/responses/droplet_neighbors_ids'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/reserved_ips:
        get:
            tags:
                - Reserved IPs
            summary: List All Reserved IPs
            description: To list all of the reserved IPs available on your account, send a GET request to `/v2/reserved_ips`.
            operationId: reservedIPs_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/reserved_ip_list'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Reserved IPs
            summary: Create a New Reserved IP
            description: |-
                On creation, a reserved IP must be either assigned to a Droplet or reserved to a region.
                * To create a new reserved IP assigned to a Droplet, send a POST
                  request to `/v2/reserved_ips` with the `droplet_id` attribute.

                * To create a new reserved IP reserved to a region, send a POST request to
                  `/v2/reserved_ips` with the `region` attribute.

                **Note**:  In addition to the standard rate limiting, only 12 reserved IPs may be created per 60 seconds.
            operationId: reservedIPs_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/reserved_ip_create'
            responses:
                "202":
                    $ref: '#/components/responses/reserved_ip_created'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/reserved_ips/{reserved_ip}:
        delete:
            tags:
                - Reserved IPs
            summary: Delete a Reserved IP
            description: |
                To delete a reserved IP and remove it from your account, send a DELETE request
                to `/v2/reserved_ips/$RESERVED_IP_ADDR`.

                A successful request will receive a 204 status code with no body in response.
                This indicates that the request was processed successfully.
            operationId: reservedIPs_delete
            parameters:
                - $ref: '#/components/parameters/reserved_ip'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Reserved IPs
            summary: Retrieve an Existing Reserved IP
            description: To show information about a reserved IP, send a GET request to `/v2/reserved_ips/$RESERVED_IP_ADDR`.
            operationId: reservedIPs_get
            parameters:
                - $ref: '#/components/parameters/reserved_ip'
            responses:
                "200":
                    $ref: '#/components/responses/reserved_ip'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/reserved_ips/{reserved_ip}/actions:
        get:
            tags:
                - Reserved IP Actions
            summary: List All Actions for a Reserved IP
            description: To retrieve all actions that have been executed on a reserved IP, send a GET request to `/v2/reserved_ips/$RESERVED_IP/actions`.
            operationId: reservedIPsActions_list
            parameters:
                - $ref: '#/components/parameters/reserved_ip'
            responses:
                "200":
                    $ref: '#/components/responses/reserved_ip_actions'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Reserved IP Actions
            summary: Initiate a Reserved IP Action
            description: |
                To initiate an action on a reserved IP send a POST request to
                `/v2/reserved_ips/$RESERVED_IP/actions`. In the JSON body to the request,
                set the `type` attribute to on of the supported action types:

                | Action     | Details
                |------------|--------
                | `assign`   | Assigns a reserved IP to a Droplet
                | `unassign` | Unassign a reserved IP from a Droplet
            operationId: reservedIPsActions_post
            parameters:
                - $ref: '#/components/parameters/reserved_ip'
            requestBody:
                description: |
                    The `type` attribute set in the request body will specify the action that
                    will be taken on the reserved IP.
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/reserved_ip_action_unassign'
                                - $ref: '#/components/schemas/reserved_ip_action_assign'
                            discriminator:
                                propertyName: type
                                mapping:
                                    assign: '#/components/schemas/reserved_ip_action_assign'
                                    unassign: '#/components/schemas/reserved_ip_action_unassign'
            responses:
                "201":
                    $ref: '#/components/responses/reserved_ip_action'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/reserved_ips/{reserved_ip}/actions/{action_id}:
        get:
            tags:
                - Reserved IP Actions
            summary: Retrieve an Existing Reserved IP Action
            description: To retrieve the status of a reserved IP action, send a GET request to `/v2/reserved_ips/$RESERVED_IP/actions/$ACTION_ID`.
            operationId: reservedIPsActions_get
            parameters:
                - $ref: '#/components/parameters/reserved_ip'
                - $ref: '#/components/parameters/action_id'
            responses:
                "200":
                    $ref: '#/components/responses/reserved_ip_action'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/sizes:
        get:
            tags:
                - Sizes
            summary: List All Droplet Sizes
            description: |-
                To list all of available Droplet sizes, send a GET request to `/v2/sizes`.
                The response will be a JSON object with a key called `sizes`. The value of this will be an array of `size` objects each of which contain the standard size attributes.
            operationId: sizes_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_sizes'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/snapshots:
        get:
            tags:
                - Snapshots
            summary: List All Snapshots
            description: |
                To list all of the snapshots available on your account, send a GET request to
                `/v2/snapshots`.

                The response will be a JSON object with a key called `snapshots`. This will be
                set to an array of `snapshot` objects, each of which will contain the standard
                snapshot attributes.

                ### Filtering Results by Resource Type

                It's possible to request filtered results by including certain query parameters.

                #### List Droplet Snapshots

                To retrieve only snapshots based on Droplets, include the `resource_type`
                query parameter set to `droplet`. For example, `/v2/snapshots?resource_type=droplet`.

                #### List Volume Snapshots

                To retrieve only snapshots based on volumes, include the `resource_type`
                query parameter set to `volume`. For example, `/v2/snapshots?resource_type=volume`.
            operationId: snapshots_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
                - $ref: '#/components/parameters/snapshot_resource_type'
            responses:
                "200":
                    $ref: '#/components/responses/snapshots'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/snapshots/{snapshot_id}:
        delete:
            tags:
                - Snapshots
            summary: Delete a Snapshot
            description: |
                Both Droplet and volume snapshots are managed through the `/v2/snapshots/`
                endpoint. To delete a snapshot, send a DELETE request to
                `/v2/snapshots/$SNAPSHOT_ID`.

                A status of 204 will be given. This indicates that the request was processed
                successfully, but that no response body is needed.
            operationId: snapshots_delete
            parameters:
                - $ref: '#/components/parameters/snapshot_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Snapshots
            summary: Retrieve an Existing Snapshot
            description: |
                To retrieve information about a snapshot, send a GET request to
                `/v2/snapshots/$SNAPSHOT_ID`.

                The response will be a JSON object with a key called `snapshot`. The value of
                this will be an snapshot object containing the standard snapshot attributes.
            operationId: snapshots_get
            parameters:
                - $ref: '#/components/parameters/snapshot_id'
            responses:
                "200":
                    $ref: '#/components/responses/snapshots_existing'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/tags:
        get:
            tags:
                - Tags
            summary: List All Tags
            description: To list all of your tags, you can send a GET request to `/v2/tags`.
            operationId: tags_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/tags_all'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Tags
            summary: Create a New Tag
            description: To create a tag you can send a POST request to `/v2/tags` with a `name` attribute.
            operationId: tags_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/tags'
            responses:
                "201":
                    $ref: '#/components/responses/tags_new'
                "400":
                    $ref: '#/components/responses/tags_bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/tags/{tag_id}:
        delete:
            tags:
                - Tags
            summary: Delete a Tag
            description: A tag can be deleted by sending a `DELETE` request to `/v2/tags/$TAG_NAME`. Deleting a tag also untags all the resources that have previously been tagged by the Tag
            operationId: tags_delete
            parameters:
                - $ref: '#/components/parameters/tag_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Tags
            summary: Retrieve a Tag
            description: To retrieve an individual tag, you can send a `GET` request to `/v2/tags/$TAG_NAME`.
            operationId: tags_get
            parameters:
                - $ref: '#/components/parameters/tag_id'
            responses:
                "200":
                    $ref: '#/components/responses/tags_existing'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/tags/{tag_id}/resources:
        delete:
            tags:
                - Tags
            summary: Untag a Resource
            description: |-
                Resources can be untagged by sending a DELETE request to `/v2/tags/$TAG_NAME/resources` with an array of json objects containing `resource_id` and `resource_type` attributes.
                Currently only untagging of Droplets, Databases, Images, Volumes, and Volume Snapshots is supported. `resource_type` is expected to be the string `droplet`, `database`, `image`, `volume` or `volume_snapshot`. `resource_id` is expected to be the ID of the resource as a string.
            operationId: tags_unassign_resources
            parameters:
                - $ref: '#/components/parameters/tag_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/tags_resource'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        post:
            tags:
                - Tags
            summary: Tag a Resource
            description: |-
                Resources can be tagged by sending a POST request to `/v2/tags/$TAG_NAME/resources` with an array of json objects containing `resource_id` and `resource_type` attributes.
                Currently only tagging of Droplets, Databases, Images, Volumes, and Volume Snapshots is supported. `resource_type` is expected to be the string `droplet`, `database`, `image`, `volume` or `volume_snapshot`. `resource_id` is expected to be the ID of the resource as a string.
            operationId: tags_assign_resources
            parameters:
                - $ref: '#/components/parameters/tag_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/tags_resource'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/uptime/checks:
        get:
            tags:
                - Uptime
            summary: List All Checks
            description: To list all of the Uptime checks on your account, send a GET request to `/v2/uptime/checks`.
            operationId: uptime_list_checks
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_checks'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Uptime
            summary: Create a New Check
            description: |
                To create an Uptime check, send a POST request to `/v2/uptime/checks` specifying the attributes
                in the table below in the JSON body.
            operationId: uptime_create_check
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/check_updatable'
                            type: object
                            required:
                                - name
                                - target
                                - regions
                                - type
                                - enabled
            responses:
                "201":
                    $ref: '#/components/responses/existing_check'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/uptime/checks/{check_id}:
        delete:
            tags:
                - Uptime
            summary: Delete a Check
            description: |
                To delete an Uptime check, send a DELETE request to `/v2/uptime/checks/$CHECK_ID`. A 204 status
                code with no body will be returned in response to a successful request.


                Deleting a check will also delete alerts associated with the check.
            operationId: uptime_delete_check
            parameters:
                - $ref: '#/components/parameters/check_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Uptime
            summary: Retrieve an Existing Check
            description: To show information about an existing check, send a GET request to `/v2/uptime/checks/$CHECK_ID`.
            operationId: uptime_get_check
            parameters:
                - $ref: '#/components/parameters/check_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_check'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Uptime
            summary: Update a Check
            description: |
                To update the settings of an Uptime check, send a PUT request to `/v2/uptime/checks/$CHECK_ID`.
            operationId: uptime_update_check
            parameters:
                - $ref: '#/components/parameters/check_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/check_updatable'
                            type: object
            responses:
                "200":
                    $ref: '#/components/responses/existing_check'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/uptime/checks/{check_id}/alerts:
        get:
            tags:
                - Uptime
            summary: List All Alerts
            description: To list all of the alerts for an Uptime check, send a GET request to `/v2/uptime/checks/$CHECK_ID/alerts`.
            operationId: uptime_list_alerts
            parameters:
                - $ref: '#/components/parameters/check_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_alerts'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Uptime
            summary: Create a New Alert
            description: |
                To create an Uptime alert, send a POST request to `/v2/uptime/checks/$CHECK_ID/alerts` specifying the attributes
                in the table below in the JSON body.
            operationId: uptime_create_alert
            parameters:
                - $ref: '#/components/parameters/check_id'
            requestBody:
                description: |
                    The ''type'' field dictates the type of alert, and hence what type of value to pass into the threshold property.
                    Type | Description | Threshold Value
                    -----|-------------|--------------------
                    `latency` | alerts on the response latency | milliseconds
                    `down` | alerts on a target registering as down in any region | N/A (Not required)
                    `down_global` | alerts on a target registering as down globally | N/A (Not required)
                    `ssl_expiry` | alerts on a SSL certificate expiring within $threshold days | days
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/alert'
                            type: object
                            required:
                                - name
                                - type
                                - notifications
            responses:
                "201":
                    $ref: '#/components/responses/existing_alert'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/uptime/checks/{check_id}/alerts/{alert_id}:
        delete:
            tags:
                - Uptime
            summary: Delete an Alert
            description: |
                To delete an Uptime alert, send a DELETE request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`. A 204 status
                code with no body will be returned in response to a successful request.
            operationId: uptime_delete_alert
            parameters:
                - $ref: '#/components/parameters/check_id'
                - $ref: '#/components/parameters/parameters_alert_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Uptime
            summary: Retrieve an Existing Alert
            description: To show information about an existing alert, send a GET request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`.
            operationId: uptime_get_alert
            parameters:
                - $ref: '#/components/parameters/check_id'
                - $ref: '#/components/parameters/parameters_alert_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_alert'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        put:
            tags:
                - Uptime
            summary: Update an Alert
            description: |
                To update the settings of an Uptime alert, send a PUT request to `/v2/uptime/checks/$CHECK_ID/alerts/$ALERT_ID`.
            operationId: uptime_update_alert
            parameters:
                - $ref: '#/components/parameters/check_id'
                - $ref: '#/components/parameters/parameters_alert_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/alert_updatable'
                            type: object
            responses:
                "200":
                    $ref: '#/components/responses/existing_alert'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/uptime/checks/{check_id}/state:
        get:
            tags:
                - Uptime
            summary: Retrieve Check State
            description: To show information about an existing check's state, send a GET request to `/v2/uptime/checks/$CHECK_ID/state`.
            operationId: uptime_get_checkState
            parameters:
                - $ref: '#/components/parameters/check_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_check_state'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/volumes:
        delete:
            tags:
                - Block Storage
            summary: Delete a Block Storage Volume by Name
            description: |+
                Block storage volumes may also be deleted by name by sending a DELETE request with the volume's **name** and the **region slug** for the region it is located in as query parameters to `/v2/volumes?name=$VOLUME_NAME&region=nyc1`.
                No response body will be sent back, but the response code will indicate success. Specifically, the response code will be a 204, which means that the action was successful with no returned body data.

            operationId: volumes_delete_byName
            parameters:
                - $ref: '#/components/parameters/volume_name'
                - $ref: '#/components/parameters/region'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Block Storage
            summary: List All Block Storage Volumes
            description: |+
                To list all of the block storage volumes available on your account, send a GET request to `/v2/volumes`.
                ## Filtering Results
                ### By Region
                The `region` may be provided as query parameter in order to restrict results to volumes available in a specific region. For example: `/v2/volumes?region=nyc1`
                ### By Name
                It is also possible to list volumes on your account that match a specified name. To do so, send a GET request with the volume's name as a query parameter to `/v2/volumes?name=$VOLUME_NAME`.
                **Note:** You can only create one volume per region with the same name.
                ### By Name and Region
                It is also possible to retrieve information about a block storage volume by name. To do so, send a GET request with the volume's name and the region slug for the region it is located in as query parameters to `/v2/volumes?name=$VOLUME_NAME&region=nyc1`.


            operationId: volumes_list
            parameters:
                - $ref: '#/components/parameters/volume_name'
                - $ref: '#/components/parameters/region'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/volumes'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Block Storage
            summary: Create a New Block Storage Volume
            description: To create a new volume, send a POST request to `/v2/volumes`. Optionally, a `filesystem_type` attribute may be provided in order to automatically format the volume's filesystem. Pre-formatted volumes are automatically mounted when attached to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS Droplets created on or after April 26, 2018. Attaching pre-formatted volumes to Droplets without support for auto-mounting is not recommended.
            operationId: volumes_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/volumes_ext4'
                                - $ref: '#/components/schemas/volumes_xfs'
                        examples:
                            Volume from a snapshot:
                                value:
                                    description: A new volume based on a snapshot
                                    filesystem_label: ext4_volume_01
                                    filesystem_type: ext4
                                    name: snapshot_example
                                    region: nyc1
                                    size_gigabytes: 10
                                    snapshot_id: b0798135-fb76-11eb-946a-0a58ac146f33
                            ext4 volume:
                                value:
                                    description: Block store for examples
                                    filesystem_label: ext4_volume_01
                                    filesystem_type: ext4
                                    name: ext4-example
                                    region: nyc1
                                    size_gigabytes: 10
                            xfs volume:
                                value:
                                    description: Block store for examples
                                    filesystem_label: xfs_volume01
                                    filesystem_type: xfs
                                    name: xfs_example
                                    region: nyc1
                                    size_gigabytes: 10
            responses:
                "201":
                    $ref: '#/components/responses/volume'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/volumes/{volume_id}:
        delete:
            tags:
                - Block Storage
            summary: Delete a Block Storage Volume
            description: |+
                To delete a block storage volume, destroying all data and removing it from your account, send a DELETE request to `/v2/volumes/$VOLUME_ID`.
                No response body will be sent back, but the response code will indicate success. Specifically, the response code will be a 204, which means that the action was successful with no returned body data.

            operationId: volumes_delete
            parameters:
                - $ref: '#/components/parameters/volume_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Block Storage
            summary: Retrieve an Existing Block Storage Volume
            description: |+
                To show information about a block storage volume, send a GET request to `/v2/volumes/$VOLUME_ID`.

            operationId: volumes_get
            parameters:
                - $ref: '#/components/parameters/volume_id'
            responses:
                "200":
                    $ref: '#/components/responses/volume'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/volumes/{volume_id}/actions:
        get:
            tags:
                - Block Storage Actions
            summary: List All Actions for a Volume
            description: |+
                To retrieve all actions that have been executed on a volume, send a GET request to `/v2/volumes/$VOLUME_ID/actions`.

            operationId: volumeActions_list
            parameters:
                - $ref: '#/components/parameters/volume_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/volumeActions'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Block Storage Actions
            summary: Initiate A Block Storage Action By Volume Id
            description: |
                To initiate an action on a block storage volume by Id, send a POST request to
                `~/v2/volumes/$VOLUME_ID/actions`. The body should contain the appropriate
                attributes for the respective action.

                ## Attach a Block Storage Volume to a Droplet

                | Attribute  | Details                                                             |
                | ---------- | ------------------------------------------------------------------- |
                | type       | This must be `attach`                                               |
                | droplet_id | Set to the Droplet's ID                                             |
                | region     | Set to the slug representing the region where the volume is located |

                Each volume may only be attached to a single Droplet. However, up to seven
                volumes may be attached to a Droplet at a time. Pre-formatted volumes will be
                automatically mounted to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS
                Droplets created on or after April 26, 2018 when attached. On older Droplets,
                [additional configuration](https://www.digitalocean.com/community/tutorials/how-to-partition-and-format-digitalocean-block-storage-volumes-in-linux#mounting-the-filesystems)
                is required.

                ## Remove a Block Storage Volume from a Droplet

                | Attribute  | Details                                                             |
                | ---------- | ------------------------------------------------------------------- |
                | type       | This must be `detach`                                               |
                | droplet_id | Set to the Droplet's ID                                             |
                | region     | Set to the slug representing the region where the volume is located |

                ## Resize a Volume

                | Attribute      | Details                                                             |
                | -------------- | ------------------------------------------------------------------- |
                | type           | This must be `resize`                                               |
                | size_gigabytes | The new size of the block storage volume in GiB (1024^3)            |
                | region         | Set to the slug representing the region where the volume is located |

                Volumes may only be resized upwards. The maximum size for a volume is 16TiB.
            operationId: volumeActions_post_byId
            parameters:
                - $ref: '#/components/parameters/volume_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/volume_action_post_attach'
                                - $ref: '#/components/schemas/volume_action_post_detach'
                                - $ref: '#/components/schemas/volume_action_post_resize'
                            discriminator:
                                propertyName: type
                                mapping:
                                    attach: '#/components/schemas/volume_action_post_attach'
                                    detach: '#/components/schemas/volume_action_post_detach'
                                    resize: '#/components/schemas/volume_action_post_resize'
                        examples:
                            VolumeActionAttach:
                                value:
                                    droplet_id: 1.161219e+07
                                    region: nyc1
                                    tags:
                                        - aninterestingtag
                                    type: attach
                            VolumeActionDetach:
                                value:
                                    droplet_id: 1.161219e+07
                                    region: nyc1
                                    type: detach
                            VolumeActionResize:
                                value:
                                    region: nyc1
                                    size_gigabytes: 100
                                    type: resize
            responses:
                "202":
                    $ref: '#/components/responses/volumeAction'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/volumes/{volume_id}/actions/{action_id}:
        get:
            tags:
                - Block Storage Actions
            summary: Retrieve an Existing Volume Action
            description: |+
                To retrieve the status of a volume action, send a GET request to `/v2/volumes/$VOLUME_ID/actions/$ACTION_ID`.

            operationId: volumeActions_get
            parameters:
                - $ref: '#/components/parameters/volume_id'
                - $ref: '#/components/parameters/action_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/volumeAction'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/volumes/{volume_id}/snapshots:
        get:
            tags:
                - Block Storage
            summary: List Snapshots for a Volume
            description: |+
                To retrieve the snapshots that have been created from a volume, send a GET request to `/v2/volumes/$VOLUME_ID/snapshots`.

            operationId: volumeSnapshots_list
            parameters:
                - $ref: '#/components/parameters/volume_id'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/volumeSnapshots'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - Block Storage
            summary: Create Snapshot from a Volume
            description: To create a snapshot from a volume, sent a POST request to `/v2/volumes/$VOLUME_ID/snapshots`.
            operationId: volumeSnapshots_create
            parameters:
                - $ref: '#/components/parameters/volume_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            required:
                                - name
                            properties:
                                name:
                                    type: string
                                    description: A human-readable name for the volume snapshot.
                                    example: big-data-snapshot1475261774
                                tags:
                                    $ref: '#/components/schemas/tags_array'
                        example:
                            name: big-data-snapshot1475261774
            responses:
                "201":
                    $ref: '#/components/responses/volumeSnapshot'
                "400":
                    $ref: '#/components/responses/bad_request'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/volumes/actions:
        post:
            tags:
                - Block Storage Actions
            summary: Initiate A Block Storage Action By Volume Name
            description: |
                To initiate an action on a block storage volume by Name, send a POST request to
                `~/v2/volumes/actions`. The body should contain the appropriate
                attributes for the respective action.

                ## Attach a Block Storage Volume to a Droplet

                | Attribute   | Details                                                             |
                | ----------- | ------------------------------------------------------------------- |
                | type        | This must be `attach`                                               |
                | volume_name | The name of the block storage volume                                |
                | droplet_id  | Set to the Droplet's ID                                             |
                | region      | Set to the slug representing the region where the volume is located |

                Each volume may only be attached to a single Droplet. However, up to five
                volumes may be attached to a Droplet at a time. Pre-formatted volumes will be
                automatically mounted to Ubuntu, Debian, Fedora, Fedora Atomic, and CentOS
                Droplets created on or after April 26, 2018 when attached. On older Droplets,
                [additional configuration](https://www.digitalocean.com/community/tutorials/how-to-partition-and-format-digitalocean-block-storage-volumes-in-linux#mounting-the-filesystems)
                is required.

                ## Remove a Block Storage Volume from a Droplet

                | Attribute   | Details                                                             |
                | ----------- | ------------------------------------------------------------------- |
                | type        | This must be `detach`                                               |
                | volume_name | The name of the block storage volume                                |
                | droplet_id  | Set to the Droplet's ID                                             |
                | region      | Set to the slug representing the region where the volume is located |
            operationId: volumeActions_post
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            anyOf:
                                - $ref: '#/components/schemas/volume_action_post_attach'
                                - $ref: '#/components/schemas/volume_action_post_detach'
                            discriminator:
                                propertyName: type
                                mapping:
                                    attach: '#/components/schemas/volume_action_post_attach'
                                    detach: '#/components/schemas/volume_action_post_detach'
                        examples:
                            VolumeActionAttach:
                                value:
                                    droplet_id: 1.161219e+07
                                    region: nyc1
                                    tags:
                                        - aninterestingtag
                                    type: attach
                                    volume_name: example
                            VolumeActionDetach:
                                value:
                                    droplet_id: 1.161219e+07
                                    region: nyc1
                                    type: detach
                                    volume_name: example
            responses:
                "202":
                    $ref: '#/components/responses/volumeAction'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/volumes/snapshots/{snapshot_id}:
        delete:
            tags:
                - Block Storage
            summary: Delete a Volume Snapshot
            description: |
                To delete a volume snapshot, send a DELETE request to
                `/v2/snapshots/$SNAPSHOT_ID`.

                A status of 204 will be given. This indicates that the request was processed
                successfully, but that no response body is needed.
            operationId: volumeSnapshots_delete_byId
            parameters:
                - $ref: '#/components/parameters/snapshot_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - Block Storage
            summary: Retrieve an Existing Volume Snapshot
            description: |+
                To retrieve the details of a snapshot that has been created from a volume, send a GET request to `/v2/volumes/snapshots/$SNAPSHOT_ID`.

            operationId: volumeSnapshots_get_byId
            parameters:
                - $ref: '#/components/parameters/snapshot_id'
            responses:
                "200":
                    $ref: '#/components/responses/volumeSnapshot'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
    /v2/vpcs:
        get:
            tags:
                - VPCs
            summary: List All VPCs
            description: To list all of the VPCs on your account, send a GET request to `/v2/vpcs`.
            operationId: vpcs_list
            parameters:
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/all_vpcs'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        post:
            tags:
                - VPCs
            summary: Create a New VPC
            description: |
                To create a VPC, send a POST request to `/v2/vpcs` specifying the attributes
                in the table below in the JSON body.

                **Note:** If you do not currently have a VPC network in a specific datacenter
                region, the first one that you create will be set as the default for that
                region. The default VPC for a region cannot be changed or deleted.
            operationId: vpcs_create
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/vpc_updatable'
                                - $ref: '#/components/schemas/vpc_create'
                            type: object
                            required:
                                - name
                                - region
            responses:
                "201":
                    $ref: '#/components/responses/existing_vpc'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/vpcs/{vpc_id}:
        delete:
            tags:
                - VPCs
            summary: Delete a VPC
            description: |
                To delete a VPC, send a DELETE request to `/v2/vpcs/$VPC_ID`. A 204 status
                code with no body will be returned in response to a successful request.

                The default VPC for a region can not be deleted. Additionally, a VPC can only
                be deleted if it does not contain any member resources. Attempting to delete
                a region's default VPC or a VPC that still has members will result in a
                403 Forbidden error response.
            operationId: vpcs_delete
            parameters:
                - $ref: '#/components/parameters/vpc_id'
            responses:
                "204":
                    $ref: '#/components/responses/no_content'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        get:
            tags:
                - VPCs
            summary: Retrieve an Existing VPC
            description: To show information about an existing VPC, send a GET request to `/v2/vpcs/$VPC_ID`.
            operationId: vpcs_get
            parameters:
                - $ref: '#/components/parameters/vpc_id'
            responses:
                "200":
                    $ref: '#/components/responses/existing_vpc'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
        patch:
            tags:
                - VPCs
            summary: Partially Update a VPC
            description: |
                To update a subset of information about a VPC, send a PATCH request to
                `/v2/vpcs/$VPC_ID`.
            operationId: vpcs_patch
            parameters:
                - $ref: '#/components/parameters/vpc_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/vpc_updatable'
                                - $ref: '#/components/schemas/vpc_default'
            responses:
                "200":
                    $ref: '#/components/responses/existing_vpc'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
        put:
            tags:
                - VPCs
            summary: Update a VPC
            description: |
                To update information about a VPC, send a PUT request to `/v2/vpcs/$VPC_ID`.
            operationId: vpcs_update
            parameters:
                - $ref: '#/components/parameters/vpc_id'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/vpc_updatable'
                                - $ref: '#/components/schemas/vpc_default'
                            type: object
                            required:
                                - name
            responses:
                "200":
                    $ref: '#/components/responses/existing_vpc'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - write
    /v2/vpcs/{vpc_id}/members:
        get:
            tags:
                - VPCs
            summary: List the Member Resources of a VPC
            description: |
                To list all of the resources that are members of a VPC, send a GET request to
                `/v2/vpcs/$VPC_ID/members`.

                To only list resources of a specific type that are members of the VPC,
                included a `resource_type` query parameter. For example, to only list Droplets
                in the VPC, send a GET request to `/v2/vpcs/$VPC_ID/members?resource_type=droplet`.
            operationId: vpcs_list_members
            parameters:
                - $ref: '#/components/parameters/vpc_id'
                - $ref: '#/components/parameters/vpc_resource_type'
                - $ref: '#/components/parameters/per_page'
                - $ref: '#/components/parameters/page'
            responses:
                "200":
                    $ref: '#/components/responses/vpc_members'
                "401":
                    $ref: '#/components/responses/unauthorized'
                "404":
                    $ref: '#/components/responses/not_found'
                "429":
                    $ref: '#/components/responses/too_many_requests'
                "500":
                    $ref: '#/components/responses/server_error'
                default:
                    $ref: '#/components/responses/unexpected_error'
            security:
                - bearer_auth:
                    - read
security:
    - bearer_auth: []
servers:
    - url: https://api.digitalocean.com
      description: production
tags:
    - name: 1-Click Applications
      description: |-
        1-Click applications are pre-built Droplet images or Kubernetes apps with software,
        features, and configuration details already set up for you. They can be found in the
        [DigitalOcean Marketplace](https://www.digitalocean.com/docs/marketplace).
    - name: Account
      description: Provides information about your current account.
    - name: Actions
      description: |-
        Actions are records of events that have occurred on the resources in your account.
        These can be things like rebooting a Droplet, or transferring an image to a new region.

        An action object is created every time one of these actions is initiated. The action
        object contains information about the current status of the action, start and complete
        timestamps, and the associated resource type and ID.

        Every action that creates an action object is available through this endpoint. Completed
        actions are not removed from this list and are always available for querying.

        **Note:** You can pass the following HTTP header with the request to have the API return
        the `reserved_ips` stanza instead of the `floating_ips` stanza:

        - `Accept: application/vnd.digitalocean.reserveip+json`
    - name: Apps
      description: |-
        App Platform is a Platform-as-a-Service (PaaS) offering from DigitalOcean that allows
        developers to publish code directly to DigitalOcean servers without worrying about the
        underlying infrastructure.

        Most API operations are centered around a few core object types. Following are the
        definitions of these types. These definitions will be omitted from the operation-specific
        documentation.

        For documentation on app specifications (`AppSpec` objects), please refer to the
        [product documentation](https://docs.digitalocean.com/products/app-platform/reference/app-spec/)).
    - name: Billing
      description: |-
        The billing endpoints allow you to retrieve your account balance, invoices
        and billing history.

        **Balance:** By sending requests to the `/v2/customers/my/balance` endpoint, you can
        retrieve the balance information for the requested customer account.

        **Invoices:** [Invoices](https://www.digitalocean.com/docs/accounts/billing/invoices/)
        are generated on the first of each month for every DigitalOcean
        customer. An invoice preview is generated daily, which can be accessed
        with the `preview` keyword in place of `$INVOICE_UUID`. To interact with
        invoices, you will generally send requests to the invoices endpoint at
        `/v2/customers/my/invoices`.

        **Billing History:** Billing history is a record of billing events for your account.
        For example, entries may include events like payments made, invoices
        issued, or credits granted. To interact with invoices, you
        will generally send requests to the invoices endpoint at
        `/v2/customers/my/billing_history`.
    - name: Block Storage
      description: |-
        [DigitalOcean Block Storage Volumes](https://www.digitalocean.com/docs/volumes/)
        provide expanded storage capacity for your Droplets and can be moved
        between Droplets within a specific region.

        Volumes function as raw block devices, meaning they appear to the
        operating system as locally attached storage which can be formatted using
        any file system supported by the OS. They may be created in sizes from
        1GiB to 16TiB.

        By sending requests to the `/v2/volumes` endpoint, you can list, create, or
        delete volumes as well as attach and detach them from Droplets
    - name: Block Storage Actions
      description: |-
        Block storage actions are commands that can be given to a DigitalOcean
        Block Storage Volume. An example would be detaching or attaching a volume
        from a Droplet. These requests are made on the
        `/v2/volumes/$VOLUME_ID/actions` endpoint.

        An action object is returned. These objects hold the current status of the
        requested action.
    - name: CDN Endpoints
      description: |-
        Content hosted in DigitalOcean's object storage solution,
        [Spaces](https://www.digitalocean.com/docs/spaces/overview/),
        can optionally be served by our globally distributed Content Delivery
        Network (CDN). By sending requests to `/v2/cdn/endpoints`, you can list,
        create, or delete CDN Endpoints as well as purge cached content. To use a
        custom subdomain to access the CDN Endpoint, provide the ID of a
        DigitalOcean managed TLS certificate and the fully qualified domain name
        for the custom subdomain.
    - name: Certificates
      description: |-
        In order to perform SSL termination on load balancers, DigitalOcean offers
        two types of [SSL certificate management](https://www.digitalocean.com/docs/accounts/security/#certificates):

        * **Custom**: User-generated certificates may be uploaded to DigitalOcean
        where they will be placed in a fully encrypted and isolated storage system.

        * **Let's Encrypt**: Certificates may be automatically generated by
        DigitalOcean utilizing an integration with Let's Encrypt, the free and
        open certificate authority. These certificates will also be automatically
        renewed as required.
    - name: Container Registry
      description: |-
        DigitalOcean offers the ability for you to create a
        [private container registry](https://www.digitalocean.com/docs/images/container-registry/quickstart/)
        to store your Docker images for use with your Kubernetes clusters. This
        container registry runs inside the same datacenters as your cluster,
        ensuring reliable and performant rollout of image deployments.

        You can only create one registry per DigitalOcean account, but you can use
        that registry to create as many repositories as you wish.
    - name: Databases
      description: |-
        DigitalOcean's [managed database service](https://www.digitalocean.com/docs/databases)
        simplifies the creation and management of highly available database clusters. Currently, it
        offers support for [PostgreSQL](http://www.digitalocean.com/docs/databases/postgresql/),
        [Redis](https://www.digitalocean.com/docs/databases/redis/),
        [MySQL](https://www.digitalocean.com/docs/databases/mysql/), and
        [MongoDB](https://www.digitalocean.com/docs/databases/mongodb/).

        By sending requests to the `/v2/databases` endpoint, you can list, create, or delete
        database clusters as well as scale the size of a cluster, add or remove read-only replicas,
        and manage other configuration details.

        Database clusters may be deployed in a multi-node, high-availability configuration.
        If your machine type is above the basic nodes, your node plan is above the smallest option,
        or you are running MongoDB, you may additionally include up to two standby nodes in your cluster.

        The size of individual nodes in a database cluster is represented by a human-readable slug,
        which is used in some of the following requests. Each slug denotes the node's identifier,
        CPU count, and amount of RAM, in that order.

        For **Basic nodes**, reference the following table for its slug:

        Slug               | CPU     | RAM
        -------------------|---------|---------
        db-s-1vcpu-1gb     | 1 vCPU  | 1 GB
        db-s-1vcpu-2gb     | 1 vCPU  | 2 GB
        db-s-2vcpu-4gb     | 2 vCPU  | 4 GB
        db-s-4vcpu-8gb     | 4 vCPU  | 8 GB
        db-s-6vcpu-16gb    | 6 vCPU  | 16 GB
        db-s-8vcpu-32gb    | 8 vCPU  | 32 GB
        db-s-16vcpu-64gb   | 16 vCPU | 64 GB

        For **General Purpose nodes**, reference the following table for its slug:

        Slug               | CPU     | RAM
        -------------------|---------|---------
        gd-2vcpu-8gb       | 2 vCPU  | 8 GB
        gd-4vcpu-16gb      | 4 vCPU  | 16 GB
        gd-8vcpu-32gb      | 8 vCPU  | 32 GB
        gd-16vcpu-64gb     | 16 vCPU | 64 GB
        gd-32vcpu-128gb    | 32 vCPU | 128 GB
        gd-40vcpu-160gb    | 40 vCPU | 160 GB

        For **Storage-Optimized nodes**, reference the following table for its slug:

        Slug               | CPU     | RAM
        -------------------|---------|---------
        so1_5-2vcpu-16gb   | 2 vCPU  | 16 GB
        so1_5-4vcpu-32gb   | 4 vCPU  | 32 GB
        so1_5-8vcpu-64gb   | 8 vCPU  | 64 GB
        so1_5-16vcpu-128gb | 16 vCPU | 128 GB
        so1_5-24vcpu-192gb | 24 vCPU | 192 GB
        so1_5-32vcpu-256gb | 32 vCPU | 256 GB

        For **Memory-Optimized nodes**, reference the following table for its slug:

        Slug               | CPU     | RAM
        -------------------|---------|---------
        m-2vcpu-16gb       | 2 vCPU  | 16 GB
        m-4vcpu-32gb       | 4 vCPU  | 32 GB
        m-8vcpu-64gb       | 8 vCPU  | 64 GB
        m-16vcpu-128gb     | 16 vCPU | 128 GB
        m-24vcpu-192gb     | 24 vCPU | 192 GB
        m-32vcpu-256gb     | 32 vCPU | 256 GB
    - name: Domain Records
      description: |-
        Domain record resources are used to set or retrieve information about the
        individual DNS records configured for a domain. This allows you to build
        and manage DNS zone files by adding and modifying individual records for a
        domain.

        The [DigitalOcean DNS management interface](https://www.digitalocean.com/docs/networking/dns/)
        allows you to configure the following DNS records:

        Name  | Description                                                                                                                                        |
        ------|----------------------------------------------------------------------------------------------------------------------------------------------------|
        A     | This record type is used to map an IPv4 address to a hostname.                                                                                     |
        AAAA  | This record type is used to map an IPv6 address to a hostname.                                                                                     |
        CAA   | As specified in RFC-6844, this record type can be used to restrict which certificate authorities are permitted to issue certificates for a domain. |
        CNAME | This record type defines an alias for your canonical hostname (the one defined by an A or AAAA record).                                            |
        MX    | This record type is used to define the mail exchanges used for the domain.                                                                         |
        NS    | This record type defines the name servers that are used for this zone.                                                                             |
        TXT   | This record type is used to associate a string of text with a hostname, primarily used for verification.                                           |
        SRV   | This record type specifies the location (hostname and port number) of servers for specific services.                                               |
        SOA   | This record type defines administrative information about the zone. Can only have ttl changed, cannot be deleted                                   |
    - name: Domains
      description: |-
        Domain resources are domain names that you have purchased from a domain
        name registrar that you are managing through the
        [DigitalOcean DNS interface](https://www.digitalocean.com/docs/networking/dns/).

        This resource establishes top-level control over each domain. Actions that
        affect individual domain records should be taken on the
        [Domain Records](#tag/Domain-Records) resource.
    - name: Droplet Actions
      description: |-
        Droplet actions are tasks that can be executed on a Droplet. These can be
        things like rebooting, resizing, snapshotting, etc.

        Droplet action requests are generally targeted at one of the "actions"
        endpoints for a specific Droplet. The specific actions are usually
        initiated by sending a POST request with the action and arguments as
        parameters.

        Droplet action requests create a Droplet actions object, which can be used
        to get information about the status of an action. Creating a Droplet
        action is asynchronous: the HTTP call will return the action object before
        the action has finished processing on the Droplet. The current status of
        an action can be retrieved from either the Droplet actions endpoint or the
        global actions endpoint. If a Droplet action is uncompleted it may block
        the creation of a subsequent action for that Droplet, the locked attribute
        of the Droplet will be true and attempts to create a Droplet action will
        fail with a status of 422.
    - name: Droplets
      description: |-
        A [Droplet](https://www.digitalocean.com/docs/droplets/) is a DigitalOcean
        virtual machine. By sending requests to the Droplet endpoint, you can
        list, create, or delete Droplets.

        Some of the attributes will have an object value. The `region` and `image`
        objects will all contain the standard attributes of their associated
        types. Find more information about each of these objects in their
        respective sections.
    - name: Firewalls
      description: |-
        [DigitalOcean Cloud Firewalls](https://www.digitalocean.com/docs/networking/firewalls/)
        provide the ability to restrict network access to and from a Droplet
        allowing you to define which ports will accept inbound or outbound
        connections. By sending requests to the `/v2/firewalls` endpoint, you can
        list, create, or delete firewalls as well as modify access rules.
    - name: Floating IP Actions
      description: |-
        As of 16 June 2022, we have renamed the Floating IP product to [Reserved IPs](https://docs.digitalocean.com/reference/api/api-reference/#tag/Reserved-IPs).
        The Reserved IP product's endpoints function the exact same way as Floating IPs.
        The only difference is the name change throughout the URLs and fields.
        For example, the `floating_ips` field is now the `reserved_ips` field.
        The Floating IP endpoints will remain active until fall 2023 before being
        permanently deprecated.

        With the exception of the [Projects API](https://docs.digitalocean.com/reference/api/api-reference/#tag/Projects),
        we will reflect this change as an additional field in the responses across the API
        where the `floating_ip` field is used. For example, the Droplet metadata response
        will contain the field `reserved_ips` in addition to the `floating_ips` field.
        Floating IPs retrieved using the Projects API will retain the original name.

        Floating IP actions are commands that can be given to a DigitalOcean
        floating IP. These requests are made on the actions endpoint of a specific
        floating IP.

        An action object is returned. These objects hold the current status of the
        requested action.
    - name: Floating IPs
      description: |-
        As of 16 June 2022, we have renamed the Floating IP product to [Reserved IPs](https://docs.digitalocean.com/reference/api/api-reference/#tag/Reserved-IPs).
        The Reserved IP product's endpoints function the exact same way as Floating IPs.
        The only difference is the name change throughout the URLs and fields.
        For example, the `floating_ips` field is now the `reserved_ips` field.
        The Floating IP endpoints will remain active until fall 2023 before being
        permanently deprecated.

        With the exception of the [Projects API](https://docs.digitalocean.com/reference/api/api-reference/#tag/Projects),
        we will reflect this change as an additional field in the responses across the API
        where the `floating_ip` field is used. For example, the Droplet metadata response
        will contain the field `reserved_ips` in addition to the `floating_ips` field.
        Floating IPs retrieved using the Projects API will retain the original name.

        [DigitalOcean Floating IPs](https://www.digitalocean.com/docs/networking/floating-ips/)
        are publicly-accessible static IP addresses that can be mapped to one of
        your Droplets. They can be used to create highly available setups or other
        configurations requiring movable addresses.

        Floating IPs are bound to a specific region.
    - name: Functions
      description: |-
        [Serverless functions](https://docs.digitalocean.com/products/functions) are blocks of code that run on demand without the need to manage any infrastructure.
        You can develop functions on your local machine and then deploy them to a namespace using `doctl`, the [official DigitalOcean CLI tool](https://docs.digitalocean.com/reference/doctl).

        The Serverless Functions API currently only supports creating and managing namespaces.
    - name: Image Actions
      description: |-
        Image actions are commands that can be given to a DigitalOcean image. In
        general, these requests are made on the actions endpoint of a specific
        image.

        An image action object is returned. These objects hold the current status
        of the requested action.
    - name: Images
      description: |-
        A DigitalOcean [image](https://www.digitalocean.com/docs/images/) can be
        used to create a Droplet and may come in a number of flavors. Currently,
        there are five types of images: snapshots, backups, applications,
        distributions, and custom images.

        * [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) provide
        a full copy of an existing Droplet instance taken on demand.

        * [Backups](https://www.digitalocean.com/docs/images/backups/) are similar
        to snapshots but are created automatically at regular intervals when
        enabled for a Droplet.

        * [Custom images](https://www.digitalocean.com/docs/images/custom-images/)
        are Linux-based virtual machine images (raw, qcow2, vhdx, vdi, and vmdk
        formats are supported) that you may upload for use on DigitalOcean.

        * Distributions are the public Linux distributions that are available to
        be used as a base to create Droplets.

        * Applications, or [1-Click Apps](https://www.digitalocean.com/docs/one-clicks/),
        are distributions pre-configured with additional software.

        To interact with images, you will generally send requests to the images
        endpoint at /v2/images.
    - name: Kubernetes
      description: |-
        [DigitalOcean Kubernetes](https://www.digitalocean.com/docs/kubernetes/)
        allows you to quickly deploy scalable and secure Kubernetes clusters. By
        sending requests to the `/v2/kubernetes/clusters` endpoint, you can list,
        create, or delete clusters as well as scale node pools up and down,
        recycle individual nodes, and retrieve the kubeconfig file for use with
        a cluster.
    - name: Load Balancers
      description: |-
        [DigitalOcean Load Balancers](https://www.digitalocean.com/docs/networking/load-balancers/)
        provide a way to distribute traffic across multiple Droplets. By sending
        requests to the `/v2/load_balancers` endpoint, you can list, create, or
        delete load balancers as well as add or remove Droplets, forwarding rules,
        and other configuration details.
    - name: Monitoring
      description: |-
        The DigitalOcean Monitoring API makes it possible to programmatically retrieve metrics as well as configure alert
        policies based on these metrics. The Monitoring API can help you gain insight into how your apps are performing
        and consuming resources.
    - name: Project Resources
      description: |-
        Project Resources are resources that can be grouped into your projects.
        You can group resources (like Droplets, Spaces, load balancers, domains,
        and floating IPs) in ways that align with the applications you host on
        DigitalOcean.

        ### Supported Resource Types Examples

        Projects resources are identified by uniform resource names or URNs. A
        valid URN has the following format: `do:resource_type:resource_id`. The
        following resource types are supported:

        Resource Type      | Example URN
        -------------------|------------
        App Platform App   | `do:app:be5aab85-851b-4cab-b2ed-98d5a63ba4e8`
        Database           | `do:dbaas:83c7a55f-0d84-4760-9245-aba076ec2fb2`
        Domain             | `do:domain:example.com`
        Droplet            | `do:droplet:4126873`
        Floating IP        | `do:floatingip:192.168.99.100`
        Kubernetes Cluster | `do:kubernetes:bd5f5959-5e1e-4205-a714-a914373942af`
        Load Balancer      | `do:loadbalancer:39052d89-8dd4-4d49-8d5a-3c3b6b365b5b`
        Space              | `do:space:my-website-assets`
        Volume             | `do:volume:6fc4c277-ea5c-448a-93cd-dd496cfef71f`

        ### Resource Status Codes

        When assigning and retrieving resources in projects, a `status` attribute
        is returned that indicates if a resource was successfully retrieved or
        assigned. The status codes can be one of the following:

        Status Code        | Explanation
        -------------------|------------
        `ok`               | There was no problem retrieving or assigning a resource.
        `not_found`        | The resource was not found.
        `assigned`         | The resource was successfully assigned.
        `already_assigned` | The resource was already assigned.
        `service_down`     | There was a problem retrieving or assigning a resource. Please try again.
    - name: Projects
      description: |-
        Projects allow you to organize your resources into groups that fit the way
        you work. You can group resources (like Droplets, Spaces, load balancers,
        domains, and floating IPs) in ways that align with the applications
        you host on DigitalOcean.
    - name: Regions
      description: Provides information about DigitalOcean data center regions.
    - name: Reserved IP Actions
      description: |-
        As of 16 June 2022, we have renamed the [Floating IP](https://docs.digitalocean.com/reference/api/api-reference/#tag/Floating-IPs)
        product to Reserved IPs. The Reserved IP product's endpoints function the exact
        same way as Floating IPs. The only difference is the name change throughout the
        URLs and fields. For example, the `floating_ips` field is now the `reserved_ips` field.
        The Floating IP endpoints will remain active until fall 2023 before being
        permanently deprecated.

        With the exception of the [Projects API](https://docs.digitalocean.com/reference/api/api-reference/#tag/Projects),
        we will reflect this change as an additional field in the responses across the API
        where the `floating_ip` field is used. For example, the Droplet metadata response
        will contain the field `reserved_ips` in addition to the `floating_ips` field.
        Floating IPs retrieved using the Projects API will retain the original name.

        Reserved IP actions are commands that can be given to a DigitalOcean
        reserved IP. These requests are made on the actions endpoint of a specific
        reserved IP.

        An action object is returned. These objects hold the current status of the
        requested action.
    - name: Reserved IPs
      description: |-
        As of 16 June 2022, we have renamed the [Floating IP](https://docs.digitalocean.com/reference/api/api-reference/#tag/Floating-IPs)
        product to Reserved IPs. The Reserved IP product's endpoints function the exact
        same way as Floating IPs. The only difference is the name change throughout the
        URLs and fields. For example, the `floating_ips` field is now the `reserved_ips` field.
        The Floating IP endpoints will remain active until fall 2023 before being
        permanently deprecated.

        With the exception of the [Projects API](https://docs.digitalocean.com/reference/api/api-reference/#tag/Projects),
        we will reflect this change as an additional field in the responses across the API
        where the `floating_ip` field is used. For example, the Droplet metadata response
        will contain the field `reserved_ips` in addition to the `floating_ips` field.
        Floating IPs retrieved using the Projects API will retain the original name.

        DigitalOcean Reserved IPs are publicly-accessible static IP addresses that can be
        mapped to one of your Droplets. They can be used to create highly available
        setups or other configurations requiring movable addresses.

        Reserved IPs are bound to a specific region.
    - name: Sizes
      description: |-
        The sizes objects represent different packages of hardware resources that
        can be used for Droplets. When a Droplet is created, a size must be
        selected so that the correct resources can be allocated.

        Each size represents a plan that bundles together specific sets of
        resources. This includes the amount of RAM, the number of virtual CPUs,
        disk space, and transfer. The size object also includes the pricing
        details and the regions that the size is available in.
    - name: Snapshots
      description: |-
        [Snapshots](https://www.digitalocean.com/docs/images/snapshots/) are saved
        instances of a Droplet or a block storage volume, which is reflected in
        the `resource_type` attribute. In order to avoid problems with compressing
        filesystems, each defines a `min_disk_size` attribute which is the minimum
        size of the Droplet or volume disk when creating a new resource from the
        saved snapshot.

        To interact with snapshots, you will generally send requests to the
        snapshots endpoint at `/v2/snapshots`.
    - name: SSH Keys
      description: Manage SSH keys available on your account.
    - name: Tags
      description: |-
        A tag is a label that can be applied to a resource (currently Droplets,
        Images, Volumes, Volume Snapshots, and Database clusters) in order to
        better organize or facilitate the lookups and actions on it.

        Tags have two attributes: a user defined `name` attribute and an embedded
        `resources` attribute with information about resources that have been tagged.
    - name: Uptime
      description: |-
        [DigitalOcean Uptime Checks](https://docs.digitalocean.com/products/uptime/) provide the ability to monitor your endpoints from around the world, and alert you when they're slow, unavailable, or SSL certificates are expiring.
        To interact with Uptime, you will generally send requests to the Uptime endpoint at `/v2/uptime/`.
    - name: VPCs
      description: |-
        [VPCs (virtual private clouds)](https://www.digitalocean.com/docs/networking/vpc/)
        allow you to create virtual networks containing resources that can
        communicate with each other in full isolation using private IP addresses.

        By sending requests to the `/v2/vpcs` endpoint, you can create, configure,
        list, and delete custom VPCs as well as retrieve information about the
        resources assigned to them.
