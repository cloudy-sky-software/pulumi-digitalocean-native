{
    "name": "digitalocean-native",
    "displayName": "DigitalOcean",
    "description": "A Pulumi package for creating and managing DigitalOcean resources.",
    "keywords": [
        "pulumi",
        "digitalocean-native",
        "category/cloud",
        "kind/native"
    ],
    "homepage": "https://cloudysky.software",
    "license": "Apache-2.0",
    "repository": "https://github.com/cloudy-sky-software/pulumi-digitalocean-native",
    "pluginDownloadURL": "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
    "publisher": "Cloudy Sky Software",
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "namespaces": {
                "": "Provider",
                "1-clicks/v2": "OneClicksV2",
                "account/v2": "AccountV2",
                "actions/v2": "ActionsV2",
                "apps/v2": "AppsV2",
                "cdn/v2": "CdnV2",
                "certificates/v2": "CertificatesV2",
                "customers/v2": "CustomersV2",
                "databases/v2": "DatabasesV2",
                "digitalocean-native": "DigitalOceanNative",
                "domains/v2": "DomainsV2",
                "droplets/v2": "DropletsV2",
                "firewalls/v2": "FirewallsV2",
                "floating_ips/v2": "FloatingIpsV2",
                "functions/v2": "FunctionsV2",
                "images/v2": "ImagesV2",
                "kubernetes/v2": "KubernetesV2",
                "load_balancers/v2": "LoadBalancersV2",
                "monitoring/v2": "MonitoringV2",
                "projects/v2": "ProjectsV2",
                "regions/v2": "RegionsV2",
                "registry/v2": "RegistryV2",
                "reports/v2": "ReportsV2",
                "reserved_ips/v2": "ReservedIpsV2",
                "sizes/v2": "SizesV2",
                "snapshots/v2": "SnapshotsV2",
                "tags/v2": "TagsV2",
                "uptime/v2": "UptimeV2",
                "volumes/v2": "VolumesV2",
                "vpcs/v2": "VpcsV2"
            },
            "rootNamespace": "Pulumi"
        },
        "go": {
            "importBasePath": "github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn"
        },
        "nodejs": {
            "packageName": "@cloudyskysoftware/pulumi-digitalocean-native",
            "moduleToPackage": {
                "1-clicks/v2": "oneclicks/v2"
            }
        },
        "python": {
            "packageName": "pulumi_digitalocean-native",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "The API key",
                "language": {
                    "csharp": {
                        "name": "ApiKey"
                    }
                },
                "secret": true
            }
        }
    },
    "types": {
        "digitalocean-native:1-clicks/v2:ListOneClicksProperties": {
            "properties": {
                "_1Clicks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:1-clicks/v2:OneClicks"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:1-clicks/v2:OneClicks": {
            "properties": {
                "slug": {
                    "type": "string",
                    "description": "The slug identifier for the 1-Click application."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the 1-Click application."
                }
            },
            "type": "object",
            "required": [
                "slug",
                "type"
            ]
        },
        "digitalocean-native:account/v2:Account": {
            "properties": {
                "dropletLimit": {
                    "type": "integer",
                    "description": "The total number of Droplets current user or team may have active at one time."
                },
                "email": {
                    "type": "string",
                    "description": "The email address used by the current user to register for DigitalOcean."
                },
                "emailVerified": {
                    "type": "boolean",
                    "description": "If true, the user has verified their account via email. False otherwise.",
                    "default": false
                },
                "floatingIpLimit": {
                    "type": "integer",
                    "description": "The total number of Floating IPs the current user or team may have."
                },
                "name": {
                    "type": "string",
                    "description": "The display name for the current user."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:account/v2:AccountStatus",
                    "description": "This value is one of \"active\", \"warning\" or \"locked\".",
                    "default": "active"
                },
                "statusMessage": {
                    "type": "string",
                    "description": "A human-readable message giving more details about the status of the account."
                },
                "team": {
                    "$ref": "#/types/digitalocean-native:account/v2:AccountTeamProperties",
                    "description": "When authorized in a team context, includes information about the current team."
                },
                "uuid": {
                    "type": "string",
                    "description": "The unique universal identifier for the current user."
                }
            },
            "type": "object",
            "required": [
                "dropletLimit",
                "email",
                "emailVerified",
                "floatingIpLimit",
                "status",
                "statusMessage",
                "uuid"
            ]
        },
        "digitalocean-native:account/v2:AccountStatus": {
            "description": "This value is one of \"active\", \"warning\" or \"locked\".",
            "type": "string",
            "enum": [
                {
                    "name": "Active",
                    "value": "active"
                },
                {
                    "name": "Warning",
                    "value": "warning"
                },
                {
                    "name": "Locked",
                    "value": "locked"
                }
            ]
        },
        "digitalocean-native:account/v2:AccountTeamProperties": {
            "description": "When authorized in a team context, includes information about the current team.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name for the current team."
                },
                "uuid": {
                    "type": "string",
                    "description": "The unique universal identifier for the current team."
                }
            },
            "type": "object"
        },
        "digitalocean-native:account/v2:GetAccountProperties": {
            "properties": {
                "account": {
                    "$ref": "#/types/digitalocean-native:account/v2:Account"
                }
            },
            "type": "object"
        },
        "digitalocean-native:account/v2:GetSshKeysProperties": {
            "properties": {
                "sshKey": {
                    "$ref": "#/types/digitalocean-native:account/v2:SshKeys"
                }
            },
            "type": "object"
        },
        "digitalocean-native:account/v2:ListSshKeys": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:account/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:account/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "sshKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:account/v2:SshKeys"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:account/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:account/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:account/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:account/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:account/v2:SshKeys": {
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "A unique identifier that differentiates this key from other keys using  a format that SSH recognizes. The fingerprint is created when the key is added to your account."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identification number for this key. Can be used to embed a  specific SSH key into a Droplet."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable display name for this key, used to easily identify the SSH keys when they are displayed."
                },
                "publicKey": {
                    "type": "string",
                    "description": "The entire public key string that was uploaded. Embedded into the root user's `authorized_keys` file if you include this key during Droplet creation."
                }
            },
            "type": "object",
            "required": [
                "name",
                "publicKey"
            ]
        },
        "digitalocean-native:actions/v2:Action": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:actions/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:actions/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:actions/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:actions/v2:ActionRegionSlug": {
            "type": "object"
        },
        "digitalocean-native:actions/v2:ActionStatus": {
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "type": "string",
            "enum": [
                {
                    "name": "InProgress",
                    "value": "in-progress"
                },
                {
                    "name": "Completed",
                    "value": "completed"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:actions/v2:GetActionsProperties": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:actions/v2:Action"
                }
            },
            "type": "object"
        },
        "digitalocean-native:actions/v2:ListActions": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:actions/v2:Action"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:actions/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:actions/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:actions/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:actions/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:actions/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:actions/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:actions/v2:Region": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:apps/v2:App": {
            "description": "An application's configuration and status.",
            "properties": {
                "activeDeployment": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeployment"
                },
                "createdAt": {
                    "type": "string"
                },
                "defaultIngress": {
                    "type": "string"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDomain"
                    }
                },
                "id": {
                    "type": "string"
                },
                "inProgressDeployment": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeployment"
                },
                "lastDeploymentCreatedAt": {
                    "type": "string"
                },
                "liveDomain": {
                    "type": "string"
                },
                "liveUrl": {
                    "type": "string"
                },
                "liveUrlBase": {
                    "type": "string"
                },
                "ownerUuid": {
                    "type": "string"
                },
                "pendingDeployment": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppPendingDeployment"
                },
                "pinnedDeployment": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppPinnedDeployment"
                },
                "projectId": {
                    "type": "string"
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsRegion"
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                },
                "tierSlug": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "spec"
            ]
        },
        "digitalocean-native:apps/v2:AppAlert": {
            "properties": {
                "componentName": {
                    "type": "string"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "phase": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertPhase",
                    "default": "UNKNOWN"
                },
                "progress": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertProgress"
                },
                "slackWebhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSlackWebhook"
                    }
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSpec"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppAlertPhase": {
            "type": "string",
            "enum": [
                {
                    "name": "Unknown",
                    "value": "UNKNOWN"
                },
                {
                    "name": "Pending",
                    "value": "PENDING"
                },
                {
                    "name": "Configuring",
                    "value": "CONFIGURING"
                },
                {
                    "name": "Active",
                    "value": "ACTIVE"
                },
                {
                    "name": "Error",
                    "value": "ERROR"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppAlertProgress": {
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppAlertProgressStep"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppAlertProgressStep": {
            "properties": {
                "endedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertProgressStepReason"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertProgressStepStatus",
                    "default": "UNKNOWN"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppAlertProgressStepReason": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppAlertProgressStepStatus": {
            "type": "string",
            "enum": [
                {
                    "name": "Unknown",
                    "value": "UNKNOWN"
                },
                {
                    "name": "Pending",
                    "value": "PENDING"
                },
                {
                    "name": "Running",
                    "value": "RUNNING"
                },
                {
                    "name": "Error",
                    "value": "ERROR"
                },
                {
                    "name": "Success",
                    "value": "SUCCESS"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppAlertSlackWebhook": {
            "properties": {
                "channel": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppAlertSpec": {
            "properties": {
                "disabled": {
                    "type": "boolean",
                    "description": "Is the alert disabled?"
                },
                "operator": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSpecOperator",
                    "default": "UNSPECIFIED_OPERATOR"
                },
                "rule": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSpecRule",
                    "default": "UNSPECIFIED_RULE"
                },
                "value": {
                    "type": "number",
                    "description": "Threshold value for alert"
                },
                "window": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSpecWindow",
                    "default": "UNSPECIFIED_WINDOW"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppAlertSpecOperator": {
            "type": "string",
            "enum": [
                {
                    "name": "UnspecifiedOperator",
                    "value": "UNSPECIFIED_OPERATOR"
                },
                {
                    "name": "GreaterThan",
                    "value": "GREATER_THAN"
                },
                {
                    "name": "LessThan",
                    "value": "LESS_THAN"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppAlertSpecRule": {
            "type": "string",
            "enum": [
                {
                    "name": "UnspecifiedRule",
                    "value": "UNSPECIFIED_RULE"
                },
                {
                    "name": "CpuUtilization",
                    "value": "CPU_UTILIZATION"
                },
                {
                    "name": "MemUtilization",
                    "value": "MEM_UTILIZATION"
                },
                {
                    "name": "RestartCount",
                    "value": "RESTART_COUNT"
                },
                {
                    "name": "DeploymentFailed",
                    "value": "DEPLOYMENT_FAILED"
                },
                {
                    "name": "DeploymentLive",
                    "value": "DEPLOYMENT_LIVE"
                },
                {
                    "name": "DomainFailed",
                    "value": "DOMAIN_FAILED"
                },
                {
                    "name": "DomainLive",
                    "value": "DOMAIN_LIVE"
                },
                {
                    "name": "FunctionsActivationCount",
                    "value": "FUNCTIONS_ACTIVATION_COUNT"
                },
                {
                    "name": "FunctionsAverageDurationMs",
                    "value": "FUNCTIONS_AVERAGE_DURATION_MS"
                },
                {
                    "name": "FunctionsErrorRatePerMinute",
                    "value": "FUNCTIONS_ERROR_RATE_PER_MINUTE"
                },
                {
                    "name": "FunctionsAverageWaitTimeMs",
                    "value": "FUNCTIONS_AVERAGE_WAIT_TIME_MS"
                },
                {
                    "name": "FunctionsErrorCount",
                    "value": "FUNCTIONS_ERROR_COUNT"
                },
                {
                    "name": "FunctionsGbRatePerSecond",
                    "value": "FUNCTIONS_GB_RATE_PER_SECOND"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppAlertSpecWindow": {
            "type": "string",
            "enum": [
                {
                    "name": "UnspecifiedWindow",
                    "value": "UNSPECIFIED_WINDOW"
                },
                {
                    "name": "FiveMinutes",
                    "value": "FIVE_MINUTES"
                },
                {
                    "name": "TenMinutes",
                    "value": "TEN_MINUTES"
                },
                {
                    "name": "ThirtyMinutes",
                    "value": "THIRTY_MINUTES"
                },
                {
                    "name": "OneHour",
                    "value": "ONE_HOUR"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppComponentInstanceBaseInstanceSizeSlug": {
            "description": "The instance size to use for this component. Default: `basic-xxs`",
            "type": "string",
            "enum": [
                {
                    "name": "BasicXxs",
                    "value": "basic-xxs"
                },
                {
                    "name": "BasicXs",
                    "value": "basic-xs"
                },
                {
                    "name": "BasicS",
                    "value": "basic-s"
                },
                {
                    "name": "BasicM",
                    "value": "basic-m"
                },
                {
                    "name": "ProfessionalXs",
                    "value": "professional-xs"
                },
                {
                    "name": "ProfessionalS",
                    "value": "professional-s"
                },
                {
                    "name": "ProfessionalM",
                    "value": "professional-m"
                },
                {
                    "name": "Professional1l",
                    "value": "professional-1l"
                },
                {
                    "name": "ProfessionalL",
                    "value": "professional-l"
                },
                {
                    "name": "ProfessionalXl",
                    "value": "professional-xl"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppDatabaseSpec": {
            "properties": {
                "clusterName": {
                    "type": "string",
                    "description": "The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned."
                },
                "dbName": {
                    "type": "string",
                    "description": "The name of the MySQL or PostgreSQL database to configure."
                },
                "dbUser": {
                    "type": "string",
                    "description": "The name of the MySQL or PostgreSQL user to configure."
                },
                "engine": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppDatabaseSpecEngine",
                    "description": "- MYSQL: MySQL\n- PG: PostgreSQL\n- REDIS: Redis",
                    "default": "UNSET"
                },
                "name": {
                    "type": "string",
                    "description": "The name. Must be unique across all components within the same app."
                },
                "production": {
                    "type": "boolean",
                    "description": "Whether this is a production or dev database."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the database engine"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:apps/v2:AppDatabaseSpecEngine": {
            "description": "- MYSQL: MySQL\n- PG: PostgreSQL\n- REDIS: Redis",
            "type": "string",
            "enum": [
                {
                    "name": "Unset",
                    "value": "UNSET"
                },
                {
                    "name": "Mysql",
                    "value": "MYSQL"
                },
                {
                    "name": "Pg",
                    "value": "PG"
                },
                {
                    "name": "Redis",
                    "value": "REDIS"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppDomainSpec": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The hostname for the domain"
                },
                "minimumTlsVersion": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppDomainSpecMinimumTlsVersion",
                    "description": "The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `\"1.2\"` or `\"1.3\"`."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppDomainSpecType",
                    "description": "- DEFAULT: The default `.ondigitalocean.app` domain assigned to this app\n- PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.\n- ALIAS: A non-primary domain",
                    "default": "UNSPECIFIED"
                },
                "wildcard": {
                    "type": "boolean",
                    "description": "Indicates whether the domain includes all sub-domains, in addition to the given domain"
                },
                "zone": {
                    "type": "string",
                    "description": "Optional. If the domain uses DigitalOcean DNS and you would like App\nPlatform to automatically manage it for you, set this to the name of the\ndomain on your account.\n\nFor example, If the domain you are adding is `app.domain.com`, the zone\ncould be `domain.com`."
                }
            },
            "type": "object",
            "required": [
                "domain"
            ]
        },
        "digitalocean-native:apps/v2:AppDomainSpecMinimumTlsVersion": {
            "description": "The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `\"1.2\"` or `\"1.3\"`.",
            "type": "string",
            "enum": [
                {
                    "name": "12",
                    "value": "1.2"
                },
                {
                    "name": "13",
                    "value": "1.3"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppDomainSpecType": {
            "description": "- DEFAULT: The default `.ondigitalocean.app` domain assigned to this app\n- PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.\n- ALIAS: A non-primary domain",
            "type": "string",
            "enum": [
                {
                    "name": "Unspecified",
                    "value": "UNSPECIFIED"
                },
                {
                    "name": "Default",
                    "value": "DEFAULT"
                },
                {
                    "name": "Primary",
                    "value": "PRIMARY"
                },
                {
                    "name": "Alias",
                    "value": "ALIAS"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppDomainValidation": {
            "properties": {
                "txtName": {
                    "type": "string"
                },
                "txtValue": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppFunctionsSpec": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSpec"
                    }
                },
                "cors": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsCorsPolicy"
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppVariableDefinition"
                    },
                    "description": "A list of environment variables made available to the component."
                },
                "git": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitSourceSpec"
                },
                "github": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGithubSourceSpec"
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitlabSourceSpec"
                },
                "logDestinations": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationDefinition"
                },
                "name": {
                    "type": "string",
                    "description": "The name. Must be unique across all components within the same app."
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppRouteSpec"
                    },
                    "description": "A list of HTTP routes that should be routed to this component."
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo."
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:apps/v2:AppIngressSpec": {
            "description": "Specification for app ingress configurations.",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppIngressSpecRule"
                    },
                    "description": "Rules for configuring HTTP ingress for component routes, CORS, rewrites, and redirects."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppIngressSpecRule": {
            "properties": {
                "component": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppIngressSpecRuleRoutingComponent",
                    "description": "The component to route to. Only one of `component` or `redirect` may be set."
                },
                "cors": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsCorsPolicy"
                },
                "match": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppIngressSpecRuleMatch",
                    "description": "The match configuration for the rule."
                },
                "redirect": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppIngressSpecRuleRoutingRedirect",
                    "description": "The redirect configuration for the rule. Only one of `component` or `redirect` may be set."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppIngressSpecRuleMatch": {
            "description": "The match configuration for the rule.",
            "properties": {
                "path": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppIngressSpecRuleStringMatch",
                    "description": "The path to match on."
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "digitalocean-native:apps/v2:AppIngressSpecRuleRoutingComponent": {
            "description": "The component to route to. Only one of `component` or `redirect` may be set.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the component to route to."
                },
                "preservePathPrefix": {
                    "type": "string",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`. Note: this is not applicable for Functions Components and is mutually exclusive with `rewrite`."
                },
                "rewrite": {
                    "type": "string",
                    "description": "An optional field that will rewrite the path of the component to be what is specified here. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If you specified the rewrite to be `/v1/`, requests to `/api/list` would be rewritten to `/v1/list`. Note: this is mutually exclusive with `preserve_path_prefix`."
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:apps/v2:AppIngressSpecRuleRoutingRedirect": {
            "description": "The redirect configuration for the rule. Only one of `component` or `redirect` may be set.",
            "properties": {
                "authority": {
                    "type": "string",
                    "description": "The authority/host to redirect to. This can be a hostname or IP address. Note: use `port` to set the port."
                },
                "port": {
                    "type": "integer",
                    "description": "The port to redirect to."
                },
                "redirectCode": {
                    "type": "integer",
                    "description": "The redirect code to use. Defaults to `302`. Supported values are 300, 301, 302, 303, 304, 307, 308."
                },
                "scheme": {
                    "type": "string",
                    "description": "The scheme to redirect to. Supported values are `http` or `https`. Default: `https`."
                },
                "uri": {
                    "type": "string",
                    "description": "An optional URI path to redirect to. Note: if this is specified the whole URI of the original request will be overwritten to this value, irrespective of the original request URI being matched."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppIngressSpecRuleStringMatch": {
            "description": "The path to match on.",
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "Prefix-based match. For example, `/api` will match `/api`, `/api/`, and any nested paths such as `/api/v1/endpoint`."
                }
            },
            "type": "object",
            "required": [
                "prefix"
            ]
        },
        "digitalocean-native:apps/v2:AppJobSpec": {
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source."
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks."
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/)."
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppVariableDefinition"
                    },
                    "description": "A list of environment variables made available to the component."
                },
                "git": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitSourceSpec"
                },
                "github": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGithubSourceSpec"
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitlabSourceSpec"
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsImageSourceSpec"
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to. Default: 1",
                    "default": 1
                },
                "instanceSizeSlug": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppComponentInstanceBaseInstanceSizeSlug",
                    "description": "The instance size to use for this component. Default: `basic-xxs`",
                    "default": "basic-xxs"
                },
                "kind": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppJobSpecPropertiesKind",
                    "description": "- UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.\n- PRE_DEPLOY: Indicates a job that runs before an app deployment.\n- POST_DEPLOY: Indicates a job that runs after an app deployment.\n- FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.",
                    "default": "UNSPECIFIED"
                },
                "logDestinations": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationDefinition"
                },
                "name": {
                    "type": "string",
                    "description": "The name. Must be unique across all components within the same app."
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default."
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppJobSpecPropertiesKind": {
            "description": "- UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.\n- PRE_DEPLOY: Indicates a job that runs before an app deployment.\n- POST_DEPLOY: Indicates a job that runs after an app deployment.\n- FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.",
            "type": "string",
            "enum": [
                {
                    "name": "Unspecified",
                    "value": "UNSPECIFIED"
                },
                {
                    "name": "PreDeploy",
                    "value": "PRE_DEPLOY"
                },
                {
                    "name": "PostDeploy",
                    "value": "POST_DEPLOY"
                },
                {
                    "name": "FailedDeploy",
                    "value": "FAILED_DEPLOY"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppLogDestinationDatadogSpec": {
            "description": "DataDog configuration.",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "Datadog API key."
                },
                "endpoint": {
                    "type": "string",
                    "description": "Datadog HTTP log intake endpoint."
                }
            },
            "type": "object",
            "required": [
                "apiKey"
            ]
        },
        "digitalocean-native:apps/v2:AppLogDestinationDefinition": {
            "properties": {
                "datadog": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationDatadogSpec",
                    "description": "DataDog configuration."
                },
                "logtail": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationLogtailSpec",
                    "description": "Logtail configuration."
                },
                "name": {
                    "type": "string"
                },
                "papertrail": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationPapertrailSpec",
                    "description": "Papertrail configuration."
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:apps/v2:AppLogDestinationLogtailSpec": {
            "description": "Logtail configuration.",
            "properties": {
                "token": {
                    "type": "string",
                    "description": "Logtail token."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppLogDestinationPapertrailSpec": {
            "description": "Papertrail configuration.",
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Papertrail syslog endpoint."
                }
            },
            "type": "object",
            "required": [
                "endpoint"
            ]
        },
        "digitalocean-native:apps/v2:AppMetricsBandwidthUsage": {
            "properties": {
                "appBandwidthUsage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppMetricsBandwidthUsageDetails"
                    },
                    "description": "A list of bandwidth usage details by app."
                },
                "date": {
                    "type": "string",
                    "description": "The date for the metrics data."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppMetricsBandwidthUsageDetails": {
            "description": "Bandwidth usage for an app.",
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The ID of the app."
                },
                "bandwidthBytes": {
                    "type": "string",
                    "description": "The used bandwidth amount in bytes."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppPendingDeployment": {
            "properties": {
                "cause": {
                    "type": "string"
                },
                "clonedFrom": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentFunctions"
                    }
                },
                "id": {
                    "type": "string"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentJob"
                    }
                },
                "phase": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentPhase",
                    "default": "UNKNOWN"
                },
                "phaseLastUpdatedAt": {
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentProgress"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentService"
                    }
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                },
                "staticSites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentStaticSite"
                    }
                },
                "tierSlug": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentWorker"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppPinnedDeployment": {
            "properties": {
                "cause": {
                    "type": "string"
                },
                "clonedFrom": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentFunctions"
                    }
                },
                "id": {
                    "type": "string"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentJob"
                    }
                },
                "phase": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentPhase",
                    "default": "UNKNOWN"
                },
                "phaseLastUpdatedAt": {
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentProgress"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentService"
                    }
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                },
                "staticSites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentStaticSite"
                    }
                },
                "tierSlug": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentWorker"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppResponse": {
            "properties": {
                "app": {
                    "$ref": "#/types/digitalocean-native:apps/v2:App",
                    "description": "An application's configuration and status."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppRollbackValidationCondition": {
            "properties": {
                "code": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppRollbackValidationConditionCode",
                    "description": "A code identifier that represents the failing condition.\n\nFailing conditions:\n  - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.\n  - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.\n  - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.\n  - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.\n  - `database_config_conflict` - indicates that the deployment's database config is different than the current config.\n  - `region_conflict` - indicates that the deployment's region differs from the current app region.\n  \nWarning conditions:\n  - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.\n  - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "A human-readable message describing the failing condition."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppRollbackValidationConditionCode": {
            "description": "A code identifier that represents the failing condition.\n\nFailing conditions:\n  - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.\n  - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.\n  - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.\n  - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.\n  - `database_config_conflict` - indicates that the deployment's database config is different than the current config.\n  - `region_conflict` - indicates that the deployment's region differs from the current app region.\n  \nWarning conditions:\n  - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.\n  - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.\n",
            "type": "string",
            "enum": [
                {
                    "name": "IncompatiblePhase",
                    "value": "incompatible_phase"
                },
                {
                    "name": "IncompatibleResult",
                    "value": "incompatible_result"
                },
                {
                    "name": "ExceededRevisionLimit",
                    "value": "exceeded_revision_limit"
                },
                {
                    "name": "AppPinned",
                    "value": "app_pinned"
                },
                {
                    "name": "DatabaseConfigConflict",
                    "value": "database_config_conflict"
                },
                {
                    "name": "RegionConflict",
                    "value": "region_conflict"
                },
                {
                    "name": "StaticSiteRequiresRebuild",
                    "value": "static_site_requires_rebuild"
                },
                {
                    "name": "ImageSourceMissingDigest",
                    "value": "image_source_missing_digest"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppRouteSpec": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "An HTTP path prefix. Paths must start with / and must be unique across all components within an app."
                },
                "preservePathPrefix": {
                    "type": "boolean",
                    "description": "An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppServiceSpec": {
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source."
                },
                "cors": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsCorsPolicy"
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks."
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/)."
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppVariableDefinition"
                    },
                    "description": "A list of environment variables made available to the component."
                },
                "git": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitSourceSpec"
                },
                "github": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGithubSourceSpec"
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitlabSourceSpec"
                },
                "healthCheck": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppServiceSpecHealthCheck"
                },
                "httpPort": {
                    "type": "integer",
                    "description": "The internal port on which this service's run command will listen. Default: 8080\nIf there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field."
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsImageSourceSpec"
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to. Default: 1",
                    "default": 1
                },
                "instanceSizeSlug": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppComponentInstanceBaseInstanceSizeSlug",
                    "description": "The instance size to use for this component. Default: `basic-xxs`",
                    "default": "basic-xxs"
                },
                "internalPorts": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "The ports on which this service will listen for internal traffic."
                },
                "logDestinations": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationDefinition"
                },
                "name": {
                    "type": "string",
                    "description": "The name. Must be unique across all components within the same app."
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppRouteSpec"
                    },
                    "description": "A list of HTTP routes that should be routed to this component."
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default."
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppServiceSpecHealthCheck": {
            "properties": {
                "failureThreshold": {
                    "type": "integer",
                    "description": "The number of failed health checks before considered unhealthy."
                },
                "httpPath": {
                    "type": "string",
                    "description": "The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead."
                },
                "initialDelaySeconds": {
                    "type": "integer",
                    "description": "The number of seconds to wait before beginning health checks."
                },
                "periodSeconds": {
                    "type": "integer",
                    "description": "The number of seconds to wait between health checks."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port."
                },
                "successThreshold": {
                    "type": "integer",
                    "description": "The number of successful health checks before considered healthy."
                },
                "timeoutSeconds": {
                    "type": "integer",
                    "description": "The number of seconds after which the check times out."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppSpec": {
            "description": "The desired configuration of an application.",
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppDatabaseSpec"
                    },
                    "description": "Database instances which can provide persistence to workloads within the\napplication."
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppDomainSpec"
                    },
                    "description": "A set of hostnames where the application will be available."
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppFunctionsSpec"
                    },
                    "description": "Workloads which expose publicly-accessible HTTP services via Functions Components."
                },
                "ingress": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppIngressSpec",
                    "description": "Specification for app ingress configurations."
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppJobSpec"
                    },
                    "description": "Pre and post deployment workloads which do not expose publicly-accessible HTTP routes."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the app. Must be unique across all apps in the same account."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpecRegion",
                    "description": "The slug form of the geographical origin of the app. Default: `nearest available`"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppServiceSpec"
                    },
                    "description": "Workloads which expose publicly-accessible HTTP services."
                },
                "staticSites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppStaticSiteSpec"
                    },
                    "description": "Content which can be rendered to static web assets."
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppWorkerSpec"
                    },
                    "description": "Workloads which do not expose publicly-accessible HTTP services."
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:apps/v2:AppSpecRegion": {
            "description": "The slug form of the geographical origin of the app. Default: `nearest available`",
            "type": "string",
            "enum": [
                {
                    "name": "Ams",
                    "value": "ams"
                },
                {
                    "name": "Nyc",
                    "value": "nyc"
                },
                {
                    "name": "Fra",
                    "value": "fra"
                },
                {
                    "name": "Sfo",
                    "value": "sfo"
                },
                {
                    "name": "Sgp",
                    "value": "sgp"
                },
                {
                    "name": "Blr",
                    "value": "blr"
                },
                {
                    "name": "Tor",
                    "value": "tor"
                },
                {
                    "name": "Lon",
                    "value": "lon"
                },
                {
                    "name": "Syd",
                    "value": "syd"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppStaticSiteSpec": {
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source."
                },
                "catchallDocument": {
                    "type": "string",
                    "description": "The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set."
                },
                "cors": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsCorsPolicy"
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks."
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/)."
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppVariableDefinition"
                    },
                    "description": "A list of environment variables made available to the component."
                },
                "errorDocument": {
                    "type": "string",
                    "description": "The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one.",
                    "default": "404.html"
                },
                "git": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitSourceSpec"
                },
                "github": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGithubSourceSpec"
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitlabSourceSpec"
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsImageSourceSpec"
                },
                "indexDocument": {
                    "type": "string",
                    "description": "The name of the index document to use when serving this static site. Default: index.html",
                    "default": "index.html"
                },
                "logDestinations": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationDefinition"
                },
                "name": {
                    "type": "string",
                    "description": "The name. Must be unique across all components within the same app."
                },
                "outputDir": {
                    "type": "string",
                    "description": "An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`."
                },
                "routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppRouteSpec"
                    },
                    "description": "A list of HTTP routes that should be routed to this component."
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default."
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppVariableDefinition": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The variable name"
                },
                "scope": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppVariableDefinitionScope",
                    "description": "- RUN_TIME: Made available only at run-time\n- BUILD_TIME: Made available only at build-time\n- RUN_AND_BUILD_TIME: Made available at both build and run-time",
                    "default": "RUN_AND_BUILD_TIME"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppVariableDefinitionType",
                    "description": "- GENERAL: A plain-text environment variable\n- SECRET: A secret encrypted environment variable",
                    "default": "GENERAL"
                },
                "value": {
                    "type": "string",
                    "description": "The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used."
                }
            },
            "type": "object",
            "required": [
                "key"
            ]
        },
        "digitalocean-native:apps/v2:AppVariableDefinitionScope": {
            "description": "- RUN_TIME: Made available only at run-time\n- BUILD_TIME: Made available only at build-time\n- RUN_AND_BUILD_TIME: Made available at both build and run-time",
            "type": "string",
            "enum": [
                {
                    "name": "Unset",
                    "value": "UNSET"
                },
                {
                    "name": "RunTime",
                    "value": "RUN_TIME"
                },
                {
                    "name": "BuildTime",
                    "value": "BUILD_TIME"
                },
                {
                    "name": "RunAndBuildTime",
                    "value": "RUN_AND_BUILD_TIME"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppVariableDefinitionType": {
            "description": "- GENERAL: A plain-text environment variable\n- SECRET: A secret encrypted environment variable",
            "type": "string",
            "enum": [
                {
                    "name": "General",
                    "value": "GENERAL"
                },
                {
                    "name": "Secret",
                    "value": "SECRET"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppWorkerSpec": {
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "An optional build command to run while building this component from source."
                },
                "dockerfilePath": {
                    "type": "string",
                    "description": "The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks."
                },
                "environmentSlug": {
                    "type": "string",
                    "description": "An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/)."
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppVariableDefinition"
                    },
                    "description": "A list of environment variables made available to the component."
                },
                "git": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitSourceSpec"
                },
                "github": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGithubSourceSpec"
                },
                "gitlab": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsGitlabSourceSpec"
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsImageSourceSpec"
                },
                "instanceCount": {
                    "type": "integer",
                    "description": "The amount of instances that this component should be scaled to. Default: 1",
                    "default": 1
                },
                "instanceSizeSlug": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppComponentInstanceBaseInstanceSizeSlug",
                    "description": "The instance size to use for this component. Default: `basic-xxs`",
                    "default": "basic-xxs"
                },
                "logDestinations": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppLogDestinationDefinition"
                },
                "name": {
                    "type": "string",
                    "description": "The name. Must be unique across all components within the same app."
                },
                "runCommand": {
                    "type": "string",
                    "description": "An optional run command to override the component's default."
                },
                "sourceDir": {
                    "type": "string",
                    "description": "An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsCorsPolicy": {
            "properties": {
                "allowCredentials": {
                    "type": "boolean",
                    "description": "Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is include. This configures the `Access-Control-Allow-Credentials` header."
                },
                "allowHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header."
                },
                "allowMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header."
                },
                "allowOrigins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsStringMatch"
                    },
                    "description": "The set of allowed CORS origins."
                },
                "exposeHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header."
                },
                "maxAge": {
                    "type": "string",
                    "description": "An optional duration specifying how long browsers can cache the results of a preflight request. This configures the `Access-Control-Max-Age` header."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeployment": {
            "properties": {
                "cause": {
                    "type": "string"
                },
                "clonedFrom": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentFunctions"
                    }
                },
                "id": {
                    "type": "string"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentJob"
                    }
                },
                "phase": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentPhase",
                    "default": "UNKNOWN"
                },
                "phaseLastUpdatedAt": {
                    "type": "string"
                },
                "progress": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentProgress"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentService"
                    }
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                },
                "staticSites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentStaticSite"
                    }
                },
                "tierSlug": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "workers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentWorker"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentFunctions": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace where the functions are deployed."
                },
                "sourceCommitHash": {
                    "type": "string",
                    "description": "The commit hash of the repository that was used to build this functions component."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentJob": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "sourceCommitHash": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentPhase": {
            "type": "string",
            "enum": [
                {
                    "name": "Unknown",
                    "value": "UNKNOWN"
                },
                {
                    "name": "PendingBuild",
                    "value": "PENDING_BUILD"
                },
                {
                    "name": "Building",
                    "value": "BUILDING"
                },
                {
                    "name": "PendingDeploy",
                    "value": "PENDING_DEPLOY"
                },
                {
                    "name": "Deploying",
                    "value": "DEPLOYING"
                },
                {
                    "name": "Active",
                    "value": "ACTIVE"
                },
                {
                    "name": "Superseded",
                    "value": "SUPERSEDED"
                },
                {
                    "name": "Error",
                    "value": "ERROR"
                },
                {
                    "name": "Canceled",
                    "value": "CANCELED"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppsDeploymentProgress": {
            "properties": {
                "errorSteps": {
                    "type": "integer"
                },
                "pendingSteps": {
                    "type": "integer"
                },
                "runningSteps": {
                    "type": "integer"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentProgressStep"
                    }
                },
                "successSteps": {
                    "type": "integer"
                },
                "summarySteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentProgressStep"
                    }
                },
                "totalSteps": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentProgressStep": {
            "properties": {
                "componentName": {
                    "type": "string"
                },
                "endedAt": {
                    "type": "string"
                },
                "messageBase": {
                    "type": "string",
                    "description": "The base of a human-readable description of the step intended to be combined with the component name for presentation. For example:\n\n`message_base` = \"Building service\"\n`component_name` = \"api\""
                },
                "name": {
                    "type": "string"
                },
                "reason": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentProgressStepReason"
                },
                "startedAt": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentProgressStepStatus",
                    "default": "UNKNOWN"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentProgressStepReason": {
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentProgressStepStatus": {
            "type": "string",
            "enum": [
                {
                    "name": "Unknown",
                    "value": "UNKNOWN"
                },
                {
                    "name": "Pending",
                    "value": "PENDING"
                },
                {
                    "name": "Running",
                    "value": "RUNNING"
                },
                {
                    "name": "Error",
                    "value": "ERROR"
                },
                {
                    "name": "Success",
                    "value": "SUCCESS"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppsDeploymentResponse": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeployment"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentService": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "sourceCommitHash": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentStaticSite": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "sourceCommitHash": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentWorker": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "sourceCommitHash": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDeploymentsResponse": {
            "properties": {
                "deployments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeployment"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:apps/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:apps/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:apps/v2:AppsDomain": {
            "properties": {
                "certificateExpiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "phase": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDomainPhase",
                    "default": "UNKNOWN"
                },
                "progress": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDomainProgress"
                },
                "rotateValidationRecords": {
                    "type": "boolean"
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppDomainSpec"
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppDomainValidation"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsDomainPhase": {
            "type": "string",
            "enum": [
                {
                    "name": "Unknown",
                    "value": "UNKNOWN"
                },
                {
                    "name": "Pending",
                    "value": "PENDING"
                },
                {
                    "name": "Configuring",
                    "value": "CONFIGURING"
                },
                {
                    "name": "Active",
                    "value": "ACTIVE"
                },
                {
                    "name": "Error",
                    "value": "ERROR"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppsDomainProgress": {
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsGetInstanceSizeResponse": {
            "properties": {
                "instanceSize": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsInstanceSize"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsGetLogsResponse": {
            "properties": {
                "historicUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "liveUrl": {
                    "type": "string",
                    "description": "A URL of the real-time live logs. This URL may use either the `https://` or `wss://` protocols and will keep pushing live logs as they become available."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsGetTierResponse": {
            "properties": {
                "tier": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsTier"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsGitSourceSpec": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use"
                },
                "repoCloneUrl": {
                    "type": "string",
                    "description": "The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsGithubSourceSpec": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use"
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo"
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsGitlabSourceSpec": {
            "properties": {
                "branch": {
                    "type": "string",
                    "description": "The name of the branch to use"
                },
                "deployOnPush": {
                    "type": "boolean",
                    "description": "Whether to automatically deploy new commits made to the repo"
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsImageSourceSpec": {
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "The registry name. Must be left empty for the `DOCR` registry type."
                },
                "registryType": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsImageSourceSpecRegistryType",
                    "description": "- DOCKER_HUB: The DockerHub container registry type.\n- DOCR: The DigitalOcean container registry type."
                },
                "repository": {
                    "type": "string",
                    "description": "The repository name."
                },
                "tag": {
                    "type": "string",
                    "description": "The repository tag. Defaults to `latest` if not provided.",
                    "default": "latest"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsImageSourceSpecRegistryType": {
            "description": "- DOCKER_HUB: The DockerHub container registry type.\n- DOCR: The DigitalOcean container registry type.",
            "type": "string",
            "enum": [
                {
                    "name": "DockerHub",
                    "value": "DOCKER_HUB"
                },
                {
                    "name": "Docr",
                    "value": "DOCR"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppsInstanceSize": {
            "properties": {
                "cpuType": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsInstanceSizeCpuType",
                    "default": "UNSPECIFIED"
                },
                "cpus": {
                    "type": "string"
                },
                "memoryBytes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tierDowngradeTo": {
                    "type": "string"
                },
                "tierSlug": {
                    "type": "string"
                },
                "tierUpgradeTo": {
                    "type": "string"
                },
                "usdPerMonth": {
                    "type": "string"
                },
                "usdPerSecond": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsInstanceSizeCpuType": {
            "type": "string",
            "enum": [
                {
                    "name": "Unspecified",
                    "value": "UNSPECIFIED"
                },
                {
                    "name": "Shared",
                    "value": "SHARED"
                },
                {
                    "name": "Dedicated",
                    "value": "DEDICATED"
                }
            ]
        },
        "digitalocean-native:apps/v2:AppsListAlertsResponse": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppAlert"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsListInstanceSizesResponse": {
            "properties": {
                "discountPercent": {
                    "type": "number"
                },
                "instanceSizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsInstanceSize"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsListRegionsResponse": {
            "properties": {
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsRegion"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsListTiersResponse": {
            "properties": {
                "tiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsTier"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsRegion": {
            "properties": {
                "continent": {
                    "type": "string"
                },
                "dataCenters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default": {
                    "type": "boolean",
                    "description": "Whether or not the region is presented as the default."
                },
                "disabled": {
                    "type": "boolean"
                },
                "flag": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsResponse": {
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:App"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:apps/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:apps/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:apps/v2:AppsStringMatch": {
            "properties": {
                "exact": {
                    "type": "string",
                    "description": "Exact string match. Only 1 of `exact`, `prefix`, or `regex` must be set."
                },
                "prefix": {
                    "type": "string",
                    "description": "Prefix-based match. Only 1 of `exact`, `prefix`, or `regex` must be set."
                },
                "regex": {
                    "type": "string",
                    "description": "RE2 style regex-based match. Only 1 of `exact`, `prefix`, or `regex` must be set. For more information about RE2 syntax, see: https://github.com/google/re2/wiki/Syntax"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:AppsTier": {
            "properties": {
                "buildSeconds": {
                    "type": "string"
                },
                "egressBandwidthBytes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "storageBytes": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:Error": {
            "properties": {
                "code": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppRollbackValidationConditionCode",
                    "description": "A code identifier that represents the failing condition.\n\nFailing conditions:\n  - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.\n  - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.\n  - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.\n  - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.\n  - `database_config_conflict` - indicates that the deployment's database config is different than the current config.\n  - `region_conflict` - indicates that the deployment's region differs from the current app region.\n  \nWarning conditions:\n  - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.\n  - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.\n"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string",
                    "description": "A human-readable message describing the failing condition."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:apps/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:apps/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:cdn/v2:CdnEndpoint": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the CDN endpoint was created."
                },
                "customDomain": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint."
                },
                "endpoint": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) from which the CDN-backed content is served."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a CDN endpoint."
                },
                "origin": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space."
                },
                "ttl": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:CdnEndpointTtl",
                    "description": "The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.",
                    "default": 3600
                }
            },
            "type": "object",
            "required": [
                "origin"
            ]
        },
        "digitalocean-native:cdn/v2:CdnEndpointTtl": {
            "description": "The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.",
            "type": "integer",
            "enum": [
                {
                    "name": "%!d(float64=60)",
                    "value": 60
                },
                {
                    "name": "%!d(float64=600)",
                    "value": 600
                },
                {
                    "name": "%!d(float64=3600)",
                    "value": 3600
                },
                {
                    "name": "%!d(float64=86400)",
                    "value": 86400
                },
                {
                    "name": "%!d(float64=604800)",
                    "value": 604800
                }
            ]
        },
        "digitalocean-native:cdn/v2:GetCdnEndpointProperties": {
            "properties": {
                "endpoint": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:CdnEndpoint"
                }
            },
            "type": "object"
        },
        "digitalocean-native:cdn/v2:ListCdnEndpoints": {
            "properties": {
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:cdn/v2:CdnEndpoint"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:cdn/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:cdn/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:cdn/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:cdn/v2:Ttl": {
            "description": "The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.",
            "type": "integer",
            "enum": [
                {
                    "name": "%!d(float64=60)",
                    "value": 60
                },
                {
                    "name": "%!d(float64=600)",
                    "value": 600
                },
                {
                    "name": "%!d(float64=3600)",
                    "value": 3600
                },
                {
                    "name": "%!d(float64=86400)",
                    "value": 86400
                },
                {
                    "name": "%!d(float64=604800)",
                    "value": 604800
                }
            ]
        },
        "digitalocean-native:certificates/v2:Certificate": {
            "properties": {
                "_sha1Fingerprint": {
                    "type": "string",
                    "description": "A unique identifier generated from the SHA-1 fingerprint of the certificate."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the certificate was created."
                },
                "dnsNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of fully qualified domain names (FQDNs) for which the certificate was issued."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a certificate."
                },
                "name": {
                    "type": "string",
                    "description": "A unique human-readable name referring to a certificate."
                },
                "notAfter": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents the certificate's expiration date."
                },
                "state": {
                    "$ref": "#/types/digitalocean-native:certificates/v2:CertificateState",
                    "description": "A string representing the current state of the certificate. It may be `pending`, `verified`, or `error`."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:certificates/v2:CertificateType",
                    "description": "A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt."
                }
            },
            "type": "object"
        },
        "digitalocean-native:certificates/v2:CertificateState": {
            "description": "A string representing the current state of the certificate. It may be `pending`, `verified`, or `error`.",
            "type": "string",
            "enum": [
                {
                    "name": "Pending",
                    "value": "pending"
                },
                {
                    "name": "Verified",
                    "value": "verified"
                },
                {
                    "name": "Error",
                    "value": "error"
                }
            ]
        },
        "digitalocean-native:certificates/v2:CertificateType": {
            "description": "A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt.",
            "type": "string",
            "enum": [
                {
                    "name": "Custom",
                    "value": "custom"
                },
                {
                    "name": "LetsEncrypt",
                    "value": "lets_encrypt"
                }
            ]
        },
        "digitalocean-native:certificates/v2:GetCertificatesProperties": {
            "properties": {
                "certificate": {
                    "$ref": "#/types/digitalocean-native:certificates/v2:Certificate"
                }
            },
            "type": "object"
        },
        "digitalocean-native:certificates/v2:ListCertificates": {
            "properties": {
                "certificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:certificates/v2:Certificate"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:certificates/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:certificates/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:certificates/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:certificates/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:certificates/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:certificates/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:customers/v2:Balance": {
            "properties": {
                "accountBalance": {
                    "type": "string",
                    "description": "Current balance of the customer's most recent billing activity.  Does not reflect `month_to_date_usage`."
                },
                "generatedAt": {
                    "type": "string",
                    "description": "The time at which balances were most recently generated."
                },
                "monthToDateBalance": {
                    "type": "string",
                    "description": "Balance as of the `generated_at` time.  This value includes the `account_balance` and `month_to_date_usage`."
                },
                "monthToDateUsage": {
                    "type": "string",
                    "description": "Amount used in the current billing period as of the `generated_at` time."
                }
            },
            "type": "object"
        },
        "digitalocean-native:customers/v2:BillingHistory": {
            "properties": {
                "amount": {
                    "type": "string",
                    "description": "Amount of the billing history entry."
                },
                "date": {
                    "type": "string",
                    "description": "Time the billing history entry occurred."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the billing history entry."
                },
                "invoiceId": {
                    "type": "string",
                    "description": "ID of the invoice associated with the billing history entry, if  applicable."
                },
                "invoiceUuid": {
                    "type": "string",
                    "description": "UUID of the invoice associated with the billing history entry, if  applicable."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:customers/v2:BillingHistoryType",
                    "description": "Type of billing history entry."
                }
            },
            "type": "object"
        },
        "digitalocean-native:customers/v2:BillingHistoryType": {
            "description": "Type of billing history entry.",
            "type": "string",
            "enum": [
                {
                    "name": "ACHFailure",
                    "value": "ACHFailure"
                },
                {
                    "name": "Adjustment",
                    "value": "Adjustment"
                },
                {
                    "name": "AttemptFailed",
                    "value": "AttemptFailed"
                },
                {
                    "name": "Chargeback",
                    "value": "Chargeback"
                },
                {
                    "name": "Credit",
                    "value": "Credit"
                },
                {
                    "name": "CreditExpiration",
                    "value": "CreditExpiration"
                },
                {
                    "name": "Invoice",
                    "value": "Invoice"
                },
                {
                    "name": "Payment",
                    "value": "Payment"
                },
                {
                    "name": "Refund",
                    "value": "Refund"
                },
                {
                    "name": "Reversal",
                    "value": "Reversal"
                }
            ]
        },
        "digitalocean-native:customers/v2:InvoicePreview": {
            "description": "The invoice preview.",
            "properties": {
                "amount": {
                    "type": "string",
                    "description": "Total amount of the invoice, in USD.  This will reflect month-to-date usage in the invoice preview."
                },
                "invoicePeriod": {
                    "type": "string",
                    "description": "Billing period of usage for which the invoice is issued, in `YYYY-MM`  format."
                },
                "invoiceUuid": {
                    "type": "string",
                    "description": "The UUID of the invoice. The canonical reference for the invoice."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Time the invoice was last updated.  This is only included with the invoice preview."
                }
            },
            "type": "object"
        },
        "digitalocean-native:customers/v2:ListBillingHistory": {
            "properties": {
                "billingHistory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:customers/v2:BillingHistory"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:customers/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:customers/v2:MetaProperties",
                    "description": "Information about the response itself."
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:customers/v2:ListInvoices": {
            "properties": {
                "invoicePreview": {
                    "$ref": "#/types/digitalocean-native:customers/v2:InvoicePreview",
                    "description": "The invoice preview."
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:customers/v2:InvoicePreview"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:customers/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:customers/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:customers/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:customers/v2:MetaProperties": {
            "description": "Information about the response itself.",
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:customers/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:customers/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:customers/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:Backup": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format at which the backup was created."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The size of the database backup in GBs."
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "sizeGigabytes"
            ]
        },
        "digitalocean-native:databases/v2:Ca": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "base64 encoding of the certificate used to secure database connections"
                }
            },
            "type": "object",
            "required": [
                "certificate"
            ]
        },
        "digitalocean-native:databases/v2:Connection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:ConnectionPool": {
            "properties": {
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:ConnectionPoolConnection"
                },
                "db": {
                    "type": "string",
                    "description": "The database for use with the connection pool."
                },
                "mode": {
                    "type": "string",
                    "description": "The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement."
                },
                "name": {
                    "type": "string",
                    "description": "A unique name for the connection pool. Must be between 3 and 60 characters."
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:ConnectionPoolPrivateConnection"
                },
                "size": {
                    "type": "integer",
                    "description": "The desired size of the PGBouncer connection pool. The maximum allowed size is determined by the size of the cluster's primary node. 25 backend server connections are allowed for every 1GB of RAM. Three are reserved for maintenance. For example, a primary node with 1 GB of RAM allows for a maximum of 22 backend server connections while one with 4 GB would allow for 97. Note that these are shared across all connection pools in a cluster."
                },
                "user": {
                    "type": "string",
                    "description": "The name of the user for use with the connection pool. When excluded, all sessions connect to the database as the inbound user."
                }
            },
            "type": "object",
            "required": [
                "db",
                "mode",
                "name",
                "size"
            ]
        },
        "digitalocean-native:databases/v2:ConnectionPoolConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:ConnectionPoolPrivateConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:ConnectionPools": {
            "properties": {
                "pools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ConnectionPool"
                    },
                    "description": "An array of connection pool objects."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:Database": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the database."
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:databases/v2:DatabaseBackup": {
            "properties": {
                "backupCreatedAt": {
                    "type": "string",
                    "description": "The timestamp of an existing database cluster backup in ISO8601 combined date and time format. The most recent backup will be used if excluded."
                },
                "databaseName": {
                    "type": "string",
                    "description": "The name of an existing database cluster from which the backup will be restored."
                }
            },
            "type": "object",
            "required": [
                "databaseName"
            ]
        },
        "digitalocean-native:databases/v2:DatabaseCluster": {
            "properties": {
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterConnection"
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the database cluster was created."
                },
                "dbNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of databases created in the database cluster."
                },
                "engine": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterEngine",
                    "description": "A slug representing the database engine used for the cluster. The possible values are: \"pg\" for PostgreSQL, \"mysql\" for MySQL, \"redis\" for Redis, and \"mongodb\" for MongoDB."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a database cluster."
                },
                "maintenanceWindow": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterMaintenanceWindow"
                },
                "name": {
                    "type": "string",
                    "description": "A unique, human-readable name referring to a database cluster."
                },
                "numNodes": {
                    "type": "integer",
                    "description": "The number of nodes in the database cluster."
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterPrivateConnection"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the database cluster will be assigned. If excluded, the cluster when creating a new database cluster, it will be assigned to your account's default VPC for the region."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project that the database cluster is assigned to. If excluded when creating a new database cluster, it will be assigned to your default project."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the database cluster is located."
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:FirewallRule"
                    }
                },
                "semanticVersion": {
                    "type": "string",
                    "description": "A string representing the semantic version of the database engine in use for the cluster."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier representing the size of the nodes in the database cluster."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterStatus",
                    "description": "A string representing the current status of the database cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags that have been applied to the database cluster."
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUser"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "A string representing the version of the database engine in use for the cluster."
                },
                "versionEndOfAvailability": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be available for creating new clusters. If null, the version does not have an end of availability timeline."
                },
                "versionEndOfLife": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be supported. If null, the version does not have an end of life timeline."
                }
            },
            "type": "object",
            "required": [
                "engine",
                "name",
                "numNodes",
                "region",
                "size"
            ]
        },
        "digitalocean-native:databases/v2:DatabaseClusterConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:DatabaseClusterEngine": {
            "description": "A slug representing the database engine used for the cluster. The possible values are: \"pg\" for PostgreSQL, \"mysql\" for MySQL, \"redis\" for Redis, and \"mongodb\" for MongoDB.",
            "type": "string",
            "enum": [
                {
                    "name": "Pg",
                    "value": "pg"
                },
                {
                    "name": "Mysql",
                    "value": "mysql"
                },
                {
                    "name": "Redis",
                    "value": "redis"
                },
                {
                    "name": "Mongodb",
                    "value": "mongodb"
                }
            ]
        },
        "digitalocean-native:databases/v2:DatabaseClusterMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "The day of the week on which to apply maintenance updates."
                },
                "description": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings, each containing information about a pending maintenance update."
                },
                "hour": {
                    "type": "string",
                    "description": "The hour in UTC at which maintenance updates will be applied in 24 hour format."
                },
                "pending": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether any maintenance is scheduled to be performed in the next window."
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour"
            ]
        },
        "digitalocean-native:databases/v2:DatabaseClusterPrivateConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:DatabaseClusterStatus": {
            "description": "A string representing the current status of the database cluster.",
            "type": "string",
            "enum": [
                {
                    "name": "Creating",
                    "value": "creating"
                },
                {
                    "name": "Online",
                    "value": "online"
                },
                {
                    "name": "Resizing",
                    "value": "resizing"
                },
                {
                    "name": "Migrating",
                    "value": "migrating"
                },
                {
                    "name": "Forking",
                    "value": "forking"
                }
            ]
        },
        "digitalocean-native:databases/v2:DatabaseConfig": {
            "properties": {
                "config": {
                    "oneOf": [
                        {
                            "$ref": "#/types/digitalocean-native:databases/v2:Mysql"
                        },
                        {
                            "$ref": "#/types/digitalocean-native:databases/v2:Postgres"
                        },
                        {
                            "$ref": "#/types/digitalocean-native:databases/v2:Redis"
                        }
                    ],
                    "discriminator": {
                        "propertyName": "type",
                        "mapping": {
                            "mysql": "#/types/digitalocean-native:databases/v2:Mysql",
                            "postgres": "#/types/digitalocean-native:databases/v2:Postgres",
                            "redis": "#/types/digitalocean-native:databases/v2:Redis"
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:DatabaseLayoutOption": {
            "properties": {
                "numNodes": {
                    "type": "integer"
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of objects containing the slugs available with various node counts"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:DatabaseReplica": {
            "properties": {
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaConnection"
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the database cluster was created."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a database replica."
                },
                "name": {
                    "type": "string",
                    "description": "The name to give the read-only replicating"
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaPrivateConnection"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account's default VPC for the region."
                },
                "region": {
                    "type": "string",
                    "description": "A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster."
                },
                "size": {
                    "type": "string",
                    "description": "A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaStatus",
                    "description": "A string representing the current status of the database cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags."
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:databases/v2:DatabaseReplicaConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:DatabaseReplicaPrivateConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:DatabaseReplicaStatus": {
            "description": "A string representing the current status of the database cluster.",
            "type": "string",
            "enum": [
                {
                    "name": "Creating",
                    "value": "creating"
                },
                {
                    "name": "Online",
                    "value": "online"
                },
                {
                    "name": "Resizing",
                    "value": "resizing"
                },
                {
                    "name": "Migrating",
                    "value": "migrating"
                },
                {
                    "name": "Forking",
                    "value": "forking"
                }
            ]
        },
        "digitalocean-native:databases/v2:DatabaseUser": {
            "properties": {
                "mysqlSettings": {
                    "$ref": "#/types/digitalocean-native:databases/v2:MysqlSettings"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a database user."
                },
                "password": {
                    "type": "string",
                    "description": "A randomly generated password for the database user."
                },
                "role": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUserRole",
                    "description": "A string representing the database user's role. The value will be either\n\"primary\" or \"normal\".\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "digitalocean-native:databases/v2:DatabaseUserRole": {
            "description": "A string representing the database user's role. The value will be either\n\"primary\" or \"normal\".\n",
            "type": "string",
            "enum": [
                {
                    "name": "Primary",
                    "value": "primary"
                },
                {
                    "name": "Normal",
                    "value": "normal"
                }
            ]
        },
        "digitalocean-native:databases/v2:DatabaseVersionAvailability": {
            "properties": {
                "endOfAvailability": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be available for creating new clusters. If null, the version does not have an end of availability timeline."
                },
                "endOfLife": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be supported. If null, the version does not have an end of life timeline."
                },
                "version": {
                    "type": "string",
                    "description": "The engine version."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:EvictionPolicy": {
            "description": "A string specifying the desired eviction policy for the Redis cluster.\n\n- `noeviction`: Don't evict any data, returns error when memory limit is reached.\n- `allkeys_lru:` Evict any key, least recently used (LRU) first.\n- `allkeys_random`: Evict keys in a random order.\n- `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.\n- `volatile_random`: Evict keys with expiration only in a random order.\n- `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first.",
            "type": "string",
            "enum": [
                {
                    "name": "Noeviction",
                    "value": "noeviction"
                },
                {
                    "name": "AllkeysLru",
                    "value": "allkeys_lru"
                },
                {
                    "name": "AllkeysRandom",
                    "value": "allkeys_random"
                },
                {
                    "name": "VolatileLru",
                    "value": "volatile_lru"
                },
                {
                    "name": "VolatileRandom",
                    "value": "volatile_random"
                },
                {
                    "name": "VolatileTtl",
                    "value": "volatile_ttl"
                }
            ]
        },
        "digitalocean-native:databases/v2:FirewallRule": {
            "properties": {
                "clusterUuid": {
                    "type": "string",
                    "description": "A unique ID for the database cluster to which the rule is applied."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the firewall rule was created."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:databases/v2:FirewallRuleType",
                    "description": "The type of resource that the firewall rule allows to access the database cluster."
                },
                "uuid": {
                    "type": "string",
                    "description": "A unique ID for the firewall rule itself."
                },
                "value": {
                    "type": "string",
                    "description": "The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster."
                }
            },
            "type": "object",
            "required": [
                "type",
                "value"
            ]
        },
        "digitalocean-native:databases/v2:FirewallRuleType": {
            "description": "The type of resource that the firewall rule allows to access the database cluster.",
            "type": "string",
            "enum": [
                {
                    "name": "Droplet",
                    "value": "droplet"
                },
                {
                    "name": "K8s",
                    "value": "k8s"
                },
                {
                    "name": "IpAddr",
                    "value": "ip_addr"
                },
                {
                    "name": "Tag",
                    "value": "tag"
                },
                {
                    "name": "App",
                    "value": "app"
                }
            ]
        },
        "digitalocean-native:databases/v2:GetDatabasesCaProperties": {
            "properties": {
                "ca": {
                    "$ref": "#/types/digitalocean-native:databases/v2:Ca"
                }
            },
            "type": "object",
            "required": [
                "ca"
            ]
        },
        "digitalocean-native:databases/v2:GetDatabasesClusterProperties": {
            "properties": {
                "database": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseCluster"
                }
            },
            "type": "object",
            "required": [
                "database"
            ]
        },
        "digitalocean-native:databases/v2:GetDatabasesConnectionPoolProperties": {
            "properties": {
                "pool": {
                    "$ref": "#/types/digitalocean-native:databases/v2:ConnectionPool"
                }
            },
            "type": "object",
            "required": [
                "pool"
            ]
        },
        "digitalocean-native:databases/v2:GetDatabasesEvictionPolicyProperties": {
            "properties": {
                "evictionPolicy": {
                    "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesEvictionPolicyPropertiesEvictionPolicy",
                    "description": "A string specifying the desired eviction policy for the Redis cluster.\n\n- `noeviction`: Don't evict any data, returns error when memory limit is reached.\n- `allkeys_lru:` Evict any key, least recently used (LRU) first.\n- `allkeys_random`: Evict keys in a random order.\n- `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.\n- `volatile_random`: Evict keys with expiration only in a random order.\n- `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first."
                }
            },
            "type": "object",
            "required": [
                "evictionPolicy"
            ]
        },
        "digitalocean-native:databases/v2:GetDatabasesEvictionPolicyPropertiesEvictionPolicy": {
            "description": "A string specifying the desired eviction policy for the Redis cluster.\n\n- `noeviction`: Don't evict any data, returns error when memory limit is reached.\n- `allkeys_lru:` Evict any key, least recently used (LRU) first.\n- `allkeys_random`: Evict keys in a random order.\n- `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.\n- `volatile_random`: Evict keys with expiration only in a random order.\n- `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first.",
            "type": "string",
            "enum": [
                {
                    "name": "Noeviction",
                    "value": "noeviction"
                },
                {
                    "name": "AllkeysLru",
                    "value": "allkeys_lru"
                },
                {
                    "name": "AllkeysRandom",
                    "value": "allkeys_random"
                },
                {
                    "name": "VolatileLru",
                    "value": "volatile_lru"
                },
                {
                    "name": "VolatileRandom",
                    "value": "volatile_random"
                },
                {
                    "name": "VolatileTtl",
                    "value": "volatile_ttl"
                }
            ]
        },
        "digitalocean-native:databases/v2:GetDatabasesProperties": {
            "properties": {
                "db": {
                    "$ref": "#/types/digitalocean-native:databases/v2:Database"
                }
            },
            "type": "object",
            "required": [
                "db"
            ]
        },
        "digitalocean-native:databases/v2:GetDatabasesReplicaProperties": {
            "properties": {
                "replica": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplica"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:GetDatabasesUserProperties": {
            "properties": {
                "user": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUser"
                }
            },
            "type": "object",
            "required": [
                "user"
            ]
        },
        "digitalocean-native:databases/v2:ListDatabasesBackupsProperties": {
            "properties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:Backup"
                    }
                }
            },
            "type": "object",
            "required": [
                "backups"
            ]
        },
        "digitalocean-native:databases/v2:ListDatabasesClustersProperties": {
            "properties": {
                "databases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseCluster"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:ListDatabasesFirewallRulesProperties": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:FirewallRule"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:ListDatabasesProperties": {
            "properties": {
                "dbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:Database"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:ListDatabasesReplicasProperties": {
            "properties": {
                "replicas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplica"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:ListDatabasesUsersProperties": {
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUser"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:Mysql": {
            "properties": {
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service starts. New backup only starts if previous backup has already completed."
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of the backup hour when backup for the service starts. New backup  only starts if previous backup has already completed."
                },
                "binlogRetentionPeriod": {
                    "type": "number",
                    "description": "The minimum amount of time, in seconds, to keep binlog entries before deletion.  This may be extended for services that require binlog entries for longer than the default, for example if using the MySQL Debezium Kafka connector."
                },
                "connectTimeout": {
                    "type": "integer",
                    "description": "The number of seconds that the mysqld server waits for a connect packet before responding with bad handshake."
                },
                "defaultTimeZone": {
                    "type": "string",
                    "description": "Default server time zone, in the form of an offset from UTC (from -12:00 to +12:00), a time zone name (EST), or 'SYSTEM' to use the MySQL server default."
                },
                "groupConcatMaxLen": {
                    "type": "integer",
                    "description": "The maximum permitted result length, in bytes, for the GROUP_CONCAT() function."
                },
                "informationSchemaStatsExpiry": {
                    "type": "integer",
                    "description": "The time, in seconds, before cached statistics expire."
                },
                "innodbFtMinTokenSize": {
                    "type": "integer",
                    "description": "The minimum length of words that an InnoDB FULLTEXT index stores."
                },
                "innodbFtServerStopwordTable": {
                    "type": "string",
                    "description": "The InnoDB FULLTEXT index stopword list for all InnoDB tables."
                },
                "innodbLockWaitTimeout": {
                    "type": "integer",
                    "description": "The time, in seconds, that an InnoDB transaction waits for a row lock. before giving up."
                },
                "innodbLogBufferSize": {
                    "type": "integer",
                    "description": "The size of the buffer, in bytes, that InnoDB uses to write to the log files. on disk."
                },
                "innodbOnlineAlterLogMaxSize": {
                    "type": "integer",
                    "description": "The upper limit, in bytes, of the size of the temporary log files used during online DDL operations for InnoDB tables."
                },
                "innodbPrintAllDeadlocks": {
                    "type": "boolean",
                    "description": "When enabled, records information about all deadlocks in InnoDB user transactions  in the error log. Disabled by default."
                },
                "innodbRollbackOnTimeout": {
                    "type": "boolean",
                    "description": "When enabled, transaction timeouts cause InnoDB to abort and roll back the entire transaction."
                },
                "interactiveTimeout": {
                    "type": "integer",
                    "description": "The time, in seconds, the server waits for activity on an interactive. connection before closing it."
                },
                "internalTmpMemStorageEngine": {
                    "$ref": "#/types/digitalocean-native:databases/v2:MysqlInternalTmpMemStorageEngine",
                    "description": "The storage engine for in-memory internal temporary tables."
                },
                "longQueryTime": {
                    "type": "number",
                    "description": "The time, in seconds, for a query to take to execute before  being captured by slow_query_logs. Default is 10 seconds."
                },
                "maxAllowedPacket": {
                    "type": "integer",
                    "description": "The size of the largest message, in bytes, that can be received by the server. Default is 67108864 (64M)."
                },
                "maxHeapTableSize": {
                    "type": "integer",
                    "description": "The maximum size, in bytes, of internal in-memory tables. Also set tmp_table_size. Default is 16777216 (16M)"
                },
                "netReadTimeout": {
                    "type": "integer",
                    "description": "The time, in seconds, to wait for more data from an existing connection. aborting the read."
                },
                "netWriteTimeout": {
                    "type": "integer",
                    "description": "The number of seconds to wait for a block to be written to a connection before aborting the write."
                },
                "slowQueryLog": {
                    "type": "boolean",
                    "description": "When enabled, captures slow queries. When disabled, also truncates the mysql.slow_log table. Default is false."
                },
                "sortBufferSize": {
                    "type": "integer",
                    "description": "The sort buffer size, in bytes, for ORDER BY optimization. Default is 262144. (256K)."
                },
                "sqlMode": {
                    "type": "string",
                    "description": "Global SQL mode. If empty, uses MySQL server defaults. Must only include uppercase alphabetic characters, underscores, and commas."
                },
                "sqlRequirePrimaryKey": {
                    "type": "boolean",
                    "description": "Require primary key to be defined for new tables or old tables modified with ALTER TABLE and fail if missing. It is recommended to always have primary keys because various functionality may break if any large table is missing them."
                },
                "tmpTableSize": {
                    "type": "integer",
                    "description": "The maximum size, in bytes, of internal in-memory tables. Also set max_heap_table_size. Default is 16777216 (16M)."
                },
                "type": {
                    "type": "string",
                    "default": "mysql"
                },
                "waitTimeout": {
                    "type": "integer",
                    "description": "The number of seconds the server waits for activity on a noninteractive connection before closing it."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:MysqlInternalTmpMemStorageEngine": {
            "description": "The storage engine for in-memory internal temporary tables.",
            "type": "string",
            "enum": [
                {
                    "name": "TempTable",
                    "value": "TempTable"
                },
                {
                    "name": "Memory",
                    "value": "MEMORY"
                }
            ]
        },
        "digitalocean-native:databases/v2:MysqlSettings": {
            "properties": {
                "authPlugin": {
                    "$ref": "#/types/digitalocean-native:databases/v2:MysqlSettingsAuthPlugin",
                    "description": "A string specifying the authentication method to be used for connections\nto the MySQL user account. The valid values are `mysql_native_password`\nor `caching_sha2_password`. If excluded when creating a new user, the\ndefault for the version of MySQL in use will be used. As of MySQL 8.0, the\ndefault is `caching_sha2_password`.\n"
                }
            },
            "type": "object",
            "required": [
                "authPlugin"
            ]
        },
        "digitalocean-native:databases/v2:MysqlSettingsAuthPlugin": {
            "description": "A string specifying the authentication method to be used for connections\nto the MySQL user account. The valid values are `mysql_native_password`\nor `caching_sha2_password`. If excluded when creating a new user, the\ndefault for the version of MySQL in use will be used. As of MySQL 8.0, the\ndefault is `caching_sha2_password`.\n",
            "type": "string",
            "enum": [
                {
                    "name": "MysqlNativePassword",
                    "value": "mysql_native_password"
                },
                {
                    "name": "CachingSha2Password",
                    "value": "caching_sha2_password"
                }
            ]
        },
        "digitalocean-native:databases/v2:OnlineMigration": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The time the migration was initiated, in ISO 8601 format."
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the most recent migration."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:databases/v2:OnlineMigrationStatus",
                    "description": "The current status of the migration."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:OnlineMigrationStatus": {
            "description": "The current status of the migration.",
            "type": "string",
            "enum": [
                {
                    "name": "Running",
                    "value": "running"
                },
                {
                    "name": "Canceled",
                    "value": "canceled"
                },
                {
                    "name": "Error",
                    "value": "error"
                },
                {
                    "name": "Done",
                    "value": "done"
                }
            ]
        },
        "digitalocean-native:databases/v2:Options": {
            "properties": {
                "options": {
                    "$ref": "#/types/digitalocean-native:databases/v2:OptionsOptionsProperties",
                    "language": {
                        "csharp": {
                            "name": "OptionsValue"
                        }
                    }
                },
                "versionAvailability": {
                    "$ref": "#/types/digitalocean-native:databases/v2:OptionsVersionAvailabilityProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:OptionsOptionsProperties": {
            "properties": {
                "mongodb": {
                    "$ref": "#/types/digitalocean-native:databases/v2:OptionsOptionsPropertiesMongodb"
                },
                "mysql": {
                    "$ref": "#/types/digitalocean-native:databases/v2:OptionsOptionsPropertiesMysql"
                },
                "pg": {
                    "$ref": "#/types/digitalocean-native:databases/v2:OptionsOptionsPropertiesPg"
                },
                "redis": {
                    "$ref": "#/types/digitalocean-native:databases/v2:OptionsOptionsPropertiesRedis"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:OptionsOptionsPropertiesMongodb": {
            "properties": {
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseLayoutOption"
                    },
                    "description": "An array of objects, each indicating the node sizes (otherwise referred to as slugs) that are available with various numbers of nodes in the database cluster. Each slugs denotes the node's identifier, CPU, and RAM (in that order)."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:OptionsOptionsPropertiesMysql": {
            "properties": {
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseLayoutOption"
                    },
                    "description": "An array of objects, each indicating the node sizes (otherwise referred to as slugs) that are available with various numbers of nodes in the database cluster. Each slugs denotes the node's identifier, CPU, and RAM (in that order)."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:OptionsOptionsPropertiesPg": {
            "properties": {
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseLayoutOption"
                    },
                    "description": "An array of objects, each indicating the node sizes (otherwise referred to as slugs) that are available with various numbers of nodes in the database cluster. Each slugs denotes the node's identifier, CPU, and RAM (in that order)."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:OptionsOptionsPropertiesRedis": {
            "properties": {
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseLayoutOption"
                    },
                    "description": "An array of objects, each indicating the node sizes (otherwise referred to as slugs) that are available with various numbers of nodes in the database cluster. Each slugs denotes the node's identifier, CPU, and RAM (in that order)."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of available regions"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:OptionsVersionAvailabilityProperties": {
            "properties": {
                "mongodb": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseVersionAvailability"
                    },
                    "description": "An array of objects, each indicating the version end-of-life, end-of-availability for various database engines"
                },
                "mysql": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseVersionAvailability"
                    },
                    "description": "An array of objects, each indicating the version end-of-life, end-of-availability for various database engines"
                },
                "pg": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseVersionAvailability"
                    },
                    "description": "An array of objects, each indicating the version end-of-life, end-of-availability for various database engines"
                },
                "redis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseVersionAvailability"
                    },
                    "description": "An array of objects, each indicating the version end-of-life, end-of-availability for various database engines"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:Pgbouncer": {
            "description": "PGBouncer connection pooling settings",
            "properties": {
                "autodbIdleTimeout": {
                    "type": "integer",
                    "description": "If the automatically-created database pools have been unused this many seconds, they are freed. If 0, timeout is disabled."
                },
                "autodbMaxDbConnections": {
                    "type": "integer",
                    "description": "Only allows a maximum this many server connections per database (regardless of user). If 0, allows unlimited connections."
                },
                "autodbPoolMode": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PgbouncerAutodbPoolMode",
                    "description": "PGBouncer pool mode"
                },
                "autodbPoolSize": {
                    "type": "integer",
                    "description": "If non-zero, automatically creates a pool of that size per user when a pool doesn't exist."
                },
                "ignoreStartupParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:PgbouncerIgnoreStartupParametersItem"
                    },
                    "description": "List of parameters to ignore when given in startup packet."
                },
                "minPoolSize": {
                    "type": "integer",
                    "description": "If current server connections are below this number, adds more. Improves behavior when usual load comes suddenly back after period of total inactivity. The value is effectively capped at the pool size."
                },
                "serverIdleTimeout": {
                    "type": "integer",
                    "description": "Drops server connections if they have been idle more than this many seconds.  If 0, timeout is disabled. "
                },
                "serverLifetime": {
                    "type": "integer",
                    "description": "The pooler closes any unused server connection that has been connected longer than this amount of seconds."
                },
                "serverResetQueryAlways": {
                    "type": "boolean",
                    "description": "Run server_reset_query (DISCARD ALL) in all pooling modes."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:PgbouncerAutodbPoolMode": {
            "description": "PGBouncer pool mode",
            "type": "string",
            "enum": [
                {
                    "name": "Session",
                    "value": "session"
                },
                {
                    "name": "Transaction",
                    "value": "transaction"
                },
                {
                    "name": "Statement",
                    "value": "statement"
                }
            ]
        },
        "digitalocean-native:databases/v2:PgbouncerIgnoreStartupParametersItem": {
            "description": "Enum of parameters to ignore when given in startup packet.",
            "type": "string",
            "enum": [
                {
                    "name": "ExtraFloatDigits",
                    "value": "extra_float_digits"
                },
                {
                    "name": "SearchPath",
                    "value": "search_path"
                }
            ]
        },
        "digitalocean-native:databases/v2:Postgres": {
            "properties": {
                "autovacuumAnalyzeScaleFactor": {
                    "type": "number",
                    "description": "Specifies a fraction, in a decimal value, of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size)."
                },
                "autovacuumAnalyzeThreshold": {
                    "type": "integer",
                    "description": "Specifies the minimum number of inserted, updated, or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples."
                },
                "autovacuumFreezeMaxAge": {
                    "type": "integer",
                    "description": "Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted."
                },
                "autovacuumMaxWorkers": {
                    "type": "integer",
                    "description": "Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start."
                },
                "autovacuumNaptime": {
                    "type": "integer",
                    "description": "Specifies the minimum delay, in seconds, between autovacuum runs on any given database. The default is one minute."
                },
                "autovacuumVacuumCostDelay": {
                    "type": "integer",
                    "description": "Specifies the cost delay value, in milliseconds, that will be used in automatic VACUUM operations. If -1, uses the regular vacuum_cost_delay value, which is 20 milliseconds."
                },
                "autovacuumVacuumCostLimit": {
                    "type": "integer",
                    "description": "Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit value will be used."
                },
                "autovacuumVacuumScaleFactor": {
                    "type": "number",
                    "description": "Specifies a fraction, in a decimal value, of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size)."
                },
                "autovacuumVacuumThreshold": {
                    "type": "integer",
                    "description": "Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples."
                },
                "backupHour": {
                    "type": "integer",
                    "description": "The hour of day (in UTC) when backup for the service starts. New backup only starts if previous backup has already completed."
                },
                "backupMinute": {
                    "type": "integer",
                    "description": "The minute of the backup hour when backup for the service starts. New backup is only started if previous backup has already completed."
                },
                "bgwriterDelay": {
                    "type": "integer",
                    "description": "Specifies the delay, in milliseconds, between activity rounds for the background writer. Default is 200 ms."
                },
                "bgwriterFlushAfter": {
                    "type": "integer",
                    "description": "The amount of kilobytes that need to be written by the background writer before attempting to force the OS to issue these writes to underlying storage. Specified in kilobytes, default is 512.  Setting of 0 disables forced writeback."
                },
                "bgwriterLruMaxpages": {
                    "type": "integer",
                    "description": "The maximum number of buffers that the background writer can write. Setting this to zero disables background writing. Default is 100."
                },
                "bgwriterLruMultiplier": {
                    "type": "number",
                    "description": "The average recent need for new buffers is multiplied by bgwriter_lru_multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0."
                },
                "deadlockTimeout": {
                    "type": "integer",
                    "description": "The amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition."
                },
                "defaultToastCompression": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresDefaultToastCompression",
                    "description": "Specifies the default TOAST compression method for values of compressible columns (the default is lz4)."
                },
                "idleInTransactionSessionTimeout": {
                    "type": "integer",
                    "description": "Time out sessions with open transactions after this number of milliseconds"
                },
                "jit": {
                    "type": "boolean",
                    "description": "Activates, in a boolean, the system-wide use of Just-in-Time Compilation (JIT)."
                },
                "logAutovacuumMinDuration": {
                    "type": "integer",
                    "description": "Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions."
                },
                "logErrorVerbosity": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresLogErrorVerbosity",
                    "description": "Controls the amount of detail written in the server log for each message that is logged."
                },
                "logLinePrefix": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresLogLinePrefix",
                    "description": "Selects one of the available log-formats. These can support popular log analyzers like pgbadger, pganalyze, etc."
                },
                "logMinDurationStatement": {
                    "type": "integer",
                    "description": "Log statements that take more than this number of milliseconds to run. If -1, disables."
                },
                "maxFilesPerProcess": {
                    "type": "integer",
                    "description": "PostgreSQL maximum number of files that can be open per process."
                },
                "maxLocksPerTransaction": {
                    "type": "integer",
                    "description": "PostgreSQL maximum locks per transaction. Once increased, this parameter cannot be lowered from its set value."
                },
                "maxLogicalReplicationWorkers": {
                    "type": "integer",
                    "description": "PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers)."
                },
                "maxParallelWorkers": {
                    "type": "integer",
                    "description": "Sets the maximum number of workers that the system can support for parallel queries."
                },
                "maxParallelWorkersPerGather": {
                    "type": "integer",
                    "description": "Sets the maximum number of workers that can be started by a single Gather or Gather Merge node."
                },
                "maxPredLocksPerTransaction": {
                    "type": "integer",
                    "description": "PostgreSQL maximum predicate locks per transaction."
                },
                "maxPreparedTransactions": {
                    "type": "integer",
                    "description": "PostgreSQL maximum prepared transactions. Once increased, this parameter cannot be lowered from its set value."
                },
                "maxReplicationSlots": {
                    "type": "integer",
                    "description": "PostgreSQL maximum replication slots."
                },
                "maxStackDepth": {
                    "type": "integer",
                    "description": "Maximum depth of the stack in bytes."
                },
                "maxStandbyArchiveDelay": {
                    "type": "integer",
                    "description": "Max standby archive delay in milliseconds."
                },
                "maxStandbyStreamingDelay": {
                    "type": "integer",
                    "description": "Max standby streaming delay in milliseconds."
                },
                "maxWalSenders": {
                    "type": "integer",
                    "description": "PostgreSQL maximum WAL senders. Once increased, this parameter cannot be lowered from its set value."
                },
                "maxWorkerProcesses": {
                    "type": "integer",
                    "description": "Sets the maximum number of background processes that the system can support. Once increased, this parameter cannot be lowered from its set value."
                },
                "pgPartmanBgwInterval": {
                    "type": "integer",
                    "description": "Sets the time interval to run pg_partman's scheduled tasks."
                },
                "pgPartmanBgwRole": {
                    "type": "string",
                    "description": "Controls which role to use for pg_partman's scheduled background tasks. Must consist of alpha-numeric characters, dots, underscores, or dashes. May not start with dash or dot. Maximum of 64 characters."
                },
                "pgStatStatementsTrack": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresPgStatStatementsTrack",
                    "description": "Controls which statements are counted. Specify 'top' to track top-level statements (those issued directly by clients), 'all' to also track nested statements (such as statements invoked within functions), or 'none' to disable statement statistics collection. The default value is top."
                },
                "pgbouncer": {
                    "$ref": "#/types/digitalocean-native:databases/v2:Pgbouncer",
                    "description": "PGBouncer connection pooling settings"
                },
                "sharedBuffersPercentage": {
                    "type": "number",
                    "description": "Percentage of total RAM that the database server uses for shared memory buffers.  Valid range is 20-60 (float), which corresponds to 20% - 60%.  This setting adjusts the shared_buffers configuration value."
                },
                "statMonitorEnable": {
                    "type": "boolean",
                    "description": "Enable the pg_stat_monitor extension. \u003cb\u003eEnabling this extension will cause the cluster to be restarted.\u003c/b\u003e When this extension is enabled, pg_stat_statements results for utility commands are unreliable."
                },
                "synchronousReplication": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresSynchronousReplication",
                    "description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication."
                },
                "tempFileLimit": {
                    "type": "integer",
                    "description": "PostgreSQL temporary file limit in KiB. If -1, sets to unlimited."
                },
                "timescaledb": {
                    "$ref": "#/types/digitalocean-native:databases/v2:Timescaledb",
                    "description": "TimescaleDB extension configuration values"
                },
                "timezone": {
                    "type": "string",
                    "description": "PostgreSQL service timezone"
                },
                "trackActivityQuerySize": {
                    "type": "integer",
                    "description": "Specifies the number of bytes reserved to track the currently executing command for each active session."
                },
                "trackCommitTimestamp": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresTrackCommitTimestamp",
                    "description": "Record commit time of transactions."
                },
                "trackFunctions": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresTrackFunctions",
                    "description": "Enables tracking of function call counts and time used."
                },
                "trackIoTiming": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PostgresTrackIoTiming",
                    "description": "Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms."
                },
                "type": {
                    "type": "string",
                    "default": "postgres"
                },
                "walSenderTimeout": {
                    "type": "integer",
                    "description": "Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout. Must be either 0 or between 5000 and 10800000."
                },
                "walWriterDelay": {
                    "type": "integer",
                    "description": "WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance"
                },
                "workMem": {
                    "type": "integer",
                    "description": "The maximum amount of memory, in MB, used by a query operation (such as a sort or hash table) before writing to temporary disk files. Default is 1MB + 0.075% of total RAM (up to 32MB)."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:PostgresDefaultToastCompression": {
            "description": "Specifies the default TOAST compression method for values of compressible columns (the default is lz4).",
            "type": "string",
            "enum": [
                {
                    "name": "Lz4",
                    "value": "lz4"
                },
                {
                    "name": "Pglz",
                    "value": "pglz"
                }
            ]
        },
        "digitalocean-native:databases/v2:PostgresLogErrorVerbosity": {
            "description": "Controls the amount of detail written in the server log for each message that is logged.",
            "type": "string",
            "enum": [
                {
                    "name": "Terse",
                    "value": "TERSE"
                },
                {
                    "name": "Default",
                    "value": "DEFAULT"
                },
                {
                    "name": "Verbose",
                    "value": "VERBOSE"
                }
            ]
        },
        "digitalocean-native:databases/v2:PostgresLogLinePrefix": {
            "description": "Selects one of the available log-formats. These can support popular log analyzers like pgbadger, pganalyze, etc.",
            "type": "string",
            "enum": [
                {
                    "name": "Pidpuserudbdappaclienth",
                    "value": "pid=%p,user=%u,db=%d,app=%a,client=%h"
                },
                {
                    "name": "mpquserudbdappa",
                    "value": "%m [%p] %q[user=%u,db=%d,app=%a]"
                },
                {
                    "name": "tpl1Userudbdappaclienth",
                    "value": "%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h"
                }
            ]
        },
        "digitalocean-native:databases/v2:PostgresPgStatStatementsTrack": {
            "description": "Controls which statements are counted. Specify 'top' to track top-level statements (those issued directly by clients), 'all' to also track nested statements (such as statements invoked within functions), or 'none' to disable statement statistics collection. The default value is top.",
            "type": "string",
            "enum": [
                {
                    "name": "All",
                    "value": "all"
                },
                {
                    "name": "Top",
                    "value": "top"
                },
                {
                    "name": "None",
                    "value": "none"
                }
            ]
        },
        "digitalocean-native:databases/v2:PostgresSynchronousReplication": {
            "description": "Synchronous replication type. Note that the service plan also needs to support synchronous replication.",
            "type": "string",
            "enum": [
                {
                    "name": "Off",
                    "value": "off"
                },
                {
                    "name": "Quorum",
                    "value": "quorum"
                }
            ]
        },
        "digitalocean-native:databases/v2:PostgresTrackCommitTimestamp": {
            "description": "Record commit time of transactions.",
            "type": "string",
            "enum": [
                {
                    "name": "Off",
                    "value": "off"
                },
                {
                    "name": "On",
                    "value": "on"
                }
            ]
        },
        "digitalocean-native:databases/v2:PostgresTrackFunctions": {
            "description": "Enables tracking of function call counts and time used.",
            "type": "string",
            "enum": [
                {
                    "name": "All",
                    "value": "all"
                },
                {
                    "name": "Pl",
                    "value": "pl"
                },
                {
                    "name": "None",
                    "value": "none"
                }
            ]
        },
        "digitalocean-native:databases/v2:PostgresTrackIoTiming": {
            "description": "Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.",
            "type": "string",
            "enum": [
                {
                    "name": "Off",
                    "value": "off"
                },
                {
                    "name": "On",
                    "value": "on"
                }
            ]
        },
        "digitalocean-native:databases/v2:PrivateConnection": {
            "properties": {
                "database": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "ssl": {
                    "type": "boolean",
                    "description": "A boolean value indicating if the connection should be made over SSL."
                },
                "uri": {
                    "type": "string",
                    "description": "A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes."
                },
                "user": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:Redis": {
            "properties": {
                "redisAclChannelsDefault": {
                    "$ref": "#/types/digitalocean-native:databases/v2:RedisRedisAclChannelsDefault",
                    "description": "Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default."
                },
                "redisIoThreads": {
                    "type": "integer",
                    "description": "Redis IO thread count"
                },
                "redisLfuDecayTime": {
                    "type": "integer",
                    "description": "LFU maxmemory-policy counter decay time in minutes",
                    "default": 1
                },
                "redisLfuLogFactor": {
                    "type": "integer",
                    "description": "Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies",
                    "default": 10
                },
                "redisMaxmemoryPolicy": {
                    "$ref": "#/types/digitalocean-native:databases/v2:RedisRedisMaxmemoryPolicy",
                    "description": "A string specifying the desired eviction policy for the Redis cluster.\n\n- `noeviction`: Don't evict any data, returns error when memory limit is reached.\n- `allkeys_lru:` Evict any key, least recently used (LRU) first.\n- `allkeys_random`: Evict keys in a random order.\n- `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.\n- `volatile_random`: Evict keys with expiration only in a random order.\n- `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first."
                },
                "redisNotifyKeyspaceEvents": {
                    "type": "string",
                    "description": "Set notify-keyspace-events option",
                    "default": ""
                },
                "redisNumberOfDatabases": {
                    "type": "integer",
                    "description": "Set number of redis databases. Changing this will cause a restart of redis service."
                },
                "redisPersistence": {
                    "$ref": "#/types/digitalocean-native:databases/v2:RedisRedisPersistence",
                    "description": "When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked."
                },
                "redisPubsubClientOutputBufferLimit": {
                    "type": "integer",
                    "description": "Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan."
                },
                "redisSsl": {
                    "type": "boolean",
                    "description": "Require SSL to access Redis",
                    "default": true
                },
                "redisTimeout": {
                    "type": "integer",
                    "description": "Redis idle connection timeout in seconds",
                    "default": 300
                },
                "type": {
                    "type": "string",
                    "default": "redis"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:RedisRedisAclChannelsDefault": {
            "description": "Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.",
            "type": "string",
            "enum": [
                {
                    "name": "Allchannels",
                    "value": "allchannels"
                },
                {
                    "name": "Resetchannels",
                    "value": "resetchannels"
                }
            ]
        },
        "digitalocean-native:databases/v2:RedisRedisMaxmemoryPolicy": {
            "description": "A string specifying the desired eviction policy for the Redis cluster.\n\n- `noeviction`: Don't evict any data, returns error when memory limit is reached.\n- `allkeys_lru:` Evict any key, least recently used (LRU) first.\n- `allkeys_random`: Evict keys in a random order.\n- `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.\n- `volatile_random`: Evict keys with expiration only in a random order.\n- `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first.",
            "type": "string",
            "enum": [
                {
                    "name": "Noeviction",
                    "value": "noeviction"
                },
                {
                    "name": "AllkeysLru",
                    "value": "allkeys_lru"
                },
                {
                    "name": "AllkeysRandom",
                    "value": "allkeys_random"
                },
                {
                    "name": "VolatileLru",
                    "value": "volatile_lru"
                },
                {
                    "name": "VolatileRandom",
                    "value": "volatile_random"
                },
                {
                    "name": "VolatileTtl",
                    "value": "volatile_ttl"
                }
            ]
        },
        "digitalocean-native:databases/v2:RedisRedisPersistence": {
            "description": "When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.",
            "type": "string",
            "enum": [
                {
                    "name": "Off",
                    "value": "off"
                },
                {
                    "name": "Rdb",
                    "value": "rdb"
                }
            ]
        },
        "digitalocean-native:databases/v2:SourceProperties": {
            "properties": {
                "dbname": {
                    "type": "string",
                    "description": "The name of the default database."
                },
                "host": {
                    "type": "string",
                    "description": "The FQDN pointing to the database cluster's current primary node."
                },
                "password": {
                    "type": "string",
                    "description": "The randomly generated password for the default user."
                },
                "port": {
                    "type": "integer",
                    "description": "The port on which the database cluster is listening."
                },
                "username": {
                    "type": "string",
                    "description": "The default user for the database."
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:SqlMode": {
            "properties": {
                "sqlMode": {
                    "type": "string",
                    "description": "A string specifying the configured SQL modes for the MySQL cluster.",
                    "language": {
                        "csharp": {
                            "name": "SqlModeValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "sqlMode"
            ]
        },
        "digitalocean-native:databases/v2:Timescaledb": {
            "description": "TimescaleDB extension configuration values",
            "properties": {
                "maxBackgroundWorkers": {
                    "type": "integer",
                    "description": "The number of background workers for timescaledb operations.  Set to the sum of your number of databases and the total number of concurrent background workers you want running at any given point in time."
                }
            },
            "type": "object"
        },
        "digitalocean-native:domains/v2:Domain": {
            "properties": {
                "ipAddress": {
                    "type": "string",
                    "description": "This optional attribute may contain an IP address. When provided, an A record will be automatically created pointing to the apex domain."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name."
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the records on this domain, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "zoneFile": {
                    "type": "string",
                    "description": "This attribute contains the complete contents of the zone file for the selected domain. Individual domain record resources should be used to get more granular control over records. However, this attribute can also be used to get information about the SOA record, which is created automatically and is not accessible as an individual record resource."
                }
            },
            "type": "object"
        },
        "digitalocean-native:domains/v2:DomainRecord": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for each domain record."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:GetDomainsProperties": {
            "properties": {
                "domain": {
                    "$ref": "#/types/digitalocean-native:domains/v2:Domain"
                }
            },
            "type": "object"
        },
        "digitalocean-native:domains/v2:GetDomainsRecordProperties": {
            "properties": {
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                }
            },
            "type": "object"
        },
        "digitalocean-native:domains/v2:ListDomains": {
            "properties": {
                "domains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:domains/v2:Domain"
                    },
                    "description": "Array of volumes."
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:domains/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:domains/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "domains",
                "meta"
            ]
        },
        "digitalocean-native:domains/v2:ListDomainsRecords": {
            "properties": {
                "domainRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:domains/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:domains/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:domains/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:domains/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:domains/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:domains/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:Action": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:ActionRegionSlug": {
            "type": "object"
        },
        "digitalocean-native:droplets/v2:ActionStatus": {
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "type": "string",
            "enum": [
                {
                    "name": "InProgress",
                    "value": "in-progress"
                },
                {
                    "name": "Completed",
                    "value": "completed"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:droplets/v2:AssociatedResource": {
            "description": "An objects containing information about a resource associated with a Droplet.",
            "properties": {
                "cost": {
                    "type": "string",
                    "description": "The cost of the resource in USD per month if the resource is retained after the Droplet is destroyed."
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the resource associated with the Droplet."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource associated with the Droplet."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:AssociatedResourceStatus": {
            "description": "An objects containing information about a resources scheduled for deletion.",
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format indicating when the requested action was completed."
                },
                "droplet": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DestroyedAssociatedResource",
                    "description": "An object containing information about a resource scheduled for deletion."
                },
                "failures": {
                    "type": "integer",
                    "description": "A count of the associated resources that failed to be destroyed, if any."
                },
                "resources": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:AssociatedResourceStatusResourcesProperties",
                    "description": "An object containing additional information about resource related to a Droplet requested to be destroyed."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:AssociatedResourceStatusResourcesProperties": {
            "description": "An object containing additional information about resource related to a Droplet requested to be destroyed.",
            "properties": {
                "floatingIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:DestroyedAssociatedResource"
                    }
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:DestroyedAssociatedResource"
                    }
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:DestroyedAssociatedResource"
                    }
                },
                "volumeSnapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:DestroyedAssociatedResource"
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:DestroyedAssociatedResource"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:DestroyedAssociatedResource": {
            "description": "An object containing information about a resource scheduled for deletion.",
            "properties": {
                "destroyedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format indicating when the resource was destroyed if the request was successful."
                },
                "errorMessage": {
                    "type": "string",
                    "description": "A string indicating that the resource was not successfully destroyed and providing additional information."
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the resource scheduled for deletion."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource scheduled for deletion."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:Droplet": {
            "properties": {
                "backupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array of backup IDs of any backups that have been taken of the Droplet instance.  Droplet backups are enabled at the time of the instance creation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the Droplet was created."
                },
                "disk": {
                    "type": "integer",
                    "description": "The size of the Droplet's disk in gigabytes."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of features enabled on this Droplet."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for each Droplet instance. This is automatically generated upon Droplet creation."
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Image"
                },
                "kernel": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Kernel",
                    "description": "**Note**: All Droplets created after March 2017 use internal kernels by default.\nThese Droplets will have this attribute set to `null`.\n\nThe current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)\nfor Droplets with externally managed kernels. This will initially be set to\nthe kernel of the base image when the Droplet is created.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the Droplet has been locked, preventing actions by users."
                },
                "memory": {
                    "type": "integer",
                    "description": "Memory of the Droplet in megabytes."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name set for the Droplet instance."
                },
                "networks": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletNetworksProperties",
                    "description": "The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is."
                },
                "nextBackupWindow": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletNextBackupWindowProperties",
                    "description": "The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Region"
                },
                "size": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Size"
                },
                "sizeSlug": {
                    "type": "string",
                    "description": "The unique slug identifier for the size of this Droplet."
                },
                "snapshotIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array of snapshot IDs of any snapshots created from the Droplet instance."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletStatus",
                    "description": "A status string indicating the state of the Droplet instance. This may be \"new\", \"active\", \"off\", or \"archive\"."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Tags the Droplet has been tagged with."
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The number of virtual CPUs."
                },
                "volumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array including the unique identifier for each Block Storage volume attached to the Droplet."
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the Droplet is assigned."
                }
            },
            "type": "object",
            "required": [
                "backupIds",
                "createdAt",
                "disk",
                "features",
                "id",
                "image",
                "locked",
                "memory",
                "name",
                "networks",
                "nextBackupWindow",
                "region",
                "size",
                "sizeSlug",
                "snapshotIds",
                "status",
                "tags",
                "vcpus",
                "volumeIds"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionType": {
            "description": "The type of action to initiate for the Droplet.",
            "type": "string",
            "enum": [
                {
                    "name": "EnableBackups",
                    "value": "enable_backups"
                },
                {
                    "name": "DisableBackups",
                    "value": "disable_backups"
                },
                {
                    "name": "Reboot",
                    "value": "reboot"
                },
                {
                    "name": "PowerCycle",
                    "value": "power_cycle"
                },
                {
                    "name": "Shutdown",
                    "value": "shutdown"
                },
                {
                    "name": "PowerOff",
                    "value": "power_off"
                },
                {
                    "name": "PowerOn",
                    "value": "power_on"
                },
                {
                    "name": "Restore",
                    "value": "restore"
                },
                {
                    "name": "PasswordReset",
                    "value": "password_reset"
                },
                {
                    "name": "Resize",
                    "value": "resize"
                },
                {
                    "name": "Rebuild",
                    "value": "rebuild"
                },
                {
                    "name": "Rename",
                    "value": "rename"
                },
                {
                    "name": "ChangeKernel",
                    "value": "change_kernel"
                },
                {
                    "name": "EnableIpv6",
                    "value": "enable_ipv6"
                },
                {
                    "name": "Snapshot",
                    "value": "snapshot"
                }
            ]
        },
        "digitalocean-native:droplets/v2:DropletNetworksProperties": {
            "description": "The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is.",
            "properties": {
                "v4": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:NetworkV4"
                    }
                },
                "v6": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:NetworkV6"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:DropletNextBackupWindowProperties": {
            "description": "The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start.",
            "properties": {
                "end": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format specifying the end of the Droplet's backup window."
                },
                "start": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format specifying the start of the Droplet's backup window."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:DropletSnapshot": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the snapshot was created."
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum size in GB required for a volume or Droplet to use this snapshot."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the snapshot."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of the regions that the snapshot is available in. The regions are represented by their identifying slug values."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The billable size of the snapshot in gigabytes."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletSnapshotPropertiesType",
                    "description": "Describes the kind of image. It may be one of `snapshot` or `backup`. This specifies whether an image is a user-generated Droplet snapshot or automatically created Droplet backup."
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "minDiskSize",
                "name",
                "regions",
                "sizeGigabytes",
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletSnapshotPropertiesType": {
            "description": "Describes the kind of image. It may be one of `snapshot` or `backup`. This specifies whether an image is a user-generated Droplet snapshot or automatically created Droplet backup.",
            "type": "string",
            "enum": [
                {
                    "name": "Snapshot",
                    "value": "snapshot"
                },
                {
                    "name": "Backup",
                    "value": "backup"
                }
            ]
        },
        "digitalocean-native:droplets/v2:DropletStatus": {
            "description": "A status string indicating the state of the Droplet instance. This may be \"new\", \"active\", \"off\", or \"archive\".",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "new"
                },
                {
                    "name": "Active",
                    "value": "active"
                },
                {
                    "name": "Off",
                    "value": "off"
                },
                {
                    "name": "Archive",
                    "value": "archive"
                }
            ]
        },
        "digitalocean-native:droplets/v2:Firewall": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the firewall was created."
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets assigned to the firewall."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a firewall."
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:FirewallRulesInboundRulesItem"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-)."
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:FirewallRulesOutboundRulesItem"
                    }
                },
                "pendingChanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:FirewallPropertiesPendingChangesItemProperties"
                    },
                    "description": "An array of objects each containing the fields \"droplet_id\", \"removing\", and \"status\". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:FirewallPropertiesStatus",
                    "description": "A status string indicating the current state of the firewall. This can be \"waiting\", \"succeeded\", or \"failed\"."
                },
                "tags": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:FirewallPropertiesTags"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:FirewallPropertiesPendingChangesItemProperties": {
            "properties": {
                "dropletId": {
                    "type": "integer"
                },
                "removing": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:FirewallPropertiesStatus": {
            "description": "A status string indicating the current state of the firewall. This can be \"waiting\", \"succeeded\", or \"failed\".",
            "type": "string",
            "enum": [
                {
                    "name": "Waiting",
                    "value": "waiting"
                },
                {
                    "name": "Succeeded",
                    "value": "succeeded"
                },
                {
                    "name": "Failed",
                    "value": "failed"
                }
            ]
        },
        "digitalocean-native:droplets/v2:FirewallPropertiesTags": {
            "type": "object"
        },
        "digitalocean-native:droplets/v2:FirewallRuleBaseProtocol": {
            "description": "The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`.",
            "type": "string",
            "enum": [
                {
                    "name": "Tcp",
                    "value": "tcp"
                },
                {
                    "name": "Udp",
                    "value": "udp"
                },
                {
                    "name": "Icmp",
                    "value": "icmp"
                }
            ]
        },
        "digitalocean-native:droplets/v2:FirewallRulesInboundRulesItem": {
            "properties": {
                "ports": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. \"8000-9000\"), or \"0\" when all ports are open for a protocol. For ICMP rules this parameter will always return \"0\"."
                },
                "protocol": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:FirewallRuleBaseProtocol",
                    "description": "The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`."
                }
            },
            "type": "object",
            "required": [
                "ports",
                "protocol"
            ]
        },
        "digitalocean-native:droplets/v2:FirewallRulesOutboundRulesItem": {
            "properties": {
                "ports": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. \"8000-9000\"), or \"0\" when all ports are open for a protocol. For ICMP rules this parameter will always return \"0\"."
                },
                "protocol": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:FirewallRuleBaseProtocol",
                    "description": "The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`."
                }
            },
            "type": "object",
            "required": [
                "ports",
                "protocol"
            ]
        },
        "digitalocean-native:droplets/v2:GetDropletActionsProperties": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:GetDropletsProperties": {
            "properties": {
                "droplet": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Droplet"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:Image": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the image was created."
                },
                "description": {
                    "type": "string",
                    "description": "An optional free-form text field to describe an image."
                },
                "distribution": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:ImageDistribution",
                    "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place."
                },
                "errorMessage": {
                    "type": "string",
                    "description": "A string containing information about errors that may occur when importing\n a custom image."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique number that can be used to identify and reference a specific image."
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum disk size in GB required for a Droplet to use this image."
                },
                "name": {
                    "type": "string",
                    "description": "The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question."
                },
                "public": {
                    "type": "boolean",
                    "description": "This is a boolean value that indicates whether the image in question is public or not. An image that is public is available to all accounts. A non-public image is only accessible from your account."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ImageRegionsItem"
                    },
                    "description": "This attribute is an array of the regions that the image is available in. The regions are represented by their identifying slug values."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The size of the image in gigabytes."
                },
                "slug": {
                    "type": "string",
                    "description": "A uniquely identifying string that is associated with each of the DigitalOcean-provided public images. These can be used to reference a public image as an alternative to the numeric id."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:ImageStatus",
                    "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:ImageType",
                    "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes)."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:ImageDistribution": {
            "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.",
            "type": "string",
            "enum": [
                {
                    "name": "ArchLinux",
                    "value": "Arch Linux"
                },
                {
                    "name": "CentOS",
                    "value": "CentOS"
                },
                {
                    "name": "CoreOS",
                    "value": "CoreOS"
                },
                {
                    "name": "Debian",
                    "value": "Debian"
                },
                {
                    "name": "Fedora",
                    "value": "Fedora"
                },
                {
                    "name": "FedoraAtomic",
                    "value": "Fedora Atomic"
                },
                {
                    "name": "FreeBSD",
                    "value": "FreeBSD"
                },
                {
                    "name": "Gentoo",
                    "value": "Gentoo"
                },
                {
                    "name": "OpenSUSE",
                    "value": "openSUSE"
                },
                {
                    "name": "RancherOS",
                    "value": "RancherOS"
                },
                {
                    "name": "RockyLinux",
                    "value": "Rocky Linux"
                },
                {
                    "name": "Ubuntu",
                    "value": "Ubuntu"
                },
                {
                    "name": "Unknown",
                    "value": "Unknown"
                }
            ]
        },
        "digitalocean-native:droplets/v2:ImageRegionsItem": {
            "description": "The slug identifier for the region where the resource will initially be  available.",
            "type": "string",
            "enum": [
                {
                    "name": "Ams1",
                    "value": "ams1"
                },
                {
                    "name": "Ams2",
                    "value": "ams2"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Blr1",
                    "value": "blr1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                },
                {
                    "name": "Lon1",
                    "value": "lon1"
                },
                {
                    "name": "Nyc1",
                    "value": "nyc1"
                },
                {
                    "name": "Nyc2",
                    "value": "nyc2"
                },
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo1",
                    "value": "sfo1"
                },
                {
                    "name": "Sfo2",
                    "value": "sfo2"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Tor1",
                    "value": "tor1"
                }
            ]
        },
        "digitalocean-native:droplets/v2:ImageStatus": {
            "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`.",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "NEW"
                },
                {
                    "name": "Available",
                    "value": "available"
                },
                {
                    "name": "Pending",
                    "value": "pending"
                },
                {
                    "name": "Deleted",
                    "value": "deleted"
                },
                {
                    "name": "Retired",
                    "value": "retired"
                }
            ]
        },
        "digitalocean-native:droplets/v2:ImageType": {
            "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).",
            "type": "string",
            "enum": [
                {
                    "name": "Base",
                    "value": "base"
                },
                {
                    "name": "Snapshot",
                    "value": "snapshot"
                },
                {
                    "name": "Backup",
                    "value": "backup"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                },
                {
                    "name": "Admin",
                    "value": "admin"
                }
            ]
        },
        "digitalocean-native:droplets/v2:Kernel": {
            "description": "**Note**: All Droplets created after March 2017 use internal kernels by default.\nThese Droplets will have this attribute set to `null`.\n\nThe current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)\nfor Droplets with externally managed kernels. This will initially be set to\nthe kernel of the base image when the Droplet is created.\n",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique number used to identify and reference a specific kernel."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the kernel. This is shown in the web UI and is generally a descriptive title for the kernel in question."
                },
                "version": {
                    "type": "string",
                    "description": "A standard kernel version string representing the version, patch, and release information."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:ListDropletActions": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:droplets/v2:ListDroplets": {
            "properties": {
                "droplets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Droplet"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:droplets/v2:ListDropletsAssociatedResources": {
            "properties": {
                "floatingIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:AssociatedResource"
                    }
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:AssociatedResource"
                    }
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:AssociatedResource"
                    }
                },
                "volumeSnapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:AssociatedResource"
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:AssociatedResource"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:ListDropletsBackups": {
            "properties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:DropletSnapshot"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:droplets/v2:ListDropletsFirewalls": {
            "properties": {
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Firewall"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:droplets/v2:ListDropletsKernels": {
            "properties": {
                "kernels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Kernel"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:droplets/v2:ListDropletsNeighbors": {
            "properties": {
                "droplets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Droplet"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:ListDropletsSnapshots": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:DropletSnapshot"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:droplets/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:NetworkV4": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "The gateway of the specified IPv4 network interface.\n\nFor private interfaces, a gateway is not provided. This is denoted by\nreturning `nil` as its value.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the IPv4 network interface."
                },
                "netmask": {
                    "type": "string",
                    "description": "The netmask of the IPv4 network interface."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:NetworkV4Type",
                    "description": "The type of the IPv4 network interface."
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:NetworkV4Type": {
            "description": "The type of the IPv4 network interface.",
            "type": "string",
            "enum": [
                {
                    "name": "Public",
                    "value": "public"
                },
                {
                    "name": "Private",
                    "value": "private"
                }
            ]
        },
        "digitalocean-native:droplets/v2:NetworkV6": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "The gateway of the specified IPv6 network interface."
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the IPv6 network interface."
                },
                "netmask": {
                    "type": "integer",
                    "description": "The netmask of the IPv6 network interface."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:NetworkV6Type",
                    "description": "The type of the IPv6 network interface.\n\n**Note**: IPv6 private  networking is not currently supported.\n"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:NetworkV6Type": {
            "description": "The type of the IPv6 network interface.\n\n**Note**: IPv6 private  networking is not currently supported.\n",
            "type": "string",
            "enum": [
                {
                    "name": "Public",
                    "value": "public"
                }
            ]
        },
        "digitalocean-native:droplets/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:droplets/v2:Region": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:droplets/v2:Size": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created with this size.",
                    "default": true
                },
                "description": {
                    "type": "string",
                    "description": "A string describing the class of Droplets created from this size. For example: Basic, General Purpose, CPU-Optimized, Memory-Optimized, or Storage-Optimized."
                },
                "disk": {
                    "type": "integer",
                    "description": "The amount of disk space set aside for Droplets of this size. The value is represented in gigabytes."
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of RAM allocated to Droplets created of this size. The value is represented in megabytes."
                },
                "priceHourly": {
                    "type": "number",
                    "description": "This describes the price of the Droplet size as measured hourly. The value is measured in US dollars."
                },
                "priceMonthly": {
                    "type": "number",
                    "description": "This attribute describes the monthly cost of this Droplet size if the Droplet is kept for an entire month. The value is measured in US dollars."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the region slugs where this size is available for Droplet creates."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used to uniquely identify each size."
                },
                "transfer": {
                    "type": "number",
                    "description": "The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes."
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The integer of number CPUs allocated to Droplets of this size."
                }
            },
            "type": "object",
            "required": [
                "available",
                "description",
                "disk",
                "memory",
                "priceHourly",
                "priceMonthly",
                "regions",
                "slug",
                "transfer",
                "vcpus"
            ]
        },
        "digitalocean-native:droplets/v2:Type": {
            "description": "The type of action to initiate for the Droplet.",
            "type": "string",
            "enum": [
                {
                    "name": "EnableBackups",
                    "value": "enable_backups"
                },
                {
                    "name": "DisableBackups",
                    "value": "disable_backups"
                },
                {
                    "name": "Reboot",
                    "value": "reboot"
                },
                {
                    "name": "PowerCycle",
                    "value": "power_cycle"
                },
                {
                    "name": "Shutdown",
                    "value": "shutdown"
                },
                {
                    "name": "PowerOff",
                    "value": "power_off"
                },
                {
                    "name": "PowerOn",
                    "value": "power_on"
                },
                {
                    "name": "Restore",
                    "value": "restore"
                },
                {
                    "name": "PasswordReset",
                    "value": "password_reset"
                },
                {
                    "name": "Resize",
                    "value": "resize"
                },
                {
                    "name": "Rebuild",
                    "value": "rebuild"
                },
                {
                    "name": "Rename",
                    "value": "rename"
                },
                {
                    "name": "ChangeKernel",
                    "value": "change_kernel"
                },
                {
                    "name": "EnableIpv6",
                    "value": "enable_ipv6"
                },
                {
                    "name": "Snapshot",
                    "value": "snapshot"
                }
            ]
        },
        "digitalocean-native:firewalls/v2:Firewall": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the firewall was created."
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets assigned to the firewall."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a firewall."
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesInboundRulesItem"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-)."
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesOutboundRulesItem"
                    }
                },
                "pendingChanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesPendingChangesItemProperties"
                    },
                    "description": "An array of objects each containing the fields \"droplet_id\", \"removing\", and \"status\". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesStatus",
                    "description": "A status string indicating the current state of the firewall. This can be \"waiting\", \"succeeded\", or \"failed\"."
                },
                "tags": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesTags"
                }
            },
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:FirewallPropertiesPendingChangesItemProperties": {
            "properties": {
                "dropletId": {
                    "type": "integer"
                },
                "removing": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:FirewallPropertiesStatus": {
            "description": "A status string indicating the current state of the firewall. This can be \"waiting\", \"succeeded\", or \"failed\".",
            "type": "string",
            "enum": [
                {
                    "name": "Waiting",
                    "value": "waiting"
                },
                {
                    "name": "Succeeded",
                    "value": "succeeded"
                },
                {
                    "name": "Failed",
                    "value": "failed"
                }
            ]
        },
        "digitalocean-native:firewalls/v2:FirewallPropertiesTags": {
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:FirewallRuleBaseProtocol": {
            "description": "The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`.",
            "type": "string",
            "enum": [
                {
                    "name": "Tcp",
                    "value": "tcp"
                },
                {
                    "name": "Udp",
                    "value": "udp"
                },
                {
                    "name": "Icmp",
                    "value": "icmp"
                }
            ]
        },
        "digitalocean-native:firewalls/v2:FirewallRulesInboundRulesItem": {
            "properties": {
                "ports": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. \"8000-9000\"), or \"0\" when all ports are open for a protocol. For ICMP rules this parameter will always return \"0\"."
                },
                "protocol": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRuleBaseProtocol",
                    "description": "The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`."
                }
            },
            "type": "object",
            "required": [
                "ports",
                "protocol"
            ]
        },
        "digitalocean-native:firewalls/v2:FirewallRulesOutboundRulesItem": {
            "properties": {
                "ports": {
                    "type": "string",
                    "description": "The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. \"8000-9000\"), or \"0\" when all ports are open for a protocol. For ICMP rules this parameter will always return \"0\"."
                },
                "protocol": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRuleBaseProtocol",
                    "description": "The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`."
                }
            },
            "type": "object",
            "required": [
                "ports",
                "protocol"
            ]
        },
        "digitalocean-native:firewalls/v2:GetFirewallsProperties": {
            "properties": {
                "firewall": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:Firewall"
                }
            },
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:ListFirewalls": {
            "properties": {
                "firewalls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:Firewall"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:firewalls/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:Tags": {
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:Action": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "projectId": {
                    "type": "string",
                    "description": "The UUID of the project to which the reserved IP currently belongs."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:ActionLink": {
            "description": "The linked actions can be used to check the status of a Droplet's create event.",
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A URL that can be used to access the action."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "rel": {
                    "type": "string",
                    "description": "A string specifying the type of the related action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:ActionRegionSlug": {
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:ActionStatus": {
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "type": "string",
            "enum": [
                {
                    "name": "InProgress",
                    "value": "in-progress"
                },
                {
                    "name": "Completed",
                    "value": "completed"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:Droplet": {
            "properties": {
                "backupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array of backup IDs of any backups that have been taken of the Droplet instance.  Droplet backups are enabled at the time of the instance creation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the Droplet was created."
                },
                "disk": {
                    "type": "integer",
                    "description": "The size of the Droplet's disk in gigabytes."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of features enabled on this Droplet."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for each Droplet instance. This is automatically generated upon Droplet creation."
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Image"
                },
                "kernel": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Kernel",
                    "description": "**Note**: All Droplets created after March 2017 use internal kernels by default.\nThese Droplets will have this attribute set to `null`.\n\nThe current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)\nfor Droplets with externally managed kernels. This will initially be set to\nthe kernel of the base image when the Droplet is created.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the Droplet has been locked, preventing actions by users."
                },
                "memory": {
                    "type": "integer",
                    "description": "Memory of the Droplet in megabytes."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name set for the Droplet instance."
                },
                "networks": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:DropletNetworksProperties",
                    "description": "The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is."
                },
                "nextBackupWindow": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:DropletNextBackupWindowProperties",
                    "description": "The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Region"
                },
                "size": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Size"
                },
                "sizeSlug": {
                    "type": "string",
                    "description": "The unique slug identifier for the size of this Droplet."
                },
                "snapshotIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array of snapshot IDs of any snapshots created from the Droplet instance."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:DropletStatus",
                    "description": "A status string indicating the state of the Droplet instance. This may be \"new\", \"active\", \"off\", or \"archive\"."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Tags the Droplet has been tagged with."
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The number of virtual CPUs."
                },
                "volumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array including the unique identifier for each Block Storage volume attached to the Droplet."
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the Droplet is assigned."
                }
            },
            "type": "object",
            "required": [
                "backupIds",
                "createdAt",
                "disk",
                "features",
                "id",
                "image",
                "locked",
                "memory",
                "name",
                "networks",
                "nextBackupWindow",
                "region",
                "size",
                "sizeSlug",
                "snapshotIds",
                "status",
                "tags",
                "vcpus",
                "volumeIds"
            ]
        },
        "digitalocean-native:floating_ips/v2:DropletNetworksProperties": {
            "description": "The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is.",
            "properties": {
                "v4": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:NetworkV4"
                    }
                },
                "v6": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:NetworkV6"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:DropletNextBackupWindowProperties": {
            "description": "The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start.",
            "properties": {
                "end": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format specifying the end of the Droplet's backup window."
                },
                "start": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format specifying the start of the Droplet's backup window."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:DropletStatus": {
            "description": "A status string indicating the state of the Droplet instance. This may be \"new\", \"active\", \"off\", or \"archive\".",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "new"
                },
                {
                    "name": "Active",
                    "value": "active"
                },
                {
                    "name": "Off",
                    "value": "off"
                },
                {
                    "name": "Archive",
                    "value": "archive"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:FloatingIPsActionType": {
            "description": "The type of action to initiate for the floating IP.",
            "type": "string",
            "enum": [
                {
                    "name": "Assign",
                    "value": "assign"
                },
                {
                    "name": "Unassign",
                    "value": "unassign"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:FloatingIp": {
            "properties": {
                "droplet": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Droplet",
                    "description": "The Droplet that the floating IP has been assigned to. When you query a floating IP, if it is assigned to a Droplet, the entire Droplet object will be returned. If it is not assigned, the value will be null."
                },
                "ip": {
                    "type": "string",
                    "description": "The public IP address of the floating IP. It also serves as its identifier."
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether or not the floating IP has pending actions preventing new ones from being submitted."
                },
                "projectId": {
                    "type": "string",
                    "description": "The UUID of the project to which the reserved IP currently belongs."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIpRegion"
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:FloatingIpRegion": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:floating_ips/v2:GetFloatingIPsActionProperties": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:GetFloatingIPsActionPropertiesAction"
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:GetFloatingIPsActionPropertiesAction": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "projectId": {
                    "type": "string",
                    "description": "The UUID of the project to which the reserved IP currently belongs."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:GetFloatingIPsProperties": {
            "properties": {
                "floatingIp": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIp"
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:Image": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the image was created."
                },
                "description": {
                    "type": "string",
                    "description": "An optional free-form text field to describe an image."
                },
                "distribution": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:ImageDistribution",
                    "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place."
                },
                "errorMessage": {
                    "type": "string",
                    "description": "A string containing information about errors that may occur when importing\n a custom image."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique number that can be used to identify and reference a specific image."
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum disk size in GB required for a Droplet to use this image."
                },
                "name": {
                    "type": "string",
                    "description": "The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question."
                },
                "public": {
                    "type": "boolean",
                    "description": "This is a boolean value that indicates whether the image in question is public or not. An image that is public is available to all accounts. A non-public image is only accessible from your account."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:ImageRegionsItem"
                    },
                    "description": "This attribute is an array of the regions that the image is available in. The regions are represented by their identifying slug values."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The size of the image in gigabytes."
                },
                "slug": {
                    "type": "string",
                    "description": "A uniquely identifying string that is associated with each of the DigitalOcean-provided public images. These can be used to reference a public image as an alternative to the numeric id."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:ImageStatus",
                    "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:ImageType",
                    "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes)."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:ImageDistribution": {
            "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.",
            "type": "string",
            "enum": [
                {
                    "name": "ArchLinux",
                    "value": "Arch Linux"
                },
                {
                    "name": "CentOS",
                    "value": "CentOS"
                },
                {
                    "name": "CoreOS",
                    "value": "CoreOS"
                },
                {
                    "name": "Debian",
                    "value": "Debian"
                },
                {
                    "name": "Fedora",
                    "value": "Fedora"
                },
                {
                    "name": "FedoraAtomic",
                    "value": "Fedora Atomic"
                },
                {
                    "name": "FreeBSD",
                    "value": "FreeBSD"
                },
                {
                    "name": "Gentoo",
                    "value": "Gentoo"
                },
                {
                    "name": "OpenSUSE",
                    "value": "openSUSE"
                },
                {
                    "name": "RancherOS",
                    "value": "RancherOS"
                },
                {
                    "name": "RockyLinux",
                    "value": "Rocky Linux"
                },
                {
                    "name": "Ubuntu",
                    "value": "Ubuntu"
                },
                {
                    "name": "Unknown",
                    "value": "Unknown"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:ImageRegionsItem": {
            "description": "The slug identifier for the region where the resource will initially be  available.",
            "type": "string",
            "enum": [
                {
                    "name": "Ams1",
                    "value": "ams1"
                },
                {
                    "name": "Ams2",
                    "value": "ams2"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Blr1",
                    "value": "blr1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                },
                {
                    "name": "Lon1",
                    "value": "lon1"
                },
                {
                    "name": "Nyc1",
                    "value": "nyc1"
                },
                {
                    "name": "Nyc2",
                    "value": "nyc2"
                },
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo1",
                    "value": "sfo1"
                },
                {
                    "name": "Sfo2",
                    "value": "sfo2"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Tor1",
                    "value": "tor1"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:ImageStatus": {
            "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`.",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "NEW"
                },
                {
                    "name": "Available",
                    "value": "available"
                },
                {
                    "name": "Pending",
                    "value": "pending"
                },
                {
                    "name": "Deleted",
                    "value": "deleted"
                },
                {
                    "name": "Retired",
                    "value": "retired"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:ImageType": {
            "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).",
            "type": "string",
            "enum": [
                {
                    "name": "Base",
                    "value": "base"
                },
                {
                    "name": "Snapshot",
                    "value": "snapshot"
                },
                {
                    "name": "Backup",
                    "value": "backup"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                },
                {
                    "name": "Admin",
                    "value": "admin"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:Kernel": {
            "description": "**Note**: All Droplets created after March 2017 use internal kernels by default.\nThese Droplets will have this attribute set to `null`.\n\nThe current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)\nfor Droplets with externally managed kernels. This will initially be set to\nthe kernel of the base image when the Droplet is created.\n",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique number used to identify and reference a specific kernel."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the kernel. This is shown in the web UI and is generally a descriptive title for the kernel in question."
                },
                "version": {
                    "type": "string",
                    "description": "A standard kernel version string representing the version, patch, and release information."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:LinksProperties": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:ActionLink"
                    }
                },
                "droplets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:ActionLink"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:ListFloatingIPs": {
            "properties": {
                "floatingIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIp"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:floating_ips/v2:ListFloatingIPsAction": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:Action"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:floating_ips/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:NetworkV4": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "The gateway of the specified IPv4 network interface.\n\nFor private interfaces, a gateway is not provided. This is denoted by\nreturning `nil` as its value.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the IPv4 network interface."
                },
                "netmask": {
                    "type": "string",
                    "description": "The netmask of the IPv4 network interface."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:NetworkV4Type",
                    "description": "The type of the IPv4 network interface."
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:NetworkV4Type": {
            "description": "The type of the IPv4 network interface.",
            "type": "string",
            "enum": [
                {
                    "name": "Public",
                    "value": "public"
                },
                {
                    "name": "Private",
                    "value": "private"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:NetworkV6": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "The gateway of the specified IPv6 network interface."
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the IPv6 network interface."
                },
                "netmask": {
                    "type": "integer",
                    "description": "The netmask of the IPv6 network interface."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:NetworkV6Type",
                    "description": "The type of the IPv6 network interface.\n\n**Note**: IPv6 private  networking is not currently supported.\n"
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:NetworkV6Type": {
            "description": "The type of the IPv6 network interface.\n\n**Note**: IPv6 private  networking is not currently supported.\n",
            "type": "string",
            "enum": [
                {
                    "name": "Public",
                    "value": "public"
                }
            ]
        },
        "digitalocean-native:floating_ips/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:Region": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:floating_ips/v2:Size": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created with this size.",
                    "default": true
                },
                "description": {
                    "type": "string",
                    "description": "A string describing the class of Droplets created from this size. For example: Basic, General Purpose, CPU-Optimized, Memory-Optimized, or Storage-Optimized."
                },
                "disk": {
                    "type": "integer",
                    "description": "The amount of disk space set aside for Droplets of this size. The value is represented in gigabytes."
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of RAM allocated to Droplets created of this size. The value is represented in megabytes."
                },
                "priceHourly": {
                    "type": "number",
                    "description": "This describes the price of the Droplet size as measured hourly. The value is measured in US dollars."
                },
                "priceMonthly": {
                    "type": "number",
                    "description": "This attribute describes the monthly cost of this Droplet size if the Droplet is kept for an entire month. The value is measured in US dollars."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the region slugs where this size is available for Droplet creates."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used to uniquely identify each size."
                },
                "transfer": {
                    "type": "number",
                    "description": "The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes."
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The integer of number CPUs allocated to Droplets of this size."
                }
            },
            "type": "object",
            "required": [
                "available",
                "description",
                "disk",
                "memory",
                "priceHourly",
                "priceMonthly",
                "regions",
                "slug",
                "transfer",
                "vcpus"
            ]
        },
        "digitalocean-native:functions/v2:GetFunctionsNamespaceProperties": {
            "properties": {
                "namespace": {
                    "$ref": "#/types/digitalocean-native:functions/v2:NamespaceInfo"
                }
            },
            "type": "object"
        },
        "digitalocean-native:functions/v2:GetFunctionsTriggerProperties": {
            "properties": {
                "trigger": {
                    "$ref": "#/types/digitalocean-native:functions/v2:TriggerInfo"
                }
            },
            "type": "object"
        },
        "digitalocean-native:functions/v2:ListFunctionsNamespaces": {
            "properties": {
                "namespaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:functions/v2:NamespaceInfo"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:functions/v2:ListFunctionsTriggers": {
            "properties": {
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:functions/v2:TriggerInfo"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:functions/v2:NamespaceInfo": {
            "properties": {
                "apiHost": {
                    "type": "string",
                    "description": "The namespace's API hostname. Each function in a namespace is provided an endpoint at the namespace's hostname."
                },
                "createdAt": {
                    "type": "string",
                    "description": "UTC time string."
                },
                "key": {
                    "type": "string",
                    "description": "A random alpha numeric string. This key is used in conjunction with the namespace's UUID to authenticate \na user to use the namespace via `doctl`, DigitalOcean's official CLI."
                },
                "label": {
                    "type": "string",
                    "description": "The namespace's unique name."
                },
                "namespace": {
                    "type": "string",
                    "description": "A unique string format of UUID with a prefix fn-."
                },
                "region": {
                    "type": "string",
                    "description": "The namespace's datacenter region."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "UTC time string."
                },
                "uuid": {
                    "type": "string",
                    "description": "The namespace's Universally Unique Identifier."
                }
            },
            "type": "object"
        },
        "digitalocean-native:functions/v2:ScheduledDetails": {
            "description": "Trigger details for SCHEDULED type, where body is optional.\n",
            "properties": {
                "body": {
                    "$ref": "#/types/digitalocean-native:functions/v2:ScheduledDetailsBodyProperties",
                    "description": "Optional data to be sent to function while triggering the function."
                },
                "cron": {
                    "type": "string",
                    "description": "valid cron expression string which is required for SCHEDULED type triggers."
                }
            },
            "type": "object",
            "required": [
                "cron"
            ]
        },
        "digitalocean-native:functions/v2:ScheduledDetailsBodyProperties": {
            "description": "Optional data to be sent to function while triggering the function.",
            "properties": {
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:functions/v2:TriggerInfo": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "UTC time string."
                },
                "function": {
                    "type": "string",
                    "description": "Name of function(action) that exists in the given namespace."
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Indicates weather the trigger is paused or unpaused."
                },
                "name": {
                    "type": "string",
                    "description": "The trigger's unique name within the namespace."
                },
                "namespace": {
                    "type": "string",
                    "description": "A unique string format of UUID with a prefix fn-."
                },
                "scheduledDetails": {
                    "$ref": "#/types/digitalocean-native:functions/v2:ScheduledDetails",
                    "description": "Trigger details for SCHEDULED type, where body is optional.\n"
                },
                "scheduledRuns": {
                    "$ref": "#/types/digitalocean-native:functions/v2:TriggerInfoScheduledRunsProperties"
                },
                "type": {
                    "type": "string",
                    "description": "String which indicates the type of trigger source like SCHEDULED."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "UTC time string."
                }
            },
            "type": "object"
        },
        "digitalocean-native:functions/v2:TriggerInfoScheduledRunsProperties": {
            "properties": {
                "lastRunAt": {
                    "type": "string",
                    "description": "Indicates last run time. null value indicates trigger not run yet."
                },
                "nextRunAt": {
                    "type": "string",
                    "description": "Indicates next run time. null value indicates trigger will not run."
                }
            },
            "type": "object"
        },
        "digitalocean-native:images/v2:Action": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:images/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:images/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:images/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:images/v2:ActionRegionSlug": {
            "type": "object"
        },
        "digitalocean-native:images/v2:ActionStatus": {
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "type": "string",
            "enum": [
                {
                    "name": "InProgress",
                    "value": "in-progress"
                },
                {
                    "name": "Completed",
                    "value": "completed"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:images/v2:GetImagesProperties": {
            "properties": {
                "image": {
                    "$ref": "#/types/digitalocean-native:images/v2:Image"
                }
            },
            "type": "object",
            "required": [
                "image"
            ]
        },
        "digitalocean-native:images/v2:Image": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the image was created."
                },
                "description": {
                    "type": "string",
                    "description": "An optional free-form text field to describe an image."
                },
                "distribution": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageDistribution",
                    "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place."
                },
                "errorMessage": {
                    "type": "string",
                    "description": "A string containing information about errors that may occur when importing\n a custom image."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique number that can be used to identify and reference a specific image."
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum disk size in GB required for a Droplet to use this image."
                },
                "name": {
                    "type": "string",
                    "description": "The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question."
                },
                "public": {
                    "type": "boolean",
                    "description": "This is a boolean value that indicates whether the image in question is public or not. An image that is public is available to all accounts. A non-public image is only accessible from your account."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:images/v2:ImageRegionsItem"
                    },
                    "description": "This attribute is an array of the regions that the image is available in. The regions are represented by their identifying slug values."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The size of the image in gigabytes."
                },
                "slug": {
                    "type": "string",
                    "description": "A uniquely identifying string that is associated with each of the DigitalOcean-provided public images. These can be used to reference a public image as an alternative to the numeric id."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageStatus",
                    "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageType",
                    "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes)."
                }
            },
            "type": "object"
        },
        "digitalocean-native:images/v2:ImageActionBaseType": {
            "description": "The action to be taken on the image. Can be either `convert` or `transfer`.",
            "type": "string",
            "enum": [
                {
                    "name": "Convert",
                    "value": "convert"
                },
                {
                    "name": "Transfer",
                    "value": "transfer"
                }
            ]
        },
        "digitalocean-native:images/v2:ImageActionsTransferPropertiesRegion": {
            "description": "The slug identifier for the region where the resource will initially be  available.",
            "type": "string",
            "enum": [
                {
                    "name": "Ams1",
                    "value": "ams1"
                },
                {
                    "name": "Ams2",
                    "value": "ams2"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Blr1",
                    "value": "blr1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                },
                {
                    "name": "Lon1",
                    "value": "lon1"
                },
                {
                    "name": "Nyc1",
                    "value": "nyc1"
                },
                {
                    "name": "Nyc2",
                    "value": "nyc2"
                },
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo1",
                    "value": "sfo1"
                },
                {
                    "name": "Sfo2",
                    "value": "sfo2"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Tor1",
                    "value": "tor1"
                }
            ]
        },
        "digitalocean-native:images/v2:ImageDistribution": {
            "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.",
            "type": "string",
            "enum": [
                {
                    "name": "ArchLinux",
                    "value": "Arch Linux"
                },
                {
                    "name": "CentOS",
                    "value": "CentOS"
                },
                {
                    "name": "CoreOS",
                    "value": "CoreOS"
                },
                {
                    "name": "Debian",
                    "value": "Debian"
                },
                {
                    "name": "Fedora",
                    "value": "Fedora"
                },
                {
                    "name": "FedoraAtomic",
                    "value": "Fedora Atomic"
                },
                {
                    "name": "FreeBSD",
                    "value": "FreeBSD"
                },
                {
                    "name": "Gentoo",
                    "value": "Gentoo"
                },
                {
                    "name": "OpenSUSE",
                    "value": "openSUSE"
                },
                {
                    "name": "RancherOS",
                    "value": "RancherOS"
                },
                {
                    "name": "RockyLinux",
                    "value": "Rocky Linux"
                },
                {
                    "name": "Ubuntu",
                    "value": "Ubuntu"
                },
                {
                    "name": "Unknown",
                    "value": "Unknown"
                }
            ]
        },
        "digitalocean-native:images/v2:ImageRegionsItem": {
            "description": "The slug identifier for the region where the resource will initially be  available.",
            "type": "string",
            "enum": [
                {
                    "name": "Ams1",
                    "value": "ams1"
                },
                {
                    "name": "Ams2",
                    "value": "ams2"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Blr1",
                    "value": "blr1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                },
                {
                    "name": "Lon1",
                    "value": "lon1"
                },
                {
                    "name": "Nyc1",
                    "value": "nyc1"
                },
                {
                    "name": "Nyc2",
                    "value": "nyc2"
                },
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo1",
                    "value": "sfo1"
                },
                {
                    "name": "Sfo2",
                    "value": "sfo2"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Tor1",
                    "value": "tor1"
                }
            ]
        },
        "digitalocean-native:images/v2:ImageStatus": {
            "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`.",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "NEW"
                },
                {
                    "name": "Available",
                    "value": "available"
                },
                {
                    "name": "Pending",
                    "value": "pending"
                },
                {
                    "name": "Deleted",
                    "value": "deleted"
                },
                {
                    "name": "Retired",
                    "value": "retired"
                }
            ]
        },
        "digitalocean-native:images/v2:ImageType": {
            "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).",
            "type": "string",
            "enum": [
                {
                    "name": "Base",
                    "value": "base"
                },
                {
                    "name": "Snapshot",
                    "value": "snapshot"
                },
                {
                    "name": "Backup",
                    "value": "backup"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                },
                {
                    "name": "Admin",
                    "value": "admin"
                }
            ]
        },
        "digitalocean-native:images/v2:ImageUpdateDistribution": {
            "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.",
            "type": "string",
            "enum": [
                {
                    "name": "ArchLinux",
                    "value": "Arch Linux"
                },
                {
                    "name": "CentOS",
                    "value": "CentOS"
                },
                {
                    "name": "CoreOS",
                    "value": "CoreOS"
                },
                {
                    "name": "Debian",
                    "value": "Debian"
                },
                {
                    "name": "Fedora",
                    "value": "Fedora"
                },
                {
                    "name": "FedoraAtomic",
                    "value": "Fedora Atomic"
                },
                {
                    "name": "FreeBSD",
                    "value": "FreeBSD"
                },
                {
                    "name": "Gentoo",
                    "value": "Gentoo"
                },
                {
                    "name": "OpenSUSE",
                    "value": "openSUSE"
                },
                {
                    "name": "RancherOS",
                    "value": "RancherOS"
                },
                {
                    "name": "RockyLinux",
                    "value": "Rocky Linux"
                },
                {
                    "name": "Ubuntu",
                    "value": "Ubuntu"
                },
                {
                    "name": "Unknown",
                    "value": "Unknown"
                }
            ]
        },
        "digitalocean-native:images/v2:ImagesCustomPropertiesRegion": {
            "description": "The slug identifier for the region where the resource will initially be  available.",
            "type": "string",
            "enum": [
                {
                    "name": "Ams1",
                    "value": "ams1"
                },
                {
                    "name": "Ams2",
                    "value": "ams2"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Blr1",
                    "value": "blr1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                },
                {
                    "name": "Lon1",
                    "value": "lon1"
                },
                {
                    "name": "Nyc1",
                    "value": "nyc1"
                },
                {
                    "name": "Nyc2",
                    "value": "nyc2"
                },
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo1",
                    "value": "sfo1"
                },
                {
                    "name": "Sfo2",
                    "value": "sfo2"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Tor1",
                    "value": "tor1"
                }
            ]
        },
        "digitalocean-native:images/v2:ListImageActions": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:images/v2:Action"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:images/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:images/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:images/v2:ListImages": {
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:images/v2:Image"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:images/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:images/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "images",
                "meta"
            ]
        },
        "digitalocean-native:images/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:images/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:images/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:images/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:images/v2:Region": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:images/v2:RegionSlug": {
            "type": "object"
        },
        "digitalocean-native:images/v2:Status": {
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "type": "string",
            "enum": [
                {
                    "name": "InProgress",
                    "value": "in-progress"
                },
                {
                    "name": "Completed",
                    "value": "completed"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:images/v2:Type": {
            "description": "The action to be taken on the image. Can be either `convert` or `transfer`.",
            "type": "string",
            "enum": [
                {
                    "name": "Convert",
                    "value": "convert"
                },
                {
                    "name": "Transfer",
                    "value": "transfer"
                }
            ]
        },
        "digitalocean-native:kubernetes/v2:AssociatedKubernetesResource": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of a resource associated with a Kubernetes cluster."
                },
                "name": {
                    "type": "string",
                    "description": "The name of a resource associated with a Kubernetes cluster."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:AssociatedKubernetesResources": {
            "description": "An object containing the IDs of resources associated with a Kubernetes cluster.",
            "properties": {
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:AssociatedKubernetesResource"
                    },
                    "description": "A list of names and IDs for associated load balancers that can be destroyed along with the cluster."
                },
                "volumeSnapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:AssociatedKubernetesResource"
                    },
                    "description": "A list of names and IDs for associated volume snapshots that can be destroyed along with the cluster."
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:AssociatedKubernetesResource"
                    },
                    "description": "A list of names and IDs for associated volumes that can be destroyed along with the cluster."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:Cluster": {
            "properties": {
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.",
                    "default": false
                },
                "clusterSubnet": {
                    "type": "string",
                    "description": "The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created."
                },
                "endpoint": {
                    "type": "string",
                    "description": "The base URL of the API server on the Kubernetes master node."
                },
                "ha": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.",
                    "default": false
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a Kubernetes cluster."
                },
                "ipv4": {
                    "type": "string",
                    "description": "The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)"
                },
                "maintenancePolicy": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:MaintenancePolicy",
                    "description": "An object specifying the maintenance window policy for the Kubernetes cluster."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a Kubernetes cluster."
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePool"
                    },
                    "description": "An object specifying the details of the worker nodes available to the Kubernetes cluster."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the Kubernetes cluster is located."
                },
                "registryEnabled": {
                    "type": "boolean",
                    "description": "A read-only boolean value indicating if a container registry is integrated with the cluster."
                },
                "serviceSubnet": {
                    "type": "string",
                    "description": "The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:ClusterStatusProperties",
                    "description": "An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster."
                },
                "surgeUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.",
                    "default": false
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated."
                },
                "version": {
                    "type": "string",
                    "description": "The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. \"1.14\"), the latest version within it will be used (e.g. \"1.14.6-do.1\"); if set to \"latest\", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions."
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned."
                }
            },
            "type": "object",
            "required": [
                "name",
                "nodePools",
                "region",
                "version"
            ]
        },
        "digitalocean-native:kubernetes/v2:ClusterStatusProperties": {
            "description": "An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "An optional message providing additional information about the current cluster state."
                },
                "state": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:ClusterStatusPropertiesState",
                    "description": "A string indicating the current status of the cluster."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:ClusterStatusPropertiesState": {
            "description": "A string indicating the current status of the cluster.",
            "type": "string",
            "enum": [
                {
                    "name": "Running",
                    "value": "running"
                },
                {
                    "name": "Provisioning",
                    "value": "provisioning"
                },
                {
                    "name": "Degraded",
                    "value": "degraded"
                },
                {
                    "name": "Error",
                    "value": "error"
                },
                {
                    "name": "Deleted",
                    "value": "deleted"
                },
                {
                    "name": "Upgrading",
                    "value": "upgrading"
                },
                {
                    "name": "Deleting",
                    "value": "deleting"
                }
            ]
        },
        "digitalocean-native:kubernetes/v2:ClusterlintResults": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was completed."
                },
                "diagnostics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:ClusterlintResultsDiagnosticsItemProperties"
                    },
                    "description": "An array of diagnostics reporting potential problems for the given cluster."
                },
                "requestedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was made."
                },
                "runId": {
                    "type": "string",
                    "description": "Id of the clusterlint run that can be used later to fetch the diagnostics."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:ClusterlintResultsDiagnosticsItemProperties": {
            "properties": {
                "checkName": {
                    "type": "string",
                    "description": "The clusterlint check that resulted in the diagnostic."
                },
                "message": {
                    "type": "string",
                    "description": "Feedback about the object for users to fix."
                },
                "object": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:ClusterlintResultsDiagnosticsItemPropertiesObjectProperties",
                    "description": "Metadata about the Kubernetes API object the diagnostic is reported on."
                },
                "severity": {
                    "type": "string",
                    "description": "Can be one of error, warning or suggestion."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:ClusterlintResultsDiagnosticsItemPropertiesObjectProperties": {
            "description": "Metadata about the Kubernetes API object the diagnostic is reported on.",
            "properties": {
                "kind": {
                    "type": "string",
                    "description": "The kind of Kubernetes API object"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the object"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace the object resides in the cluster."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:Credentials": {
            "properties": {
                "certificateAuthorityData": {
                    "type": "string",
                    "description": "A base64 encoding of bytes representing the certificate authority data for accessing the cluster."
                },
                "clientCertificateData": {
                    "type": "string",
                    "description": "A base64 encoding of bytes representing the x509 client\ncertificate data for access the cluster. This is only returned for clusters\nwithout support for token-based authentication.\n\nNewly created Kubernetes clusters do not return credentials using\ncertificate-based authentication. For additional information,\n[see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).\n"
                },
                "clientKeyData": {
                    "type": "string",
                    "description": "A base64 encoding of bytes representing the x509 client key\ndata for access the cluster. This is only returned for clusters without\nsupport for token-based authentication.\n\nNewly created Kubernetes clusters do not return credentials using\ncertificate-based authentication. For additional information,\n[see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the access token expires."
                },
                "server": {
                    "type": "string",
                    "description": "The URL used to access the cluster API server."
                },
                "token": {
                    "type": "string",
                    "description": "An access token used to authenticate with the cluster. This is only returned for clusters with support for token-based authentication."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:GetKubernetesAvailableUpgradesProperties": {
            "properties": {
                "availableUpgradeVersions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesVersion"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:GetKubernetesClusterProperties": {
            "properties": {
                "kubernetesCluster": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:Cluster"
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:GetKubernetesNodePoolProperties": {
            "properties": {
                "nodePool": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePool"
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:KubernetesNodePool": {
            "properties": {
                "autoScale": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether auto-scaling is enabled for this node pool."
                },
                "count": {
                    "type": "integer",
                    "description": "The number of Droplet instances in the node pool."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a specific node pool."
                },
                "labels": {
                    "$ref": "pulumi.json#/Any",
                    "description": "An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool."
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`."
                },
                "minNodes": {
                    "type": "integer",
                    "description": "The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the node pool."
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:Node"
                    },
                    "description": "An object specifying the details of a specific worker node in a node pool."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the type of Droplet used as workers in the node pool."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`."
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePoolTaint"
                    },
                    "description": "An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:KubernetesNodePoolTaint": {
            "properties": {
                "effect": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePoolTaintEffect",
                    "description": "How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`."
                },
                "key": {
                    "type": "string",
                    "description": "An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is \"special\" and the value of the `value` field is \"gpu\", the key value pair would be `special=gpu`."
                },
                "value": {
                    "type": "string",
                    "description": "An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is \"special\" and the value of the `value` field is \"gpu\", the key value pair would be `special=gpu`."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:KubernetesNodePoolTaintEffect": {
            "description": "How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`.",
            "type": "string",
            "enum": [
                {
                    "name": "NoSchedule",
                    "value": "NoSchedule"
                },
                {
                    "name": "PreferNoSchedule",
                    "value": "PreferNoSchedule"
                },
                {
                    "name": "NoExecute",
                    "value": "NoExecute"
                }
            ]
        },
        "digitalocean-native:kubernetes/v2:KubernetesOptions": {
            "properties": {
                "options": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesOptionsOptionsProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:KubernetesOptionsOptionsProperties": {
            "properties": {
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesRegion"
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesSize"
                    }
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesVersion"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:KubernetesRegion": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A DigitalOcean region where Kubernetes is available."
                },
                "slug": {
                    "type": "string",
                    "description": "The identifier for a region for use when creating a new cluster."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:KubernetesSize": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A Droplet size available for use in a Kubernetes node pool."
                },
                "slug": {
                    "type": "string",
                    "description": "The identifier for a size for use when creating a new cluster."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:KubernetesVersion": {
            "properties": {
                "kubernetesVersion": {
                    "type": "string",
                    "description": "The upstream version string for the version of Kubernetes provided by a given slug.",
                    "language": {
                        "csharp": {
                            "name": "KubernetesVersionValue"
                        }
                    }
                },
                "slug": {
                    "type": "string",
                    "description": "The slug identifier for an available version of Kubernetes for use when creating or updating a cluster. The string contains both the upstream version of Kubernetes as well as the DigitalOcean revision."
                },
                "supportedFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The features available with the version of Kubernetes provided by a given slug."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:ListKubernetesClusters": {
            "properties": {
                "kubernetesClusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:Cluster"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:kubernetes/v2:ListKubernetesNodePoolsProperties": {
            "properties": {
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePool"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:MaintenancePolicy": {
            "description": "An object specifying the maintenance window policy for the Kubernetes cluster.",
            "properties": {
                "day": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:MaintenancePolicyDay",
                    "description": "The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day."
                },
                "duration": {
                    "type": "string",
                    "description": "The duration of the maintenance window policy in human-readable format."
                },
                "startTime": {
                    "type": "string",
                    "description": "The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`)."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:MaintenancePolicyDay": {
            "description": "The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.",
            "type": "string",
            "enum": [
                {
                    "name": "Any",
                    "value": "any"
                },
                {
                    "name": "Monday",
                    "value": "monday"
                },
                {
                    "name": "Tuesday",
                    "value": "tuesday"
                },
                {
                    "name": "Wednesday",
                    "value": "wednesday"
                },
                {
                    "name": "Thursday",
                    "value": "thursday"
                },
                {
                    "name": "Friday",
                    "value": "friday"
                },
                {
                    "name": "Saturday",
                    "value": "saturday"
                },
                {
                    "name": "Sunday",
                    "value": "sunday"
                }
            ]
        },
        "digitalocean-native:kubernetes/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:Node": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the node was created."
                },
                "dropletId": {
                    "type": "string",
                    "description": "The ID of the Droplet used for the worker node."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the node."
                },
                "name": {
                    "type": "string",
                    "description": "An automatically generated, human-readable name for the node."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:NodeStatusProperties",
                    "description": "An object containing a `state` attribute whose value is set to a string indicating the current status of the node."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the node was last updated."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:NodeStatusProperties": {
            "description": "An object containing a `state` attribute whose value is set to a string indicating the current status of the node.",
            "properties": {
                "state": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:NodeStatusPropertiesState",
                    "description": "A string indicating the current status of the node."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:NodeStatusPropertiesState": {
            "description": "A string indicating the current status of the node.",
            "type": "string",
            "enum": [
                {
                    "name": "Provisioning",
                    "value": "provisioning"
                },
                {
                    "name": "Running",
                    "value": "running"
                },
                {
                    "name": "Draining",
                    "value": "draining"
                },
                {
                    "name": "Deleting",
                    "value": "deleting"
                }
            ]
        },
        "digitalocean-native:kubernetes/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:StatusProperties": {
            "description": "An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.",
            "properties": {
                "message": {
                    "type": "string",
                    "description": "An optional message providing additional information about the current cluster state."
                },
                "state": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:StatusPropertiesState",
                    "description": "A string indicating the current status of the cluster."
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:StatusPropertiesState": {
            "description": "A string indicating the current status of the cluster.",
            "type": "string",
            "enum": [
                {
                    "name": "Running",
                    "value": "running"
                },
                {
                    "name": "Provisioning",
                    "value": "provisioning"
                },
                {
                    "name": "Degraded",
                    "value": "degraded"
                },
                {
                    "name": "Error",
                    "value": "error"
                },
                {
                    "name": "Deleted",
                    "value": "deleted"
                },
                {
                    "name": "Upgrading",
                    "value": "upgrading"
                },
                {
                    "name": "Deleting",
                    "value": "deleting"
                }
            ]
        },
        "digitalocean-native:kubernetes/v2:User": {
            "properties": {
                "kubernetesClusterUser": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:UserKubernetesClusterUserProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:kubernetes/v2:UserKubernetesClusterUserProperties": {
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of in-cluster groups that the user belongs to."
                },
                "username": {
                    "type": "string",
                    "description": "The username for the cluster admin user."
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:ForwardingRule": {
            "description": "An object specifying a forwarding rule for a load balancer.",
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The ID of the TLS certificate used for SSL termination if enabled."
                },
                "entryPort": {
                    "type": "integer",
                    "description": "An integer representing the port on which the load balancer instance will listen."
                },
                "entryProtocol": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:ForwardingRuleEntryProtocol",
                    "description": "The protocol used for traffic to the load balancer. The possible values are: `http`, `https`, `http2`, `http3`, `tcp`, or `udp`. If you set the  `entry_protocol` to `udp`, the `target_protocol` must be set to `udp`.  When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.\n"
                },
                "targetPort": {
                    "type": "integer",
                    "description": "An integer representing the port on the backend Droplets to which the load balancer will send traffic."
                },
                "targetProtocol": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:ForwardingRuleTargetProtocol",
                    "description": "The protocol used for traffic from the load balancer to the backend Droplets. The possible values are: `http`, `https`, `http2`, `tcp`, or `udp`. If you set the `target_protocol` to `udp`, the `entry_protocol` must be set to  `udp`. When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.\n"
                },
                "tlsPassthrough": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets."
                }
            },
            "type": "object",
            "required": [
                "entryPort",
                "entryProtocol",
                "targetPort",
                "targetProtocol"
            ]
        },
        "digitalocean-native:load_balancers/v2:ForwardingRuleEntryProtocol": {
            "description": "The protocol used for traffic to the load balancer. The possible values are: `http`, `https`, `http2`, `http3`, `tcp`, or `udp`. If you set the  `entry_protocol` to `udp`, the `target_protocol` must be set to `udp`.  When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.\n",
            "type": "string",
            "enum": [
                {
                    "name": "Http",
                    "value": "http"
                },
                {
                    "name": "Https",
                    "value": "https"
                },
                {
                    "name": "Http2",
                    "value": "http2"
                },
                {
                    "name": "Http3",
                    "value": "http3"
                },
                {
                    "name": "Tcp",
                    "value": "tcp"
                },
                {
                    "name": "Udp",
                    "value": "udp"
                }
            ]
        },
        "digitalocean-native:load_balancers/v2:ForwardingRuleTargetProtocol": {
            "description": "The protocol used for traffic from the load balancer to the backend Droplets. The possible values are: `http`, `https`, `http2`, `tcp`, or `udp`. If you set the `target_protocol` to `udp`, the `entry_protocol` must be set to  `udp`. When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.\n",
            "type": "string",
            "enum": [
                {
                    "name": "Http",
                    "value": "http"
                },
                {
                    "name": "Https",
                    "value": "https"
                },
                {
                    "name": "Http2",
                    "value": "http2"
                },
                {
                    "name": "Tcp",
                    "value": "tcp"
                },
                {
                    "name": "Udp",
                    "value": "udp"
                }
            ]
        },
        "digitalocean-native:load_balancers/v2:GetLoadBalancersProperties": {
            "properties": {
                "loadBalancer": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:LoadBalancer"
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:HealthCheck": {
            "description": "An object specifying health check settings for the load balancer.",
            "properties": {
                "checkIntervalSeconds": {
                    "type": "integer",
                    "description": "The number of seconds between between two consecutive health checks.",
                    "default": 10
                },
                "healthyThreshold": {
                    "type": "integer",
                    "description": "The number of times a health check must pass for a backend Droplet to be marked \"healthy\" and be re-added to the pool.",
                    "default": 3
                },
                "path": {
                    "type": "string",
                    "description": "The path on the backend Droplets to which the load balancer instance will send a request.",
                    "default": "/"
                },
                "port": {
                    "type": "integer",
                    "description": "An integer representing the port on the backend Droplets on which the health check will attempt a connection.",
                    "default": 80
                },
                "protocol": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:HealthCheckProtocol",
                    "description": "The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https`, or `tcp`.",
                    "default": "http"
                },
                "responseTimeoutSeconds": {
                    "type": "integer",
                    "description": "The number of seconds the load balancer instance will wait for a response until marking a health check as failed.",
                    "default": 5
                },
                "unhealthyThreshold": {
                    "type": "integer",
                    "description": "The number of times a health check must fail for a backend Droplet to be marked \"unhealthy\" and be removed from the pool.",
                    "default": 5
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:HealthCheckProtocol": {
            "description": "The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https`, or `tcp`.",
            "type": "string",
            "enum": [
                {
                    "name": "Http",
                    "value": "http"
                },
                {
                    "name": "Https",
                    "value": "https"
                },
                {
                    "name": "Tcp",
                    "value": "tcp"
                }
            ]
        },
        "digitalocean-native:load_balancers/v2:LbFirewall": {
            "description": "An object specifying allow and deny rules to control traffic to the load balancer.",
            "properties": {
                "allow": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "the rules for allowing traffic to the load balancer (in the form 'ip:1.2.3.4' or 'cidr:1.2.0.0/16')"
                },
                "deny": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "the rules for denying traffic to the load balancer (in the form 'ip:1.2.3.4' or 'cidr:1.2.0.0/16')"
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:ListLoadBalancers": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:PageLinks"
                },
                "loadBalancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:load_balancers/v2:LoadBalancer"
                    }
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:load_balancers/v2:LoadBalancer": {
            "properties": {
                "algorithm": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:LoadBalancerBaseAlgorithm",
                    "description": "This field has been deprecated. You can no longer specify an algorithm for load balancers.",
                    "default": "round_robin"
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the load balancer was created."
                },
                "disableLetsEncryptDnsRecords": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer.",
                    "default": false
                },
                "enableBackendKeepalive": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.",
                    "default": false
                },
                "enableProxyProtocol": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether PROXY Protocol is in use.",
                    "default": false
                },
                "firewall": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:LbFirewall",
                    "description": "An object specifying allow and deny rules to control traffic to the load balancer."
                },
                "forwardingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:load_balancers/v2:ForwardingRule"
                    },
                    "description": "An array of objects specifying the forwarding rules for a load balancer."
                },
                "healthCheck": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:HealthCheck",
                    "description": "An object specifying health check settings for the load balancer."
                },
                "httpIdleTimeoutSeconds": {
                    "type": "integer",
                    "description": "An integer value which configures the idle timeout for HTTP requests to the target droplets.",
                    "default": 60
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a load balancer."
                },
                "ip": {
                    "type": "string",
                    "description": "An attribute containing the public-facing IP address of the load balancer."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a load balancer instance."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project that the load balancer is associated with. If no ID is provided at creation, the load balancer associates with the user's default project. If an invalid project ID is provided, the load balancer will not be created."
                },
                "redirectHttpToHttps": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.",
                    "default": false
                },
                "size": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:LoadBalancerBaseSize",
                    "description": "This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.\n* `lb-small` = 1 node\n* `lb-medium` = 3 nodes\n* `lb-large` = 6 nodes\n\nYou can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.",
                    "default": "lb-small"
                },
                "sizeUnit": {
                    "type": "integer",
                    "description": "How many nodes the load balancer contains. Each additional node increases the load balancer's ability to manage more connections. Load balancers can be scaled up or down, and you can change the number of nodes after creation up to once per hour. This field is currently not available in the AMS2, NYC2, or SFO1 regions. Use the `size` field to scale load balancers that reside in these regions.",
                    "default": 1
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:LoadBalancerBaseStatus",
                    "description": "A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`."
                },
                "stickySessions": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:StickySessions",
                    "description": "An object specifying sticky sessions settings for the load balancer."
                },
                "tag": {
                    "type": "string",
                    "description": "The name of a Droplet tag corresponding to Droplets assigned to the load balancer."
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the load balancer is assigned."
                }
            },
            "type": "object",
            "required": [
                "forwardingRules"
            ]
        },
        "digitalocean-native:load_balancers/v2:LoadBalancerBaseAlgorithm": {
            "description": "This field has been deprecated. You can no longer specify an algorithm for load balancers.",
            "type": "string",
            "enum": [
                {
                    "name": "RoundRobin",
                    "value": "round_robin"
                },
                {
                    "name": "LeastConnections",
                    "value": "least_connections"
                }
            ]
        },
        "digitalocean-native:load_balancers/v2:LoadBalancerBaseSize": {
            "description": "This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.\n* `lb-small` = 1 node\n* `lb-medium` = 3 nodes\n* `lb-large` = 6 nodes\n\nYou can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.",
            "type": "string",
            "enum": [
                {
                    "name": "LbSmall",
                    "value": "lb-small"
                },
                {
                    "name": "LbMedium",
                    "value": "lb-medium"
                },
                {
                    "name": "LbLarge",
                    "value": "lb-large"
                }
            ]
        },
        "digitalocean-native:load_balancers/v2:LoadBalancerBaseStatus": {
            "description": "A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "new"
                },
                {
                    "name": "Active",
                    "value": "active"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:load_balancers/v2:LoadBalancerPropertiesRegion": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:load_balancers/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:StickySessions": {
            "description": "An object specifying sticky sessions settings for the load balancer.",
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "The name of the cookie sent to the client. This attribute is only returned when using `cookies` for the sticky sessions type."
                },
                "cookieTtlSeconds": {
                    "type": "integer",
                    "description": "The number of seconds until the cookie set by the load balancer expires. This attribute is only returned when using `cookies` for the sticky sessions type."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:StickySessionsType",
                    "description": "An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`.",
                    "default": "none"
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:StickySessionsType": {
            "description": "An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`.",
            "type": "string",
            "enum": [
                {
                    "name": "Cookies",
                    "value": "cookies"
                },
                {
                    "name": "None",
                    "value": "none"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:AlertPolicy": {
            "properties": {
                "alerts": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Alerts"
                },
                "compare": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:AlertPolicyCompare"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:AlertPolicyType"
                },
                "uuid": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                },
                "window": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:AlertPolicyWindow"
                }
            },
            "type": "object",
            "required": [
                "alerts",
                "compare",
                "description",
                "enabled",
                "entities",
                "tags",
                "type",
                "uuid",
                "value",
                "window"
            ]
        },
        "digitalocean-native:monitoring/v2:AlertPolicyCompare": {
            "type": "string",
            "enum": [
                {
                    "name": "GreaterThan",
                    "value": "GreaterThan"
                },
                {
                    "name": "LessThan",
                    "value": "LessThan"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:AlertPolicyType": {
            "type": "string",
            "enum": [
                {
                    "name": "V1insightsdropletload1",
                    "value": "v1/insights/droplet/load_1"
                },
                {
                    "name": "V1insightsdropletload5",
                    "value": "v1/insights/droplet/load_5"
                },
                {
                    "name": "V1insightsdropletload15",
                    "value": "v1/insights/droplet/load_15"
                },
                {
                    "name": "V1insightsdropletmemoryUtilizationPercent",
                    "value": "v1/insights/droplet/memory_utilization_percent"
                },
                {
                    "name": "V1insightsdropletdiskUtilizationPercent",
                    "value": "v1/insights/droplet/disk_utilization_percent"
                },
                {
                    "name": "V1insightsdropletcpu",
                    "value": "v1/insights/droplet/cpu"
                },
                {
                    "name": "V1insightsdropletdiskRead",
                    "value": "v1/insights/droplet/disk_read"
                },
                {
                    "name": "V1insightsdropletdiskWrite",
                    "value": "v1/insights/droplet/disk_write"
                },
                {
                    "name": "V1insightsdropletpublicOutboundBandwidth",
                    "value": "v1/insights/droplet/public_outbound_bandwidth"
                },
                {
                    "name": "V1insightsdropletpublicInboundBandwidth",
                    "value": "v1/insights/droplet/public_inbound_bandwidth"
                },
                {
                    "name": "V1insightsdropletprivateOutboundBandwidth",
                    "value": "v1/insights/droplet/private_outbound_bandwidth"
                },
                {
                    "name": "V1insightsdropletprivateInboundBandwidth",
                    "value": "v1/insights/droplet/private_inbound_bandwidth"
                },
                {
                    "name": "V1insightslbaasavgCpuUtilizationPercent",
                    "value": "v1/insights/lbaas/avg_cpu_utilization_percent"
                },
                {
                    "name": "V1insightslbaasconnectionUtilizationPercent",
                    "value": "v1/insights/lbaas/connection_utilization_percent"
                },
                {
                    "name": "V1insightslbaasdropletHealth",
                    "value": "v1/insights/lbaas/droplet_health"
                },
                {
                    "name": "V1insightslbaastlsConnectionsPerSecondUtilizationPercent",
                    "value": "v1/insights/lbaas/tls_connections_per_second_utilization_percent"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRatePercentage5xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRatePercentage4xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRateCount5xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_count_5xx"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRateCount4xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_count_4xx"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime",
                    "value": "v1/insights/lbaas/high_http_request_response_time"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime50p",
                    "value": "v1/insights/lbaas/high_http_request_response_time_50p"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime95p",
                    "value": "v1/insights/lbaas/high_http_request_response_time_95p"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime99p",
                    "value": "v1/insights/lbaas/high_http_request_response_time_99p"
                },
                {
                    "name": "V1dbaasalertsload15Alerts",
                    "value": "v1/dbaas/alerts/load_15_alerts"
                },
                {
                    "name": "V1dbaasalertsmemoryUtilizationAlerts",
                    "value": "v1/dbaas/alerts/memory_utilization_alerts"
                },
                {
                    "name": "V1dbaasalertsdiskUtilizationAlerts",
                    "value": "v1/dbaas/alerts/disk_utilization_alerts"
                },
                {
                    "name": "V1dbaasalertscpuAlerts",
                    "value": "v1/dbaas/alerts/cpu_alerts"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:AlertPolicyWindow": {
            "type": "string",
            "enum": [
                {
                    "name": "5m",
                    "value": "5m"
                },
                {
                    "name": "10m",
                    "value": "10m"
                },
                {
                    "name": "30m",
                    "value": "30m"
                },
                {
                    "name": "1h",
                    "value": "1h"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:Alerts": {
            "properties": {
                "email": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An email to notify on an alert trigger."
                },
                "slack": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:SlackDetails"
                    },
                    "description": "Slack integration details."
                }
            },
            "type": "object",
            "required": [
                "email",
                "slack"
            ]
        },
        "digitalocean-native:monitoring/v2:Compare": {
            "type": "string",
            "enum": [
                {
                    "name": "GreaterThan",
                    "value": "GreaterThan"
                },
                {
                    "name": "LessThan",
                    "value": "LessThan"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:GetMonitoringAlertPolicyProperties": {
            "properties": {
                "policy": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:AlertPolicy"
                }
            },
            "type": "object"
        },
        "digitalocean-native:monitoring/v2:ListMonitoringAlertPolicy": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:AlertPolicy"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta",
                "policies"
            ]
        },
        "digitalocean-native:monitoring/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:monitoring/v2:Metrics": {
            "properties": {
                "data": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:MetricsData"
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:MetricsStatus"
                }
            },
            "type": "object",
            "required": [
                "data",
                "status"
            ]
        },
        "digitalocean-native:monitoring/v2:MetricsData": {
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:MetricsResult"
                    },
                    "description": "Result of query."
                },
                "resultType": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:MetricsDataResultType"
                }
            },
            "type": "object",
            "required": [
                "result",
                "resultType"
            ]
        },
        "digitalocean-native:monitoring/v2:MetricsDataResultType": {
            "type": "string",
            "enum": [
                {
                    "name": "Matrix",
                    "value": "matrix"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:MetricsResult": {
            "properties": {
                "metric": {
                    "$ref": "pulumi.json#/Any",
                    "description": "An object containing the metric labels."
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metric",
                "values"
            ]
        },
        "digitalocean-native:monitoring/v2:MetricsStatus": {
            "type": "string",
            "enum": [
                {
                    "name": "Success",
                    "value": "success"
                },
                {
                    "name": "Error",
                    "value": "error"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:monitoring/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:monitoring/v2:SlackDetails": {
            "properties": {
                "channel": {
                    "type": "string",
                    "description": "Slack channel to notify of an alert trigger."
                },
                "url": {
                    "type": "string",
                    "description": "Slack Webhook URL."
                }
            },
            "type": "object",
            "required": [
                "channel",
                "url"
            ]
        },
        "digitalocean-native:monitoring/v2:Type": {
            "type": "string",
            "enum": [
                {
                    "name": "V1insightsdropletload1",
                    "value": "v1/insights/droplet/load_1"
                },
                {
                    "name": "V1insightsdropletload5",
                    "value": "v1/insights/droplet/load_5"
                },
                {
                    "name": "V1insightsdropletload15",
                    "value": "v1/insights/droplet/load_15"
                },
                {
                    "name": "V1insightsdropletmemoryUtilizationPercent",
                    "value": "v1/insights/droplet/memory_utilization_percent"
                },
                {
                    "name": "V1insightsdropletdiskUtilizationPercent",
                    "value": "v1/insights/droplet/disk_utilization_percent"
                },
                {
                    "name": "V1insightsdropletcpu",
                    "value": "v1/insights/droplet/cpu"
                },
                {
                    "name": "V1insightsdropletdiskRead",
                    "value": "v1/insights/droplet/disk_read"
                },
                {
                    "name": "V1insightsdropletdiskWrite",
                    "value": "v1/insights/droplet/disk_write"
                },
                {
                    "name": "V1insightsdropletpublicOutboundBandwidth",
                    "value": "v1/insights/droplet/public_outbound_bandwidth"
                },
                {
                    "name": "V1insightsdropletpublicInboundBandwidth",
                    "value": "v1/insights/droplet/public_inbound_bandwidth"
                },
                {
                    "name": "V1insightsdropletprivateOutboundBandwidth",
                    "value": "v1/insights/droplet/private_outbound_bandwidth"
                },
                {
                    "name": "V1insightsdropletprivateInboundBandwidth",
                    "value": "v1/insights/droplet/private_inbound_bandwidth"
                },
                {
                    "name": "V1insightslbaasavgCpuUtilizationPercent",
                    "value": "v1/insights/lbaas/avg_cpu_utilization_percent"
                },
                {
                    "name": "V1insightslbaasconnectionUtilizationPercent",
                    "value": "v1/insights/lbaas/connection_utilization_percent"
                },
                {
                    "name": "V1insightslbaasdropletHealth",
                    "value": "v1/insights/lbaas/droplet_health"
                },
                {
                    "name": "V1insightslbaastlsConnectionsPerSecondUtilizationPercent",
                    "value": "v1/insights/lbaas/tls_connections_per_second_utilization_percent"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRatePercentage5xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_percentage_5xx"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRatePercentage4xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_percentage_4xx"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRateCount5xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_count_5xx"
                },
                {
                    "name": "V1insightslbaasincreaseInHttpErrorRateCount4xx",
                    "value": "v1/insights/lbaas/increase_in_http_error_rate_count_4xx"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime",
                    "value": "v1/insights/lbaas/high_http_request_response_time"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime50p",
                    "value": "v1/insights/lbaas/high_http_request_response_time_50p"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime95p",
                    "value": "v1/insights/lbaas/high_http_request_response_time_95p"
                },
                {
                    "name": "V1insightslbaashighHttpRequestResponseTime99p",
                    "value": "v1/insights/lbaas/high_http_request_response_time_99p"
                },
                {
                    "name": "V1dbaasalertsload15Alerts",
                    "value": "v1/dbaas/alerts/load_15_alerts"
                },
                {
                    "name": "V1dbaasalertsmemoryUtilizationAlerts",
                    "value": "v1/dbaas/alerts/memory_utilization_alerts"
                },
                {
                    "name": "V1dbaasalertsdiskUtilizationAlerts",
                    "value": "v1/dbaas/alerts/disk_utilization_alerts"
                },
                {
                    "name": "V1dbaasalertscpuAlerts",
                    "value": "v1/dbaas/alerts/cpu_alerts"
                }
            ]
        },
        "digitalocean-native:monitoring/v2:Window": {
            "type": "string",
            "enum": [
                {
                    "name": "5m",
                    "value": "5m"
                },
                {
                    "name": "10m",
                    "value": "10m"
                },
                {
                    "name": "30m",
                    "value": "30m"
                },
                {
                    "name": "1h",
                    "value": "1h"
                }
            ]
        },
        "digitalocean-native:projects/v2:GetProjectsDefaultProperties": {
            "properties": {
                "project": {
                    "$ref": "#/types/digitalocean-native:projects/v2:Project"
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:GetProjectsProperties": {
            "properties": {
                "project": {
                    "$ref": "#/types/digitalocean-native:projects/v2:Project"
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:ListProjects": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:projects/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:projects/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:Project"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:projects/v2:ListProjectsResources": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:projects/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:projects/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:Resource"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:projects/v2:ListProjectsResourcesDefault": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:projects/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:projects/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:Resource"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:projects/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:projects/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:Project": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the project. The maximum length is 255 characters."
                },
                "environment": {
                    "$ref": "#/types/digitalocean-native:projects/v2:ProjectBaseEnvironment",
                    "description": "The environment of the project's resources."
                },
                "id": {
                    "type": "string",
                    "description": "The unique universal identifier of this project."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "If true, all resources will be added to this project if no project is specified."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name for the project. The maximum length is 175 characters and the name must be unique."
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The integer id of the project owner."
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "The unique universal identifier of the project owner."
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the project. The maximum length is 255 characters. It can\nhave one of the following values:\n\n- Just trying out DigitalOcean\n- Class project / Educational purposes\n- Website or blog\n- Web Application\n- Service or API\n- Mobile Application\n- Machine learning / AI / Data processing\n- IoT\n- Operational / Developer tooling\n\nIf another value for purpose is specified, for example, \"your custom purpose\",\nyour purpose will be stored as `Other: your custom purpose`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was updated."
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:ProjectBaseEnvironment": {
            "description": "The environment of the project's resources.",
            "type": "string",
            "enum": [
                {
                    "name": "Development",
                    "value": "Development"
                },
                {
                    "name": "Staging",
                    "value": "Staging"
                },
                {
                    "name": "Production",
                    "value": "Production"
                }
            ]
        },
        "digitalocean-native:projects/v2:Resource": {
            "properties": {
                "assignedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was created."
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:projects/v2:ResourceLinksProperties",
                    "description": "The links object contains the `self` object, which contains the resource relationship."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:projects/v2:ResourceStatus",
                    "description": "The status of assigning and fetching the resources."
                },
                "urn": {
                    "type": "string",
                    "description": "The uniform resource name (URN) for the resource in the format do:resource_type:resource_id."
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:ResourceLinksProperties": {
            "description": "The links object contains the `self` object, which contains the resource relationship.",
            "properties": {
                "self": {
                    "type": "string",
                    "description": "A URI that can be used to retrieve the resource."
                }
            },
            "type": "object"
        },
        "digitalocean-native:projects/v2:ResourceStatus": {
            "description": "The status of assigning and fetching the resources.",
            "type": "string",
            "enum": [
                {
                    "name": "Ok",
                    "value": "ok"
                },
                {
                    "name": "NotFound",
                    "value": "not_found"
                },
                {
                    "name": "Assigned",
                    "value": "assigned"
                },
                {
                    "name": "AlreadyAssigned",
                    "value": "already_assigned"
                },
                {
                    "name": "ServiceDown",
                    "value": "service_down"
                }
            ]
        },
        "digitalocean-native:regions/v2:ListRegions": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:regions/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:regions/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:regions/v2:Region"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta",
                "regions"
            ]
        },
        "digitalocean-native:regions/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:regions/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:regions/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:regions/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:regions/v2:Region": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:registry/v2:DockerCredentials": {
            "properties": {
                "auths": {
                    "$ref": "#/types/digitalocean-native:registry/v2:DockerCredentialsAuthsProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:DockerCredentialsAuthsProperties": {
            "properties": {
                "registryDigitaloceanCom": {
                    "$ref": "#/types/digitalocean-native:registry/v2:DockerCredentialsAuthsPropertiesRegistryDigitaloceanComProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:DockerCredentialsAuthsPropertiesRegistryDigitaloceanComProperties": {
            "properties": {
                "auth": {
                    "type": "string",
                    "description": "A base64 encoded string containing credentials for the container registry."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:GarbageCollection": {
            "properties": {
                "blobsDeleted": {
                    "type": "integer",
                    "description": "The number of blobs deleted as a result of this garbage collection."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the garbage collection was created."
                },
                "freedBytes": {
                    "type": "integer",
                    "description": "The number of bytes freed as a result of this garbage collection."
                },
                "registryName": {
                    "type": "string",
                    "description": "The name of the container registry."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:registry/v2:GarbageCollectionStatus",
                    "description": "The current status of this garbage collection."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the garbage collection was last updated."
                },
                "uuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the garbage collection."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:GarbageCollectionStatus": {
            "description": "The current status of this garbage collection.",
            "type": "string",
            "enum": [
                {
                    "name": "Requested",
                    "value": "requested"
                },
                {
                    "name": "WaitingForWriteJWTsToExpire",
                    "value": "waiting for write JWTs to expire"
                },
                {
                    "name": "ScanningManifests",
                    "value": "scanning manifests"
                },
                {
                    "name": "DeletingUnreferencedBlobs",
                    "value": "deleting unreferenced blobs"
                },
                {
                    "name": "Cancelling",
                    "value": "cancelling"
                },
                {
                    "name": "Failed",
                    "value": "failed"
                },
                {
                    "name": "Succeeded",
                    "value": "succeeded"
                },
                {
                    "name": "Cancelled",
                    "value": "cancelled"
                }
            ]
        },
        "digitalocean-native:registry/v2:GetRegistryOptionsProperties": {
            "properties": {
                "options": {
                    "$ref": "#/types/digitalocean-native:registry/v2:GetRegistryOptionsPropertiesOptionsProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:GetRegistryOptionsPropertiesOptionsProperties": {
            "properties": {
                "availableRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subscriptionTiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:GetRegistryOptionsPropertiesOptionsPropertiesSubscriptionTiersItem"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:GetRegistryOptionsPropertiesOptionsPropertiesSubscriptionTiersItem": {
            "properties": {
                "allowStorageOverage": {
                    "type": "boolean",
                    "description": "A boolean indicating whether the subscription tier supports additional storage above what is included in the base plan at an additional cost per GiB used."
                },
                "eligibilityReasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:SubscriptionTierExtendedEligibilityReasonsItem"
                    },
                    "description": "If your account is not eligible to use a certain subscription tier, this will include a list of reasons that prevent you from using the tier."
                },
                "eligible": {
                    "type": "boolean",
                    "description": "A boolean indicating whether your account it eligible to use a certain subscription tier."
                },
                "includedBandwidthBytes": {
                    "type": "integer",
                    "description": "The amount of outbound data transfer included in the subscription tier in bytes."
                },
                "includedRepositories": {
                    "type": "integer",
                    "description": "The number of repositories included in the subscription tier. `0` indicates that the subscription tier includes unlimited repositories."
                },
                "includedStorageBytes": {
                    "type": "integer",
                    "description": "The amount of storage included in the subscription tier in bytes."
                },
                "monthlyPriceInCents": {
                    "type": "integer",
                    "description": "The monthly cost of the subscription tier in cents."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the subscription tier."
                },
                "slug": {
                    "type": "string",
                    "description": "The slug identifier of the subscription tier."
                },
                "storageOveragePriceInCents": {
                    "type": "integer",
                    "description": "The price paid in cents per GiB for additional storage beyond what is included in the subscription plan."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:GetRegistryProperties": {
            "properties": {
                "registry": {
                    "$ref": "#/types/digitalocean-native:registry/v2:Registry"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:GetRegistrySubscriptionProperties": {
            "properties": {
                "subscription": {
                    "$ref": "#/types/digitalocean-native:registry/v2:Subscription"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:ListRegistryGarbageCollectionsProperties": {
            "properties": {
                "garbageCollections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:GarbageCollection"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:ListRegistryRepositories": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:registry/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:registry/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:Repository"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:registry/v2:ListRegistryRepositoriesV2": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:registry/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:registry/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:RepositoryV2"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:registry/v2:ListRegistryRepositoryManifests": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:registry/v2:PageLinks"
                },
                "manifests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:RepositoryManifest"
                    }
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:registry/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:registry/v2:ListRegistryRepositoryTags": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:registry/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:registry/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:RepositoryTag"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:registry/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:registry/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:Region": {
            "description": "Slug of the region where registry data is stored. When not provided, a region will be selected.",
            "type": "string",
            "enum": [
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                }
            ]
        },
        "digitalocean-native:registry/v2:Registry": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the registry was created."
                },
                "name": {
                    "type": "string",
                    "description": "A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters."
                },
                "region": {
                    "type": "string",
                    "description": "Slug of the region where registry data is stored"
                },
                "storageUsageBytes": {
                    "type": "integer",
                    "description": "The amount of storage used in the registry in bytes."
                },
                "storageUsageBytesUpdatedAt": {
                    "type": "string",
                    "description": "The time at which the storage usage was updated. Storage usage is calculated asynchronously, and may not immediately reflect pushes to the registry."
                },
                "subscription": {
                    "$ref": "#/types/digitalocean-native:registry/v2:RegistrySubscription"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:RegistrySubscription": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The time at which the subscription was created."
                },
                "tier": {
                    "$ref": "#/types/digitalocean-native:registry/v2:SubscriptionTierBase"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time at which the subscription was last updated."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:Repository": {
            "properties": {
                "latestTag": {
                    "$ref": "#/types/digitalocean-native:registry/v2:RepositoryTag"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the repository."
                },
                "registryName": {
                    "type": "string",
                    "description": "The name of the container registry."
                },
                "tagCount": {
                    "type": "integer",
                    "description": "The number of tags in the repository."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:RepositoryBlob": {
            "properties": {
                "compressedSizeBytes": {
                    "type": "integer",
                    "description": "The compressed size of the blob in bytes."
                },
                "digest": {
                    "type": "string",
                    "description": "The digest of the blob"
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:RepositoryManifest": {
            "properties": {
                "blobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:RepositoryBlob"
                    },
                    "description": "All blobs associated with this manifest"
                },
                "compressedSizeBytes": {
                    "type": "integer",
                    "description": "The compressed size of the manifest in bytes."
                },
                "digest": {
                    "type": "string",
                    "description": "The manifest digest"
                },
                "registryName": {
                    "type": "string",
                    "description": "The name of the container registry."
                },
                "repository": {
                    "type": "string",
                    "description": "The name of the repository."
                },
                "sizeBytes": {
                    "type": "integer",
                    "description": "The uncompressed size of the manifest in bytes (this size is calculated asynchronously so it may not be immediately available)."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "All tags associated with this manifest"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the manifest was last updated."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:RepositoryTag": {
            "properties": {
                "compressedSizeBytes": {
                    "type": "integer",
                    "description": "The compressed size of the tag in bytes."
                },
                "manifestDigest": {
                    "type": "string",
                    "description": "The digest of the manifest associated with the tag."
                },
                "registryName": {
                    "type": "string",
                    "description": "The name of the container registry."
                },
                "repository": {
                    "type": "string",
                    "description": "The name of the repository."
                },
                "sizeBytes": {
                    "type": "integer",
                    "description": "The uncompressed size of the tag in bytes (this size is calculated asynchronously so it may not be immediately available)."
                },
                "tag": {
                    "type": "string",
                    "description": "The name of the tag."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the tag was last updated."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:RepositoryV2": {
            "properties": {
                "latestManifest": {
                    "$ref": "#/types/digitalocean-native:registry/v2:RepositoryManifest"
                },
                "manifestCount": {
                    "type": "integer",
                    "description": "The number of manifests in the repository."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the repository."
                },
                "registryName": {
                    "type": "string",
                    "description": "The name of the container registry."
                },
                "tagCount": {
                    "type": "integer",
                    "description": "The number of tags in the repository."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:Subscription": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The time at which the subscription was created."
                },
                "tier": {
                    "$ref": "#/types/digitalocean-native:registry/v2:SubscriptionTierBase"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time at which the subscription was last updated."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:SubscriptionTierBase": {
            "properties": {
                "allowStorageOverage": {
                    "type": "boolean",
                    "description": "A boolean indicating whether the subscription tier supports additional storage above what is included in the base plan at an additional cost per GiB used."
                },
                "includedBandwidthBytes": {
                    "type": "integer",
                    "description": "The amount of outbound data transfer included in the subscription tier in bytes."
                },
                "includedRepositories": {
                    "type": "integer",
                    "description": "The number of repositories included in the subscription tier. `0` indicates that the subscription tier includes unlimited repositories."
                },
                "includedStorageBytes": {
                    "type": "integer",
                    "description": "The amount of storage included in the subscription tier in bytes."
                },
                "monthlyPriceInCents": {
                    "type": "integer",
                    "description": "The monthly cost of the subscription tier in cents."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the subscription tier."
                },
                "slug": {
                    "type": "string",
                    "description": "The slug identifier of the subscription tier."
                },
                "storageOveragePriceInCents": {
                    "type": "integer",
                    "description": "The price paid in cents per GiB for additional storage beyond what is included in the subscription plan."
                }
            },
            "type": "object"
        },
        "digitalocean-native:registry/v2:SubscriptionTierExtendedEligibilityReasonsItem": {
            "type": "string",
            "enum": [
                {
                    "name": "OverRepositoryLimit",
                    "value": "OverRepositoryLimit"
                },
                {
                    "name": "OverStorageLimit",
                    "value": "OverStorageLimit"
                }
            ]
        },
        "digitalocean-native:registry/v2:SubscriptionTierSlug": {
            "description": "The slug of the subscription tier to sign up for. Valid values can be retrieved using the options endpoint.",
            "type": "string",
            "enum": [
                {
                    "name": "Starter",
                    "value": "starter"
                },
                {
                    "name": "Basic",
                    "value": "basic"
                },
                {
                    "name": "Professional",
                    "value": "professional"
                }
            ]
        },
        "digitalocean-native:registry/v2:TierSlug": {
            "description": "The slug of the subscription tier to sign up for.",
            "type": "string",
            "enum": [
                {
                    "name": "Starter",
                    "value": "starter"
                },
                {
                    "name": "Basic",
                    "value": "basic"
                },
                {
                    "name": "Professional",
                    "value": "professional"
                }
            ]
        },
        "digitalocean-native:reports/v2:NeighborIds": {
            "properties": {
                "neighborIds": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "description": "An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.",
                    "language": {
                        "csharp": {
                            "name": "NeighborIdsValue"
                        }
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:Action": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "projectId": {
                    "type": "string",
                    "description": "The UUID of the project to which the reserved IP currently belongs."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:ActionLink": {
            "description": "The linked actions can be used to check the status of a Droplet's create event.",
            "properties": {
                "href": {
                    "type": "string",
                    "description": "A URL that can be used to access the action."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "rel": {
                    "type": "string",
                    "description": "A string specifying the type of the related action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:ActionRegionSlug": {
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:ActionStatus": {
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "type": "string",
            "enum": [
                {
                    "name": "InProgress",
                    "value": "in-progress"
                },
                {
                    "name": "Completed",
                    "value": "completed"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:Droplet": {
            "properties": {
                "backupIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array of backup IDs of any backups that have been taken of the Droplet instance.  Droplet backups are enabled at the time of the instance creation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the Droplet was created."
                },
                "disk": {
                    "type": "integer",
                    "description": "The size of the Droplet's disk in gigabytes."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of features enabled on this Droplet."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique identifier for each Droplet instance. This is automatically generated upon Droplet creation."
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Image"
                },
                "kernel": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Kernel",
                    "description": "**Note**: All Droplets created after March 2017 use internal kernels by default.\nThese Droplets will have this attribute set to `null`.\n\nThe current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)\nfor Droplets with externally managed kernels. This will initially be set to\nthe kernel of the base image when the Droplet is created.\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the Droplet has been locked, preventing actions by users."
                },
                "memory": {
                    "type": "integer",
                    "description": "Memory of the Droplet in megabytes."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name set for the Droplet instance."
                },
                "networks": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:DropletNetworksProperties",
                    "description": "The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is."
                },
                "nextBackupWindow": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:DropletNextBackupWindowProperties",
                    "description": "The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Region"
                },
                "size": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Size"
                },
                "sizeSlug": {
                    "type": "string",
                    "description": "The unique slug identifier for the size of this Droplet."
                },
                "snapshotIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array of snapshot IDs of any snapshots created from the Droplet instance."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:DropletStatus",
                    "description": "A status string indicating the state of the Droplet instance. This may be \"new\", \"active\", \"off\", or \"archive\"."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Tags the Droplet has been tagged with."
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The number of virtual CPUs."
                },
                "volumeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array including the unique identifier for each Block Storage volume attached to the Droplet."
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the Droplet is assigned."
                }
            },
            "type": "object",
            "required": [
                "backupIds",
                "createdAt",
                "disk",
                "features",
                "id",
                "image",
                "locked",
                "memory",
                "name",
                "networks",
                "nextBackupWindow",
                "region",
                "size",
                "sizeSlug",
                "snapshotIds",
                "status",
                "tags",
                "vcpus",
                "volumeIds"
            ]
        },
        "digitalocean-native:reserved_ips/v2:DropletNetworksProperties": {
            "description": "The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is.",
            "properties": {
                "v4": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:NetworkV4"
                    }
                },
                "v6": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:NetworkV6"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:DropletNextBackupWindowProperties": {
            "description": "The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start.",
            "properties": {
                "end": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format specifying the end of the Droplet's backup window."
                },
                "start": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format specifying the start of the Droplet's backup window."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:DropletStatus": {
            "description": "A status string indicating the state of the Droplet instance. This may be \"new\", \"active\", \"off\", or \"archive\".",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "new"
                },
                {
                    "name": "Active",
                    "value": "active"
                },
                {
                    "name": "Off",
                    "value": "off"
                },
                {
                    "name": "Archive",
                    "value": "archive"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:GetReservedIPsActionsProperties": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:GetReservedIPsActionsPropertiesAction"
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:GetReservedIPsActionsPropertiesAction": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "projectId": {
                    "type": "string",
                    "description": "The UUID of the project to which the reserved IP currently belongs."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:GetReservedIPsProperties": {
            "properties": {
                "reservedIp": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIp"
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:Image": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the image was created."
                },
                "description": {
                    "type": "string",
                    "description": "An optional free-form text field to describe an image."
                },
                "distribution": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ImageDistribution",
                    "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place."
                },
                "errorMessage": {
                    "type": "string",
                    "description": "A string containing information about errors that may occur when importing\n a custom image."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique number that can be used to identify and reference a specific image."
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum disk size in GB required for a Droplet to use this image."
                },
                "name": {
                    "type": "string",
                    "description": "The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question."
                },
                "public": {
                    "type": "boolean",
                    "description": "This is a boolean value that indicates whether the image in question is public or not. An image that is public is available to all accounts. A non-public image is only accessible from your account."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:ImageRegionsItem"
                    },
                    "description": "This attribute is an array of the regions that the image is available in. The regions are represented by their identifying slug values."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The size of the image in gigabytes."
                },
                "slug": {
                    "type": "string",
                    "description": "A uniquely identifying string that is associated with each of the DigitalOcean-provided public images. These can be used to reference a public image as an alternative to the numeric id."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ImageStatus",
                    "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ImageType",
                    "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes)."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:ImageDistribution": {
            "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.",
            "type": "string",
            "enum": [
                {
                    "name": "ArchLinux",
                    "value": "Arch Linux"
                },
                {
                    "name": "CentOS",
                    "value": "CentOS"
                },
                {
                    "name": "CoreOS",
                    "value": "CoreOS"
                },
                {
                    "name": "Debian",
                    "value": "Debian"
                },
                {
                    "name": "Fedora",
                    "value": "Fedora"
                },
                {
                    "name": "FedoraAtomic",
                    "value": "Fedora Atomic"
                },
                {
                    "name": "FreeBSD",
                    "value": "FreeBSD"
                },
                {
                    "name": "Gentoo",
                    "value": "Gentoo"
                },
                {
                    "name": "OpenSUSE",
                    "value": "openSUSE"
                },
                {
                    "name": "RancherOS",
                    "value": "RancherOS"
                },
                {
                    "name": "RockyLinux",
                    "value": "Rocky Linux"
                },
                {
                    "name": "Ubuntu",
                    "value": "Ubuntu"
                },
                {
                    "name": "Unknown",
                    "value": "Unknown"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:ImageRegionsItem": {
            "description": "The slug identifier for the region where the resource will initially be  available.",
            "type": "string",
            "enum": [
                {
                    "name": "Ams1",
                    "value": "ams1"
                },
                {
                    "name": "Ams2",
                    "value": "ams2"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Blr1",
                    "value": "blr1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                },
                {
                    "name": "Lon1",
                    "value": "lon1"
                },
                {
                    "name": "Nyc1",
                    "value": "nyc1"
                },
                {
                    "name": "Nyc2",
                    "value": "nyc2"
                },
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo1",
                    "value": "sfo1"
                },
                {
                    "name": "Sfo2",
                    "value": "sfo2"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Tor1",
                    "value": "tor1"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:ImageStatus": {
            "description": "A status string indicating the state of a custom image. This may be `NEW`,\n `available`, `pending`, `deleted`, or `retired`.",
            "type": "string",
            "enum": [
                {
                    "name": "New",
                    "value": "NEW"
                },
                {
                    "name": "Available",
                    "value": "available"
                },
                {
                    "name": "Pending",
                    "value": "pending"
                },
                {
                    "name": "Deleted",
                    "value": "deleted"
                },
                {
                    "name": "Retired",
                    "value": "retired"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:ImageType": {
            "description": "Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).",
            "type": "string",
            "enum": [
                {
                    "name": "Base",
                    "value": "base"
                },
                {
                    "name": "Snapshot",
                    "value": "snapshot"
                },
                {
                    "name": "Backup",
                    "value": "backup"
                },
                {
                    "name": "Custom",
                    "value": "custom"
                },
                {
                    "name": "Admin",
                    "value": "admin"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:Kernel": {
            "description": "**Note**: All Droplets created after March 2017 use internal kernels by default.\nThese Droplets will have this attribute set to `null`.\n\nThe current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)\nfor Droplets with externally managed kernels. This will initially be set to\nthe kernel of the base image when the Droplet is created.\n",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique number used to identify and reference a specific kernel."
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the kernel. This is shown in the web UI and is generally a descriptive title for the kernel in question."
                },
                "version": {
                    "type": "string",
                    "description": "A standard kernel version string representing the version, patch, and release information."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:LinksProperties": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:ActionLink"
                    }
                },
                "droplets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:ActionLink"
                    }
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:ListReservedIPs": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "reservedIps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIp"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:reserved_ips/v2:ListReservedIPsActions": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:Action"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:reserved_ips/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:NetworkV4": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "The gateway of the specified IPv4 network interface.\n\nFor private interfaces, a gateway is not provided. This is denoted by\nreturning `nil` as its value.\n"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the IPv4 network interface."
                },
                "netmask": {
                    "type": "string",
                    "description": "The netmask of the IPv4 network interface."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:NetworkV4Type",
                    "description": "The type of the IPv4 network interface."
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:NetworkV4Type": {
            "description": "The type of the IPv4 network interface.",
            "type": "string",
            "enum": [
                {
                    "name": "Public",
                    "value": "public"
                },
                {
                    "name": "Private",
                    "value": "private"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:NetworkV6": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "The gateway of the specified IPv6 network interface."
                },
                "ipAddress": {
                    "type": "string",
                    "description": "The IP address of the IPv6 network interface."
                },
                "netmask": {
                    "type": "integer",
                    "description": "The netmask of the IPv6 network interface."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:NetworkV6Type",
                    "description": "The type of the IPv6 network interface.\n\n**Note**: IPv6 private  networking is not currently supported.\n"
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:NetworkV6Type": {
            "description": "The type of the IPv6 network interface.\n\n**Note**: IPv6 private  networking is not currently supported.\n",
            "type": "string",
            "enum": [
                {
                    "name": "Public",
                    "value": "public"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:Region": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:reserved_ips/v2:ReservedIp": {
            "properties": {
                "droplet": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Droplet",
                    "description": "The Droplet that the reserved IP has been assigned to. When you query a reserved IP, if it is assigned to a Droplet, the entire Droplet object will be returned. If it is not assigned, the value will be null."
                },
                "ip": {
                    "type": "string",
                    "description": "The public IP address of the reserved IP. It also serves as its identifier."
                },
                "locked": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether or not the reserved IP has pending actions preventing new ones from being submitted."
                },
                "projectId": {
                    "type": "string",
                    "description": "The UUID of the project to which the reserved IP currently belongs."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIpRegion"
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:ReservedIpActionTypeType": {
            "description": "The type of action to initiate for the reserved IP.",
            "type": "string",
            "enum": [
                {
                    "name": "Assign",
                    "value": "assign"
                },
                {
                    "name": "Unassign",
                    "value": "unassign"
                }
            ]
        },
        "digitalocean-native:reserved_ips/v2:ReservedIpRegion": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:reserved_ips/v2:Size": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created with this size.",
                    "default": true
                },
                "description": {
                    "type": "string",
                    "description": "A string describing the class of Droplets created from this size. For example: Basic, General Purpose, CPU-Optimized, Memory-Optimized, or Storage-Optimized."
                },
                "disk": {
                    "type": "integer",
                    "description": "The amount of disk space set aside for Droplets of this size. The value is represented in gigabytes."
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of RAM allocated to Droplets created of this size. The value is represented in megabytes."
                },
                "priceHourly": {
                    "type": "number",
                    "description": "This describes the price of the Droplet size as measured hourly. The value is measured in US dollars."
                },
                "priceMonthly": {
                    "type": "number",
                    "description": "This attribute describes the monthly cost of this Droplet size if the Droplet is kept for an entire month. The value is measured in US dollars."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the region slugs where this size is available for Droplet creates."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used to uniquely identify each size."
                },
                "transfer": {
                    "type": "number",
                    "description": "The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes."
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The integer of number CPUs allocated to Droplets of this size."
                }
            },
            "type": "object",
            "required": [
                "available",
                "description",
                "disk",
                "memory",
                "priceHourly",
                "priceMonthly",
                "regions",
                "slug",
                "transfer",
                "vcpus"
            ]
        },
        "digitalocean-native:sizes/v2:ListSizes": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:sizes/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:sizes/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:sizes/v2:Size"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta",
                "sizes"
            ]
        },
        "digitalocean-native:sizes/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:sizes/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:sizes/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:sizes/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:sizes/v2:Size": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created with this size.",
                    "default": true
                },
                "description": {
                    "type": "string",
                    "description": "A string describing the class of Droplets created from this size. For example: Basic, General Purpose, CPU-Optimized, Memory-Optimized, or Storage-Optimized."
                },
                "disk": {
                    "type": "integer",
                    "description": "The amount of disk space set aside for Droplets of this size. The value is represented in gigabytes."
                },
                "memory": {
                    "type": "integer",
                    "description": "The amount of RAM allocated to Droplets created of this size. The value is represented in megabytes."
                },
                "priceHourly": {
                    "type": "number",
                    "description": "This describes the price of the Droplet size as measured hourly. The value is measured in US dollars."
                },
                "priceMonthly": {
                    "type": "number",
                    "description": "This attribute describes the monthly cost of this Droplet size if the Droplet is kept for an entire month. The value is measured in US dollars."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the region slugs where this size is available for Droplet creates."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used to uniquely identify each size."
                },
                "transfer": {
                    "type": "number",
                    "description": "The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes."
                },
                "vcpus": {
                    "type": "integer",
                    "description": "The integer of number CPUs allocated to Droplets of this size."
                }
            },
            "type": "object",
            "required": [
                "available",
                "description",
                "disk",
                "memory",
                "priceHourly",
                "priceMonthly",
                "regions",
                "slug",
                "transfer",
                "vcpus"
            ]
        },
        "digitalocean-native:snapshots/v2:GetSnapshotsProperties": {
            "properties": {
                "snapshot": {
                    "$ref": "#/types/digitalocean-native:snapshots/v2:Snapshots"
                }
            },
            "type": "object"
        },
        "digitalocean-native:snapshots/v2:ListSnapshots": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:snapshots/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:snapshots/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:snapshots/v2:Snapshots"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:snapshots/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:snapshots/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:snapshots/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:snapshots/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:snapshots/v2:Snapshots": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the snapshot was created."
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum size in GB required for a volume or Droplet to use this snapshot."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the snapshot."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of the regions that the snapshot is available in. The regions are represented by their identifying slug values."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The unique identifier for the resource that the snapshot originated from."
                },
                "resourceType": {
                    "$ref": "#/types/digitalocean-native:snapshots/v2:SnapshotsPropertiesResourceType",
                    "description": "The type of resource that the snapshot originated from."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The billable size of the snapshot in gigabytes."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Tags the snapshot has been tagged with."
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "minDiskSize",
                "name",
                "regions",
                "resourceId",
                "resourceType",
                "sizeGigabytes",
                "tags"
            ]
        },
        "digitalocean-native:snapshots/v2:SnapshotsPropertiesResourceType": {
            "description": "The type of resource that the snapshot originated from.",
            "type": "string",
            "enum": [
                {
                    "name": "Droplet",
                    "value": "droplet"
                },
                {
                    "name": "Volume",
                    "value": "volume"
                }
            ]
        },
        "digitalocean-native:tags/v2:GetTagsProperties": {
            "properties": {
                "tag": {
                    "$ref": "#/types/digitalocean-native:tags/v2:Tags",
                    "description": "A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.\nTags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged."
                }
            },
            "type": "object"
        },
        "digitalocean-native:tags/v2:ListTags": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:tags/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:tags/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:tags/v2:Tags"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:tags/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:tags/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:tags/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:tags/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:tags/v2:Resources": {
            "description": "An embedded object containing key value pairs of resource type and resource statistics. It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag.",
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of tagged objects for this type of resource."
                },
                "lastTaggedUri": {
                    "type": "string",
                    "description": "The URI for the last tagged object for this type of resource."
                }
            },
            "type": "object"
        },
        "digitalocean-native:tags/v2:ResourcesItemProperties": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "The identifier of a resource."
                },
                "resourceType": {
                    "$ref": "#/types/digitalocean-native:tags/v2:ResourcesItemPropertiesResourceType",
                    "description": "The type of the resource."
                }
            },
            "type": "object"
        },
        "digitalocean-native:tags/v2:ResourcesItemPropertiesResourceType": {
            "description": "The type of the resource.",
            "type": "string",
            "enum": [
                {
                    "name": "Droplet",
                    "value": "droplet"
                },
                {
                    "name": "Image",
                    "value": "image"
                },
                {
                    "name": "Volume",
                    "value": "volume"
                },
                {
                    "name": "VolumeSnapshot",
                    "value": "volume_snapshot"
                }
            ]
        },
        "digitalocean-native:tags/v2:Tags": {
            "description": "A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.\nTags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores.\nThere is a limit of 255 characters per tag.\n\n**Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.\n\nWhen working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named \"PROD\", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).\n\nTagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named \"PROD\", you can tag resources in the control panel by entering \"prod\". The tag will still display with its canonical capitalization, \"PROD\".\n"
                },
                "resources": {
                    "$ref": "#/types/digitalocean-native:tags/v2:TagsResources",
                    "description": "An embedded object containing key value pairs of resource type and resource statistics. It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag."
                }
            },
            "type": "object"
        },
        "digitalocean-native:tags/v2:TagsResources": {
            "description": "An embedded object containing key value pairs of resource type and resource statistics. It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag.",
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "The number of tagged objects for this type of resource."
                },
                "lastTaggedUri": {
                    "type": "string",
                    "description": "The URI for the last tagged object for this type of resource."
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:Alert": {
            "properties": {
                "comparison": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatableComparison",
                    "description": "The comparison operator used against the alert's threshold."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the alert."
                },
                "name": {
                    "type": "string",
                    "description": "A human-friendly display name."
                },
                "notifications": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:Notification",
                    "description": "The notification settings for a trigger alert."
                },
                "period": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatablePeriod",
                    "description": "Period of time the threshold must be exceeded to trigger the alert."
                },
                "threshold": {
                    "type": "integer",
                    "description": "The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatableType",
                    "description": "The type of alert."
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:AlertUpdatableComparison": {
            "description": "The comparison operator used against the alert's threshold.",
            "type": "string",
            "enum": [
                {
                    "name": "GreaterThan",
                    "value": "greater_than"
                },
                {
                    "name": "LessThan",
                    "value": "less_than"
                }
            ]
        },
        "digitalocean-native:uptime/v2:AlertUpdatablePeriod": {
            "description": "Period of time the threshold must be exceeded to trigger the alert.",
            "type": "string",
            "enum": [
                {
                    "name": "2m",
                    "value": "2m"
                },
                {
                    "name": "3m",
                    "value": "3m"
                },
                {
                    "name": "5m",
                    "value": "5m"
                },
                {
                    "name": "10m",
                    "value": "10m"
                },
                {
                    "name": "15m",
                    "value": "15m"
                },
                {
                    "name": "30m",
                    "value": "30m"
                },
                {
                    "name": "1h",
                    "value": "1h"
                }
            ]
        },
        "digitalocean-native:uptime/v2:AlertUpdatableType": {
            "description": "The type of alert.",
            "type": "string",
            "enum": [
                {
                    "name": "Latency",
                    "value": "latency"
                },
                {
                    "name": "Down",
                    "value": "down"
                },
                {
                    "name": "DownGlobal",
                    "value": "down_global"
                },
                {
                    "name": "SslExpiry",
                    "value": "ssl_expiry"
                }
            ]
        },
        "digitalocean-native:uptime/v2:Check": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the check is enabled/disabled.",
                    "default": true
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the check."
                },
                "name": {
                    "type": "string",
                    "description": "A human-friendly display name."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:CheckUpdatableRegionsItem"
                    },
                    "description": "An array containing the selected regions to perform healthchecks from."
                },
                "target": {
                    "type": "string",
                    "description": "The endpoint to perform healthchecks on."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:CheckUpdatableType",
                    "description": "The type of health check to perform."
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:CheckUpdatableRegionsItem": {
            "type": "string",
            "enum": [
                {
                    "name": "UsEast",
                    "value": "us_east"
                },
                {
                    "name": "UsWest",
                    "value": "us_west"
                },
                {
                    "name": "EuWest",
                    "value": "eu_west"
                },
                {
                    "name": "SeAsia",
                    "value": "se_asia"
                }
            ]
        },
        "digitalocean-native:uptime/v2:CheckUpdatableType": {
            "description": "The type of health check to perform.",
            "type": "string",
            "enum": [
                {
                    "name": "Ping",
                    "value": "ping"
                },
                {
                    "name": "Http",
                    "value": "http"
                },
                {
                    "name": "Https",
                    "value": "https"
                }
            ]
        },
        "digitalocean-native:uptime/v2:GetUptimeAlertProperties": {
            "properties": {
                "alert": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:Alert"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:GetUptimeCheckProperties": {
            "properties": {
                "check": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:Check"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:GetUptimeCheckStateProperties": {
            "properties": {
                "state": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:State"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:ListUptimeAlerts": {
            "properties": {
                "alerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:Alert"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:uptime/v2:ListUptimeChecks": {
            "properties": {
                "checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:Check"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:uptime/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:Notification": {
            "description": "The notification settings for a trigger alert.",
            "properties": {
                "email": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An email to notify on an alert trigger."
                },
                "slack": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:NotificationSlackItemProperties"
                    },
                    "description": "Slack integration details."
                }
            },
            "type": "object",
            "required": [
                "email",
                "slack"
            ]
        },
        "digitalocean-native:uptime/v2:NotificationSlackItemProperties": {
            "properties": {
                "channel": {
                    "type": "string",
                    "description": "Slack channel to notify of an alert trigger."
                },
                "url": {
                    "type": "string",
                    "description": "Slack Webhook URL."
                }
            },
            "type": "object",
            "required": [
                "channel",
                "url"
            ]
        },
        "digitalocean-native:uptime/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:PreviousOutage": {
            "properties": {
                "durationSeconds": {
                    "type": "integer"
                },
                "endedAt": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:RegionState": {
            "properties": {
                "status": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:RegionStateStatus"
                },
                "statusChangedAt": {
                    "type": "string"
                },
                "thirtyDayUptimePercentage": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:RegionStateStatus": {
            "type": "string",
            "enum": [
                {
                    "name": "Down",
                    "value": "DOWN"
                },
                {
                    "name": "Up",
                    "value": "UP"
                },
                {
                    "name": "Checking",
                    "value": "CHECKING"
                }
            ]
        },
        "digitalocean-native:uptime/v2:RegionalState": {
            "description": "A map of region to regional state",
            "properties": {
                "euWest": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:RegionState"
                },
                "usEast": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:RegionState"
                }
            },
            "type": "object"
        },
        "digitalocean-native:uptime/v2:State": {
            "properties": {
                "previousOutage": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:PreviousOutage"
                },
                "regions": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:RegionalState",
                    "description": "A map of region to regional state"
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:ActionRegionSlug": {
            "type": "object"
        },
        "digitalocean-native:volumes/v2:ActionStatus": {
            "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
            "type": "string",
            "enum": [
                {
                    "name": "InProgress",
                    "value": "in-progress"
                },
                {
                    "name": "Completed",
                    "value": "completed"
                },
                {
                    "name": "Errored",
                    "value": "errored"
                }
            ]
        },
        "digitalocean-native:volumes/v2:GetVolumeActionsProperties": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeAction"
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:GetVolumeSnapshotsByIdProperties": {
            "properties": {
                "snapshot": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:Snapshots"
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:GetVolumesProperties": {
            "properties": {
                "volume": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeFull"
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:ListVolumeActions": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:VolumeAction"
                    }
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:volumes/v2:ListVolumeSnapshots": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "snapshots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:Snapshots"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:volumes/v2:ListVolumes": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:VolumeFull"
                    },
                    "description": "Array of volumes."
                }
            },
            "type": "object",
            "required": [
                "meta",
                "volumes"
            ]
        },
        "digitalocean-native:volumes/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:Region": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:volumes/v2:Snapshots": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the snapshot was created."
                },
                "minDiskSize": {
                    "type": "integer",
                    "description": "The minimum size in GB required for a volume or Droplet to use this snapshot."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the snapshot."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of the regions that the snapshot is available in. The regions are represented by their identifying slug values."
                },
                "resourceId": {
                    "type": "string",
                    "description": "The unique identifier for the resource that the snapshot originated from."
                },
                "resourceType": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:SnapshotsPropertiesResourceType",
                    "description": "The type of resource that the snapshot originated from."
                },
                "sizeGigabytes": {
                    "type": "number",
                    "description": "The billable size of the snapshot in gigabytes."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of Tags the snapshot has been tagged with."
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "minDiskSize",
                "name",
                "regions",
                "resourceId",
                "resourceType",
                "sizeGigabytes",
                "tags"
            ]
        },
        "digitalocean-native:volumes/v2:SnapshotsPropertiesResourceType": {
            "description": "The type of resource that the snapshot originated from.",
            "type": "string",
            "enum": [
                {
                    "name": "Droplet",
                    "value": "droplet"
                },
                {
                    "name": "Volume",
                    "value": "volume"
                }
            ]
        },
        "digitalocean-native:volumes/v2:VolumeAction": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "id": {
                    "type": "integer",
                    "description": "A unique numeric ID that can be used to identify and reference an action."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:ActionRegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:ActionStatus",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:VolumeActionPostBaseRegion": {
            "description": "The slug identifier for the region where the resource will initially be  available.",
            "type": "string",
            "enum": [
                {
                    "name": "Ams1",
                    "value": "ams1"
                },
                {
                    "name": "Ams2",
                    "value": "ams2"
                },
                {
                    "name": "Ams3",
                    "value": "ams3"
                },
                {
                    "name": "Blr1",
                    "value": "blr1"
                },
                {
                    "name": "Fra1",
                    "value": "fra1"
                },
                {
                    "name": "Lon1",
                    "value": "lon1"
                },
                {
                    "name": "Nyc1",
                    "value": "nyc1"
                },
                {
                    "name": "Nyc2",
                    "value": "nyc2"
                },
                {
                    "name": "Nyc3",
                    "value": "nyc3"
                },
                {
                    "name": "Sfo1",
                    "value": "sfo1"
                },
                {
                    "name": "Sfo2",
                    "value": "sfo2"
                },
                {
                    "name": "Sfo3",
                    "value": "sfo3"
                },
                {
                    "name": "Sgp1",
                    "value": "sgp1"
                },
                {
                    "name": "Tor1",
                    "value": "tor1"
                }
            ]
        },
        "digitalocean-native:volumes/v2:VolumeActionPostBaseType": {
            "description": "The volume action to initiate.",
            "type": "string",
            "enum": [
                {
                    "name": "Attach",
                    "value": "attach"
                },
                {
                    "name": "Detach",
                    "value": "detach"
                },
                {
                    "name": "Resize",
                    "value": "resize"
                }
            ]
        },
        "digitalocean-native:volumes/v2:VolumeFull": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the block storage volume was created."
                },
                "description": {
                    "type": "string",
                    "description": "An optional free-form text field to describe a block storage volume."
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets the volume is attached to. Note that at this time, a volume can only be attached to a single Droplet."
                },
                "filesystemLabel": {
                    "type": "string",
                    "description": "The label currently applied to the filesystem."
                },
                "filesystemType": {
                    "type": "string",
                    "description": "The type of filesystem currently in-use on the volume."
                },
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the block storage volume."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the block storage volume. Must be lowercase and be composed only of numbers, letters and \"-\", up to a limit of 64 characters. The name must begin with a letter."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeFullPropertiesRegion"
                },
                "sizeGigabytes": {
                    "type": "integer",
                    "description": "The size of the block storage volume in GiB (1024^3). This field does not apply  when creating a volume from a snapshot."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                }
            },
            "type": "object"
        },
        "digitalocean-native:volumes/v2:VolumeFullPropertiesRegion": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "This is a boolean value that represents whether new Droplets can be created in this region."
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains features available in this region"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the region.  This will be a full name that is used in the control panel and other interfaces."
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This attribute is set to an array which contains the identifying slugs for the sizes available in this region."
                },
                "slug": {
                    "type": "string",
                    "description": "A human-readable string that is used as a unique identifier for each region."
                }
            },
            "type": "object",
            "required": [
                "available",
                "features",
                "name",
                "sizes",
                "slug"
            ]
        },
        "digitalocean-native:vpcs/v2:GetVpcsProperties": {
            "properties": {
                "vpc": {
                    "$ref": "#/types/digitalocean-native:vpcs/v2:Vpc"
                }
            },
            "type": "object"
        },
        "digitalocean-native:vpcs/v2:ListVpcs": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:vpcs/v2:PageLinks"
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:vpcs/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                },
                "vpcs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:vpcs/v2:Vpc"
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:vpcs/v2:ListVpcsMembers": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:vpcs/v2:PageLinks"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:vpcs/v2:VpcMember"
                    }
                },
                "meta": {
                    "$ref": "#/types/digitalocean-native:vpcs/v2:MetaMeta",
                    "language": {
                        "csharp": {
                            "name": "MetaValue"
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "meta"
            ]
        },
        "digitalocean-native:vpcs/v2:MetaMeta": {
            "properties": {
                "total": {
                    "type": "integer",
                    "description": "Number of objects returned by the request."
                }
            },
            "type": "object"
        },
        "digitalocean-native:vpcs/v2:PageLinks": {
            "properties": {
                "pages": {
                    "$ref": "#/types/digitalocean-native:vpcs/v2:PageLinksPagesProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:vpcs/v2:PageLinksPagesProperties": {
            "properties": {
                "first": {
                    "type": "string"
                },
                "last": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "digitalocean-native:vpcs/v2:Vpc": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format."
                },
                "default": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether or not the VPC is the default network for the region. All applicable resources are placed into the default VPC network unless otherwise specified during their creation. The `default` field cannot be unset from `true`. If you want to set a new default VPC network, update the `default` field of another VPC network in the same region. The previous network's `default` field will be set to `false` when a new default VPC has been defined."
                },
                "description": {
                    "type": "string",
                    "description": "A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters."
                },
                "id": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference the VPC."
                },
                "ipRange": {
                    "type": "string",
                    "description": "The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/28` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the VPC will be created."
                },
                "urn": {
                    "type": "string",
                    "description": "The uniform resource name (URN) for the resource in the format do:resource_type:resource_id."
                }
            },
            "type": "object"
        },
        "digitalocean-native:vpcs/v2:VpcMember": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the resource was created."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource."
                },
                "urn": {
                    "type": "string",
                    "description": "The uniform resource name (URN) for the resource in the format do:resource_type:resource_id."
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the DigitalOcean package.",
        "type": "object",
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "The DigitalOcean API key.",
                "defaultInfo": {
                    "environment": [
                        "DIGITALOCEAN_NATIVE_APIKEY"
                    ]
                },
                "language": {
                    "csharp": {
                        "name": "ApiKey"
                    }
                },
                "secret": true
            }
        }
    },
    "resources": {
        "digitalocean-native:1-clicks/v2:OneClicksInstallKubernetes": {
            "properties": {
                "addonSlugs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of 1-Click Application slugs to be installed to the Kubernetes cluster."
                },
                "clusterUuid": {
                    "type": "string",
                    "description": "A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed."
                },
                "message": {
                    "type": "string",
                    "description": "A message about the result of the request."
                }
            },
            "type": "object",
            "required": [
                "addonSlugs",
                "clusterUuid"
            ],
            "inputProperties": {
                "addonSlugs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of 1-Click Application slugs to be installed to the Kubernetes cluster."
                },
                "clusterUuid": {
                    "type": "string",
                    "description": "A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed."
                }
            },
            "requiredInputs": [
                "addonSlugs",
                "clusterUuid"
            ]
        },
        "digitalocean-native:account/v2:SshKeys": {
            "properties": {
                "fingerprint": {
                    "type": "string",
                    "description": "A unique identifier that differentiates this key from other keys using  a format that SSH recognizes. The fingerprint is created when the key is added to your account."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable display name for this key, used to easily identify the SSH keys when they are displayed."
                },
                "publicKey": {
                    "type": "string",
                    "description": "The entire public key string that was uploaded. Embedded into the root user's `authorized_keys` file if you include this key during Droplet creation."
                },
                "sshKey": {
                    "$ref": "#/types/digitalocean-native:account/v2:SshKeys"
                }
            },
            "type": "object",
            "required": [
                "name",
                "publicKey"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "A human-readable display name for this key, used to easily identify the SSH keys when they are displayed."
                },
                "publicKey": {
                    "type": "string",
                    "description": "The entire public key string that was uploaded. Embedded into the root user's `authorized_keys` file if you include this key during Droplet creation."
                }
            },
            "requiredInputs": [
                "publicKey"
            ]
        },
        "digitalocean-native:apps/v2:Apps": {
            "properties": {
                "app": {
                    "$ref": "#/types/digitalocean-native:apps/v2:App",
                    "description": "An application's configuration and status."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project the app should be assigned to. If omitted, it will be assigned to your default project."
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                }
            },
            "type": "object",
            "required": [
                "spec"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project the app should be assigned to. If omitted, it will be assigned to your default project."
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                }
            },
            "requiredInputs": [
                "spec"
            ]
        },
        "digitalocean-native:apps/v2:AppsAssignAlertDestinations": {
            "properties": {
                "alert": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppAlert"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "slackWebhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSlackWebhook"
                    }
                }
            },
            "type": "object",
            "inputProperties": {
                "alertId": {
                    "type": "string",
                    "description": "The alert ID"
                },
                "appId": {
                    "type": "string",
                    "description": "The app ID"
                },
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "slackWebhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppAlertSlackWebhook"
                    }
                }
            }
        },
        "digitalocean-native:apps/v2:AppsDeployment": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeployment"
                },
                "forceBuild": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The app ID"
                },
                "forceBuild": {
                    "type": "boolean"
                }
            }
        },
        "digitalocean-native:apps/v2:AppsListMetricsBandwidthDaily": {
            "properties": {
                "appBandwidthUsage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppMetricsBandwidthUsageDetails"
                    },
                    "description": "A list of bandwidth usage details by app."
                },
                "appIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app IDs to query bandwidth metrics for."
                },
                "date": {
                    "type": "string",
                    "description": "The date for the metrics data."
                }
            },
            "type": "object",
            "required": [
                "appIds"
            ],
            "inputProperties": {
                "appIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of app IDs to query bandwidth metrics for."
                },
                "date": {
                    "type": "string",
                    "description": "Optional day to query. Only the date component of the timestamp will be considered. Default: yesterday."
                }
            },
            "requiredInputs": [
                "appIds"
            ]
        },
        "digitalocean-native:apps/v2:AppsRollback": {
            "properties": {
                "deployment": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppsDeployment"
                },
                "deploymentId": {
                    "type": "string",
                    "description": "The ID of the deployment to rollback to."
                },
                "skipPin": {
                    "type": "boolean",
                    "description": "Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned."
                }
            },
            "type": "object",
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The app ID"
                },
                "deploymentId": {
                    "type": "string",
                    "description": "The ID of the deployment to rollback to."
                },
                "skipPin": {
                    "type": "boolean",
                    "description": "Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned."
                }
            }
        },
        "digitalocean-native:apps/v2:AppsValidateAppSpec": {
            "properties": {
                "appCost": {
                    "type": "integer",
                    "description": "The monthly cost of the proposed app in USD using the next pricing plan tier. For example, if you propose an app that uses the Basic tier, the `app_tier_upgrade_cost` field displays the monthly cost of the app if it were to use the Professional tier. If the proposed app already uses the most expensive tier, the field is empty."
                },
                "appId": {
                    "type": "string",
                    "description": "An optional ID of an existing app. If set, the spec will be treated as a proposed update to the specified app. The existing app is not modified using this method."
                },
                "appIsStatic": {
                    "type": "boolean",
                    "description": "Indicates whether the app is a static app."
                },
                "appNameAvailable": {
                    "type": "boolean",
                    "description": "Indicates whether the app name is available."
                },
                "appNameSuggestion": {
                    "type": "string",
                    "description": "The suggested name if the proposed app name is unavailable."
                },
                "appTierDowngradeCost": {
                    "type": "integer",
                    "description": "The monthly cost of the proposed app in USD using the previous pricing plan tier. For example, if you propose an app that uses the Professional tier, the `app_tier_downgrade_cost` field displays the monthly cost of the app if it were to use the Basic tier. If the proposed app already uses the lest expensive tier, the field is empty."
                },
                "existingStaticApps": {
                    "type": "string",
                    "description": "The maximum number of free static apps the account can have. We will charge you for any additional static apps."
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                }
            },
            "type": "object",
            "required": [
                "spec"
            ],
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "An optional ID of an existing app. If set, the spec will be treated as a proposed update to the specified app. The existing app is not modified using this method."
                },
                "spec": {
                    "$ref": "#/types/digitalocean-native:apps/v2:AppSpec",
                    "description": "The desired configuration of an application."
                }
            },
            "requiredInputs": [
                "spec"
            ]
        },
        "digitalocean-native:apps/v2:AppsValidateRollback": {
            "properties": {
                "deploymentId": {
                    "type": "string",
                    "description": "The ID of the deployment to rollback to."
                },
                "error": {
                    "$ref": "#/types/digitalocean-native:apps/v2:Error"
                },
                "skipPin": {
                    "type": "boolean",
                    "description": "Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned."
                },
                "valid": {
                    "type": "boolean",
                    "description": "Indicates whether the app can be rolled back to the specified deployment."
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppRollbackValidationCondition"
                    },
                    "description": "Contains a list of warnings that may cause the rollback to run under unideal circumstances."
                }
            },
            "type": "object",
            "inputProperties": {
                "appId": {
                    "type": "string",
                    "description": "The app ID"
                },
                "deploymentId": {
                    "type": "string",
                    "description": "The ID of the deployment to rollback to."
                },
                "skipPin": {
                    "type": "boolean",
                    "description": "Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned."
                }
            }
        },
        "digitalocean-native:cdn/v2:CdnEndpoint": {
            "properties": {
                "certificateId": {
                    "type": "string",
                    "description": "The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the CDN endpoint was created."
                },
                "customDomain": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint."
                },
                "endpoint": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:CdnEndpoint"
                },
                "origin": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space."
                },
                "ttl": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:Ttl",
                    "description": "The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.",
                    "default": 3600
                }
            },
            "type": "object",
            "required": [
                "origin"
            ],
            "inputProperties": {
                "certificateId": {
                    "type": "string",
                    "description": "The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided."
                },
                "customDomain": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint."
                },
                "origin": {
                    "type": "string",
                    "description": "The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space."
                },
                "ttl": {
                    "$ref": "#/types/digitalocean-native:cdn/v2:Ttl",
                    "description": "The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.",
                    "default": 3600
                }
            },
            "requiredInputs": [
                "origin"
            ]
        },
        "digitalocean-native:certificates/v2:Certificates": {
            "properties": {
                "certificate": {
                    "$ref": "#/types/digitalocean-native:certificates/v2:Certificate"
                }
            },
            "type": "object"
        },
        "digitalocean-native:databases/v2:Databases": {
            "properties": {
                "db": {
                    "$ref": "#/types/digitalocean-native:databases/v2:Database"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database."
                }
            },
            "type": "object",
            "required": [
                "db",
                "name"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the database."
                }
            }
        },
        "digitalocean-native:databases/v2:DatabasesCluster": {
            "properties": {
                "backupRestore": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseBackup"
                },
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterConnection"
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the database cluster was created."
                },
                "database": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseCluster"
                },
                "dbNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of databases created in the database cluster."
                },
                "engine": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterEngine",
                    "description": "A slug representing the database engine used for the cluster. The possible values are: \"pg\" for PostgreSQL, \"mysql\" for MySQL, \"redis\" for Redis, and \"mongodb\" for MongoDB."
                },
                "maintenanceWindow": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterMaintenanceWindow"
                },
                "name": {
                    "type": "string",
                    "description": "A unique, human-readable name referring to a database cluster."
                },
                "numNodes": {
                    "type": "integer",
                    "description": "The number of nodes in the database cluster."
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterPrivateConnection"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the database cluster will be assigned. If excluded, the cluster when creating a new database cluster, it will be assigned to your account's default VPC for the region."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project that the database cluster is assigned to. If excluded when creating a new database cluster, it will be assigned to your default project."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the database cluster is located."
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:FirewallRule"
                    }
                },
                "semanticVersion": {
                    "type": "string",
                    "description": "A string representing the semantic version of the database engine in use for the cluster."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier representing the size of the nodes in the database cluster."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterStatus",
                    "description": "A string representing the current status of the database cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags that have been applied to the database cluster."
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUser"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "A string representing the version of the database engine in use for the cluster."
                },
                "versionEndOfAvailability": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be available for creating new clusters. If null, the version does not have an end of availability timeline."
                },
                "versionEndOfLife": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be supported. If null, the version does not have an end of life timeline."
                }
            },
            "type": "object",
            "required": [
                "database"
            ],
            "inputProperties": {
                "backupRestore": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseBackup"
                },
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterConnection"
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the database cluster was created."
                },
                "dbNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of strings containing the names of databases created in the database cluster."
                },
                "engine": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterEngine",
                    "description": "A slug representing the database engine used for the cluster. The possible values are: \"pg\" for PostgreSQL, \"mysql\" for MySQL, \"redis\" for Redis, and \"mongodb\" for MongoDB."
                },
                "maintenanceWindow": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterMaintenanceWindow"
                },
                "name": {
                    "type": "string",
                    "description": "A unique, human-readable name referring to a database cluster."
                },
                "numNodes": {
                    "type": "integer",
                    "description": "The number of nodes in the database cluster."
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterPrivateConnection"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the database cluster will be assigned. If excluded, the cluster when creating a new database cluster, it will be assigned to your account's default VPC for the region."
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project that the database cluster is assigned to. If excluded when creating a new database cluster, it will be assigned to your default project."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the database cluster is located."
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:FirewallRule"
                    }
                },
                "semanticVersion": {
                    "type": "string",
                    "description": "A string representing the semantic version of the database engine in use for the cluster."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier representing the size of the nodes in the database cluster."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseClusterStatus",
                    "description": "A string representing the current status of the database cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags that have been applied to the database cluster."
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUser"
                    }
                },
                "version": {
                    "type": "string",
                    "description": "A string representing the version of the database engine in use for the cluster."
                },
                "versionEndOfAvailability": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be available for creating new clusters. If null, the version does not have an end of availability timeline."
                },
                "versionEndOfLife": {
                    "type": "string",
                    "description": "A timestamp referring to the date when the particular version will no longer be supported. If null, the version does not have an end of life timeline."
                }
            },
            "requiredInputs": [
                "engine",
                "name",
                "numNodes",
                "region",
                "size"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesClusterSize": {
            "properties": {
                "numNodes": {
                    "type": "integer",
                    "description": "The number of nodes in the database cluster. Valid values are are 1-3. In addition to the primary node, up to two standby nodes may be added for highly available configurations."
                },
                "size": {
                    "type": "string",
                    "description": "A slug identifier representing desired the size of the nodes in the database cluster."
                }
            },
            "type": "object",
            "required": [
                "numNodes",
                "size"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "numNodes": {
                    "type": "integer",
                    "description": "The number of nodes in the database cluster. Valid values are are 1-3. In addition to the primary node, up to two standby nodes may be added for highly available configurations."
                },
                "size": {
                    "type": "string",
                    "description": "A slug identifier representing desired the size of the nodes in the database cluster."
                }
            },
            "requiredInputs": [
                "numNodes",
                "size"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesConnectionPool": {
            "properties": {
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:Connection"
                },
                "db": {
                    "type": "string",
                    "description": "The database for use with the connection pool."
                },
                "mode": {
                    "type": "string",
                    "description": "The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement."
                },
                "name": {
                    "type": "string",
                    "description": "A unique name for the connection pool. Must be between 3 and 60 characters."
                },
                "pool": {
                    "$ref": "#/types/digitalocean-native:databases/v2:ConnectionPool"
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PrivateConnection"
                },
                "size": {
                    "type": "integer",
                    "description": "The desired size of the PGBouncer connection pool. The maximum allowed size is determined by the size of the cluster's primary node. 25 backend server connections are allowed for every 1GB of RAM. Three are reserved for maintenance. For example, a primary node with 1 GB of RAM allows for a maximum of 22 backend server connections while one with 4 GB would allow for 97. Note that these are shared across all connection pools in a cluster."
                },
                "user": {
                    "type": "string",
                    "description": "The name of the user for use with the connection pool. When excluded, all sessions connect to the database as the inbound user."
                }
            },
            "type": "object",
            "required": [
                "db",
                "mode",
                "name",
                "pool",
                "size"
            ],
            "inputProperties": {
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:Connection"
                },
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "db": {
                    "type": "string",
                    "description": "The database for use with the connection pool."
                },
                "mode": {
                    "type": "string",
                    "description": "The PGBouncer transaction mode for the connection pool. The allowed values are session, transaction, and statement."
                },
                "name": {
                    "type": "string",
                    "description": "A unique name for the connection pool. Must be between 3 and 60 characters."
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:PrivateConnection"
                },
                "size": {
                    "type": "integer",
                    "description": "The desired size of the PGBouncer connection pool. The maximum allowed size is determined by the size of the cluster's primary node. 25 backend server connections are allowed for every 1GB of RAM. Three are reserved for maintenance. For example, a primary node with 1 GB of RAM allows for a maximum of 22 backend server connections while one with 4 GB would allow for 97. Note that these are shared across all connection pools in a cluster."
                },
                "user": {
                    "type": "string",
                    "description": "The name of the user for use with the connection pool. When excluded, all sessions connect to the database as the inbound user."
                }
            },
            "requiredInputs": [
                "db",
                "mode",
                "size"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesEvictionPolicy": {
            "properties": {
                "evictionPolicy": {
                    "$ref": "#/types/digitalocean-native:databases/v2:EvictionPolicy",
                    "description": "A string specifying the desired eviction policy for the Redis cluster.\n\n- `noeviction`: Don't evict any data, returns error when memory limit is reached.\n- `allkeys_lru:` Evict any key, least recently used (LRU) first.\n- `allkeys_random`: Evict keys in a random order.\n- `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.\n- `volatile_random`: Evict keys with expiration only in a random order.\n- `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first."
                }
            },
            "type": "object",
            "required": [
                "evictionPolicy"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "evictionPolicy": {
                    "$ref": "#/types/digitalocean-native:databases/v2:EvictionPolicy",
                    "description": "A string specifying the desired eviction policy for the Redis cluster.\n\n- `noeviction`: Don't evict any data, returns error when memory limit is reached.\n- `allkeys_lru:` Evict any key, least recently used (LRU) first.\n- `allkeys_random`: Evict keys in a random order.\n- `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.\n- `volatile_random`: Evict keys with expiration only in a random order.\n- `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first."
                }
            },
            "requiredInputs": [
                "evictionPolicy"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesFirewallRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:FirewallRule"
                    }
                }
            },
            "type": "object",
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:FirewallRule"
                    }
                }
            }
        },
        "digitalocean-native:databases/v2:DatabasesMaintenanceWindow": {
            "properties": {
                "day": {
                    "type": "string",
                    "description": "The day of the week on which to apply maintenance updates."
                },
                "description": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of strings, each containing information about a pending maintenance update."
                },
                "hour": {
                    "type": "string",
                    "description": "The hour in UTC at which maintenance updates will be applied in 24 hour format."
                },
                "pending": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether any maintenance is scheduled to be performed in the next window."
                }
            },
            "type": "object",
            "required": [
                "day",
                "hour"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "day": {
                    "type": "string",
                    "description": "The day of the week on which to apply maintenance updates."
                },
                "hour": {
                    "type": "string",
                    "description": "The hour in UTC at which maintenance updates will be applied in 24 hour format."
                }
            },
            "requiredInputs": [
                "day",
                "hour"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesMajorVersion": {
            "properties": {
                "version": {
                    "type": "string",
                    "description": "A string representing the version of the database engine in use for the cluster."
                }
            },
            "type": "object",
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "version": {
                    "type": "string",
                    "description": "A string representing the version of the database engine in use for the cluster."
                }
            }
        },
        "digitalocean-native:databases/v2:DatabasesOnlineMigration": {
            "properties": {
                "disableSsl": {
                    "type": "boolean",
                    "description": "Enables SSL encryption when connecting to the source database."
                },
                "source": {
                    "$ref": "#/types/digitalocean-native:databases/v2:SourceProperties"
                }
            },
            "type": "object",
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "disableSsl": {
                    "type": "boolean",
                    "description": "Enables SSL encryption when connecting to the source database."
                },
                "source": {
                    "$ref": "#/types/digitalocean-native:databases/v2:SourceProperties"
                }
            }
        },
        "digitalocean-native:databases/v2:DatabasesReAuth": {
            "properties": {
                "mysqlSettings": {
                    "$ref": "#/types/digitalocean-native:databases/v2:MysqlSettings"
                },
                "user": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUser"
                }
            },
            "type": "object",
            "required": [
                "user"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "mysqlSettings": {
                    "$ref": "#/types/digitalocean-native:databases/v2:MysqlSettings"
                },
                "username": {
                    "type": "string",
                    "description": "The name of the database user."
                }
            }
        },
        "digitalocean-native:databases/v2:DatabasesRegion": {
            "properties": {
                "region": {
                    "type": "string",
                    "description": "A slug identifier for the region to which the database cluster will be migrated."
                }
            },
            "type": "object",
            "required": [
                "region"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "region": {
                    "type": "string",
                    "description": "A slug identifier for the region to which the database cluster will be migrated."
                }
            },
            "requiredInputs": [
                "region"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesReplica": {
            "properties": {
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaConnection"
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the database cluster was created."
                },
                "name": {
                    "type": "string",
                    "description": "The name to give the read-only replicating"
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaPrivateConnection"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account's default VPC for the region."
                },
                "region": {
                    "type": "string",
                    "description": "A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster."
                },
                "replica": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplica"
                },
                "size": {
                    "type": "string",
                    "description": "A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaStatus",
                    "description": "A string representing the current status of the database cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags."
                }
            },
            "type": "object",
            "required": [
                "name",
                "size"
            ],
            "inputProperties": {
                "connection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaConnection"
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the database cluster was created."
                },
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "name": {
                    "type": "string",
                    "description": "The name to give the read-only replicating"
                },
                "privateConnection": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaPrivateConnection"
                },
                "privateNetworkUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account's default VPC for the region."
                },
                "region": {
                    "type": "string",
                    "description": "A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster."
                },
                "size": {
                    "type": "string",
                    "description": "A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseReplicaStatus",
                    "description": "A string representing the current status of the database cluster."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags."
                }
            },
            "requiredInputs": [
                "name"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesSqlMode": {
            "properties": {
                "sqlMode": {
                    "type": "string",
                    "description": "A string specifying the configured SQL modes for the MySQL cluster."
                }
            },
            "type": "object",
            "required": [
                "sqlMode"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "sqlMode": {
                    "type": "string",
                    "description": "A string specifying the configured SQL modes for the MySQL cluster."
                }
            },
            "requiredInputs": [
                "sqlMode"
            ]
        },
        "digitalocean-native:databases/v2:DatabasesUser": {
            "properties": {
                "mysqlSettings": {
                    "$ref": "#/types/digitalocean-native:databases/v2:MysqlSettings"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a database user."
                },
                "password": {
                    "type": "string",
                    "description": "A randomly generated password for the database user."
                },
                "readonly": {
                    "type": "boolean",
                    "description": "For MongoDB clusters, set to `true` to create a read-only user.\nThis option is not currently supported for other database engines.\n"
                },
                "role": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUserRole",
                    "description": "A string representing the database user's role. The value will be either\n\"primary\" or \"normal\".\n"
                },
                "user": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUser"
                }
            },
            "type": "object",
            "required": [
                "user"
            ],
            "inputProperties": {
                "databaseClusterUuid": {
                    "type": "string",
                    "description": "A unique identifier for a database cluster."
                },
                "mysqlSettings": {
                    "$ref": "#/types/digitalocean-native:databases/v2:MysqlSettings"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a database user."
                },
                "password": {
                    "type": "string",
                    "description": "A randomly generated password for the database user."
                },
                "readonly": {
                    "type": "boolean",
                    "description": "For MongoDB clusters, set to `true` to create a read-only user.\nThis option is not currently supported for other database engines.\n"
                },
                "role": {
                    "$ref": "#/types/digitalocean-native:databases/v2:DatabaseUserRole",
                    "description": "A string representing the database user's role. The value will be either\n\"primary\" or \"normal\".\n"
                }
            },
            "requiredInputs": [
                "name"
            ]
        },
        "digitalocean-native:domains/v2:Domains": {
            "properties": {
                "domain": {
                    "$ref": "#/types/digitalocean-native:domains/v2:Domain"
                },
                "ipAddress": {
                    "type": "string",
                    "description": "This optional attribute may contain an IP address. When provided, an A record will be automatically created pointing to the apex domain."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name."
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the records on this domain, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "zoneFile": {
                    "type": "string",
                    "description": "This attribute contains the complete contents of the zone file for the selected domain. Individual domain record resources should be used to get more granular control over records. However, this attribute can also be used to get information about the SOA record, which is created automatically and is not accessible as an individual record resource."
                }
            },
            "type": "object",
            "inputProperties": {
                "ipAddress": {
                    "type": "string",
                    "description": "This optional attribute may contain an IP address. When provided, an A record will be automatically created pointing to the apex domain."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name."
                }
            }
        },
        "digitalocean-native:domains/v2:DomainsRecordA": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordAaaa": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordCaa": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordCname": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordMx": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordNs": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordSoa": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordSrv": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:domains/v2:DomainsRecordTxt": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainRecord": {
                    "$ref": "#/types/digitalocean-native:domains/v2:DomainRecord"
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "type": "object",
            "inputProperties": {
                "data": {
                    "type": "string",
                    "description": "Variable data depending on record type. For example, the \"data\" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates."
                },
                "domainName": {
                    "type": "string",
                    "description": "The name of the domain itself."
                },
                "flags": {
                    "type": "integer",
                    "description": "An unsigned integer between 0-255 used for CAA records."
                },
                "name": {
                    "type": "string",
                    "description": "The host name, alias, or service being defined by the record."
                },
                "port": {
                    "type": "integer",
                    "description": "The port for SRV records."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for SRV and MX records."
                },
                "tag": {
                    "type": "string",
                    "description": "The parameter tag for CAA records. Valid values are \"issue\", \"issuewild\", or \"iodef\""
                },
                "ttl": {
                    "type": "integer",
                    "description": "This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the DNS record. For example: A, CNAME, TXT, ..."
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight for SRV records."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagDisableBackups": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagEnableBackups": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagEnableIpv6": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagPowerCycle": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagPowerOff": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagPowerOn": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagShutdown": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsByTagSnapshot": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name to give the new snapshot of the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name to give the new snapshot of the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsChangeKernel": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "kernel": {
                    "type": "integer",
                    "description": "A unique number used to identify and reference a specific kernel."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "kernel": {
                    "type": "integer",
                    "description": "A unique number used to identify and reference a specific kernel."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsDisableBackups": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsEnableBackups": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsEnableIpv6": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsPasswordReset": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsPowerCycle": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsPowerOff": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsPowerOn": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsReboot": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsRebuild": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "image": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "image": {
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "description": "The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsRename": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "name": {
                    "type": "string",
                    "description": "The new name for the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "name": {
                    "type": "string",
                    "description": "The new name for the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsResize": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "disk": {
                    "type": "boolean",
                    "description": "When `true`, the Droplet's disk will be resized in addition to its RAM and CPU. This is a permanent change and cannot be reversed as a Droplet's disk size cannot be decreased."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the size to which you wish to resize the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "inputProperties": {
                "disk": {
                    "type": "boolean",
                    "description": "When `true`, the Droplet's disk will be resized in addition to its RAM and CPU. This is a permanent change and cannot be reversed as a Droplet's disk size cannot be decreased."
                },
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the size to which you wish to resize the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsRestore": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "image": {
                    "type": "integer",
                    "description": "The ID of a backup of the current Droplet instance to restore from."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "image": {
                    "type": "integer",
                    "description": "The ID of a backup of the current Droplet instance to restore from."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsShutdown": {
            "description": "Specifies the action that will be taken on the Droplet.",
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Type",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:DropletActionsSnapshot": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:Action"
                },
                "name": {
                    "type": "string",
                    "description": "The name to give the new snapshot of the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "string",
                    "description": "A unique identifier for a Droplet instance."
                },
                "name": {
                    "type": "string",
                    "description": "The name to give the new snapshot of the Droplet."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:droplets/v2:DropletActionType",
                    "description": "The type of action to initiate for the Droplet."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:droplets/v2:Droplets": {
            "type": "object"
        },
        "digitalocean-native:firewalls/v2:Firewalls": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the firewall was created."
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets assigned to the firewall."
                },
                "firewall": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:Firewall"
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesInboundRulesItem"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-)."
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesOutboundRulesItem"
                    }
                },
                "pendingChanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesPendingChangesItemProperties"
                    },
                    "description": "An array of objects each containing the fields \"droplet_id\", \"removing\", and \"status\". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesStatus",
                    "description": "A status string indicating the current state of the firewall. This can be \"waiting\", \"succeeded\", or \"failed\"."
                },
                "tags": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesTags"
                }
            },
            "type": "object",
            "inputProperties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the firewall was created."
                },
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets assigned to the firewall."
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesInboundRulesItem"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-)."
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesOutboundRulesItem"
                    }
                },
                "pendingChanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesPendingChangesItemProperties"
                    },
                    "description": "An array of objects each containing the fields \"droplet_id\", \"removing\", and \"status\". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesStatus",
                    "description": "A status string indicating the current state of the firewall. This can be \"waiting\", \"succeeded\", or \"failed\"."
                },
                "tags": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallPropertiesTags"
                }
            }
        },
        "digitalocean-native:firewalls/v2:FirewallsAssignDroplets": {
            "properties": {
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets to be assigned to the firewall."
                }
            },
            "type": "object",
            "required": [
                "dropletIds"
            ],
            "inputProperties": {
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets to be assigned to the firewall."
                },
                "firewallId": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a firewall."
                }
            },
            "requiredInputs": [
                "dropletIds"
            ]
        },
        "digitalocean-native:firewalls/v2:FirewallsRules": {
            "properties": {
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesInboundRulesItem"
                    }
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesOutboundRulesItem"
                    }
                }
            },
            "type": "object",
            "inputProperties": {
                "firewallId": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a firewall."
                },
                "inboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesInboundRulesItem"
                    }
                },
                "outboundRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:FirewallRulesOutboundRulesItem"
                    }
                }
            }
        },
        "digitalocean-native:firewalls/v2:FirewallsTags": {
            "properties": {
                "tags": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:Tags"
                }
            },
            "type": "object",
            "required": [
                "tags"
            ],
            "inputProperties": {
                "firewallId": {
                    "type": "string",
                    "description": "A unique ID that can be used to identify and reference a firewall."
                },
                "tags": {
                    "$ref": "#/types/digitalocean-native:firewalls/v2:Tags"
                }
            },
            "requiredInputs": [
                "tags"
            ]
        },
        "digitalocean-native:floating_ips/v2:FloatingIPs": {
            "properties": {
                "floatingIp": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIp"
                },
                "links": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:LinksProperties"
                }
            },
            "type": "object"
        },
        "digitalocean-native:floating_ips/v2:FloatingIPsActionAssign": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Action"
                },
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of the Droplet that the floating IP will be assigned to."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIPsActionType",
                    "description": "The type of action to initiate for the floating IP."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of the Droplet that the floating IP will be assigned to."
                },
                "floatingIp": {
                    "type": "string",
                    "description": "A floating IP address."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIPsActionType",
                    "description": "The type of action to initiate for the floating IP."
                }
            },
            "requiredInputs": [
                "dropletId",
                "type"
            ]
        },
        "digitalocean-native:floating_ips/v2:FloatingIPsActionUnassign": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:Action"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIPsActionType",
                    "description": "The type of action to initiate for the floating IP."
                }
            },
            "type": "object",
            "inputProperties": {
                "floatingIp": {
                    "type": "string",
                    "description": "A floating IP address."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:floating_ips/v2:FloatingIPsActionType",
                    "description": "The type of action to initiate for the floating IP."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:functions/v2:FunctionsNamespace": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "The namespace's unique name."
                },
                "namespace": {
                    "$ref": "#/types/digitalocean-native:functions/v2:NamespaceInfo"
                },
                "region": {
                    "type": "string",
                    "description": "The [datacenter region](https://docs.digitalocean.com/products/platform/availability-matrix/#available-datacenters) in which to create the namespace."
                }
            },
            "type": "object",
            "required": [
                "label",
                "region"
            ],
            "inputProperties": {
                "label": {
                    "type": "string",
                    "description": "The namespace's unique name."
                },
                "region": {
                    "type": "string",
                    "description": "The [datacenter region](https://docs.digitalocean.com/products/platform/availability-matrix/#available-datacenters) in which to create the namespace."
                }
            },
            "requiredInputs": [
                "label",
                "region"
            ]
        },
        "digitalocean-native:functions/v2:FunctionsTrigger": {
            "properties": {
                "function": {
                    "type": "string",
                    "description": "Name of function(action) that exists in the given namespace."
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Indicates weather the trigger is paused or unpaused."
                },
                "name": {
                    "type": "string",
                    "description": "The trigger's unique name within the namespace."
                },
                "scheduledDetails": {
                    "$ref": "#/types/digitalocean-native:functions/v2:ScheduledDetails",
                    "description": "Trigger details for SCHEDULED type, where body is optional.\n"
                },
                "trigger": {
                    "$ref": "#/types/digitalocean-native:functions/v2:TriggerInfo"
                },
                "type": {
                    "type": "string",
                    "description": "One of different type of triggers. Currently only SCHEDULED is supported."
                }
            },
            "type": "object",
            "required": [
                "function",
                "isEnabled",
                "name",
                "scheduledDetails",
                "type"
            ],
            "inputProperties": {
                "function": {
                    "type": "string",
                    "description": "Name of function(action) that exists in the given namespace."
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Indicates weather the trigger is paused or unpaused."
                },
                "name": {
                    "type": "string",
                    "description": "The trigger's unique name within the namespace."
                },
                "namespaceId": {
                    "type": "string",
                    "description": "The ID of the namespace to be managed."
                },
                "scheduledDetails": {
                    "$ref": "#/types/digitalocean-native:functions/v2:ScheduledDetails",
                    "description": "Trigger details for SCHEDULED type, where body is optional.\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of different type of triggers. Currently only SCHEDULED is supported."
                }
            },
            "requiredInputs": [
                "function",
                "isEnabled",
                "scheduledDetails",
                "type"
            ]
        },
        "digitalocean-native:images/v2:ImageActionsConvert": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:images/v2:Region"
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:images/v2:RegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:images/v2:Status",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "type": "string",
                    "description": "This is the type of action that the object represents. For example, this could be \"transfer\" to represent the state of an image transfer action."
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "inputProperties": {
                "imageId": {
                    "type": "string",
                    "description": "A unique number that can be used to identify and reference a specific image."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:images/v2:Type",
                    "description": "The action to be taken on the image. Can be either `convert` or `transfer`."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:images/v2:ImageActionsTransfer": {
            "properties": {
                "completedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was completed."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageActionsTransferPropertiesRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "regionSlug": {
                    "$ref": "#/types/digitalocean-native:images/v2:RegionSlug"
                },
                "resourceId": {
                    "type": "integer",
                    "description": "A unique identifier for the resource that the action is associated with."
                },
                "resourceType": {
                    "type": "string",
                    "description": "The type of resource that the action is associated with."
                },
                "startedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the action was initiated."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:images/v2:Status",
                    "description": "The current status of the action. This can be \"in-progress\", \"completed\", or \"errored\".",
                    "default": "in-progress"
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageActionBaseType",
                    "description": "The action to be taken on the image. Can be either `convert` or `transfer`."
                }
            },
            "type": "object",
            "inputProperties": {
                "imageId": {
                    "type": "string",
                    "description": "A unique number that can be used to identify and reference a specific image."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageActionsTransferPropertiesRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageActionBaseType",
                    "description": "The action to be taken on the image. Can be either `convert` or `transfer`."
                }
            },
            "requiredInputs": [
                "region",
                "type"
            ]
        },
        "digitalocean-native:images/v2:ImagesCustom": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "An optional free-form text field to describe an image."
                },
                "distribution": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageUpdateDistribution",
                    "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place."
                },
                "image": {
                    "$ref": "#/types/digitalocean-native:images/v2:Image"
                },
                "name": {
                    "type": "string",
                    "description": "The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImagesCustomPropertiesRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "url": {
                    "type": "string",
                    "description": "A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed."
                }
            },
            "type": "object",
            "required": [
                "name",
                "region",
                "url"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "An optional free-form text field to describe an image."
                },
                "distribution": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImageUpdateDistribution",
                    "description": "The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place."
                },
                "name": {
                    "type": "string",
                    "description": "The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:images/v2:ImagesCustomPropertiesRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "url": {
                    "type": "string",
                    "description": "A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed."
                }
            }
        },
        "digitalocean-native:kubernetes/v2:KubernetesCluster": {
            "properties": {
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.",
                    "default": false
                },
                "clusterSubnet": {
                    "type": "string",
                    "description": "The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created."
                },
                "endpoint": {
                    "type": "string",
                    "description": "The base URL of the API server on the Kubernetes master node."
                },
                "ha": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.",
                    "default": false
                },
                "ipv4": {
                    "type": "string",
                    "description": "The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)"
                },
                "kubernetesCluster": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:Cluster",
                    "language": {
                        "csharp": {
                            "name": "KubernetesClusterValue"
                        }
                    }
                },
                "maintenancePolicy": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:MaintenancePolicy",
                    "description": "An object specifying the maintenance window policy for the Kubernetes cluster."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a Kubernetes cluster."
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePool"
                    },
                    "description": "An object specifying the details of the worker nodes available to the Kubernetes cluster."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the Kubernetes cluster is located."
                },
                "registryEnabled": {
                    "type": "boolean",
                    "description": "A read-only boolean value indicating if a container registry is integrated with the cluster."
                },
                "serviceSubnet": {
                    "type": "string",
                    "description": "The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation."
                },
                "status": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:StatusProperties",
                    "description": "An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster."
                },
                "surgeUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.",
                    "default": false
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated."
                },
                "version": {
                    "type": "string",
                    "description": "The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. \"1.14\"), the latest version within it will be used (e.g. \"1.14.6-do.1\"); if set to \"latest\", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions."
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned."
                }
            },
            "type": "object",
            "required": [
                "name",
                "nodePools",
                "region",
                "version"
            ],
            "inputProperties": {
                "autoUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.",
                    "default": false
                },
                "ha": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.",
                    "default": false
                },
                "maintenancePolicy": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:MaintenancePolicy",
                    "description": "An object specifying the maintenance window policy for the Kubernetes cluster."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for a Kubernetes cluster."
                },
                "nodePools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePool"
                    },
                    "description": "An object specifying the details of the worker nodes available to the Kubernetes cluster."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the Kubernetes cluster is located."
                },
                "surgeUpgrade": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.",
                    "default": false
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`."
                },
                "version": {
                    "type": "string",
                    "description": "The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. \"1.14\"), the latest version within it will be used (e.g. \"1.14.6-do.1\"); if set to \"latest\", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions."
                },
                "vpcUuid": {
                    "type": "string",
                    "description": "A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned."
                }
            },
            "requiredInputs": [
                "nodePools",
                "region",
                "version"
            ]
        },
        "digitalocean-native:kubernetes/v2:KubernetesNodePool": {
            "properties": {
                "autoScale": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether auto-scaling is enabled for this node pool."
                },
                "count": {
                    "type": "integer",
                    "description": "The number of Droplet instances in the node pool."
                },
                "labels": {
                    "$ref": "pulumi.json#/Any",
                    "description": "An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool."
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`."
                },
                "minNodes": {
                    "type": "integer",
                    "description": "The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the node pool."
                },
                "nodePool": {
                    "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePool"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:Node"
                    },
                    "description": "An object specifying the details of a specific worker node in a node pool."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the type of Droplet used as workers in the node pool."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`."
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePoolTaint"
                    },
                    "description": "An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool."
                }
            },
            "type": "object",
            "required": [
                "count",
                "name",
                "size"
            ],
            "inputProperties": {
                "autoScale": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether auto-scaling is enabled for this node pool."
                },
                "clusterId": {
                    "type": "string",
                    "description": "A unique ID that can be used to reference a Kubernetes cluster."
                },
                "count": {
                    "type": "integer",
                    "description": "The number of Droplet instances in the node pool."
                },
                "labels": {
                    "$ref": "pulumi.json#/Any",
                    "description": "An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool."
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`."
                },
                "minNodes": {
                    "type": "integer",
                    "description": "The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`."
                },
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the node pool."
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:Node"
                    },
                    "description": "An object specifying the details of a specific worker node in a node pool."
                },
                "size": {
                    "type": "string",
                    "description": "The slug identifier for the type of Droplet used as workers in the node pool."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`."
                },
                "taints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesNodePoolTaint"
                    },
                    "description": "An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool."
                }
            }
        },
        "digitalocean-native:kubernetes/v2:KubernetesRecycleNodePool": {
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "A unique ID that can be used to reference a Kubernetes cluster."
                },
                "nodePoolId": {
                    "type": "string",
                    "description": "A unique ID that can be used to reference a Kubernetes node pool."
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "digitalocean-native:kubernetes/v2:KubernetesRegistry": {
            "properties": {
                "clusterUuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the UUIDs of Kubernetes clusters."
                }
            },
            "type": "object",
            "inputProperties": {
                "clusterUuids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array containing the UUIDs of Kubernetes clusters."
                }
            }
        },
        "digitalocean-native:kubernetes/v2:KubernetesRunClusterLint": {
            "properties": {
                "excludeChecks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of checks that will be run when clusterlint executes checks."
                },
                "excludeGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of check groups that will be omitted when clusterlint executes checks."
                },
                "includeChecks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of checks that will be run when clusterlint executes checks."
                },
                "includeGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of check groups that will be run when clusterlint executes checks."
                },
                "runId": {
                    "type": "string",
                    "description": "ID of the clusterlint run that can be used later to fetch the diagnostics."
                }
            },
            "type": "object",
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "A unique ID that can be used to reference a Kubernetes cluster."
                },
                "excludeChecks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of checks that will be run when clusterlint executes checks."
                },
                "excludeGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of check groups that will be omitted when clusterlint executes checks."
                },
                "includeChecks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of checks that will be run when clusterlint executes checks."
                },
                "includeGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of check groups that will be run when clusterlint executes checks."
                }
            }
        },
        "digitalocean-native:kubernetes/v2:KubernetesUpgradeCluster": {
            "properties": {
                "version": {
                    "type": "string",
                    "description": "The slug identifier for the version of Kubernetes that the cluster will be upgraded to."
                }
            },
            "type": "object",
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "A unique ID that can be used to reference a Kubernetes cluster."
                },
                "version": {
                    "type": "string",
                    "description": "The slug identifier for the version of Kubernetes that the cluster will be upgraded to."
                }
            }
        },
        "digitalocean-native:load_balancers/v2:LoadBalancers": {
            "properties": {
                "loadBalancer": {
                    "$ref": "#/types/digitalocean-native:load_balancers/v2:LoadBalancer"
                }
            },
            "type": "object"
        },
        "digitalocean-native:load_balancers/v2:LoadBalancersDroplets": {
            "properties": {
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets assigned to the load balancer."
                }
            },
            "type": "object",
            "required": [
                "dropletIds"
            ],
            "inputProperties": {
                "dropletIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "An array containing the IDs of the Droplets assigned to the load balancer."
                },
                "lbId": {
                    "type": "string",
                    "description": "A unique identifier for a load balancer."
                }
            },
            "requiredInputs": [
                "dropletIds"
            ]
        },
        "digitalocean-native:load_balancers/v2:LoadBalancersForwardingRules": {
            "properties": {
                "forwardingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:load_balancers/v2:ForwardingRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "forwardingRules"
            ],
            "inputProperties": {
                "forwardingRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:load_balancers/v2:ForwardingRule"
                    }
                },
                "lbId": {
                    "type": "string",
                    "description": "A unique identifier for a load balancer."
                }
            },
            "requiredInputs": [
                "forwardingRules"
            ]
        },
        "digitalocean-native:monitoring/v2:MonitoringAlertPolicy": {
            "properties": {
                "alerts": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Alerts"
                },
                "compare": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Compare"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "policy": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:AlertPolicy"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Type"
                },
                "value": {
                    "type": "number"
                },
                "window": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Window"
                }
            },
            "type": "object",
            "required": [
                "alerts",
                "compare",
                "description",
                "enabled",
                "entities",
                "tags",
                "type",
                "value",
                "window"
            ],
            "inputProperties": {
                "alerts": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Alerts"
                },
                "compare": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Compare"
                },
                "description": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Type"
                },
                "value": {
                    "type": "number"
                },
                "window": {
                    "$ref": "#/types/digitalocean-native:monitoring/v2:Window"
                }
            },
            "requiredInputs": [
                "alerts",
                "compare",
                "description",
                "enabled",
                "entities",
                "tags",
                "type",
                "value",
                "window"
            ]
        },
        "digitalocean-native:projects/v2:Projects": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the project. The maximum length is 255 characters."
                },
                "environment": {
                    "$ref": "#/types/digitalocean-native:projects/v2:ProjectBaseEnvironment",
                    "description": "The environment of the project's resources."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name for the project. The maximum length is 175 characters and the name must be unique."
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The integer id of the project owner."
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "The unique universal identifier of the project owner."
                },
                "project": {
                    "$ref": "#/types/digitalocean-native:projects/v2:Project"
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the project. The maximum length is 255 characters. It can\nhave one of the following values:\n\n- Just trying out DigitalOcean\n- Class project / Educational purposes\n- Website or blog\n- Web Application\n- Service or API\n- Mobile Application\n- Machine learning / AI / Data processing\n- IoT\n- Operational / Developer tooling\n\nIf another value for purpose is specified, for example, \"your custom purpose\",\nyour purpose will be stored as `Other: your custom purpose`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was updated."
                }
            },
            "type": "object",
            "required": [
                "name",
                "purpose"
            ],
            "inputProperties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the project. The maximum length is 255 characters."
                },
                "environment": {
                    "$ref": "#/types/digitalocean-native:projects/v2:ProjectBaseEnvironment",
                    "description": "The environment of the project's resources."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name for the project. The maximum length is 175 characters and the name must be unique."
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The integer id of the project owner."
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "The unique universal identifier of the project owner."
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the project. The maximum length is 255 characters. It can\nhave one of the following values:\n\n- Just trying out DigitalOcean\n- Class project / Educational purposes\n- Website or blog\n- Web Application\n- Service or API\n- Mobile Application\n- Machine learning / AI / Data processing\n- IoT\n- Operational / Developer tooling\n\nIf another value for purpose is specified, for example, \"your custom purpose\",\nyour purpose will be stored as `Other: your custom purpose`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was updated."
                }
            }
        },
        "digitalocean-native:projects/v2:ProjectsAssignResources": {
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:Resource"
                    }
                }
            },
            "type": "object",
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "A unique identifier for a project."
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of uniform resource names (URNs) to be added to a project."
                }
            }
        },
        "digitalocean-native:projects/v2:ProjectsAssignResourcesDefault": {
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:Resource"
                    }
                }
            },
            "type": "object",
            "inputProperties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of uniform resource names (URNs) to be added to a project."
                }
            }
        },
        "digitalocean-native:projects/v2:ProjectsDefault": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the project. The maximum length is 255 characters."
                },
                "environment": {
                    "$ref": "#/types/digitalocean-native:projects/v2:ProjectBaseEnvironment",
                    "description": "The environment of the project's resources."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "If true, all resources will be added to this project if no project is specified."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name for the project. The maximum length is 175 characters and the name must be unique."
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The integer id of the project owner."
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "The unique universal identifier of the project owner."
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the project. The maximum length is 255 characters. It can\nhave one of the following values:\n\n- Just trying out DigitalOcean\n- Class project / Educational purposes\n- Website or blog\n- Web Application\n- Service or API\n- Mobile Application\n- Machine learning / AI / Data processing\n- IoT\n- Operational / Developer tooling\n\nIf another value for purpose is specified, for example, \"your custom purpose\",\nyour purpose will be stored as `Other: your custom purpose`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was updated."
                }
            },
            "type": "object",
            "required": [
                "description",
                "environment",
                "isDefault",
                "name",
                "purpose"
            ],
            "inputProperties": {
                "createdAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was created."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the project. The maximum length is 255 characters."
                },
                "environment": {
                    "$ref": "#/types/digitalocean-native:projects/v2:ProjectBaseEnvironment",
                    "description": "The environment of the project's resources."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "If true, all resources will be added to this project if no project is specified."
                },
                "name": {
                    "type": "string",
                    "description": "The human-readable name for the project. The maximum length is 175 characters and the name must be unique."
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The integer id of the project owner."
                },
                "ownerUuid": {
                    "type": "string",
                    "description": "The unique universal identifier of the project owner."
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the project. The maximum length is 255 characters. It can\nhave one of the following values:\n\n- Just trying out DigitalOcean\n- Class project / Educational purposes\n- Website or blog\n- Web Application\n- Service or API\n- Mobile Application\n- Machine learning / AI / Data processing\n- IoT\n- Operational / Developer tooling\n\nIf another value for purpose is specified, for example, \"your custom purpose\",\nyour purpose will be stored as `Other: your custom purpose`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "A time value given in ISO8601 combined date and time format that represents when the project was updated."
                }
            }
        },
        "digitalocean-native:registry/v2:Registry": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:registry/v2:Region",
                    "description": "Slug of the region where registry data is stored. When not provided, a region will be selected."
                },
                "registry": {
                    "$ref": "#/types/digitalocean-native:registry/v2:Registry",
                    "language": {
                        "csharp": {
                            "name": "RegistryValue"
                        }
                    }
                },
                "subscriptionTierSlug": {
                    "$ref": "#/types/digitalocean-native:registry/v2:SubscriptionTierSlug",
                    "description": "The slug of the subscription tier to sign up for. Valid values can be retrieved using the options endpoint."
                }
            },
            "type": "object",
            "required": [
                "name",
                "subscriptionTierSlug"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:registry/v2:Region",
                    "description": "Slug of the region where registry data is stored. When not provided, a region will be selected."
                },
                "subscriptionTierSlug": {
                    "$ref": "#/types/digitalocean-native:registry/v2:SubscriptionTierSlug",
                    "description": "The slug of the subscription tier to sign up for. Valid values can be retrieved using the options endpoint."
                }
            },
            "requiredInputs": [
                "subscriptionTierSlug"
            ]
        },
        "digitalocean-native:registry/v2:RegistryUpdateSubscription": {
            "properties": {
                "subscription": {
                    "$ref": "#/types/digitalocean-native:registry/v2:Subscription"
                },
                "tierSlug": {
                    "$ref": "#/types/digitalocean-native:registry/v2:TierSlug",
                    "description": "The slug of the subscription tier to sign up for."
                }
            },
            "type": "object",
            "inputProperties": {
                "tierSlug": {
                    "$ref": "#/types/digitalocean-native:registry/v2:TierSlug",
                    "description": "The slug of the subscription tier to sign up for."
                }
            }
        },
        "digitalocean-native:registry/v2:RegistryValidateName": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters."
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "A globally unique name for the container registry. Must be lowercase and be composed only of numbers, letters and `-`, up to a limit of 63 characters."
                }
            }
        },
        "digitalocean-native:reserved_ips/v2:ReservedIPs": {
            "properties": {
                "links": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:LinksProperties"
                },
                "reservedIp": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIp"
                }
            },
            "type": "object"
        },
        "digitalocean-native:reserved_ips/v2:ReservedIPsActionsAssign": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Action"
                },
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of the Droplet that the reserved IP will be assigned to."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIpActionTypeType",
                    "description": "The type of action to initiate for the reserved IP."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of the Droplet that the reserved IP will be assigned to."
                },
                "reservedIp": {
                    "type": "string",
                    "description": "A reserved IP address."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIpActionTypeType",
                    "description": "The type of action to initiate for the reserved IP."
                }
            },
            "requiredInputs": [
                "dropletId",
                "type"
            ]
        },
        "digitalocean-native:reserved_ips/v2:ReservedIPsActionsUnassign": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:Action"
                },
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of the Droplet that the reserved IP will be unassigned from."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIpActionTypeType",
                    "description": "The type of action to initiate for the reserved IP."
                }
            },
            "type": "object",
            "required": [
                "dropletId"
            ],
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The ID of the Droplet that the reserved IP will be unassigned from."
                },
                "reservedIp": {
                    "type": "string",
                    "description": "A reserved IP address."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:reserved_ips/v2:ReservedIpActionTypeType",
                    "description": "The type of action to initiate for the reserved IP."
                }
            },
            "requiredInputs": [
                "type"
            ]
        },
        "digitalocean-native:tags/v2:Tags": {
            "description": "A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.\nTags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores.\nThere is a limit of 255 characters per tag.\n\n**Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.\n\nWhen working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named \"PROD\", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).\n\nTagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named \"PROD\", you can tag resources in the control panel by entering \"prod\". The tag will still display with its canonical capitalization, \"PROD\".\n"
                },
                "resources": {
                    "$ref": "#/types/digitalocean-native:tags/v2:Resources",
                    "description": "An embedded object containing key value pairs of resource type and resource statistics. It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag."
                },
                "tag": {
                    "$ref": "#/types/digitalocean-native:tags/v2:Tags",
                    "description": "A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.\nTags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged."
                }
            },
            "type": "object",
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores.\nThere is a limit of 255 characters per tag.\n\n**Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.\n\nWhen working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named \"PROD\", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).\n\nTagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named \"PROD\", you can tag resources in the control panel by entering \"prod\". The tag will still display with its canonical capitalization, \"PROD\".\n"
                }
            }
        },
        "digitalocean-native:tags/v2:TagsAssignResources": {
            "properties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:tags/v2:ResourcesItemProperties"
                    },
                    "description": "An array of objects containing resource_id and resource_type  attributes."
                }
            },
            "type": "object",
            "required": [
                "resources"
            ],
            "inputProperties": {
                "resources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:tags/v2:ResourcesItemProperties"
                    },
                    "description": "An array of objects containing resource_id and resource_type  attributes."
                },
                "tagId": {
                    "type": "string",
                    "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag."
                }
            },
            "requiredInputs": [
                "resources"
            ]
        },
        "digitalocean-native:uptime/v2:UptimeAlert": {
            "properties": {
                "alert": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:Alert"
                },
                "comparison": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatableComparison",
                    "description": "The comparison operator used against the alert's threshold."
                },
                "name": {
                    "type": "string",
                    "description": "A human-friendly display name."
                },
                "notifications": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:Notification",
                    "description": "The notification settings for a trigger alert."
                },
                "period": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatablePeriod",
                    "description": "Period of time the threshold must be exceeded to trigger the alert."
                },
                "threshold": {
                    "type": "integer",
                    "description": "The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatableType",
                    "description": "The type of alert."
                }
            },
            "type": "object",
            "required": [
                "name",
                "notifications",
                "type"
            ],
            "inputProperties": {
                "checkId": {
                    "type": "string",
                    "description": "A unique identifier for a check."
                },
                "comparison": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatableComparison",
                    "description": "The comparison operator used against the alert's threshold."
                },
                "name": {
                    "type": "string",
                    "description": "A human-friendly display name."
                },
                "notifications": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:Notification",
                    "description": "The notification settings for a trigger alert."
                },
                "period": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatablePeriod",
                    "description": "Period of time the threshold must be exceeded to trigger the alert."
                },
                "threshold": {
                    "type": "integer",
                    "description": "The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:AlertUpdatableType",
                    "description": "The type of alert."
                }
            }
        },
        "digitalocean-native:uptime/v2:UptimeCheck": {
            "properties": {
                "check": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:Check"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the check is enabled/disabled.",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "A human-friendly display name."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:CheckUpdatableRegionsItem"
                    },
                    "description": "An array containing the selected regions to perform healthchecks from."
                },
                "target": {
                    "type": "string",
                    "description": "The endpoint to perform healthchecks on."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:CheckUpdatableType",
                    "description": "The type of health check to perform."
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "name",
                "regions",
                "target",
                "type"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "A boolean value indicating whether the check is enabled/disabled.",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "A human-friendly display name."
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:CheckUpdatableRegionsItem"
                    },
                    "description": "An array containing the selected regions to perform healthchecks from."
                },
                "target": {
                    "type": "string",
                    "description": "The endpoint to perform healthchecks on."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:uptime/v2:CheckUpdatableType",
                    "description": "The type of health check to perform."
                }
            }
        },
        "digitalocean-native:volumes/v2:VolumeActionsByIdAttach": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeAction"
                },
                "dropletId": {
                    "type": "integer",
                    "description": "The unique identifier for the Droplet the volume will be attached or detached from."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseType",
                    "description": "The volume action to initiate."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The unique identifier for the Droplet the volume will be attached or detached from."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseType",
                    "description": "The volume action to initiate."
                },
                "volumeId": {
                    "type": "string",
                    "description": "The ID of the block storage volume."
                }
            },
            "requiredInputs": [
                "dropletId",
                "type"
            ]
        },
        "digitalocean-native:volumes/v2:VolumeActionsByIdDetach": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeAction"
                },
                "dropletId": {
                    "type": "integer",
                    "description": "The unique identifier for the Droplet the volume will be attached or detached from."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseType",
                    "description": "The volume action to initiate."
                }
            },
            "type": "object",
            "inputProperties": {
                "dropletId": {
                    "type": "integer",
                    "description": "The unique identifier for the Droplet the volume will be attached or detached from."
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseType",
                    "description": "The volume action to initiate."
                },
                "volumeId": {
                    "type": "string",
                    "description": "The ID of the block storage volume."
                }
            },
            "requiredInputs": [
                "dropletId",
                "type"
            ]
        },
        "digitalocean-native:volumes/v2:VolumeActionsByIdResize": {
            "properties": {
                "action": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeAction"
                },
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "sizeGigabytes": {
                    "type": "integer",
                    "description": "The new size of the block storage volume in GiB (1024^3)."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseType",
                    "description": "The volume action to initiate."
                }
            },
            "type": "object",
            "inputProperties": {
                "region": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseRegion",
                    "description": "The slug identifier for the region where the resource will initially be  available."
                },
                "sizeGigabytes": {
                    "type": "integer",
                    "description": "The new size of the block storage volume in GiB (1024^3)."
                },
                "type": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeActionPostBaseType",
                    "description": "The volume action to initiate."
                },
                "volumeId": {
                    "type": "string",
                    "description": "The ID of the block storage volume."
                }
            },
            "requiredInputs": [
                "sizeGigabytes",
                "type"
            ]
        },
        "digitalocean-native:volumes/v2:VolumeSnapshots": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the volume snapshot."
                },
                "snapshot": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:Snapshots"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "A human-readable name for the volume snapshot."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags."
                },
                "volumeId": {
                    "type": "string",
                    "description": "The ID of the block storage volume."
                }
            }
        },
        "digitalocean-native:volumes/v2:Volumes": {
            "properties": {
                "volume": {
                    "$ref": "#/types/digitalocean-native:volumes/v2:VolumeFull"
                }
            },
            "type": "object"
        },
        "digitalocean-native:vpcs/v2:Vpcs": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters."
                },
                "ipRange": {
                    "type": "string",
                    "description": "The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/28` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the VPC will be created."
                },
                "vpc": {
                    "$ref": "#/types/digitalocean-native:vpcs/v2:Vpc"
                }
            },
            "type": "object",
            "required": [
                "name",
                "region"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters."
                },
                "ipRange": {
                    "type": "string",
                    "description": "The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/28` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods."
                },
                "region": {
                    "type": "string",
                    "description": "The slug identifier for the region where the VPC will be created."
                }
            }
        }
    },
    "functions": {
        "digitalocean-native:1-clicks/v2:listOneClicks": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:1-clicks/v2:ListOneClicksProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:account/v2:getAccount": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:account/v2:GetAccountProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:account/v2:getSshKeys": {
            "inputs": {
                "properties": {
                    "sshKeyIdentifier": {
                        "type": "string",
                        "description": "Either the ID or the fingerprint of an existing SSH key."
                    }
                },
                "required": [
                    "sshKeyIdentifier"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:account/v2:GetSshKeysProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:account/v2:listSshKeys": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:account/v2:ListSshKeys"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:actions/v2:getActions": {
            "inputs": {
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "A unique numeric ID that can be used to identify and reference an action."
                    }
                },
                "required": [
                    "actionId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:actions/v2:GetActionsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:actions/v2:listActions": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:actions/v2:ListActions"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getApps": {
            "inputs": {
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the app"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsDeployment": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "The deployment ID"
                    }
                },
                "required": [
                    "appId",
                    "deploymentId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsInstanceSize": {
            "inputs": {
                "properties": {
                    "slug": {
                        "type": "string",
                        "description": "The slug of the instance size"
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsGetInstanceSizeResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsLogs": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    },
                    "componentName": {
                        "type": "string",
                        "description": "An optional component name. If set, logs will be limited to this component only."
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "The deployment ID"
                    }
                },
                "required": [
                    "appId",
                    "componentName",
                    "deploymentId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsGetLogsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsLogsActiveDeployment": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    },
                    "componentName": {
                        "type": "string",
                        "description": "An optional component name. If set, logs will be limited to this component only."
                    }
                },
                "required": [
                    "appId",
                    "componentName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsGetLogsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsLogsActiveDeploymentAggregate": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    }
                },
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsGetLogsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsLogsAggregate": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "The deployment ID"
                    }
                },
                "required": [
                    "appId",
                    "deploymentId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsGetLogsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsMetricsBandwidthDaily": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    }
                },
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppMetricsBandwidthUsage"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:getAppsTier": {
            "inputs": {
                "properties": {
                    "slug": {
                        "type": "string",
                        "description": "The slug of the tier"
                    }
                },
                "required": [
                    "slug"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsGetTierResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:listApps": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:listAppsAlerts": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    }
                },
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsListAlertsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:listAppsDeployments": {
            "inputs": {
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The app ID"
                    }
                },
                "required": [
                    "appId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsDeploymentsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:listAppsInstanceSizes": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsListInstanceSizesResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:listAppsRegions": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsListRegionsResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:apps/v2:listAppsTiers": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:apps/v2:AppsListTiersResponse"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:cdn/v2:getCdnEndpoint": {
            "inputs": {
                "properties": {
                    "cdnId": {
                        "type": "string",
                        "description": "A unique identifier for a CDN endpoint."
                    }
                },
                "required": [
                    "cdnId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:cdn/v2:GetCdnEndpointProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:cdn/v2:listCdnEndpoints": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:cdn/v2:ListCdnEndpoints"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:certificates/v2:getCertificates": {
            "inputs": {
                "properties": {
                    "certificateId": {
                        "type": "string",
                        "description": "A unique identifier for a certificate."
                    }
                },
                "required": [
                    "certificateId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:certificates/v2:GetCertificatesProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:certificates/v2:listCertificates": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:certificates/v2:ListCertificates"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:customers/v2:getBalance": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:customers/v2:Balance"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:customers/v2:listBillingHistory": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:customers/v2:ListBillingHistory"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:customers/v2:listInvoices": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:customers/v2:ListInvoices"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabases": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "The name of the database."
                    }
                },
                "required": [
                    "databaseClusterUuid",
                    "databaseName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesCa": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesCaProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesCluster": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesClusterProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesConfig": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:DatabaseConfig"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesConnectionPool": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    },
                    "poolName": {
                        "type": "string",
                        "description": "The name used to identify the connection pool."
                    }
                },
                "required": [
                    "databaseClusterUuid",
                    "poolName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesConnectionPoolProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesEvictionPolicy": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesEvictionPolicyProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesMigrationStatus": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:OnlineMigration"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesReplica": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    },
                    "replicaName": {
                        "type": "string",
                        "description": "The name of the database replica."
                    }
                },
                "required": [
                    "databaseClusterUuid",
                    "replicaName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesReplicaProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesSqlMode": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:SqlMode"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:getDatabasesUser": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    },
                    "username": {
                        "type": "string",
                        "description": "The name of the database user."
                    }
                },
                "required": [
                    "databaseClusterUuid",
                    "username"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:GetDatabasesUserProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabases": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ListDatabasesProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabasesBackups": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ListDatabasesBackupsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabasesClusters": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ListDatabasesClustersProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabasesConnectionPools": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ConnectionPools"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabasesFirewallRules": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ListDatabasesFirewallRulesProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabasesOptions": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:Options"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabasesReplicas": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ListDatabasesReplicasProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:databases/v2:listDatabasesUsers": {
            "inputs": {
                "properties": {
                    "databaseClusterUuid": {
                        "type": "string",
                        "description": "A unique identifier for a database cluster."
                    }
                },
                "required": [
                    "databaseClusterUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:databases/v2:ListDatabasesUsersProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:domains/v2:getDomains": {
            "inputs": {
                "properties": {
                    "domainName": {
                        "type": "string",
                        "description": "The name of the domain itself."
                    }
                },
                "required": [
                    "domainName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:domains/v2:GetDomainsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:domains/v2:getDomainsRecord": {
            "inputs": {
                "properties": {
                    "domainName": {
                        "type": "string",
                        "description": "The name of the domain itself."
                    },
                    "domainRecordId": {
                        "type": "string",
                        "description": "The unique identifier of the domain record."
                    }
                },
                "required": [
                    "domainName",
                    "domainRecordId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:domains/v2:GetDomainsRecordProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:domains/v2:listDomains": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:domains/v2:ListDomains"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:domains/v2:listDomainsRecords": {
            "inputs": {
                "properties": {
                    "domainName": {
                        "type": "string",
                        "description": "The name of the domain itself."
                    }
                },
                "required": [
                    "domainName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:domains/v2:ListDomainsRecords"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:getDropletActions": {
            "inputs": {
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "A unique numeric ID that can be used to identify and reference an action."
                    },
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "actionId",
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:GetDropletActionsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:getDroplets": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:GetDropletsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:getDropletsDestroyAssociatedResourcesStatus": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:AssociatedResourceStatus"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDropletActions": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDropletActions"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDroplets": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDroplets"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDropletsAssociatedResources": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDropletsAssociatedResources"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDropletsBackups": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDropletsBackups"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDropletsFirewalls": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDropletsFirewalls"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDropletsKernels": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDropletsKernels"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDropletsNeighbors": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDropletsNeighbors"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:droplets/v2:listDropletsSnapshots": {
            "inputs": {
                "properties": {
                    "dropletId": {
                        "type": "string",
                        "description": "A unique identifier for a Droplet instance."
                    }
                },
                "required": [
                    "dropletId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:droplets/v2:ListDropletsSnapshots"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:firewalls/v2:getFirewalls": {
            "inputs": {
                "properties": {
                    "firewallId": {
                        "type": "string",
                        "description": "A unique ID that can be used to identify and reference a firewall."
                    }
                },
                "required": [
                    "firewallId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:GetFirewallsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:firewalls/v2:listFirewalls": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:firewalls/v2:ListFirewalls"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:floating_ips/v2:getFloatingIPs": {
            "inputs": {
                "properties": {
                    "floatingIp": {
                        "type": "string",
                        "description": "A floating IP address."
                    }
                },
                "required": [
                    "floatingIp"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:GetFloatingIPsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:floating_ips/v2:getFloatingIPsAction": {
            "inputs": {
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "A unique numeric ID that can be used to identify and reference an action."
                    },
                    "floatingIp": {
                        "type": "string",
                        "description": "A floating IP address."
                    }
                },
                "required": [
                    "actionId",
                    "floatingIp"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:GetFloatingIPsActionProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:floating_ips/v2:listFloatingIPs": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:ListFloatingIPs"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:floating_ips/v2:listFloatingIPsAction": {
            "inputs": {
                "properties": {
                    "floatingIp": {
                        "type": "string",
                        "description": "A floating IP address."
                    }
                },
                "required": [
                    "floatingIp"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:floating_ips/v2:ListFloatingIPsAction"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:functions/v2:getFunctionsNamespace": {
            "inputs": {
                "properties": {
                    "namespaceId": {
                        "type": "string",
                        "description": "The ID of the namespace to be managed."
                    }
                },
                "required": [
                    "namespaceId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:functions/v2:GetFunctionsNamespaceProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:functions/v2:getFunctionsTrigger": {
            "inputs": {
                "properties": {
                    "namespaceId": {
                        "type": "string",
                        "description": "The ID of the namespace to be managed."
                    },
                    "triggerName": {
                        "type": "string",
                        "description": "The name of the trigger to be managed."
                    }
                },
                "required": [
                    "namespaceId",
                    "triggerName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:functions/v2:GetFunctionsTriggerProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:functions/v2:listFunctionsNamespaces": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:functions/v2:ListFunctionsNamespaces"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:functions/v2:listFunctionsTriggers": {
            "inputs": {
                "properties": {
                    "namespaceId": {
                        "type": "string",
                        "description": "The ID of the namespace to be managed."
                    }
                },
                "required": [
                    "namespaceId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:functions/v2:ListFunctionsTriggers"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:images/v2:getImageActions": {
            "inputs": {
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "A unique numeric ID that can be used to identify and reference an action."
                    },
                    "imageId": {
                        "type": "string",
                        "description": "A unique number that can be used to identify and reference a specific image."
                    }
                },
                "required": [
                    "actionId",
                    "imageId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:images/v2:Action"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:images/v2:getImages": {
            "inputs": {
                "properties": {
                    "imageId": {
                        "type": "string",
                        "description": "A unique number (id) or string (slug) used to identify and reference a\nspecific image.\n\n**Public** images can be identified by image `id` or `slug`.\n\n**Private** images *must* be identified by image `id`.\n"
                    }
                },
                "required": [
                    "imageId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:images/v2:GetImagesProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:images/v2:listImageActions": {
            "inputs": {
                "properties": {
                    "imageId": {
                        "type": "string",
                        "description": "A unique number that can be used to identify and reference a specific image."
                    }
                },
                "required": [
                    "imageId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:images/v2:ListImageActions"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:images/v2:listImages": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:images/v2:ListImages"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:getKubernetesAvailableUpgrades": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    }
                },
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:GetKubernetesAvailableUpgradesProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:getKubernetesCluster": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    }
                },
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:GetKubernetesClusterProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:getKubernetesClusterLintResults": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    }
                },
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:ClusterlintResults"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:getKubernetesClusterUser": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    }
                },
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:User"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:getKubernetesCredentials": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    }
                },
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:Credentials"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:getKubernetesNodePool": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    },
                    "nodePoolId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes node pool."
                    }
                },
                "required": [
                    "clusterId",
                    "nodePoolId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:GetKubernetesNodePoolProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:listKubernetesAssociatedResources": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    }
                },
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:AssociatedKubernetesResources"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:listKubernetesClusters": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:ListKubernetesClusters"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:listKubernetesNodePools": {
            "inputs": {
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "A unique ID that can be used to reference a Kubernetes cluster."
                    }
                },
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:ListKubernetesNodePoolsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:kubernetes/v2:listKubernetesOptions": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:kubernetes/v2:KubernetesOptions"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:load_balancers/v2:getLoadBalancers": {
            "inputs": {
                "properties": {
                    "lbId": {
                        "type": "string",
                        "description": "A unique identifier for a load balancer."
                    }
                },
                "required": [
                    "lbId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:load_balancers/v2:GetLoadBalancersProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:load_balancers/v2:listLoadBalancers": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:load_balancers/v2:ListLoadBalancers"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringAlertPolicy": {
            "inputs": {
                "properties": {
                    "alertUuid": {
                        "type": "string",
                        "description": "A unique identifier for an alert policy."
                    }
                },
                "required": [
                    "alertUuid"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:GetMonitoringAlertPolicyProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletBandwidthMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletCpuMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletFilesystemFreeMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletFilesystemSizeMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletLoad15Metrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletLoad1Metrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletLoad5Metrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletMemoryAvailableMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletMemoryCachedMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletMemoryFreeMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:getMonitoringDropletMemoryTotalMetrics": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:Metrics"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:monitoring/v2:listMonitoringAlertPolicy": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:monitoring/v2:ListMonitoringAlertPolicy"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:projects/v2:getProjects": {
            "inputs": {
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "A unique identifier for a project."
                    }
                },
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:GetProjectsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:projects/v2:getProjectsDefault": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:GetProjectsDefaultProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:projects/v2:listProjects": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:ListProjects"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:projects/v2:listProjectsResources": {
            "inputs": {
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "A unique identifier for a project."
                    }
                },
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:ListProjectsResources"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:projects/v2:listProjectsResourcesDefault": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:projects/v2:ListProjectsResourcesDefault"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:regions/v2:listRegions": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:regions/v2:ListRegions"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:getRegistry": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:GetRegistryProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:getRegistryDockerCredentials": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:DockerCredentials"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:getRegistryOptions": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:GetRegistryOptionsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:getRegistrySubscription": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:GetRegistrySubscriptionProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:listRegistryGarbageCollections": {
            "inputs": {
                "properties": {
                    "registryName": {
                        "type": "string",
                        "description": "The name of a container registry."
                    }
                },
                "required": [
                    "registryName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:ListRegistryGarbageCollectionsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:listRegistryRepositories": {
            "inputs": {
                "properties": {
                    "registryName": {
                        "type": "string",
                        "description": "The name of a container registry."
                    }
                },
                "required": [
                    "registryName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:ListRegistryRepositories"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:listRegistryRepositoriesV2": {
            "inputs": {
                "properties": {
                    "registryName": {
                        "type": "string",
                        "description": "The name of a container registry."
                    }
                },
                "required": [
                    "registryName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:ListRegistryRepositoriesV2"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:listRegistryRepositoryManifests": {
            "inputs": {
                "properties": {
                    "registryName": {
                        "type": "string",
                        "description": "The name of a container registry."
                    },
                    "repositoryName": {
                        "type": "string",
                        "description": "The name of a container registry repository. If the name contains `/` characters, they must be URL-encoded, e.g. `%2F`."
                    }
                },
                "required": [
                    "registryName",
                    "repositoryName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:ListRegistryRepositoryManifests"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:registry/v2:listRegistryRepositoryTags": {
            "inputs": {
                "properties": {
                    "registryName": {
                        "type": "string",
                        "description": "The name of a container registry."
                    },
                    "repositoryName": {
                        "type": "string",
                        "description": "The name of a container registry repository. If the name contains `/` characters, they must be URL-encoded, e.g. `%2F`."
                    }
                },
                "required": [
                    "registryName",
                    "repositoryName"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:registry/v2:ListRegistryRepositoryTags"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:reports/v2:listDropletsNeighborsIds": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:reports/v2:NeighborIds"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:reserved_ips/v2:getReservedIPs": {
            "inputs": {
                "properties": {
                    "reservedIp": {
                        "type": "string",
                        "description": "A reserved IP address."
                    }
                },
                "required": [
                    "reservedIp"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:GetReservedIPsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:reserved_ips/v2:getReservedIPsActions": {
            "inputs": {
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "A unique numeric ID that can be used to identify and reference an action."
                    },
                    "reservedIp": {
                        "type": "string",
                        "description": "A reserved IP address."
                    }
                },
                "required": [
                    "actionId",
                    "reservedIp"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:GetReservedIPsActionsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:reserved_ips/v2:listReservedIPs": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:ListReservedIPs"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:reserved_ips/v2:listReservedIPsActions": {
            "inputs": {
                "properties": {
                    "reservedIp": {
                        "type": "string",
                        "description": "A reserved IP address."
                    }
                },
                "required": [
                    "reservedIp"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:reserved_ips/v2:ListReservedIPsActions"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:sizes/v2:listSizes": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:sizes/v2:ListSizes"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:snapshots/v2:getSnapshots": {
            "inputs": {
                "properties": {
                    "snapshotId": {
                        "type": "string",
                        "description": "Either the ID of an existing snapshot. This will be an integer for a Droplet snapshot or a string for a volume snapshot."
                    }
                },
                "required": [
                    "snapshotId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:snapshots/v2:GetSnapshotsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:snapshots/v2:listSnapshots": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:snapshots/v2:ListSnapshots"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:tags/v2:getTags": {
            "inputs": {
                "properties": {
                    "tagId": {
                        "type": "string",
                        "description": "The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag."
                    }
                },
                "required": [
                    "tagId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:tags/v2:GetTagsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:tags/v2:listTags": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:tags/v2:ListTags"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:uptime/v2:getUptimeAlert": {
            "inputs": {
                "properties": {
                    "alertId": {
                        "type": "string",
                        "description": "A unique identifier for an alert."
                    },
                    "checkId": {
                        "type": "string",
                        "description": "A unique identifier for a check."
                    }
                },
                "required": [
                    "alertId",
                    "checkId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:GetUptimeAlertProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:uptime/v2:getUptimeCheck": {
            "inputs": {
                "properties": {
                    "checkId": {
                        "type": "string",
                        "description": "A unique identifier for a check."
                    }
                },
                "required": [
                    "checkId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:GetUptimeCheckProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:uptime/v2:getUptimeCheckState": {
            "inputs": {
                "properties": {
                    "checkId": {
                        "type": "string",
                        "description": "A unique identifier for a check."
                    }
                },
                "required": [
                    "checkId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:GetUptimeCheckStateProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:uptime/v2:listUptimeAlerts": {
            "inputs": {
                "properties": {
                    "checkId": {
                        "type": "string",
                        "description": "A unique identifier for a check."
                    }
                },
                "required": [
                    "checkId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:ListUptimeAlerts"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:uptime/v2:listUptimeChecks": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:uptime/v2:ListUptimeChecks"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:volumes/v2:getVolumeActions": {
            "inputs": {
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "A unique numeric ID that can be used to identify and reference an action."
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "The ID of the block storage volume."
                    }
                },
                "required": [
                    "actionId",
                    "volumeId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:GetVolumeActionsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:volumes/v2:getVolumeSnapshotsById": {
            "inputs": {
                "properties": {
                    "snapshotId": {
                        "type": "string",
                        "description": "Either the ID of an existing snapshot. This will be an integer for a Droplet snapshot or a string for a volume snapshot."
                    }
                },
                "required": [
                    "snapshotId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:GetVolumeSnapshotsByIdProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:volumes/v2:getVolumes": {
            "inputs": {
                "properties": {
                    "volumeId": {
                        "type": "string",
                        "description": "The ID of the block storage volume."
                    }
                },
                "required": [
                    "volumeId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:GetVolumesProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:volumes/v2:listVolumeActions": {
            "inputs": {
                "properties": {
                    "volumeId": {
                        "type": "string",
                        "description": "The ID of the block storage volume."
                    }
                },
                "required": [
                    "volumeId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:ListVolumeActions"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:volumes/v2:listVolumeSnapshots": {
            "inputs": {
                "properties": {
                    "volumeId": {
                        "type": "string",
                        "description": "The ID of the block storage volume."
                    }
                },
                "required": [
                    "volumeId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:ListVolumeSnapshots"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:volumes/v2:listVolumes": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:volumes/v2:ListVolumes"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:vpcs/v2:getVpcs": {
            "inputs": {
                "properties": {
                    "vpcId": {
                        "type": "string",
                        "description": "A unique identifier for a VPC."
                    }
                },
                "required": [
                    "vpcId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:vpcs/v2:GetVpcsProperties"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:vpcs/v2:listVpcs": {
            "inputs": {},
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:vpcs/v2:ListVpcs"
                    }
                },
                "required": [
                    "items"
                ]
            }
        },
        "digitalocean-native:vpcs/v2:listVpcsMembers": {
            "inputs": {
                "properties": {
                    "vpcId": {
                        "type": "string",
                        "description": "A unique identifier for a VPC."
                    }
                },
                "required": [
                    "vpcId"
                ]
            },
            "outputs": {
                "properties": {
                    "items": {
                        "$ref": "#/types/digitalocean-native:vpcs/v2:ListVpcsMembers"
                    }
                },
                "required": [
                    "items"
                ]
            }
        }
    }
}