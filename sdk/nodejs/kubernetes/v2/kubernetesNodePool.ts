// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class KubernetesNodePool extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesNodePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): KubernetesNodePool {
        return new KubernetesNodePool(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:kubernetes/v2:KubernetesNodePool';

    /**
     * Returns true if the given object is an instance of KubernetesNodePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesNodePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesNodePool.__pulumiType;
    }

    /**
     * A boolean value indicating whether auto-scaling is enabled for this node pool.
     */
    declare public readonly autoScale: pulumi.Output<boolean | undefined>;
    /**
     * The number of Droplet instances in the node pool.
     */
    declare public readonly count: pulumi.Output<number>;
    /**
     * An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
     */
    declare public readonly labels: pulumi.Output<any | undefined>;
    /**
     * The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
     */
    declare public readonly maxNodes: pulumi.Output<number | undefined>;
    /**
     * The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
     */
    declare public readonly minNodes: pulumi.Output<number | undefined>;
    /**
     * A human-readable name for the node pool.
     */
    declare public readonly name: pulumi.Output<string>;
    declare public /*out*/ readonly nodePool: pulumi.Output<outputs.kubernetes.v2.KubernetesNodePool | undefined>;
    /**
     * An object specifying the details of a specific worker node in a node pool.
     */
    declare public readonly nodes: pulumi.Output<outputs.kubernetes.v2.Node[] | undefined>;
    /**
     * The slug identifier for the type of Droplet used as workers in the node pool.
     */
    declare public readonly size: pulumi.Output<string>;
    /**
     * An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
     */
    declare public readonly taints: pulumi.Output<outputs.kubernetes.v2.KubernetesNodePoolTaint[] | undefined>;

    /**
     * Create a KubernetesNodePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KubernetesNodePoolArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["autoScale"] = args?.autoScale;
            resourceInputs["clusterId"] = args?.clusterId;
            resourceInputs["count"] = args?.count;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["maxNodes"] = args?.maxNodes;
            resourceInputs["minNodes"] = args?.minNodes;
            resourceInputs["name"] = args?.name;
            resourceInputs["nodes"] = args?.nodes;
            resourceInputs["size"] = args?.size;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["taints"] = args?.taints;
            resourceInputs["nodePool"] = undefined /*out*/;
        } else {
            resourceInputs["autoScale"] = undefined /*out*/;
            resourceInputs["count"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["maxNodes"] = undefined /*out*/;
            resourceInputs["minNodes"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nodePool"] = undefined /*out*/;
            resourceInputs["nodes"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["tags"] = undefined /*out*/;
            resourceInputs["taints"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesNodePool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a KubernetesNodePool resource.
 */
export interface KubernetesNodePoolArgs {
    /**
     * A boolean value indicating whether auto-scaling is enabled for this node pool.
     */
    autoScale?: pulumi.Input<boolean>;
    /**
     * A unique ID that can be used to reference a Kubernetes cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * The number of Droplet instances in the node pool.
     */
    count?: pulumi.Input<number>;
    /**
     * An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
     */
    labels?: any;
    /**
     * The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
     */
    maxNodes?: pulumi.Input<number>;
    /**
     * The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
     */
    minNodes?: pulumi.Input<number>;
    /**
     * A human-readable name for the node pool.
     */
    name?: pulumi.Input<string>;
    /**
     * An object specifying the details of a specific worker node in a node pool.
     */
    nodes?: pulumi.Input<pulumi.Input<inputs.kubernetes.v2.NodeArgs>[]>;
    /**
     * The slug identifier for the type of Droplet used as workers in the node pool.
     */
    size?: pulumi.Input<string>;
    /**
     * An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
     */
    taints?: pulumi.Input<pulumi.Input<inputs.kubernetes.v2.KubernetesNodePoolTaintArgs>[]>;
}
