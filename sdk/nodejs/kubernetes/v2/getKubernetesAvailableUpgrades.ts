// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getKubernetesAvailableUpgrades(args: GetKubernetesAvailableUpgradesArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesAvailableUpgradesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:kubernetes/v2:getKubernetesAvailableUpgrades", {
        "clusterId": args.clusterId,
    }, opts);
}

export interface GetKubernetesAvailableUpgradesArgs {
    /**
     * A unique ID that can be used to reference a Kubernetes cluster.
     */
    clusterId: string;
}

export interface GetKubernetesAvailableUpgradesResult {
    readonly items: outputs.kubernetes.v2.GetKubernetesAvailableUpgradesProperties;
}
export function getKubernetesAvailableUpgradesOutput(args: GetKubernetesAvailableUpgradesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKubernetesAvailableUpgradesResult> {
    return pulumi.output(args).apply((a: any) => getKubernetesAvailableUpgrades(a, opts))
}

export interface GetKubernetesAvailableUpgradesOutputArgs {
    /**
     * A unique ID that can be used to reference a Kubernetes cluster.
     */
    clusterId: pulumi.Input<string>;
}
