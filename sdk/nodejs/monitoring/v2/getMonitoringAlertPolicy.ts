// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getMonitoringAlertPolicy(args: GetMonitoringAlertPolicyArgs, opts?: pulumi.InvokeOptions): Promise<outputs.monitoring.v2.GetMonitoringAlertPolicyProperties> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:monitoring/v2:getMonitoringAlertPolicy", {
        "alertUuid": args.alertUuid,
    }, opts);
}

export interface GetMonitoringAlertPolicyArgs {
    /**
     * A unique identifier for an alert policy.
     */
    alertUuid: string;
}
export function getMonitoringAlertPolicyOutput(args: GetMonitoringAlertPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.monitoring.v2.GetMonitoringAlertPolicyProperties> {
    return pulumi.output(args).apply((a: any) => getMonitoringAlertPolicy(a, opts))
}

export interface GetMonitoringAlertPolicyOutputArgs {
    /**
     * A unique identifier for an alert policy.
     */
    alertUuid: pulumi.Input<string>;
}
