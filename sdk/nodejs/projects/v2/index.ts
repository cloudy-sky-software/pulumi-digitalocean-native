// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetProjectArgs, GetProjectResult, GetProjectOutputArgs } from "./getProject";
export const getProject: typeof import("./getProject").getProject = null as any;
export const getProjectOutput: typeof import("./getProject").getProjectOutput = null as any;
utilities.lazyLoad(exports, ["getProject","getProjectOutput"], () => require("./getProject"));

export { GetProjectsDefaultArgs, GetProjectsDefaultResult } from "./getProjectsDefault";
export const getProjectsDefault: typeof import("./getProjectsDefault").getProjectsDefault = null as any;
export const getProjectsDefaultOutput: typeof import("./getProjectsDefault").getProjectsDefaultOutput = null as any;
utilities.lazyLoad(exports, ["getProjectsDefault","getProjectsDefaultOutput"], () => require("./getProjectsDefault"));

export { ListProjectsArgs, ListProjectsResult } from "./listProjects";
export const listProjects: typeof import("./listProjects").listProjects = null as any;
export const listProjectsOutput: typeof import("./listProjects").listProjectsOutput = null as any;
utilities.lazyLoad(exports, ["listProjects","listProjectsOutput"], () => require("./listProjects"));

export { ListProjectsResourcesArgs, ListProjectsResourcesResult, ListProjectsResourcesOutputArgs } from "./listProjectsResources";
export const listProjectsResources: typeof import("./listProjectsResources").listProjectsResources = null as any;
export const listProjectsResourcesOutput: typeof import("./listProjectsResources").listProjectsResourcesOutput = null as any;
utilities.lazyLoad(exports, ["listProjectsResources","listProjectsResourcesOutput"], () => require("./listProjectsResources"));

export { ListProjectsResourcesDefaultArgs, ListProjectsResourcesDefaultResult } from "./listProjectsResourcesDefault";
export const listProjectsResourcesDefault: typeof import("./listProjectsResourcesDefault").listProjectsResourcesDefault = null as any;
export const listProjectsResourcesDefaultOutput: typeof import("./listProjectsResourcesDefault").listProjectsResourcesDefaultOutput = null as any;
utilities.lazyLoad(exports, ["listProjectsResourcesDefault","listProjectsResourcesDefaultOutput"], () => require("./listProjectsResourcesDefault"));

export { ProjectArgs } from "./project";
export type Project = import("./project").Project;
export const Project: typeof import("./project").Project = null as any;
utilities.lazyLoad(exports, ["Project"], () => require("./project"));

export { ProjectsAssignResourceArgs } from "./projectsAssignResource";
export type ProjectsAssignResource = import("./projectsAssignResource").ProjectsAssignResource;
export const ProjectsAssignResource: typeof import("./projectsAssignResource").ProjectsAssignResource = null as any;
utilities.lazyLoad(exports, ["ProjectsAssignResource"], () => require("./projectsAssignResource"));

export { ProjectsAssignResourcesDefaultArgs } from "./projectsAssignResourcesDefault";
export type ProjectsAssignResourcesDefault = import("./projectsAssignResourcesDefault").ProjectsAssignResourcesDefault;
export const ProjectsAssignResourcesDefault: typeof import("./projectsAssignResourcesDefault").ProjectsAssignResourcesDefault = null as any;
utilities.lazyLoad(exports, ["ProjectsAssignResourcesDefault"], () => require("./projectsAssignResourcesDefault"));

export { ProjectsDefaultArgs } from "./projectsDefault";
export type ProjectsDefault = import("./projectsDefault").ProjectsDefault;
export const ProjectsDefault: typeof import("./projectsDefault").ProjectsDefault = null as any;
utilities.lazyLoad(exports, ["ProjectsDefault"], () => require("./projectsDefault"));


// Export enums:
export * from "../../types/enums/projects/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:projects/v2:Project":
                return new Project(name, <any>undefined, { urn })
            case "digitalocean-native:projects/v2:ProjectsAssignResource":
                return new ProjectsAssignResource(name, <any>undefined, { urn })
            case "digitalocean-native:projects/v2:ProjectsAssignResourcesDefault":
                return new ProjectsAssignResourcesDefault(name, <any>undefined, { urn })
            case "digitalocean-native:projects/v2:ProjectsDefault":
                return new ProjectsDefault(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "projects/v2", _module)
