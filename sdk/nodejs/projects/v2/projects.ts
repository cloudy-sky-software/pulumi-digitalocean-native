// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class Projects extends pulumi.CustomResource {
    /**
     * Get an existing Projects resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Projects {
        return new Projects(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:projects/v2:Projects';

    /**
     * Returns true if the given object is an instance of Projects.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Projects {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Projects.__pulumiType;
    }

    /**
     * A time value given in ISO8601 combined date and time format that represents when the project was created.
     */
    public readonly createdAt!: pulumi.Output<string | undefined>;
    /**
     * The description of the project. The maximum length is 255 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The environment of the project's resources.
     */
    public readonly environment!: pulumi.Output<enums.projects.v2.ProjectBaseEnvironment | undefined>;
    /**
     * The human-readable name for the project. The maximum length is 175 characters and the name must be unique.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The integer id of the project owner.
     */
    public readonly ownerId!: pulumi.Output<number | undefined>;
    /**
     * The unique universal identifier of the project owner.
     */
    public readonly ownerUuid!: pulumi.Output<string | undefined>;
    public /*out*/ readonly project!: pulumi.Output<outputs.projects.v2.Project | undefined>;
    /**
     * The purpose of the project. The maximum length is 255 characters. It can
     * have one of the following values:
     *
     * - Just trying out DigitalOcean
     * - Class project / Educational purposes
     * - Website or blog
     * - Web Application
     * - Service or API
     * - Mobile Application
     * - Machine learning / AI / Data processing
     * - IoT
     * - Operational / Developer tooling
     *
     * If another value for purpose is specified, for example, "your custom purpose",
     * your purpose will be stored as `Other: your custom purpose`.
     */
    public readonly purpose!: pulumi.Output<string>;
    /**
     * A time value given in ISO8601 combined date and time format that represents when the project was updated.
     */
    public readonly updatedAt!: pulumi.Output<string | undefined>;

    /**
     * Create a Projects resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProjectsArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["createdAt"] = args ? args.createdAt : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownerId"] = args ? args.ownerId : undefined;
            resourceInputs["ownerUuid"] = args ? args.ownerUuid : undefined;
            resourceInputs["purpose"] = args ? args.purpose : undefined;
            resourceInputs["updatedAt"] = args ? args.updatedAt : undefined;
            resourceInputs["project"] = undefined /*out*/;
        } else {
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["environment"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["ownerId"] = undefined /*out*/;
            resourceInputs["ownerUuid"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["purpose"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Projects.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Projects resource.
 */
export interface ProjectsArgs {
    /**
     * A time value given in ISO8601 combined date and time format that represents when the project was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The description of the project. The maximum length is 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The environment of the project's resources.
     */
    environment?: pulumi.Input<enums.projects.v2.ProjectBaseEnvironment>;
    /**
     * The human-readable name for the project. The maximum length is 175 characters and the name must be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * The integer id of the project owner.
     */
    ownerId?: pulumi.Input<number>;
    /**
     * The unique universal identifier of the project owner.
     */
    ownerUuid?: pulumi.Input<string>;
    /**
     * The purpose of the project. The maximum length is 255 characters. It can
     * have one of the following values:
     *
     * - Just trying out DigitalOcean
     * - Class project / Educational purposes
     * - Website or blog
     * - Web Application
     * - Service or API
     * - Mobile Application
     * - Machine learning / AI / Data processing
     * - IoT
     * - Operational / Developer tooling
     *
     * If another value for purpose is specified, for example, "your custom purpose",
     * your purpose will be stored as `Other: your custom purpose`.
     */
    purpose?: pulumi.Input<string>;
    /**
     * A time value given in ISO8601 combined date and time format that represents when the project was updated.
     */
    updatedAt?: pulumi.Input<string>;
}
