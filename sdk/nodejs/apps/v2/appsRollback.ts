// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class AppsRollback extends pulumi.CustomResource {
    /**
     * Get an existing AppsRollback resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AppsRollback {
        return new AppsRollback(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:apps/v2:AppsRollback';

    /**
     * Returns true if the given object is an instance of AppsRollback.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppsRollback {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppsRollback.__pulumiType;
    }

    public /*out*/ readonly deployment!: pulumi.Output<outputs.apps.v2.AppsDeployment | undefined>;
    /**
     * The ID of the deployment to rollback to.
     */
    public readonly deploymentId!: pulumi.Output<string | undefined>;
    /**
     * Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned.
     */
    public readonly skipPin!: pulumi.Output<boolean | undefined>;

    /**
     * Create a AppsRollback resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppsRollbackArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["deploymentId"] = args ? args.deploymentId : undefined;
            resourceInputs["skipPin"] = args ? args.skipPin : undefined;
            resourceInputs["deployment"] = undefined /*out*/;
        } else {
            resourceInputs["deployment"] = undefined /*out*/;
            resourceInputs["deploymentId"] = undefined /*out*/;
            resourceInputs["skipPin"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppsRollback.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AppsRollback resource.
 */
export interface AppsRollbackArgs {
    /**
     * The app ID
     */
    appId?: pulumi.Input<string>;
    /**
     * The ID of the deployment to rollback to.
     */
    deploymentId?: pulumi.Input<string>;
    /**
     * Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned.
     */
    skipPin?: pulumi.Input<boolean>;
}
