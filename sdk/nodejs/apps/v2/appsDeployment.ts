// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class AppsDeployment extends pulumi.CustomResource {
    /**
     * Get an existing AppsDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AppsDeployment {
        return new AppsDeployment(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:apps/v2:AppsDeployment';

    /**
     * Returns true if the given object is an instance of AppsDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppsDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppsDeployment.__pulumiType;
    }

    declare public /*out*/ readonly deployment: pulumi.Output<outputs.apps.v2.AppsDeployment | undefined>;
    declare public readonly forceBuild: pulumi.Output<boolean | undefined>;

    /**
     * Create a AppsDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppsDeploymentArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["appId"] = args?.appId;
            resourceInputs["forceBuild"] = args?.forceBuild;
            resourceInputs["deployment"] = undefined /*out*/;
        } else {
            resourceInputs["deployment"] = undefined /*out*/;
            resourceInputs["forceBuild"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppsDeployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a AppsDeployment resource.
 */
export interface AppsDeploymentArgs {
    /**
     * The app ID
     */
    appId?: pulumi.Input<string>;
    forceBuild?: pulumi.Input<boolean>;
}
