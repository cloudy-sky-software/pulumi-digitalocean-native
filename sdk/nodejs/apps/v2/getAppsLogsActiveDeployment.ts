// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getAppsLogsActiveDeployment(args: GetAppsLogsActiveDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<outputs.apps.v2.AppsGetLogsResponse> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:apps/v2:getAppsLogsActiveDeployment", {
        "appId": args.appId,
        "componentName": args.componentName,
    }, opts);
}

export interface GetAppsLogsActiveDeploymentArgs {
    /**
     * The app ID
     */
    appId: string;
    /**
     * An optional component name. If set, logs will be limited to this component only.
     */
    componentName: string;
}
export function getAppsLogsActiveDeploymentOutput(args: GetAppsLogsActiveDeploymentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<outputs.apps.v2.AppsGetLogsResponse> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("digitalocean-native:apps/v2:getAppsLogsActiveDeployment", {
        "appId": args.appId,
        "componentName": args.componentName,
    }, opts);
}

export interface GetAppsLogsActiveDeploymentOutputArgs {
    /**
     * The app ID
     */
    appId: pulumi.Input<string>;
    /**
     * An optional component name. If set, logs will be limited to this component only.
     */
    componentName: pulumi.Input<string>;
}
