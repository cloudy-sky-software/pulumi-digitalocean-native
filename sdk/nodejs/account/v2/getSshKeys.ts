// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getSshKeys(args: GetSshKeysArgs, opts?: pulumi.InvokeOptions): Promise<GetSshKeysResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:account/v2:getSshKeys", {
        "sshKeyIdentifier": args.sshKeyIdentifier,
    }, opts);
}

export interface GetSshKeysArgs {
    /**
     * Either the ID or the fingerprint of an existing SSH key.
     */
    sshKeyIdentifier: string;
}

export interface GetSshKeysResult {
    readonly items: outputs.account.v2.GetSshKeysProperties;
}
export function getSshKeysOutput(args: GetSshKeysOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSshKeysResult> {
    return pulumi.output(args).apply((a: any) => getSshKeys(a, opts))
}

export interface GetSshKeysOutputArgs {
    /**
     * Either the ID or the fingerprint of an existing SSH key.
     */
    sshKeyIdentifier: pulumi.Input<string>;
}
