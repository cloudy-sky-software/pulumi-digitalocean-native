// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetAccountArgs, GetAccountResult } from "./getAccount";
export const getAccount: typeof import("./getAccount").getAccount = null as any;
export const getAccountOutput: typeof import("./getAccount").getAccountOutput = null as any;
utilities.lazyLoad(exports, ["getAccount","getAccountOutput"], () => require("./getAccount"));

export { GetSshKeyArgs, GetSshKeyResult, GetSshKeyOutputArgs } from "./getSshKey";
export const getSshKey: typeof import("./getSshKey").getSshKey = null as any;
export const getSshKeyOutput: typeof import("./getSshKey").getSshKeyOutput = null as any;
utilities.lazyLoad(exports, ["getSshKey","getSshKeyOutput"], () => require("./getSshKey"));

export { ListSshKeysArgs, ListSshKeysResult } from "./listSshKeys";
export const listSshKeys: typeof import("./listSshKeys").listSshKeys = null as any;
export const listSshKeysOutput: typeof import("./listSshKeys").listSshKeysOutput = null as any;
utilities.lazyLoad(exports, ["listSshKeys","listSshKeysOutput"], () => require("./listSshKeys"));

export { SshKeysArgs } from "./sshKeys";
export type SshKeys = import("./sshKeys").SshKeys;
export const SshKeys: typeof import("./sshKeys").SshKeys = null as any;
utilities.lazyLoad(exports, ["SshKeys"], () => require("./sshKeys"));


// Export enums:
export * from "../../types/enums/account/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:account/v2:SshKeys":
                return new SshKeys(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "account/v2", _module)
