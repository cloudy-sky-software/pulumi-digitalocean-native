// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AArgs } from "./a";
export type A = import("./a").A;
export const A: typeof import("./a").A = null as any;
utilities.lazyLoad(exports, ["A"], () => require("./a"));

export { AaaaArgs } from "./aaaa";
export type Aaaa = import("./aaaa").Aaaa;
export const Aaaa: typeof import("./aaaa").Aaaa = null as any;
utilities.lazyLoad(exports, ["Aaaa"], () => require("./aaaa"));

export { CaaArgs } from "./caa";
export type Caa = import("./caa").Caa;
export const Caa: typeof import("./caa").Caa = null as any;
utilities.lazyLoad(exports, ["Caa"], () => require("./caa"));

export { CnameArgs } from "./cname";
export type Cname = import("./cname").Cname;
export const Cname: typeof import("./cname").Cname = null as any;
utilities.lazyLoad(exports, ["Cname"], () => require("./cname"));

export { DomainsArgs } from "./domains";
export type Domains = import("./domains").Domains;
export const Domains: typeof import("./domains").Domains = null as any;
utilities.lazyLoad(exports, ["Domains"], () => require("./domains"));

export { GetDomainArgs, GetDomainResult, GetDomainOutputArgs } from "./getDomain";
export const getDomain: typeof import("./getDomain").getDomain = null as any;
export const getDomainOutput: typeof import("./getDomain").getDomainOutput = null as any;
utilities.lazyLoad(exports, ["getDomain","getDomainOutput"], () => require("./getDomain"));

export { GetDomainsRecordArgs, GetDomainsRecordResult, GetDomainsRecordOutputArgs } from "./getDomainsRecord";
export const getDomainsRecord: typeof import("./getDomainsRecord").getDomainsRecord = null as any;
export const getDomainsRecordOutput: typeof import("./getDomainsRecord").getDomainsRecordOutput = null as any;
utilities.lazyLoad(exports, ["getDomainsRecord","getDomainsRecordOutput"], () => require("./getDomainsRecord"));

export { ListDomainsArgs, ListDomainsResult } from "./listDomains";
export const listDomains: typeof import("./listDomains").listDomains = null as any;
export const listDomainsOutput: typeof import("./listDomains").listDomainsOutput = null as any;
utilities.lazyLoad(exports, ["listDomains","listDomainsOutput"], () => require("./listDomains"));

export { ListDomainsRecordsArgs, ListDomainsRecordsResult, ListDomainsRecordsOutputArgs } from "./listDomainsRecords";
export const listDomainsRecords: typeof import("./listDomainsRecords").listDomainsRecords = null as any;
export const listDomainsRecordsOutput: typeof import("./listDomainsRecords").listDomainsRecordsOutput = null as any;
utilities.lazyLoad(exports, ["listDomainsRecords","listDomainsRecordsOutput"], () => require("./listDomainsRecords"));

export { MxArgs } from "./mx";
export type Mx = import("./mx").Mx;
export const Mx: typeof import("./mx").Mx = null as any;
utilities.lazyLoad(exports, ["Mx"], () => require("./mx"));

export { NsArgs } from "./ns";
export type Ns = import("./ns").Ns;
export const Ns: typeof import("./ns").Ns = null as any;
utilities.lazyLoad(exports, ["Ns"], () => require("./ns"));

export { SoaArgs } from "./soa";
export type Soa = import("./soa").Soa;
export const Soa: typeof import("./soa").Soa = null as any;
utilities.lazyLoad(exports, ["Soa"], () => require("./soa"));

export { SrvArgs } from "./srv";
export type Srv = import("./srv").Srv;
export const Srv: typeof import("./srv").Srv = null as any;
utilities.lazyLoad(exports, ["Srv"], () => require("./srv"));

export { TxtArgs } from "./txt";
export type Txt = import("./txt").Txt;
export const Txt: typeof import("./txt").Txt = null as any;
utilities.lazyLoad(exports, ["Txt"], () => require("./txt"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:domains/v2:A":
                return new A(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Aaaa":
                return new Aaaa(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Caa":
                return new Caa(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Cname":
                return new Cname(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Domains":
                return new Domains(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Mx":
                return new Mx(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Ns":
                return new Ns(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Soa":
                return new Soa(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Srv":
                return new Srv(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:Txt":
                return new Txt(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "domains/v2", _module)
