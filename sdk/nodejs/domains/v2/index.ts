// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { DomainsArgs } from "./domains";
export type Domains = import("./domains").Domains;
export const Domains: typeof import("./domains").Domains = null as any;
utilities.lazyLoad(exports, ["Domains"], () => require("./domains"));

export { DomainsRecordAArgs } from "./domainsRecordA";
export type DomainsRecordA = import("./domainsRecordA").DomainsRecordA;
export const DomainsRecordA: typeof import("./domainsRecordA").DomainsRecordA = null as any;
utilities.lazyLoad(exports, ["DomainsRecordA"], () => require("./domainsRecordA"));

export { DomainsRecordAaaaArgs } from "./domainsRecordAaaa";
export type DomainsRecordAaaa = import("./domainsRecordAaaa").DomainsRecordAaaa;
export const DomainsRecordAaaa: typeof import("./domainsRecordAaaa").DomainsRecordAaaa = null as any;
utilities.lazyLoad(exports, ["DomainsRecordAaaa"], () => require("./domainsRecordAaaa"));

export { DomainsRecordCaaArgs } from "./domainsRecordCaa";
export type DomainsRecordCaa = import("./domainsRecordCaa").DomainsRecordCaa;
export const DomainsRecordCaa: typeof import("./domainsRecordCaa").DomainsRecordCaa = null as any;
utilities.lazyLoad(exports, ["DomainsRecordCaa"], () => require("./domainsRecordCaa"));

export { DomainsRecordCnameArgs } from "./domainsRecordCname";
export type DomainsRecordCname = import("./domainsRecordCname").DomainsRecordCname;
export const DomainsRecordCname: typeof import("./domainsRecordCname").DomainsRecordCname = null as any;
utilities.lazyLoad(exports, ["DomainsRecordCname"], () => require("./domainsRecordCname"));

export { DomainsRecordMxArgs } from "./domainsRecordMx";
export type DomainsRecordMx = import("./domainsRecordMx").DomainsRecordMx;
export const DomainsRecordMx: typeof import("./domainsRecordMx").DomainsRecordMx = null as any;
utilities.lazyLoad(exports, ["DomainsRecordMx"], () => require("./domainsRecordMx"));

export { DomainsRecordNsArgs } from "./domainsRecordNs";
export type DomainsRecordNs = import("./domainsRecordNs").DomainsRecordNs;
export const DomainsRecordNs: typeof import("./domainsRecordNs").DomainsRecordNs = null as any;
utilities.lazyLoad(exports, ["DomainsRecordNs"], () => require("./domainsRecordNs"));

export { DomainsRecordSoaArgs } from "./domainsRecordSoa";
export type DomainsRecordSoa = import("./domainsRecordSoa").DomainsRecordSoa;
export const DomainsRecordSoa: typeof import("./domainsRecordSoa").DomainsRecordSoa = null as any;
utilities.lazyLoad(exports, ["DomainsRecordSoa"], () => require("./domainsRecordSoa"));

export { DomainsRecordSrvArgs } from "./domainsRecordSrv";
export type DomainsRecordSrv = import("./domainsRecordSrv").DomainsRecordSrv;
export const DomainsRecordSrv: typeof import("./domainsRecordSrv").DomainsRecordSrv = null as any;
utilities.lazyLoad(exports, ["DomainsRecordSrv"], () => require("./domainsRecordSrv"));

export { DomainsRecordTxtArgs } from "./domainsRecordTxt";
export type DomainsRecordTxt = import("./domainsRecordTxt").DomainsRecordTxt;
export const DomainsRecordTxt: typeof import("./domainsRecordTxt").DomainsRecordTxt = null as any;
utilities.lazyLoad(exports, ["DomainsRecordTxt"], () => require("./domainsRecordTxt"));

export { GetDomainsArgs, GetDomainsResult, GetDomainsOutputArgs } from "./getDomains";
export const getDomains: typeof import("./getDomains").getDomains = null as any;
export const getDomainsOutput: typeof import("./getDomains").getDomainsOutput = null as any;
utilities.lazyLoad(exports, ["getDomains","getDomainsOutput"], () => require("./getDomains"));

export { GetDomainsRecordArgs, GetDomainsRecordResult, GetDomainsRecordOutputArgs } from "./getDomainsRecord";
export const getDomainsRecord: typeof import("./getDomainsRecord").getDomainsRecord = null as any;
export const getDomainsRecordOutput: typeof import("./getDomainsRecord").getDomainsRecordOutput = null as any;
utilities.lazyLoad(exports, ["getDomainsRecord","getDomainsRecordOutput"], () => require("./getDomainsRecord"));

export { ListDomainsArgs, ListDomainsResult } from "./listDomains";
export const listDomains: typeof import("./listDomains").listDomains = null as any;
export const listDomainsOutput: typeof import("./listDomains").listDomainsOutput = null as any;
utilities.lazyLoad(exports, ["listDomains","listDomainsOutput"], () => require("./listDomains"));

export { ListDomainsRecordsArgs, ListDomainsRecordsResult, ListDomainsRecordsOutputArgs } from "./listDomainsRecords";
export const listDomainsRecords: typeof import("./listDomainsRecords").listDomainsRecords = null as any;
export const listDomainsRecordsOutput: typeof import("./listDomainsRecords").listDomainsRecordsOutput = null as any;
utilities.lazyLoad(exports, ["listDomainsRecords","listDomainsRecordsOutput"], () => require("./listDomainsRecords"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:domains/v2:Domains":
                return new Domains(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordA":
                return new DomainsRecordA(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordAaaa":
                return new DomainsRecordAaaa(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordCaa":
                return new DomainsRecordCaa(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordCname":
                return new DomainsRecordCname(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordMx":
                return new DomainsRecordMx(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordNs":
                return new DomainsRecordNs(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordSoa":
                return new DomainsRecordSoa(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordSrv":
                return new DomainsRecordSrv(name, <any>undefined, { urn })
            case "digitalocean-native:domains/v2:DomainsRecordTxt":
                return new DomainsRecordTxt(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "domains/v2", _module)
