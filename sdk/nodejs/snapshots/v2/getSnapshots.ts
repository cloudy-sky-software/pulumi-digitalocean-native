// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getSnapshots(args: GetSnapshotsArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:snapshots/v2:getSnapshots", {
        "snapshotId": args.snapshotId,
    }, opts);
}

export interface GetSnapshotsArgs {
    /**
     * Either the ID of an existing snapshot. This will be an integer for a Droplet snapshot or a string for a volume snapshot.
     */
    snapshotId: string;
}

export interface GetSnapshotsResult {
    readonly items: outputs.snapshots.v2.GetSnapshotsProperties;
}
export function getSnapshotsOutput(args: GetSnapshotsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotsResult> {
    return pulumi.output(args).apply((a: any) => getSnapshots(a, opts))
}

export interface GetSnapshotsOutputArgs {
    /**
     * Either the ID of an existing snapshot. This will be an integer for a Droplet snapshot or a string for a volume snapshot.
     */
    snapshotId: pulumi.Input<string>;
}
