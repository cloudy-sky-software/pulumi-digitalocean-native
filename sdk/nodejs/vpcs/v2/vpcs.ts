// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class Vpcs extends pulumi.CustomResource {
    /**
     * Get an existing Vpcs resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Vpcs {
        return new Vpcs(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:vpcs/v2:Vpcs';

    /**
     * Returns true if the given object is an instance of Vpcs.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Vpcs {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Vpcs.__pulumiType;
    }

    /**
     * A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/28` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account.
     */
    public readonly ipRange!: pulumi.Output<string | undefined>;
    /**
     * The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The slug identifier for the region where the VPC will be created.
     */
    public readonly region!: pulumi.Output<string>;
    public /*out*/ readonly vpc!: pulumi.Output<outputs.vpcs.v2.Vpc | undefined>;

    /**
     * Create a Vpcs resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcsArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipRange"] = args ? args.ipRange : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["vpc"] = undefined /*out*/;
        } else {
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["ipRange"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["vpc"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Vpcs.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Vpcs resource.
 */
export interface VpcsArgs {
    /**
     * A free-form text field for describing the VPC's purpose. It may be a maximum of 255 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The range of IP addresses in the VPC in CIDR notation. Network ranges cannot overlap with other networks in the same account and must be in range of private addresses as defined in RFC1918. It may not be smaller than `/28` nor larger than `/16`. If no IP range is specified, a `/20` network range is generated that won't conflict with other VPC networks in your account.
     */
    ipRange?: pulumi.Input<string>;
    /**
     * The name of the VPC. Must be unique and may only contain alphanumeric characters, dashes, and periods.
     */
    name?: pulumi.Input<string>;
    /**
     * The slug identifier for the region where the VPC will be created.
     */
    region?: pulumi.Input<string>;
}
