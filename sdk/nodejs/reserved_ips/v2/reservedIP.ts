// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class ReservedIP extends pulumi.CustomResource {
    /**
     * Get an existing ReservedIP resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReservedIP {
        return new ReservedIP(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:reserved_ips/v2:ReservedIP';

    /**
     * Returns true if the given object is an instance of ReservedIP.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReservedIP {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReservedIP.__pulumiType;
    }

    declare public /*out*/ readonly links: pulumi.Output<outputs.reserved_ips.v2.LinksProperties | undefined>;
    /**
     * The UUID of the project to which the reserved IP will be assigned.
     */
    declare public readonly projectId: pulumi.Output<string | undefined>;
    /**
     * The slug identifier for the region the reserved IP will be reserved to.
     */
    declare public readonly region: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly reservedIp: pulumi.Output<outputs.reserved_ips.v2.ReservedIp | undefined>;

    /**
     * Create a ReservedIP resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ReservedIPArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["region"] = args?.region;
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["reservedIp"] = undefined /*out*/;
        } else {
            resourceInputs["links"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["reservedIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReservedIP.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a ReservedIP resource.
 */
export interface ReservedIPArgs {
    /**
     * The UUID of the project to which the reserved IP will be assigned.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The slug identifier for the region the reserved IP will be reserved to.
     */
    region?: pulumi.Input<string>;
}
