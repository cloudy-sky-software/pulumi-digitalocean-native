// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getFunctionsTrigger(args: GetFunctionsTriggerArgs, opts?: pulumi.InvokeOptions): Promise<outputs.functions.v2.GetFunctionsTriggerProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:functions/v2:getFunctionsTrigger", {
        "namespaceId": args.namespaceId,
        "triggerName": args.triggerName,
    }, opts);
}

export interface GetFunctionsTriggerArgs {
    /**
     * The ID of the namespace to be managed.
     */
    namespaceId: string;
    /**
     * The name of the trigger to be managed.
     */
    triggerName: string;
}
export function getFunctionsTriggerOutput(args: GetFunctionsTriggerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<outputs.functions.v2.GetFunctionsTriggerProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("digitalocean-native:functions/v2:getFunctionsTrigger", {
        "namespaceId": args.namespaceId,
        "triggerName": args.triggerName,
    }, opts);
}

export interface GetFunctionsTriggerOutputArgs {
    /**
     * The ID of the namespace to be managed.
     */
    namespaceId: pulumi.Input<string>;
    /**
     * The name of the trigger to be managed.
     */
    triggerName: pulumi.Input<string>;
}
