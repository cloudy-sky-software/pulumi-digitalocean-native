// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getImages(args: GetImagesArgs, opts?: pulumi.InvokeOptions): Promise<GetImagesResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:images/v2:getImages", {
        "imageId": args.imageId,
    }, opts);
}

export interface GetImagesArgs {
    /**
     * A unique number (id) or string (slug) used to identify and reference a
     * specific image.
     *
     * **Public** images can be identified by image `id` or `slug`.
     *
     * **Private** images *must* be identified by image `id`.
     */
    imageId: string;
}

export interface GetImagesResult {
    readonly items: outputs.images.v2.GetImagesProperties;
}
export function getImagesOutput(args: GetImagesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImagesResult> {
    return pulumi.output(args).apply((a: any) => getImages(a, opts))
}

export interface GetImagesOutputArgs {
    /**
     * A unique number (id) or string (slug) used to identify and reference a
     * specific image.
     *
     * **Public** images can be identified by image `id` or `slug`.
     *
     * **Private** images *must* be identified by image `id`.
     */
    imageId: pulumi.Input<string>;
}
