// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class Transfer extends pulumi.CustomResource {
    /**
     * Get an existing Transfer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Transfer {
        return new Transfer(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:images/v2:Transfer';

    /**
     * Returns true if the given object is an instance of Transfer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Transfer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Transfer.__pulumiType;
    }

    /**
     * A time value given in ISO8601 combined date and time format that represents when the action was completed.
     */
    public /*out*/ readonly completedAt!: pulumi.Output<string | undefined>;
    public readonly region!: pulumi.Output<outputs.images.v2.Region | undefined>;
    public /*out*/ readonly regionSlug!: pulumi.Output<outputs.images.v2.RegionSlug | undefined>;
    /**
     * A unique identifier for the resource that the action is associated with.
     */
    public /*out*/ readonly resourceId!: pulumi.Output<number | undefined>;
    /**
     * The type of resource that the action is associated with.
     */
    public /*out*/ readonly resourceType!: pulumi.Output<string | undefined>;
    /**
     * A time value given in ISO8601 combined date and time format that represents when the action was initiated.
     */
    public /*out*/ readonly startedAt!: pulumi.Output<string | undefined>;
    /**
     * The current status of the action. This can be "in-progress", "completed", or "errored".
     */
    public /*out*/ readonly status!: pulumi.Output<enums.images.v2.Status | undefined>;
    /**
     * This is the type of action that the object represents. For example, this could be "transfer" to represent the state of an image transfer action.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a Transfer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TransferArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["imageId"] = args ? args.imageId : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["completedAt"] = undefined /*out*/;
            resourceInputs["regionSlug"] = undefined /*out*/;
            resourceInputs["resourceId"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["startedAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        } else {
            resourceInputs["completedAt"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["regionSlug"] = undefined /*out*/;
            resourceInputs["resourceId"] = undefined /*out*/;
            resourceInputs["resourceType"] = undefined /*out*/;
            resourceInputs["startedAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Transfer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Transfer resource.
 */
export interface TransferArgs {
    /**
     * A unique number that can be used to identify and reference a specific image.
     */
    imageId?: pulumi.Input<string>;
    /**
     * The slug identifier for the region where the resource will initially be  available.
     */
    region: pulumi.Input<enums.images.v2.TransferPropertiesRegion>;
    /**
     * The action to be taken on the image. Can be either `convert` or `transfer`.
     */
    type: pulumi.Input<enums.images.v2.ImageActionBaseType>;
}
