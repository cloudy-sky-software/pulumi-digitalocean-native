// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetTagArgs, GetTagResult, GetTagOutputArgs } from "./getTag";
export const getTag: typeof import("./getTag").getTag = null as any;
export const getTagOutput: typeof import("./getTag").getTagOutput = null as any;
utilities.lazyLoad(exports, ["getTag","getTagOutput"], () => require("./getTag"));

export { ListTagsArgs, ListTagsResult } from "./listTags";
export const listTags: typeof import("./listTags").listTags = null as any;
export const listTagsOutput: typeof import("./listTags").listTagsOutput = null as any;
utilities.lazyLoad(exports, ["listTags","listTagsOutput"], () => require("./listTags"));

export { TagArgs } from "./tag";
export type Tag = import("./tag").Tag;
export const Tag: typeof import("./tag").Tag = null as any;
utilities.lazyLoad(exports, ["Tag"], () => require("./tag"));

export { TagsAssignResourceArgs } from "./tagsAssignResource";
export type TagsAssignResource = import("./tagsAssignResource").TagsAssignResource;
export const TagsAssignResource: typeof import("./tagsAssignResource").TagsAssignResource = null as any;
utilities.lazyLoad(exports, ["TagsAssignResource"], () => require("./tagsAssignResource"));


// Export enums:
export * from "../../types/enums/tags/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:tags/v2:Tag":
                return new Tag(name, <any>undefined, { urn })
            case "digitalocean-native:tags/v2:TagsAssignResource":
                return new TagsAssignResource(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "tags/v2", _module)
