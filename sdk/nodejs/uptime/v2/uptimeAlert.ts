// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class UptimeAlert extends pulumi.CustomResource {
    /**
     * Get an existing UptimeAlert resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): UptimeAlert {
        return new UptimeAlert(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:uptime/v2:UptimeAlert';

    /**
     * Returns true if the given object is an instance of UptimeAlert.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UptimeAlert {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UptimeAlert.__pulumiType;
    }

    public /*out*/ readonly alert!: pulumi.Output<outputs.uptime.v2.Alert | undefined>;
    /**
     * The comparison operator used against the alert's threshold.
     */
    public readonly comparison!: pulumi.Output<enums.uptime.v2.AlertUpdatableComparison | undefined>;
    /**
     * A human-friendly display name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The notification settings for a trigger alert.
     */
    public readonly notifications!: pulumi.Output<outputs.uptime.v2.Notification>;
    /**
     * Period of time the threshold must be exceeded to trigger the alert.
     */
    public readonly period!: pulumi.Output<enums.uptime.v2.AlertUpdatablePeriod | undefined>;
    /**
     * The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
     */
    public readonly threshold!: pulumi.Output<number | undefined>;
    /**
     * The type of alert.
     */
    public readonly type!: pulumi.Output<enums.uptime.v2.AlertUpdatableType>;

    /**
     * Create a UptimeAlert resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: UptimeAlertArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs["checkId"] = args ? args.checkId : undefined;
            resourceInputs["comparison"] = args ? args.comparison : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notifications"] = args ? args.notifications : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["threshold"] = args ? args.threshold : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["alert"] = undefined /*out*/;
        } else {
            resourceInputs["alert"] = undefined /*out*/;
            resourceInputs["comparison"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["notifications"] = undefined /*out*/;
            resourceInputs["period"] = undefined /*out*/;
            resourceInputs["threshold"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UptimeAlert.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a UptimeAlert resource.
 */
export interface UptimeAlertArgs {
    /**
     * A unique identifier for a check.
     */
    checkId?: pulumi.Input<string>;
    /**
     * The comparison operator used against the alert's threshold.
     */
    comparison?: pulumi.Input<enums.uptime.v2.AlertUpdatableComparison>;
    /**
     * A human-friendly display name.
     */
    name?: pulumi.Input<string>;
    /**
     * The notification settings for a trigger alert.
     */
    notifications?: pulumi.Input<inputs.uptime.v2.NotificationArgs>;
    /**
     * Period of time the threshold must be exceeded to trigger the alert.
     */
    period?: pulumi.Input<enums.uptime.v2.AlertUpdatablePeriod>;
    /**
     * The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
     */
    threshold?: pulumi.Input<number>;
    /**
     * The type of alert.
     */
    type?: pulumi.Input<enums.uptime.v2.AlertUpdatableType>;
}
