// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetLoadBalancersArgs, GetLoadBalancersResult, GetLoadBalancersOutputArgs } from "./getLoadBalancers";
export const getLoadBalancers: typeof import("./getLoadBalancers").getLoadBalancers = null as any;
export const getLoadBalancersOutput: typeof import("./getLoadBalancers").getLoadBalancersOutput = null as any;
utilities.lazyLoad(exports, ["getLoadBalancers","getLoadBalancersOutput"], () => require("./getLoadBalancers"));

export { ListLoadBalancersArgs, ListLoadBalancersResult } from "./listLoadBalancers";
export const listLoadBalancers: typeof import("./listLoadBalancers").listLoadBalancers = null as any;
export const listLoadBalancersOutput: typeof import("./listLoadBalancers").listLoadBalancersOutput = null as any;
utilities.lazyLoad(exports, ["listLoadBalancers","listLoadBalancersOutput"], () => require("./listLoadBalancers"));

export { LoadBalancersArgs } from "./loadBalancers";
export type LoadBalancers = import("./loadBalancers").LoadBalancers;
export const LoadBalancers: typeof import("./loadBalancers").LoadBalancers = null as any;
utilities.lazyLoad(exports, ["LoadBalancers"], () => require("./loadBalancers"));

export { LoadBalancersDropletsArgs } from "./loadBalancersDroplets";
export type LoadBalancersDroplets = import("./loadBalancersDroplets").LoadBalancersDroplets;
export const LoadBalancersDroplets: typeof import("./loadBalancersDroplets").LoadBalancersDroplets = null as any;
utilities.lazyLoad(exports, ["LoadBalancersDroplets"], () => require("./loadBalancersDroplets"));

export { LoadBalancersForwardingRulesArgs } from "./loadBalancersForwardingRules";
export type LoadBalancersForwardingRules = import("./loadBalancersForwardingRules").LoadBalancersForwardingRules;
export const LoadBalancersForwardingRules: typeof import("./loadBalancersForwardingRules").LoadBalancersForwardingRules = null as any;
utilities.lazyLoad(exports, ["LoadBalancersForwardingRules"], () => require("./loadBalancersForwardingRules"));


// Export enums:
export * from "../../types/enums/load_balancers/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:load_balancers/v2:LoadBalancers":
                return new LoadBalancers(name, <any>undefined, { urn })
            case "digitalocean-native:load_balancers/v2:LoadBalancersDroplets":
                return new LoadBalancersDroplets(name, <any>undefined, { urn })
            case "digitalocean-native:load_balancers/v2:LoadBalancersForwardingRules":
                return new LoadBalancersForwardingRules(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "load_balancers/v2", _module)
