// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LoadBalancer {
        return new LoadBalancer(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean-native:load_balancers/v2:LoadBalancer';

    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancer.__pulumiType;
    }

    /**
     * This field has been deprecated. You can no longer specify an algorithm for load balancers.
     */
    declare public readonly algorithm: pulumi.Output<enums.load_balancers.v2.LoadBalancerBaseAlgorithm | undefined>;
    /**
     * A time value given in ISO8601 combined date and time format that represents when the load balancer was created.
     */
    declare public readonly createdAt: pulumi.Output<string | undefined>;
    /**
     * A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer.
     */
    declare public readonly disableLetsEncryptDnsRecords: pulumi.Output<boolean | undefined>;
    /**
     * A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.
     */
    declare public readonly enableBackendKeepalive: pulumi.Output<boolean | undefined>;
    /**
     * A boolean value indicating whether PROXY Protocol is in use.
     */
    declare public readonly enableProxyProtocol: pulumi.Output<boolean | undefined>;
    /**
     * An object specifying allow and deny rules to control traffic to the load balancer.
     */
    declare public readonly firewall: pulumi.Output<outputs.load_balancers.v2.LbFirewall | undefined>;
    /**
     * An array of objects specifying the forwarding rules for a load balancer.
     */
    declare public readonly forwardingRules: pulumi.Output<outputs.load_balancers.v2.ForwardingRule[] | undefined>;
    /**
     * An object specifying health check settings for the load balancer.
     */
    declare public readonly healthCheck: pulumi.Output<outputs.load_balancers.v2.HealthCheck | undefined>;
    /**
     * An integer value which configures the idle timeout for HTTP requests to the target droplets.
     */
    declare public readonly httpIdleTimeoutSeconds: pulumi.Output<number | undefined>;
    /**
     * An attribute containing the public-facing IP address of the load balancer.
     */
    declare public readonly ip: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly loadBalancer: pulumi.Output<outputs.load_balancers.v2.LoadBalancer | undefined>;
    /**
     * A human-readable name for a load balancer instance.
     */
    declare public readonly name: pulumi.Output<string | undefined>;
    /**
     * The ID of the project that the load balancer is associated with. If no ID is provided at creation, the load balancer associates with the user's default project. If an invalid project ID is provided, the load balancer will not be created.
     */
    declare public readonly projectId: pulumi.Output<string | undefined>;
    /**
     * A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.
     */
    declare public readonly redirectHttpToHttps: pulumi.Output<boolean | undefined>;
    /**
     * The slug identifier for the region where the resource will initially be  available.
     */
    declare public readonly region: pulumi.Output<enums.load_balancers.v2.LoadBalancerPropertiesRegionEnum | undefined>;
    /**
     * This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.
     * * `lb-small` = 1 node
     * * `lb-medium` = 3 nodes
     * * `lb-large` = 6 nodes
     *
     * You can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.
     */
    declare public readonly size: pulumi.Output<enums.load_balancers.v2.LoadBalancerBaseSize | undefined>;
    /**
     * How many nodes the load balancer contains. Each additional node increases the load balancer's ability to manage more connections. Load balancers can be scaled up or down, and you can change the number of nodes after creation up to once per hour. This field is currently not available in the AMS2, NYC2, or SFO1 regions. Use the `size` field to scale load balancers that reside in these regions.
     */
    declare public readonly sizeUnit: pulumi.Output<number | undefined>;
    /**
     * A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
     */
    declare public readonly status: pulumi.Output<enums.load_balancers.v2.LoadBalancerBaseStatus | undefined>;
    /**
     * An object specifying sticky sessions settings for the load balancer.
     */
    declare public readonly stickySessions: pulumi.Output<outputs.load_balancers.v2.StickySessions | undefined>;
    /**
     * A string specifying the UUID of the VPC to which the load balancer is assigned.
     */
    declare public readonly vpcUuid: pulumi.Output<string | undefined>;

    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if (args?.forwardingRules === undefined && !opts.urn) {
                throw new Error("Missing required property 'forwardingRules'");
            }
            resourceInputs["algorithm"] = (args?.algorithm) ?? "round_robin";
            resourceInputs["createdAt"] = args?.createdAt;
            resourceInputs["disableLetsEncryptDnsRecords"] = (args?.disableLetsEncryptDnsRecords) ?? false;
            resourceInputs["enableBackendKeepalive"] = (args?.enableBackendKeepalive) ?? false;
            resourceInputs["enableProxyProtocol"] = (args?.enableProxyProtocol) ?? false;
            resourceInputs["firewall"] = args?.firewall;
            resourceInputs["forwardingRules"] = args?.forwardingRules;
            resourceInputs["healthCheck"] = args ? (args.healthCheck ? pulumi.output(args.healthCheck).apply(inputs.load_balancers.v2.healthCheckArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["httpIdleTimeoutSeconds"] = (args?.httpIdleTimeoutSeconds) ?? 60;
            resourceInputs["ip"] = args?.ip;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["redirectHttpToHttps"] = (args?.redirectHttpToHttps) ?? false;
            resourceInputs["region"] = args?.region;
            resourceInputs["size"] = (args?.size) ?? "lb-small";
            resourceInputs["sizeUnit"] = (args?.sizeUnit) ?? 1;
            resourceInputs["status"] = args?.status;
            resourceInputs["stickySessions"] = args ? (args.stickySessions ? pulumi.output(args.stickySessions).apply(inputs.load_balancers.v2.stickySessionsArgsProvideDefaults) : undefined) : undefined;
            resourceInputs["vpcUuid"] = args?.vpcUuid;
            resourceInputs["loadBalancer"] = undefined /*out*/;
        } else {
            resourceInputs["algorithm"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["disableLetsEncryptDnsRecords"] = undefined /*out*/;
            resourceInputs["enableBackendKeepalive"] = undefined /*out*/;
            resourceInputs["enableProxyProtocol"] = undefined /*out*/;
            resourceInputs["firewall"] = undefined /*out*/;
            resourceInputs["forwardingRules"] = undefined /*out*/;
            resourceInputs["healthCheck"] = undefined /*out*/;
            resourceInputs["httpIdleTimeoutSeconds"] = undefined /*out*/;
            resourceInputs["ip"] = undefined /*out*/;
            resourceInputs["loadBalancer"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["projectId"] = undefined /*out*/;
            resourceInputs["redirectHttpToHttps"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["sizeUnit"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["stickySessions"] = undefined /*out*/;
            resourceInputs["vpcUuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * This field has been deprecated. You can no longer specify an algorithm for load balancers.
     */
    algorithm?: pulumi.Input<enums.load_balancers.v2.LoadBalancerBaseAlgorithm>;
    /**
     * A time value given in ISO8601 combined date and time format that represents when the load balancer was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer.
     */
    disableLetsEncryptDnsRecords?: pulumi.Input<boolean>;
    /**
     * A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.
     */
    enableBackendKeepalive?: pulumi.Input<boolean>;
    /**
     * A boolean value indicating whether PROXY Protocol is in use.
     */
    enableProxyProtocol?: pulumi.Input<boolean>;
    /**
     * An object specifying allow and deny rules to control traffic to the load balancer.
     */
    firewall?: pulumi.Input<inputs.load_balancers.v2.LbFirewallArgs>;
    /**
     * An array of objects specifying the forwarding rules for a load balancer.
     */
    forwardingRules: pulumi.Input<pulumi.Input<inputs.load_balancers.v2.ForwardingRuleArgs>[]>;
    /**
     * An object specifying health check settings for the load balancer.
     */
    healthCheck?: pulumi.Input<inputs.load_balancers.v2.HealthCheckArgs>;
    /**
     * An integer value which configures the idle timeout for HTTP requests to the target droplets.
     */
    httpIdleTimeoutSeconds?: pulumi.Input<number>;
    /**
     * An attribute containing the public-facing IP address of the load balancer.
     */
    ip?: pulumi.Input<string>;
    /**
     * A human-readable name for a load balancer instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project that the load balancer is associated with. If no ID is provided at creation, the load balancer associates with the user's default project. If an invalid project ID is provided, the load balancer will not be created.
     */
    projectId?: pulumi.Input<string>;
    /**
     * A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.
     */
    redirectHttpToHttps?: pulumi.Input<boolean>;
    /**
     * The slug identifier for the region where the resource will initially be  available.
     */
    region?: pulumi.Input<enums.load_balancers.v2.LoadBalancerPropertiesRegionEnum>;
    /**
     * This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.
     * * `lb-small` = 1 node
     * * `lb-medium` = 3 nodes
     * * `lb-large` = 6 nodes
     *
     * You can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.
     */
    size?: pulumi.Input<enums.load_balancers.v2.LoadBalancerBaseSize>;
    /**
     * How many nodes the load balancer contains. Each additional node increases the load balancer's ability to manage more connections. Load balancers can be scaled up or down, and you can change the number of nodes after creation up to once per hour. This field is currently not available in the AMS2, NYC2, or SFO1 regions. Use the `size` field to scale load balancers that reside in these regions.
     */
    sizeUnit?: pulumi.Input<number>;
    /**
     * A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
     */
    status?: pulumi.Input<enums.load_balancers.v2.LoadBalancerBaseStatus>;
    /**
     * An object specifying sticky sessions settings for the load balancer.
     */
    stickySessions?: pulumi.Input<inputs.load_balancers.v2.StickySessionsArgs>;
    /**
     * A string specifying the UUID of the VPC to which the load balancer is assigned.
     */
    vpcUuid?: pulumi.Input<string>;
}
