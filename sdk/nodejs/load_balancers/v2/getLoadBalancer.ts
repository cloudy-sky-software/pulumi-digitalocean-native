// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getLoadBalancer(args: GetLoadBalancerArgs, opts?: pulumi.InvokeOptions): Promise<GetLoadBalancerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:load_balancers/v2:getLoadBalancer", {
        "lbId": args.lbId,
    }, opts);
}

export interface GetLoadBalancerArgs {
    /**
     * A unique identifier for a load balancer.
     */
    lbId: string;
}

export interface GetLoadBalancerResult {
    readonly items: outputs.load_balancers.v2.GetLoadBalancerProperties;
}
export function getLoadBalancerOutput(args: GetLoadBalancerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLoadBalancerResult> {
    return pulumi.output(args).apply((a: any) => getLoadBalancer(a, opts))
}

export interface GetLoadBalancerOutputArgs {
    /**
     * A unique identifier for a load balancer.
     */
    lbId: pulumi.Input<string>;
}
