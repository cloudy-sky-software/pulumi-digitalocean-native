// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ChangeKernelArgs } from "./changeKernel";
export type ChangeKernel = import("./changeKernel").ChangeKernel;
export const ChangeKernel: typeof import("./changeKernel").ChangeKernel = null as any;
utilities.lazyLoad(exports, ["ChangeKernel"], () => require("./changeKernel"));

export { DisableBackupsArgs } from "./disableBackups";
export type DisableBackups = import("./disableBackups").DisableBackups;
export const DisableBackups: typeof import("./disableBackups").DisableBackups = null as any;
utilities.lazyLoad(exports, ["DisableBackups"], () => require("./disableBackups"));

export { DropletArgs } from "./droplet";
export type Droplet = import("./droplet").Droplet;
export const Droplet: typeof import("./droplet").Droplet = null as any;
utilities.lazyLoad(exports, ["Droplet"], () => require("./droplet"));

export { EnableBackupsArgs } from "./enableBackups";
export type EnableBackups = import("./enableBackups").EnableBackups;
export const EnableBackups: typeof import("./enableBackups").EnableBackups = null as any;
utilities.lazyLoad(exports, ["EnableBackups"], () => require("./enableBackups"));

export { EnableIpv6Args } from "./enableIpv6";
export type EnableIpv6 = import("./enableIpv6").EnableIpv6;
export const EnableIpv6: typeof import("./enableIpv6").EnableIpv6 = null as any;
utilities.lazyLoad(exports, ["EnableIpv6"], () => require("./enableIpv6"));

export { GetDropletArgs, GetDropletResult, GetDropletOutputArgs } from "./getDroplet";
export const getDroplet: typeof import("./getDroplet").getDroplet = null as any;
export const getDropletOutput: typeof import("./getDroplet").getDropletOutput = null as any;
utilities.lazyLoad(exports, ["getDroplet","getDropletOutput"], () => require("./getDroplet"));

export { GetDropletActionArgs, GetDropletActionResult, GetDropletActionOutputArgs } from "./getDropletAction";
export const getDropletAction: typeof import("./getDropletAction").getDropletAction = null as any;
export const getDropletActionOutput: typeof import("./getDropletAction").getDropletActionOutput = null as any;
utilities.lazyLoad(exports, ["getDropletAction","getDropletActionOutput"], () => require("./getDropletAction"));

export { GetDropletsDestroyAssociatedResourcesStatuArgs, GetDropletsDestroyAssociatedResourcesStatuResult, GetDropletsDestroyAssociatedResourcesStatuOutputArgs } from "./getDropletsDestroyAssociatedResourcesStatu";
export const getDropletsDestroyAssociatedResourcesStatu: typeof import("./getDropletsDestroyAssociatedResourcesStatu").getDropletsDestroyAssociatedResourcesStatu = null as any;
export const getDropletsDestroyAssociatedResourcesStatuOutput: typeof import("./getDropletsDestroyAssociatedResourcesStatu").getDropletsDestroyAssociatedResourcesStatuOutput = null as any;
utilities.lazyLoad(exports, ["getDropletsDestroyAssociatedResourcesStatu","getDropletsDestroyAssociatedResourcesStatuOutput"], () => require("./getDropletsDestroyAssociatedResourcesStatu"));

export { ListDropletActionsArgs, ListDropletActionsResult, ListDropletActionsOutputArgs } from "./listDropletActions";
export const listDropletActions: typeof import("./listDropletActions").listDropletActions = null as any;
export const listDropletActionsOutput: typeof import("./listDropletActions").listDropletActionsOutput = null as any;
utilities.lazyLoad(exports, ["listDropletActions","listDropletActionsOutput"], () => require("./listDropletActions"));

export { ListDropletsArgs, ListDropletsResult } from "./listDroplets";
export const listDroplets: typeof import("./listDroplets").listDroplets = null as any;
export const listDropletsOutput: typeof import("./listDroplets").listDropletsOutput = null as any;
utilities.lazyLoad(exports, ["listDroplets","listDropletsOutput"], () => require("./listDroplets"));

export { ListDropletsAssociatedResourcesArgs, ListDropletsAssociatedResourcesResult, ListDropletsAssociatedResourcesOutputArgs } from "./listDropletsAssociatedResources";
export const listDropletsAssociatedResources: typeof import("./listDropletsAssociatedResources").listDropletsAssociatedResources = null as any;
export const listDropletsAssociatedResourcesOutput: typeof import("./listDropletsAssociatedResources").listDropletsAssociatedResourcesOutput = null as any;
utilities.lazyLoad(exports, ["listDropletsAssociatedResources","listDropletsAssociatedResourcesOutput"], () => require("./listDropletsAssociatedResources"));

export { ListDropletsBackupsArgs, ListDropletsBackupsResult, ListDropletsBackupsOutputArgs } from "./listDropletsBackups";
export const listDropletsBackups: typeof import("./listDropletsBackups").listDropletsBackups = null as any;
export const listDropletsBackupsOutput: typeof import("./listDropletsBackups").listDropletsBackupsOutput = null as any;
utilities.lazyLoad(exports, ["listDropletsBackups","listDropletsBackupsOutput"], () => require("./listDropletsBackups"));

export { ListDropletsFirewallsArgs, ListDropletsFirewallsResult, ListDropletsFirewallsOutputArgs } from "./listDropletsFirewalls";
export const listDropletsFirewalls: typeof import("./listDropletsFirewalls").listDropletsFirewalls = null as any;
export const listDropletsFirewallsOutput: typeof import("./listDropletsFirewalls").listDropletsFirewallsOutput = null as any;
utilities.lazyLoad(exports, ["listDropletsFirewalls","listDropletsFirewallsOutput"], () => require("./listDropletsFirewalls"));

export { ListDropletsKernelsArgs, ListDropletsKernelsResult, ListDropletsKernelsOutputArgs } from "./listDropletsKernels";
export const listDropletsKernels: typeof import("./listDropletsKernels").listDropletsKernels = null as any;
export const listDropletsKernelsOutput: typeof import("./listDropletsKernels").listDropletsKernelsOutput = null as any;
utilities.lazyLoad(exports, ["listDropletsKernels","listDropletsKernelsOutput"], () => require("./listDropletsKernels"));

export { ListDropletsNeighborsArgs, ListDropletsNeighborsResult, ListDropletsNeighborsOutputArgs } from "./listDropletsNeighbors";
export const listDropletsNeighbors: typeof import("./listDropletsNeighbors").listDropletsNeighbors = null as any;
export const listDropletsNeighborsOutput: typeof import("./listDropletsNeighbors").listDropletsNeighborsOutput = null as any;
utilities.lazyLoad(exports, ["listDropletsNeighbors","listDropletsNeighborsOutput"], () => require("./listDropletsNeighbors"));

export { ListDropletsSnapshotsArgs, ListDropletsSnapshotsResult, ListDropletsSnapshotsOutputArgs } from "./listDropletsSnapshots";
export const listDropletsSnapshots: typeof import("./listDropletsSnapshots").listDropletsSnapshots = null as any;
export const listDropletsSnapshotsOutput: typeof import("./listDropletsSnapshots").listDropletsSnapshotsOutput = null as any;
utilities.lazyLoad(exports, ["listDropletsSnapshots","listDropletsSnapshotsOutput"], () => require("./listDropletsSnapshots"));

export { PasswordResetArgs } from "./passwordReset";
export type PasswordReset = import("./passwordReset").PasswordReset;
export const PasswordReset: typeof import("./passwordReset").PasswordReset = null as any;
utilities.lazyLoad(exports, ["PasswordReset"], () => require("./passwordReset"));

export { PowerCycleArgs } from "./powerCycle";
export type PowerCycle = import("./powerCycle").PowerCycle;
export const PowerCycle: typeof import("./powerCycle").PowerCycle = null as any;
utilities.lazyLoad(exports, ["PowerCycle"], () => require("./powerCycle"));

export { PowerOffArgs } from "./powerOff";
export type PowerOff = import("./powerOff").PowerOff;
export const PowerOff: typeof import("./powerOff").PowerOff = null as any;
utilities.lazyLoad(exports, ["PowerOff"], () => require("./powerOff"));

export { PowerOnArgs } from "./powerOn";
export type PowerOn = import("./powerOn").PowerOn;
export const PowerOn: typeof import("./powerOn").PowerOn = null as any;
utilities.lazyLoad(exports, ["PowerOn"], () => require("./powerOn"));

export { RebootArgs } from "./reboot";
export type Reboot = import("./reboot").Reboot;
export const Reboot: typeof import("./reboot").Reboot = null as any;
utilities.lazyLoad(exports, ["Reboot"], () => require("./reboot"));

export { RebuildArgs } from "./rebuild";
export type Rebuild = import("./rebuild").Rebuild;
export const Rebuild: typeof import("./rebuild").Rebuild = null as any;
utilities.lazyLoad(exports, ["Rebuild"], () => require("./rebuild"));

export { RenameArgs } from "./rename";
export type Rename = import("./rename").Rename;
export const Rename: typeof import("./rename").Rename = null as any;
utilities.lazyLoad(exports, ["Rename"], () => require("./rename"));

export { ResizeArgs } from "./resize";
export type Resize = import("./resize").Resize;
export const Resize: typeof import("./resize").Resize = null as any;
utilities.lazyLoad(exports, ["Resize"], () => require("./resize"));

export { RestoreArgs } from "./restore";
export type Restore = import("./restore").Restore;
export const Restore: typeof import("./restore").Restore = null as any;
utilities.lazyLoad(exports, ["Restore"], () => require("./restore"));

export { ShutdownArgs } from "./shutdown";
export type Shutdown = import("./shutdown").Shutdown;
export const Shutdown: typeof import("./shutdown").Shutdown = null as any;
utilities.lazyLoad(exports, ["Shutdown"], () => require("./shutdown"));

export { SnapshotArgs } from "./snapshot";
export type Snapshot = import("./snapshot").Snapshot;
export const Snapshot: typeof import("./snapshot").Snapshot = null as any;
utilities.lazyLoad(exports, ["Snapshot"], () => require("./snapshot"));


// Export enums:
export * from "../../types/enums/droplets/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:droplets/v2:ChangeKernel":
                return new ChangeKernel(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:DisableBackups":
                return new DisableBackups(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Droplet":
                return new Droplet(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:EnableBackups":
                return new EnableBackups(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:EnableIpv6":
                return new EnableIpv6(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:PasswordReset":
                return new PasswordReset(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:PowerCycle":
                return new PowerCycle(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:PowerOff":
                return new PowerOff(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:PowerOn":
                return new PowerOn(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Reboot":
                return new Reboot(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Rebuild":
                return new Rebuild(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Rename":
                return new Rename(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Resize":
                return new Resize(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Restore":
                return new Restore(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Shutdown":
                return new Shutdown(name, <any>undefined, { urn })
            case "digitalocean-native:droplets/v2:Snapshot":
                return new Snapshot(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "droplets/v2", _module)
