// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../types/input";
import * as outputs from "../../types/output";
import * as enums from "../../types/enums";
import * as utilities from "../../utilities";

export function getVolume(args: GetVolumeArgs, opts?: pulumi.InvokeOptions): Promise<outputs.volumes.v2.GetVolumeProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean-native:volumes/v2:getVolume", {
        "volumeId": args.volumeId,
    }, opts);
}

export interface GetVolumeArgs {
    /**
     * The ID of the block storage volume.
     */
    volumeId: string;
}
export function getVolumeOutput(args: GetVolumeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<outputs.volumes.v2.GetVolumeProperties> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("digitalocean-native:volumes/v2:getVolume", {
        "volumeId": args.volumeId,
    }, opts);
}

export interface GetVolumeOutputArgs {
    /**
     * The ID of the block storage volume.
     */
    volumeId: pulumi.Input<string>;
}
