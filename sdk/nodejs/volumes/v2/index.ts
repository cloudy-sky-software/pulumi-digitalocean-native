// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { GetVolumeActionsArgs, GetVolumeActionsResult, GetVolumeActionsOutputArgs } from "./getVolumeActions";
export const getVolumeActions: typeof import("./getVolumeActions").getVolumeActions = null as any;
export const getVolumeActionsOutput: typeof import("./getVolumeActions").getVolumeActionsOutput = null as any;
utilities.lazyLoad(exports, ["getVolumeActions","getVolumeActionsOutput"], () => require("./getVolumeActions"));

export { GetVolumeSnapshotsByIdArgs, GetVolumeSnapshotsByIdResult, GetVolumeSnapshotsByIdOutputArgs } from "./getVolumeSnapshotsById";
export const getVolumeSnapshotsById: typeof import("./getVolumeSnapshotsById").getVolumeSnapshotsById = null as any;
export const getVolumeSnapshotsByIdOutput: typeof import("./getVolumeSnapshotsById").getVolumeSnapshotsByIdOutput = null as any;
utilities.lazyLoad(exports, ["getVolumeSnapshotsById","getVolumeSnapshotsByIdOutput"], () => require("./getVolumeSnapshotsById"));

export { GetVolumesArgs, GetVolumesResult, GetVolumesOutputArgs } from "./getVolumes";
export const getVolumes: typeof import("./getVolumes").getVolumes = null as any;
export const getVolumesOutput: typeof import("./getVolumes").getVolumesOutput = null as any;
utilities.lazyLoad(exports, ["getVolumes","getVolumesOutput"], () => require("./getVolumes"));

export { ListVolumeActionsArgs, ListVolumeActionsResult, ListVolumeActionsOutputArgs } from "./listVolumeActions";
export const listVolumeActions: typeof import("./listVolumeActions").listVolumeActions = null as any;
export const listVolumeActionsOutput: typeof import("./listVolumeActions").listVolumeActionsOutput = null as any;
utilities.lazyLoad(exports, ["listVolumeActions","listVolumeActionsOutput"], () => require("./listVolumeActions"));

export { ListVolumeSnapshotsArgs, ListVolumeSnapshotsResult, ListVolumeSnapshotsOutputArgs } from "./listVolumeSnapshots";
export const listVolumeSnapshots: typeof import("./listVolumeSnapshots").listVolumeSnapshots = null as any;
export const listVolumeSnapshotsOutput: typeof import("./listVolumeSnapshots").listVolumeSnapshotsOutput = null as any;
utilities.lazyLoad(exports, ["listVolumeSnapshots","listVolumeSnapshotsOutput"], () => require("./listVolumeSnapshots"));

export { ListVolumesArgs, ListVolumesResult } from "./listVolumes";
export const listVolumes: typeof import("./listVolumes").listVolumes = null as any;
export const listVolumesOutput: typeof import("./listVolumes").listVolumesOutput = null as any;
utilities.lazyLoad(exports, ["listVolumes","listVolumesOutput"], () => require("./listVolumes"));

export { VolumeActionsByIdAttachArgs } from "./volumeActionsByIdAttach";
export type VolumeActionsByIdAttach = import("./volumeActionsByIdAttach").VolumeActionsByIdAttach;
export const VolumeActionsByIdAttach: typeof import("./volumeActionsByIdAttach").VolumeActionsByIdAttach = null as any;
utilities.lazyLoad(exports, ["VolumeActionsByIdAttach"], () => require("./volumeActionsByIdAttach"));

export { VolumeActionsByIdDetachArgs } from "./volumeActionsByIdDetach";
export type VolumeActionsByIdDetach = import("./volumeActionsByIdDetach").VolumeActionsByIdDetach;
export const VolumeActionsByIdDetach: typeof import("./volumeActionsByIdDetach").VolumeActionsByIdDetach = null as any;
utilities.lazyLoad(exports, ["VolumeActionsByIdDetach"], () => require("./volumeActionsByIdDetach"));

export { VolumeActionsByIdResizeArgs } from "./volumeActionsByIdResize";
export type VolumeActionsByIdResize = import("./volumeActionsByIdResize").VolumeActionsByIdResize;
export const VolumeActionsByIdResize: typeof import("./volumeActionsByIdResize").VolumeActionsByIdResize = null as any;
utilities.lazyLoad(exports, ["VolumeActionsByIdResize"], () => require("./volumeActionsByIdResize"));

export { VolumeSnapshotsArgs } from "./volumeSnapshots";
export type VolumeSnapshots = import("./volumeSnapshots").VolumeSnapshots;
export const VolumeSnapshots: typeof import("./volumeSnapshots").VolumeSnapshots = null as any;
utilities.lazyLoad(exports, ["VolumeSnapshots"], () => require("./volumeSnapshots"));

export { VolumesArgs } from "./volumes";
export type Volumes = import("./volumes").Volumes;
export const Volumes: typeof import("./volumes").Volumes = null as any;
utilities.lazyLoad(exports, ["Volumes"], () => require("./volumes"));


// Export enums:
export * from "../../types/enums/volumes/v2";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "digitalocean-native:volumes/v2:VolumeActionsByIdAttach":
                return new VolumeActionsByIdAttach(name, <any>undefined, { urn })
            case "digitalocean-native:volumes/v2:VolumeActionsByIdDetach":
                return new VolumeActionsByIdDetach(name, <any>undefined, { urn })
            case "digitalocean-native:volumes/v2:VolumeActionsByIdResize":
                return new VolumeActionsByIdResize(name, <any>undefined, { urn })
            case "digitalocean-native:volumes/v2:VolumeSnapshots":
                return new VolumeSnapshots(name, <any>undefined, { urn })
            case "digitalocean-native:volumes/v2:Volumes":
                return new Volumes(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("digitalocean-native", "volumes/v2", _module)
