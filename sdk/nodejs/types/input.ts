// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";

import * as utilities from "../utilities";

export namespace account {
    export namespace v2 {
    }
}

export namespace actions {
    export namespace v2 {
    }
}

export namespace apps {
    export namespace v2 {
        export interface AppAlertSlackWebhookArgs {
            channel?: pulumi.Input<string>;
            url?: pulumi.Input<string>;
        }

        export interface AppAlertSpecArgs {
            /**
             * Is the alert disabled?
             */
            disabled?: pulumi.Input<boolean>;
            operator?: pulumi.Input<enums.apps.v2.AppAlertSpecOperator>;
            rule?: pulumi.Input<enums.apps.v2.AppAlertSpecRule>;
            /**
             * Threshold value for alert
             */
            value?: pulumi.Input<number>;
            window?: pulumi.Input<enums.apps.v2.AppAlertSpecWindow>;
        }
        /**
         * appAlertSpecArgsProvideDefaults sets the appropriate defaults for AppAlertSpecArgs
         */
        export function appAlertSpecArgsProvideDefaults(val: AppAlertSpecArgs): AppAlertSpecArgs {
            return {
                ...val,
                operator: (val.operator) ?? "UNSPECIFIED_OPERATOR",
                rule: (val.rule) ?? "UNSPECIFIED_RULE",
                window: (val.window) ?? "UNSPECIFIED_WINDOW",
            };
        }

        export interface AppDatabaseSpecArgs {
            /**
             * The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
             */
            clusterName?: pulumi.Input<string>;
            /**
             * The name of the MySQL or PostgreSQL database to configure.
             */
            dbName?: pulumi.Input<string>;
            /**
             * The name of the MySQL or PostgreSQL user to configure.
             */
            dbUser?: pulumi.Input<string>;
            /**
             * - MYSQL: MySQL
             * - PG: PostgreSQL
             * - REDIS: Redis
             */
            engine?: pulumi.Input<enums.apps.v2.AppDatabaseSpecEngine>;
            /**
             * The name. Must be unique across all components within the same app.
             */
            name: pulumi.Input<string>;
            /**
             * Whether this is a production or dev database.
             */
            production?: pulumi.Input<boolean>;
            /**
             * The version of the database engine
             */
            version?: pulumi.Input<string>;
        }
        /**
         * appDatabaseSpecArgsProvideDefaults sets the appropriate defaults for AppDatabaseSpecArgs
         */
        export function appDatabaseSpecArgsProvideDefaults(val: AppDatabaseSpecArgs): AppDatabaseSpecArgs {
            return {
                ...val,
                engine: (val.engine) ?? "UNSET",
            };
        }

        export interface AppDomainSpecArgs {
            /**
             * The hostname for the domain
             */
            domain: pulumi.Input<string>;
            /**
             * The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `"1.2"` or `"1.3"`.
             */
            minimumTlsVersion?: pulumi.Input<enums.apps.v2.AppDomainSpecMinimumTlsVersion>;
            /**
             * - DEFAULT: The default `.ondigitalocean.app` domain assigned to this app
             * - PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.
             * - ALIAS: A non-primary domain
             */
            type?: pulumi.Input<enums.apps.v2.AppDomainSpecType>;
            /**
             * Indicates whether the domain includes all sub-domains, in addition to the given domain
             */
            wildcard?: pulumi.Input<boolean>;
            /**
             * Optional. If the domain uses DigitalOcean DNS and you would like App
             * Platform to automatically manage it for you, set this to the name of the
             * domain on your account.
             *
             * For example, If the domain you are adding is `app.domain.com`, the zone
             * could be `domain.com`.
             */
            zone?: pulumi.Input<string>;
        }
        /**
         * appDomainSpecArgsProvideDefaults sets the appropriate defaults for AppDomainSpecArgs
         */
        export function appDomainSpecArgsProvideDefaults(val: AppDomainSpecArgs): AppDomainSpecArgs {
            return {
                ...val,
                type: (val.type) ?? "UNSPECIFIED",
            };
        }

        export interface AppFunctionsSpecArgs {
            alerts?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppAlertSpecArgs>[]>;
            cors?: pulumi.Input<inputs.apps.v2.AppsCorsPolicyArgs>;
            /**
             * A list of environment variables made available to the component.
             */
            envs?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppVariableDefinitionArgs>[]>;
            git?: pulumi.Input<inputs.apps.v2.AppsGitSourceSpecArgs>;
            github?: pulumi.Input<inputs.apps.v2.AppsGithubSourceSpecArgs>;
            gitlab?: pulumi.Input<inputs.apps.v2.AppsGitlabSourceSpecArgs>;
            logDestinations?: pulumi.Input<inputs.apps.v2.AppLogDestinationDefinitionArgs>;
            /**
             * The name. Must be unique across all components within the same app.
             */
            name: pulumi.Input<string>;
            /**
             * A list of HTTP routes that should be routed to this component.
             */
            routes?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppRouteSpecArgs>[]>;
            /**
             * An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
             */
            sourceDir?: pulumi.Input<string>;
        }

        /**
         * Specification for app ingress configurations.
         */
        export interface AppIngressSpecArgs {
            /**
             * Rules for configuring HTTP ingress for component routes, CORS, rewrites, and redirects.
             */
            rules?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppIngressSpecRuleArgs>[]>;
        }

        export interface AppIngressSpecRuleArgs {
            /**
             * The component to route to. Only one of `component` or `redirect` may be set.
             */
            component?: pulumi.Input<inputs.apps.v2.AppIngressSpecRuleRoutingComponentArgs>;
            cors?: pulumi.Input<inputs.apps.v2.AppsCorsPolicyArgs>;
            /**
             * The match configuration for the rule.
             */
            match?: pulumi.Input<inputs.apps.v2.AppIngressSpecRuleMatchArgs>;
            /**
             * The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
             */
            redirect?: pulumi.Input<inputs.apps.v2.AppIngressSpecRuleRoutingRedirectArgs>;
        }

        /**
         * The match configuration for the rule.
         */
        export interface AppIngressSpecRuleMatchArgs {
            /**
             * The path to match on.
             */
            path: pulumi.Input<inputs.apps.v2.AppIngressSpecRuleStringMatchArgs>;
        }

        /**
         * The component to route to. Only one of `component` or `redirect` may be set.
         */
        export interface AppIngressSpecRuleRoutingComponentArgs {
            /**
             * The name of the component to route to.
             */
            name: pulumi.Input<string>;
            /**
             * An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`. Note: this is not applicable for Functions Components and is mutually exclusive with `rewrite`.
             */
            preservePathPrefix?: pulumi.Input<string>;
            /**
             * An optional field that will rewrite the path of the component to be what is specified here. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If you specified the rewrite to be `/v1/`, requests to `/api/list` would be rewritten to `/v1/list`. Note: this is mutually exclusive with `preserve_path_prefix`.
             */
            rewrite?: pulumi.Input<string>;
        }

        /**
         * The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
         */
        export interface AppIngressSpecRuleRoutingRedirectArgs {
            /**
             * The authority/host to redirect to. This can be a hostname or IP address. Note: use `port` to set the port.
             */
            authority?: pulumi.Input<string>;
            /**
             * The port to redirect to.
             */
            port?: pulumi.Input<number>;
            /**
             * The redirect code to use. Defaults to `302`. Supported values are 300, 301, 302, 303, 304, 307, 308.
             */
            redirectCode?: pulumi.Input<number>;
            /**
             * The scheme to redirect to. Supported values are `http` or `https`. Default: `https`.
             */
            scheme?: pulumi.Input<string>;
            /**
             * An optional URI path to redirect to. Note: if this is specified the whole URI of the original request will be overwritten to this value, irrespective of the original request URI being matched.
             */
            uri?: pulumi.Input<string>;
        }

        /**
         * The path to match on.
         */
        export interface AppIngressSpecRuleStringMatchArgs {
            /**
             * Prefix-based match. For example, `/api` will match `/api`, `/api/`, and any nested paths such as `/api/v1/endpoint`.
             */
            prefix: pulumi.Input<string>;
        }

        export interface AppJobSpecArgs {
            /**
             * An optional build command to run while building this component from source.
             */
            buildCommand?: pulumi.Input<string>;
            /**
             * The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
             */
            dockerfilePath?: pulumi.Input<string>;
            /**
             * An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
             */
            environmentSlug?: pulumi.Input<string>;
            /**
             * A list of environment variables made available to the component.
             */
            envs?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppVariableDefinitionArgs>[]>;
            git?: pulumi.Input<inputs.apps.v2.AppsGitSourceSpecArgs>;
            github?: pulumi.Input<inputs.apps.v2.AppsGithubSourceSpecArgs>;
            gitlab?: pulumi.Input<inputs.apps.v2.AppsGitlabSourceSpecArgs>;
            image?: pulumi.Input<inputs.apps.v2.AppsImageSourceSpecArgs>;
            /**
             * The amount of instances that this component should be scaled to. Default: 1
             */
            instanceCount?: pulumi.Input<number>;
            /**
             * The instance size to use for this component. Default: `basic-xxs`
             */
            instanceSizeSlug?: pulumi.Input<enums.apps.v2.AppComponentInstanceBaseInstanceSizeSlug>;
            /**
             * - UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.
             * - PRE_DEPLOY: Indicates a job that runs before an app deployment.
             * - POST_DEPLOY: Indicates a job that runs after an app deployment.
             * - FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.
             */
            kind?: pulumi.Input<enums.apps.v2.AppJobSpecPropertiesKind>;
            logDestinations?: pulumi.Input<inputs.apps.v2.AppLogDestinationDefinitionArgs>;
            /**
             * The name. Must be unique across all components within the same app.
             */
            name?: pulumi.Input<string>;
            /**
             * An optional run command to override the component's default.
             */
            runCommand?: pulumi.Input<string>;
            /**
             * An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
             */
            sourceDir?: pulumi.Input<string>;
        }
        /**
         * appJobSpecArgsProvideDefaults sets the appropriate defaults for AppJobSpecArgs
         */
        export function appJobSpecArgsProvideDefaults(val: AppJobSpecArgs): AppJobSpecArgs {
            return {
                ...val,
                image: (val.image ? pulumi.output(val.image).apply(inputs.apps.v2.appsImageSourceSpecArgsProvideDefaults) : undefined),
                instanceCount: (val.instanceCount) ?? 1,
                instanceSizeSlug: (val.instanceSizeSlug) ?? "basic-xxs",
                kind: (val.kind) ?? "UNSPECIFIED",
            };
        }

        /**
         * DataDog configuration.
         */
        export interface AppLogDestinationDatadogSpecArgs {
            /**
             * Datadog API key.
             */
            apiKey: pulumi.Input<string>;
            /**
             * Datadog HTTP log intake endpoint.
             */
            endpoint?: pulumi.Input<string>;
        }

        export interface AppLogDestinationDefinitionArgs {
            /**
             * DataDog configuration.
             */
            datadog?: pulumi.Input<inputs.apps.v2.AppLogDestinationDatadogSpecArgs>;
            /**
             * Logtail configuration.
             */
            logtail?: pulumi.Input<inputs.apps.v2.AppLogDestinationLogtailSpecArgs>;
            name: pulumi.Input<string>;
            /**
             * Papertrail configuration.
             */
            papertrail?: pulumi.Input<inputs.apps.v2.AppLogDestinationPapertrailSpecArgs>;
        }

        /**
         * Logtail configuration.
         */
        export interface AppLogDestinationLogtailSpecArgs {
            /**
             * Logtail token.
             */
            token?: pulumi.Input<string>;
        }

        /**
         * Papertrail configuration.
         */
        export interface AppLogDestinationPapertrailSpecArgs {
            /**
             * Papertrail syslog endpoint.
             */
            endpoint: pulumi.Input<string>;
        }

        export interface AppRouteSpecArgs {
            /**
             * An HTTP path prefix. Paths must start with / and must be unique across all components within an app.
             */
            path?: pulumi.Input<string>;
            /**
             * An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`.
             */
            preservePathPrefix?: pulumi.Input<boolean>;
        }

        export interface AppServiceSpecArgs {
            /**
             * An optional build command to run while building this component from source.
             */
            buildCommand?: pulumi.Input<string>;
            cors?: pulumi.Input<inputs.apps.v2.AppsCorsPolicyArgs>;
            /**
             * The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
             */
            dockerfilePath?: pulumi.Input<string>;
            /**
             * An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
             */
            environmentSlug?: pulumi.Input<string>;
            /**
             * A list of environment variables made available to the component.
             */
            envs?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppVariableDefinitionArgs>[]>;
            git?: pulumi.Input<inputs.apps.v2.AppsGitSourceSpecArgs>;
            github?: pulumi.Input<inputs.apps.v2.AppsGithubSourceSpecArgs>;
            gitlab?: pulumi.Input<inputs.apps.v2.AppsGitlabSourceSpecArgs>;
            healthCheck?: pulumi.Input<inputs.apps.v2.AppServiceSpecHealthCheckArgs>;
            /**
             * The internal port on which this service's run command will listen. Default: 8080
             * If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.
             */
            httpPort?: pulumi.Input<number>;
            image?: pulumi.Input<inputs.apps.v2.AppsImageSourceSpecArgs>;
            /**
             * The amount of instances that this component should be scaled to. Default: 1
             */
            instanceCount?: pulumi.Input<number>;
            /**
             * The instance size to use for this component. Default: `basic-xxs`
             */
            instanceSizeSlug?: pulumi.Input<enums.apps.v2.AppComponentInstanceBaseInstanceSizeSlug>;
            /**
             * The ports on which this service will listen for internal traffic.
             */
            internalPorts?: pulumi.Input<pulumi.Input<number>[]>;
            logDestinations?: pulumi.Input<inputs.apps.v2.AppLogDestinationDefinitionArgs>;
            /**
             * The name. Must be unique across all components within the same app.
             */
            name?: pulumi.Input<string>;
            /**
             * A list of HTTP routes that should be routed to this component.
             */
            routes?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppRouteSpecArgs>[]>;
            /**
             * An optional run command to override the component's default.
             */
            runCommand?: pulumi.Input<string>;
            /**
             * An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
             */
            sourceDir?: pulumi.Input<string>;
        }
        /**
         * appServiceSpecArgsProvideDefaults sets the appropriate defaults for AppServiceSpecArgs
         */
        export function appServiceSpecArgsProvideDefaults(val: AppServiceSpecArgs): AppServiceSpecArgs {
            return {
                ...val,
                image: (val.image ? pulumi.output(val.image).apply(inputs.apps.v2.appsImageSourceSpecArgsProvideDefaults) : undefined),
                instanceCount: (val.instanceCount) ?? 1,
                instanceSizeSlug: (val.instanceSizeSlug) ?? "basic-xxs",
            };
        }

        export interface AppServiceSpecHealthCheckArgs {
            /**
             * The number of failed health checks before considered unhealthy.
             */
            failureThreshold?: pulumi.Input<number>;
            /**
             * The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead.
             */
            httpPath?: pulumi.Input<string>;
            /**
             * The number of seconds to wait before beginning health checks.
             */
            initialDelaySeconds?: pulumi.Input<number>;
            /**
             * The number of seconds to wait between health checks.
             */
            periodSeconds?: pulumi.Input<number>;
            /**
             * The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
             */
            port?: pulumi.Input<number>;
            /**
             * The number of successful health checks before considered healthy.
             */
            successThreshold?: pulumi.Input<number>;
            /**
             * The number of seconds after which the check times out.
             */
            timeoutSeconds?: pulumi.Input<number>;
        }

        /**
         * The desired configuration of an application.
         */
        export interface AppSpecArgs {
            /**
             * Database instances which can provide persistence to workloads within the
             * application.
             */
            databases?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppDatabaseSpecArgs>[]>;
            /**
             * A set of hostnames where the application will be available.
             */
            domains?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppDomainSpecArgs>[]>;
            /**
             * Workloads which expose publicly-accessible HTTP services via Functions Components.
             */
            functions?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppFunctionsSpecArgs>[]>;
            /**
             * Specification for app ingress configurations.
             */
            ingress?: pulumi.Input<inputs.apps.v2.AppIngressSpecArgs>;
            /**
             * Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.
             */
            jobs?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppJobSpecArgs>[]>;
            /**
             * The name of the app. Must be unique across all apps in the same account.
             */
            name: pulumi.Input<string>;
            /**
             * The slug form of the geographical origin of the app. Default: `nearest available`
             */
            region?: pulumi.Input<enums.apps.v2.AppSpecRegion>;
            /**
             * Workloads which expose publicly-accessible HTTP services.
             */
            services?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppServiceSpecArgs>[]>;
            /**
             * Content which can be rendered to static web assets.
             */
            staticSites?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppStaticSiteSpecArgs>[]>;
            /**
             * Workloads which do not expose publicly-accessible HTTP services.
             */
            workers?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppWorkerSpecArgs>[]>;
        }

        export interface AppStaticSiteSpecArgs {
            /**
             * An optional build command to run while building this component from source.
             */
            buildCommand?: pulumi.Input<string>;
            /**
             * The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set.
             */
            catchallDocument?: pulumi.Input<string>;
            cors?: pulumi.Input<inputs.apps.v2.AppsCorsPolicyArgs>;
            /**
             * The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
             */
            dockerfilePath?: pulumi.Input<string>;
            /**
             * An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
             */
            environmentSlug?: pulumi.Input<string>;
            /**
             * A list of environment variables made available to the component.
             */
            envs?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppVariableDefinitionArgs>[]>;
            /**
             * The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one.
             */
            errorDocument?: pulumi.Input<string>;
            git?: pulumi.Input<inputs.apps.v2.AppsGitSourceSpecArgs>;
            github?: pulumi.Input<inputs.apps.v2.AppsGithubSourceSpecArgs>;
            gitlab?: pulumi.Input<inputs.apps.v2.AppsGitlabSourceSpecArgs>;
            image?: pulumi.Input<inputs.apps.v2.AppsImageSourceSpecArgs>;
            /**
             * The name of the index document to use when serving this static site. Default: index.html
             */
            indexDocument?: pulumi.Input<string>;
            logDestinations?: pulumi.Input<inputs.apps.v2.AppLogDestinationDefinitionArgs>;
            /**
             * The name. Must be unique across all components within the same app.
             */
            name?: pulumi.Input<string>;
            /**
             * An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`.
             */
            outputDir?: pulumi.Input<string>;
            /**
             * A list of HTTP routes that should be routed to this component.
             */
            routes?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppRouteSpecArgs>[]>;
            /**
             * An optional run command to override the component's default.
             */
            runCommand?: pulumi.Input<string>;
            /**
             * An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
             */
            sourceDir?: pulumi.Input<string>;
        }
        /**
         * appStaticSiteSpecArgsProvideDefaults sets the appropriate defaults for AppStaticSiteSpecArgs
         */
        export function appStaticSiteSpecArgsProvideDefaults(val: AppStaticSiteSpecArgs): AppStaticSiteSpecArgs {
            return {
                ...val,
                errorDocument: (val.errorDocument) ?? "404.html",
                image: (val.image ? pulumi.output(val.image).apply(inputs.apps.v2.appsImageSourceSpecArgsProvideDefaults) : undefined),
                indexDocument: (val.indexDocument) ?? "index.html",
            };
        }

        export interface AppVariableDefinitionArgs {
            /**
             * The variable name
             */
            key: pulumi.Input<string>;
            /**
             * - RUN_TIME: Made available only at run-time
             * - BUILD_TIME: Made available only at build-time
             * - RUN_AND_BUILD_TIME: Made available at both build and run-time
             */
            scope?: pulumi.Input<enums.apps.v2.AppVariableDefinitionScope>;
            /**
             * - GENERAL: A plain-text environment variable
             * - SECRET: A secret encrypted environment variable
             */
            type?: pulumi.Input<enums.apps.v2.AppVariableDefinitionType>;
            /**
             * The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used.
             */
            value?: pulumi.Input<string>;
        }
        /**
         * appVariableDefinitionArgsProvideDefaults sets the appropriate defaults for AppVariableDefinitionArgs
         */
        export function appVariableDefinitionArgsProvideDefaults(val: AppVariableDefinitionArgs): AppVariableDefinitionArgs {
            return {
                ...val,
                scope: (val.scope) ?? "RUN_AND_BUILD_TIME",
                type: (val.type) ?? "GENERAL",
            };
        }

        export interface AppWorkerSpecArgs {
            /**
             * An optional build command to run while building this component from source.
             */
            buildCommand?: pulumi.Input<string>;
            /**
             * The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
             */
            dockerfilePath?: pulumi.Input<string>;
            /**
             * An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
             */
            environmentSlug?: pulumi.Input<string>;
            /**
             * A list of environment variables made available to the component.
             */
            envs?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppVariableDefinitionArgs>[]>;
            git?: pulumi.Input<inputs.apps.v2.AppsGitSourceSpecArgs>;
            github?: pulumi.Input<inputs.apps.v2.AppsGithubSourceSpecArgs>;
            gitlab?: pulumi.Input<inputs.apps.v2.AppsGitlabSourceSpecArgs>;
            image?: pulumi.Input<inputs.apps.v2.AppsImageSourceSpecArgs>;
            /**
             * The amount of instances that this component should be scaled to. Default: 1
             */
            instanceCount?: pulumi.Input<number>;
            /**
             * The instance size to use for this component. Default: `basic-xxs`
             */
            instanceSizeSlug?: pulumi.Input<enums.apps.v2.AppComponentInstanceBaseInstanceSizeSlug>;
            logDestinations?: pulumi.Input<inputs.apps.v2.AppLogDestinationDefinitionArgs>;
            /**
             * The name. Must be unique across all components within the same app.
             */
            name?: pulumi.Input<string>;
            /**
             * An optional run command to override the component's default.
             */
            runCommand?: pulumi.Input<string>;
            /**
             * An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
             */
            sourceDir?: pulumi.Input<string>;
        }
        /**
         * appWorkerSpecArgsProvideDefaults sets the appropriate defaults for AppWorkerSpecArgs
         */
        export function appWorkerSpecArgsProvideDefaults(val: AppWorkerSpecArgs): AppWorkerSpecArgs {
            return {
                ...val,
                image: (val.image ? pulumi.output(val.image).apply(inputs.apps.v2.appsImageSourceSpecArgsProvideDefaults) : undefined),
                instanceCount: (val.instanceCount) ?? 1,
                instanceSizeSlug: (val.instanceSizeSlug) ?? "basic-xxs",
            };
        }

        export interface AppsCorsPolicyArgs {
            /**
             * Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is include. This configures the `Access-Control-Allow-Credentials` header.
             */
            allowCredentials?: pulumi.Input<boolean>;
            /**
             * The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
             */
            allowHeaders?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
             */
            allowMethods?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The set of allowed CORS origins.
             */
            allowOrigins?: pulumi.Input<pulumi.Input<inputs.apps.v2.AppsStringMatchArgs>[]>;
            /**
             * The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
             */
            exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * An optional duration specifying how long browsers can cache the results of a preflight request. This configures the `Access-Control-Max-Age` header.
             */
            maxAge?: pulumi.Input<string>;
        }

        export interface AppsGitSourceSpecArgs {
            /**
             * The name of the branch to use
             */
            branch?: pulumi.Input<string>;
            /**
             * The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`
             */
            repoCloneUrl?: pulumi.Input<string>;
        }

        export interface AppsGithubSourceSpecArgs {
            /**
             * The name of the branch to use
             */
            branch?: pulumi.Input<string>;
            /**
             * Whether to automatically deploy new commits made to the repo
             */
            deployOnPush?: pulumi.Input<boolean>;
            /**
             * The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
             */
            repo?: pulumi.Input<string>;
        }

        export interface AppsGitlabSourceSpecArgs {
            /**
             * The name of the branch to use
             */
            branch?: pulumi.Input<string>;
            /**
             * Whether to automatically deploy new commits made to the repo
             */
            deployOnPush?: pulumi.Input<boolean>;
            /**
             * The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
             */
            repo?: pulumi.Input<string>;
        }

        export interface AppsImageSourceSpecArgs {
            /**
             * The registry name. Must be left empty for the `DOCR` registry type.
             */
            registry?: pulumi.Input<string>;
            /**
             * - DOCKER_HUB: The DockerHub container registry type.
             * - DOCR: The DigitalOcean container registry type.
             */
            registryType?: pulumi.Input<enums.apps.v2.AppsImageSourceSpecRegistryType>;
            /**
             * The repository name.
             */
            repository?: pulumi.Input<string>;
            /**
             * The repository tag. Defaults to `latest` if not provided.
             */
            tag?: pulumi.Input<string>;
        }
        /**
         * appsImageSourceSpecArgsProvideDefaults sets the appropriate defaults for AppsImageSourceSpecArgs
         */
        export function appsImageSourceSpecArgsProvideDefaults(val: AppsImageSourceSpecArgs): AppsImageSourceSpecArgs {
            return {
                ...val,
                tag: (val.tag) ?? "latest",
            };
        }

        export interface AppsStringMatchArgs {
            /**
             * Exact string match. Only 1 of `exact`, `prefix`, or `regex` must be set.
             */
            exact?: pulumi.Input<string>;
            /**
             * Prefix-based match. Only 1 of `exact`, `prefix`, or `regex` must be set.
             */
            prefix?: pulumi.Input<string>;
            /**
             * RE2 style regex-based match. Only 1 of `exact`, `prefix`, or `regex` must be set. For more information about RE2 syntax, see: https://github.com/google/re2/wiki/Syntax
             */
            regex?: pulumi.Input<string>;
        }

    }
}

export namespace cdn {
    export namespace v2 {
    }
}

export namespace certificates {
    export namespace v2 {
    }
}

export namespace customers {
    export namespace v2 {
    }
}

export namespace databases {
    export namespace v2 {
        export interface ConnectionArgs {
            /**
             * The name of the default database.
             */
            database?: pulumi.Input<string>;
            /**
             * The FQDN pointing to the database cluster's current primary node.
             */
            host?: pulumi.Input<string>;
            /**
             * The randomly generated password for the default user.
             */
            password?: pulumi.Input<string>;
            /**
             * The port on which the database cluster is listening.
             */
            port?: pulumi.Input<number>;
            /**
             * A boolean value indicating if the connection should be made over SSL.
             */
            ssl?: pulumi.Input<boolean>;
            /**
             * A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
             */
            uri?: pulumi.Input<string>;
            /**
             * The default user for the database.
             */
            user?: pulumi.Input<string>;
        }

        export interface DatabaseBackupArgs {
            /**
             * The timestamp of an existing database cluster backup in ISO8601 combined date and time format. The most recent backup will be used if excluded.
             */
            backupCreatedAt?: pulumi.Input<string>;
            /**
             * The name of an existing database cluster from which the backup will be restored.
             */
            databaseName: pulumi.Input<string>;
        }

        export interface DatabaseClusterConnectionArgs {
            /**
             * The name of the default database.
             */
            database?: pulumi.Input<string>;
            /**
             * The FQDN pointing to the database cluster's current primary node.
             */
            host?: pulumi.Input<string>;
            /**
             * The randomly generated password for the default user.
             */
            password?: pulumi.Input<string>;
            /**
             * The port on which the database cluster is listening.
             */
            port?: pulumi.Input<number>;
            /**
             * A boolean value indicating if the connection should be made over SSL.
             */
            ssl?: pulumi.Input<boolean>;
            /**
             * A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
             */
            uri?: pulumi.Input<string>;
            /**
             * The default user for the database.
             */
            user?: pulumi.Input<string>;
        }

        export interface DatabaseClusterMaintenanceWindowArgs {
            /**
             * The day of the week on which to apply maintenance updates.
             */
            day: pulumi.Input<string>;
            /**
             * A list of strings, each containing information about a pending maintenance update.
             */
            description?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * The hour in UTC at which maintenance updates will be applied in 24 hour format.
             */
            hour: pulumi.Input<string>;
            /**
             * A boolean value indicating whether any maintenance is scheduled to be performed in the next window.
             */
            pending?: pulumi.Input<boolean>;
        }

        export interface DatabaseClusterPrivateConnectionArgs {
            /**
             * The name of the default database.
             */
            database?: pulumi.Input<string>;
            /**
             * The FQDN pointing to the database cluster's current primary node.
             */
            host?: pulumi.Input<string>;
            /**
             * The randomly generated password for the default user.
             */
            password?: pulumi.Input<string>;
            /**
             * The port on which the database cluster is listening.
             */
            port?: pulumi.Input<number>;
            /**
             * A boolean value indicating if the connection should be made over SSL.
             */
            ssl?: pulumi.Input<boolean>;
            /**
             * A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
             */
            uri?: pulumi.Input<string>;
            /**
             * The default user for the database.
             */
            user?: pulumi.Input<string>;
        }

        export interface DatabaseReplicaConnectionArgs {
            /**
             * The name of the default database.
             */
            database?: pulumi.Input<string>;
            /**
             * The FQDN pointing to the database cluster's current primary node.
             */
            host?: pulumi.Input<string>;
            /**
             * The randomly generated password for the default user.
             */
            password?: pulumi.Input<string>;
            /**
             * The port on which the database cluster is listening.
             */
            port?: pulumi.Input<number>;
            /**
             * A boolean value indicating if the connection should be made over SSL.
             */
            ssl?: pulumi.Input<boolean>;
            /**
             * A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
             */
            uri?: pulumi.Input<string>;
            /**
             * The default user for the database.
             */
            user?: pulumi.Input<string>;
        }

        export interface DatabaseReplicaPrivateConnectionArgs {
            /**
             * The name of the default database.
             */
            database?: pulumi.Input<string>;
            /**
             * The FQDN pointing to the database cluster's current primary node.
             */
            host?: pulumi.Input<string>;
            /**
             * The randomly generated password for the default user.
             */
            password?: pulumi.Input<string>;
            /**
             * The port on which the database cluster is listening.
             */
            port?: pulumi.Input<number>;
            /**
             * A boolean value indicating if the connection should be made over SSL.
             */
            ssl?: pulumi.Input<boolean>;
            /**
             * A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
             */
            uri?: pulumi.Input<string>;
            /**
             * The default user for the database.
             */
            user?: pulumi.Input<string>;
        }

        export interface DatabaseUserArgs {
            mysqlSettings?: pulumi.Input<inputs.databases.v2.MysqlSettingsArgs>;
            /**
             * The name of a database user.
             */
            name: pulumi.Input<string>;
            /**
             * A randomly generated password for the database user.
             */
            password?: pulumi.Input<string>;
            /**
             * A string representing the database user's role. The value will be either
             * "primary" or "normal".
             */
            role?: pulumi.Input<enums.databases.v2.DatabaseUserRole>;
        }

        export interface FirewallRuleArgs {
            /**
             * A unique ID for the database cluster to which the rule is applied.
             */
            clusterUuid?: pulumi.Input<string>;
            /**
             * A time value given in ISO8601 combined date and time format that represents when the firewall rule was created.
             */
            createdAt?: pulumi.Input<string>;
            /**
             * The type of resource that the firewall rule allows to access the database cluster.
             */
            type: pulumi.Input<enums.databases.v2.FirewallRuleType>;
            /**
             * A unique ID for the firewall rule itself.
             */
            uuid?: pulumi.Input<string>;
            /**
             * The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster.
             */
            value: pulumi.Input<string>;
        }

        export interface MysqlSettingsArgs {
            /**
             * A string specifying the authentication method to be used for connections
             * to the MySQL user account. The valid values are `mysql_native_password`
             * or `caching_sha2_password`. If excluded when creating a new user, the
             * default for the version of MySQL in use will be used. As of MySQL 8.0, the
             * default is `caching_sha2_password`.
             */
            authPlugin: pulumi.Input<enums.databases.v2.MysqlSettingsAuthPlugin>;
        }

        export interface PrivateConnectionArgs {
            /**
             * The name of the default database.
             */
            database?: pulumi.Input<string>;
            /**
             * The FQDN pointing to the database cluster's current primary node.
             */
            host?: pulumi.Input<string>;
            /**
             * The randomly generated password for the default user.
             */
            password?: pulumi.Input<string>;
            /**
             * The port on which the database cluster is listening.
             */
            port?: pulumi.Input<number>;
            /**
             * A boolean value indicating if the connection should be made over SSL.
             */
            ssl?: pulumi.Input<boolean>;
            /**
             * A connection string in the format accepted by the `psql` command. This is provided as a convenience and should be able to be constructed by the other attributes.
             */
            uri?: pulumi.Input<string>;
            /**
             * The default user for the database.
             */
            user?: pulumi.Input<string>;
        }

        export interface SourcePropertiesArgs {
            /**
             * The name of the default database.
             */
            dbname?: pulumi.Input<string>;
            /**
             * The FQDN pointing to the database cluster's current primary node.
             */
            host?: pulumi.Input<string>;
            /**
             * The randomly generated password for the default user.
             */
            password?: pulumi.Input<string>;
            /**
             * The port on which the database cluster is listening.
             */
            port?: pulumi.Input<number>;
            /**
             * The default user for the database.
             */
            username?: pulumi.Input<string>;
        }

    }
}

export namespace domains {
    export namespace v2 {
    }
}

export namespace droplets {
    export namespace v2 {
    }
}

export namespace firewalls {
    export namespace v2 {
        export interface FirewallPropertiesPendingChangesItemPropertiesArgs {
            dropletId?: pulumi.Input<number>;
            removing?: pulumi.Input<boolean>;
            status?: pulumi.Input<string>;
        }

        export interface FirewallPropertiesTagsArgs {
        }

        export interface FirewallRulesInboundRulesItemArgs {
            /**
             * The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. "8000-9000"), or "0" when all ports are open for a protocol. For ICMP rules this parameter will always return "0".
             */
            ports: pulumi.Input<string>;
            /**
             * The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`.
             */
            protocol: pulumi.Input<enums.firewalls.v2.FirewallRuleBaseProtocol>;
        }

        export interface FirewallRulesOutboundRulesItemArgs {
            /**
             * The ports on which traffic will be allowed specified as a string containing a single port, a range (e.g. "8000-9000"), or "0" when all ports are open for a protocol. For ICMP rules this parameter will always return "0".
             */
            ports: pulumi.Input<string>;
            /**
             * The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`.
             */
            protocol: pulumi.Input<enums.firewalls.v2.FirewallRuleBaseProtocol>;
        }

        export interface TagsArgs {
        }
    }
}

export namespace floating_ips {
    export namespace v2 {
    }
}

export namespace functions {
    export namespace v2 {
        /**
         * Trigger details for SCHEDULED type, where body is optional.
         */
        export interface ScheduledDetailsArgs {
            /**
             * Optional data to be sent to function while triggering the function.
             */
            body?: pulumi.Input<inputs.functions.v2.ScheduledDetailsBodyPropertiesArgs>;
            /**
             * valid cron expression string which is required for SCHEDULED type triggers.
             */
            cron: pulumi.Input<string>;
        }

        /**
         * Optional data to be sent to function while triggering the function.
         */
        export interface ScheduledDetailsBodyPropertiesArgs {
            name?: pulumi.Input<string>;
        }

    }
}

export namespace images {
    export namespace v2 {
    }
}

export namespace kubernetes {
    export namespace v2 {
        export interface KubernetesNodePoolArgs {
            /**
             * A boolean value indicating whether auto-scaling is enabled for this node pool.
             */
            autoScale?: pulumi.Input<boolean>;
            /**
             * The number of Droplet instances in the node pool.
             */
            count?: pulumi.Input<number>;
            /**
             * A unique ID that can be used to identify and reference a specific node pool.
             */
            id?: pulumi.Input<string>;
            /**
             * An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
             */
            labels?: any;
            /**
             * The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
             */
            maxNodes?: pulumi.Input<number>;
            /**
             * The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
             */
            minNodes?: pulumi.Input<number>;
            /**
             * A human-readable name for the node pool.
             */
            name?: pulumi.Input<string>;
            /**
             * An object specifying the details of a specific worker node in a node pool.
             */
            nodes?: pulumi.Input<pulumi.Input<inputs.kubernetes.v2.NodeArgs>[]>;
            /**
             * The slug identifier for the type of Droplet used as workers in the node pool.
             */
            size?: pulumi.Input<string>;
            /**
             * An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
             */
            tags?: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
             */
            taints?: pulumi.Input<pulumi.Input<inputs.kubernetes.v2.KubernetesNodePoolTaintArgs>[]>;
        }

        export interface KubernetesNodePoolTaintArgs {
            /**
             * How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`.
             */
            effect?: pulumi.Input<enums.kubernetes.v2.KubernetesNodePoolTaintEffect>;
            /**
             * An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
             */
            key?: pulumi.Input<string>;
            /**
             * An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
             */
            value?: pulumi.Input<string>;
        }

        /**
         * An object specifying the maintenance window policy for the Kubernetes cluster.
         */
        export interface MaintenancePolicyArgs {
            /**
             * The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.
             */
            day?: pulumi.Input<enums.kubernetes.v2.MaintenancePolicyDay>;
            /**
             * The duration of the maintenance window policy in human-readable format.
             */
            duration?: pulumi.Input<string>;
            /**
             * The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`).
             */
            startTime?: pulumi.Input<string>;
        }

        export interface NodeArgs {
            /**
             * A time value given in ISO8601 combined date and time format that represents when the node was created.
             */
            createdAt?: pulumi.Input<string>;
            /**
             * The ID of the Droplet used for the worker node.
             */
            dropletId?: pulumi.Input<string>;
            /**
             * A unique ID that can be used to identify and reference the node.
             */
            id?: pulumi.Input<string>;
            /**
             * An automatically generated, human-readable name for the node.
             */
            name?: pulumi.Input<string>;
            /**
             * An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
             */
            status?: pulumi.Input<inputs.kubernetes.v2.NodeStatusPropertiesArgs>;
            /**
             * A time value given in ISO8601 combined date and time format that represents when the node was last updated.
             */
            updatedAt?: pulumi.Input<string>;
        }

        /**
         * An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
         */
        export interface NodeStatusPropertiesArgs {
            /**
             * A string indicating the current status of the node.
             */
            state?: pulumi.Input<enums.kubernetes.v2.NodeStatusPropertiesState>;
        }

    }
}

export namespace load_balancers {
    export namespace v2 {
        /**
         * An object specifying a forwarding rule for a load balancer.
         */
        export interface ForwardingRuleArgs {
            /**
             * The ID of the TLS certificate used for SSL termination if enabled.
             */
            certificateId?: pulumi.Input<string>;
            /**
             * An integer representing the port on which the load balancer instance will listen.
             */
            entryPort: pulumi.Input<number>;
            /**
             * The protocol used for traffic to the load balancer. The possible values are: `http`, `https`, `http2`, `http3`, `tcp`, or `udp`. If you set the  `entry_protocol` to `udp`, the `target_protocol` must be set to `udp`.  When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
             */
            entryProtocol: pulumi.Input<enums.load_balancers.v2.ForwardingRuleEntryProtocol>;
            /**
             * An integer representing the port on the backend Droplets to which the load balancer will send traffic.
             */
            targetPort: pulumi.Input<number>;
            /**
             * The protocol used for traffic from the load balancer to the backend Droplets. The possible values are: `http`, `https`, `http2`, `tcp`, or `udp`. If you set the `target_protocol` to `udp`, the `entry_protocol` must be set to  `udp`. When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
             */
            targetProtocol: pulumi.Input<enums.load_balancers.v2.ForwardingRuleTargetProtocol>;
            /**
             * A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets.
             */
            tlsPassthrough?: pulumi.Input<boolean>;
        }

    }
}

export namespace monitoring {
    export namespace v2 {
        export interface AlertsArgs {
            /**
             * An email to notify on an alert trigger.
             */
            email: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Slack integration details.
             */
            slack: pulumi.Input<pulumi.Input<inputs.monitoring.v2.SlackDetailsArgs>[]>;
        }

        export interface SlackDetailsArgs {
            /**
             * Slack channel to notify of an alert trigger.
             */
            channel: pulumi.Input<string>;
            /**
             * Slack Webhook URL.
             */
            url: pulumi.Input<string>;
        }
    }
}

export namespace oneclicks {
    export namespace v2 {
    }
}

export namespace projects {
    export namespace v2 {
    }
}

export namespace regions {
    export namespace v2 {
    }
}

export namespace registry {
    export namespace v2 {
    }
}

export namespace reports {
    export namespace v2 {
    }
}

export namespace reserved_ips {
    export namespace v2 {
    }
}

export namespace sizes {
    export namespace v2 {
    }
}

export namespace snapshots {
    export namespace v2 {
    }
}

export namespace tags {
    export namespace v2 {
        export interface ResourcesItemPropertiesArgs {
            /**
             * The identifier of a resource.
             */
            resourceId?: pulumi.Input<string>;
            /**
             * The type of the resource.
             */
            resourceType?: pulumi.Input<enums.tags.v2.ResourcesItemPropertiesResourceType>;
        }

    }
}

export namespace uptime {
    export namespace v2 {
        /**
         * The notification settings for a trigger alert.
         */
        export interface NotificationArgs {
            /**
             * An email to notify on an alert trigger.
             */
            email: pulumi.Input<pulumi.Input<string>[]>;
            /**
             * Slack integration details.
             */
            slack: pulumi.Input<pulumi.Input<inputs.uptime.v2.NotificationSlackItemPropertiesArgs>[]>;
        }

        export interface NotificationSlackItemPropertiesArgs {
            /**
             * Slack channel to notify of an alert trigger.
             */
            channel: pulumi.Input<string>;
            /**
             * Slack Webhook URL.
             */
            url: pulumi.Input<string>;
        }

    }
}

export namespace volumes {
    export namespace v2 {
    }
}

export namespace vpcs {
    export namespace v2 {
    }
}
