# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs

__all__ = [
    'AppsListRegionsResponse',
    'AwaitableAppsListRegionsResponse',
    'list_apps_regions',
    'list_apps_regions_output',
]

@pulumi.output_type
class AppsListRegionsResponse:
    def __init__(__self__, regions=None):
        if regions and not isinstance(regions, list):
            raise TypeError("Expected argument 'regions' to be a list")
        pulumi.set(__self__, "regions", regions)

    @property
    @pulumi.getter
    def regions(self) -> Optional[Sequence['outputs.AppsRegion']]:
        return pulumi.get(self, "regions")


class AwaitableAppsListRegionsResponse(AppsListRegionsResponse):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return AppsListRegionsResponse(
            regions=self.regions)


def list_apps_regions(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableAppsListRegionsResponse:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('digitalocean-native:apps/v2:listAppsRegions', __args__, opts=opts, typ=AppsListRegionsResponse).value

    return AwaitableAppsListRegionsResponse(
        regions=pulumi.get(__ret__, 'regions'))
def list_apps_regions_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[AppsListRegionsResponse]:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('digitalocean-native:apps/v2:listAppsRegions', __args__, opts=opts, typ=AppsListRegionsResponse)
    return __ret__.apply(lambda __response__: AppsListRegionsResponse(
        regions=pulumi.get(__response__, 'regions')))
