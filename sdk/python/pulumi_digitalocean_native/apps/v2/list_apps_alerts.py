# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
from ... import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'AppsListAlertsResponse',
    'AwaitableAppsListAlertsResponse',
    'list_apps_alerts',
    'list_apps_alerts_output',
]

@pulumi.output_type
class AppsListAlertsResponse:
    def __init__(__self__, alerts=None):
        if alerts and not isinstance(alerts, list):
            raise TypeError("Expected argument 'alerts' to be a list")
        pulumi.set(__self__, "alerts", alerts)

    @property
    @pulumi.getter
    def alerts(self) -> Optional[Sequence['outputs.AppAlert']]:
        return pulumi.get(self, "alerts")


class AwaitableAppsListAlertsResponse(AppsListAlertsResponse):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return AppsListAlertsResponse(
            alerts=self.alerts)


def list_apps_alerts(app_id: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableAppsListAlertsResponse:
    """
    Use this data source to access information about an existing resource.

    :param str app_id: The app ID
    """
    __args__ = dict()
    __args__['appId'] = app_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('digitalocean-native:apps/v2:listAppsAlerts', __args__, opts=opts, typ=AppsListAlertsResponse).value

    return AwaitableAppsListAlertsResponse(
        alerts=pulumi.get(__ret__, 'alerts'))


@_utilities.lift_output_func(list_apps_alerts)
def list_apps_alerts_output(app_id: Optional[pulumi.Input[str]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[AppsListAlertsResponse]:
    """
    Use this data source to access information about an existing resource.

    :param str app_id: The app ID
    """
    ...
