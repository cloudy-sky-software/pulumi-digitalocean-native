# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetImageActionResult',
    'AwaitableGetImageActionResult',
    'get_image_action',
    'get_image_action_output',
]

@pulumi.output_type
class GetImageActionResult:
    def __init__(__self__, items=None):
        if items and not isinstance(items, dict):
            raise TypeError("Expected argument 'items' to be a dict")
        pulumi.set(__self__, "items", items)

    @property
    @pulumi.getter
    def items(self) -> 'outputs.Action':
        return pulumi.get(self, "items")


class AwaitableGetImageActionResult(GetImageActionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetImageActionResult(
            items=self.items)


def get_image_action(action_id: Optional[str] = None,
                     image_id: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetImageActionResult:
    """
    Use this data source to access information about an existing resource.

    :param str action_id: A unique numeric ID that can be used to identify and reference an action.
    :param str image_id: A unique number that can be used to identify and reference a specific image.
    """
    __args__ = dict()
    __args__['actionId'] = action_id
    __args__['imageId'] = image_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('digitalocean-native:images/v2:getImageAction', __args__, opts=opts, typ=GetImageActionResult).value

    return AwaitableGetImageActionResult(
        items=pulumi.get(__ret__, 'items'))


@_utilities.lift_output_func(get_image_action)
def get_image_action_output(action_id: Optional[pulumi.Input[str]] = None,
                            image_id: Optional[pulumi.Input[str]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetImageActionResult]:
    """
    Use this data source to access information about an existing resource.

    :param str action_id: A unique numeric ID that can be used to identify and reference an action.
    :param str image_id: A unique number that can be used to identify and reference a specific image.
    """
    ...
