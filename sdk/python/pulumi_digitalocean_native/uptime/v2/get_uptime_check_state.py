# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from ... import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetUptimeCheckStateProperties',
    'AwaitableGetUptimeCheckStateProperties',
    'get_uptime_check_state',
    'get_uptime_check_state_output',
]

@pulumi.output_type
class GetUptimeCheckStateProperties:
    def __init__(__self__, state=None):
        if state and not isinstance(state, dict):
            raise TypeError("Expected argument 'state' to be a dict")
        pulumi.set(__self__, "state", state)

    @_builtins.property
    @pulumi.getter
    def state(self) -> Optional['outputs.State']:
        return pulumi.get(self, "state")


class AwaitableGetUptimeCheckStateProperties(GetUptimeCheckStateProperties):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetUptimeCheckStateProperties(
            state=self.state)


def get_uptime_check_state(check_id: Optional[_builtins.str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetUptimeCheckStateProperties:
    """
    Use this data source to access information about an existing resource.

    :param _builtins.str check_id: A unique identifier for a check.
    """
    __args__ = dict()
    __args__['checkId'] = check_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('digitalocean-native:uptime/v2:getUptimeCheckState', __args__, opts=opts, typ=GetUptimeCheckStateProperties).value

    return AwaitableGetUptimeCheckStateProperties(
        state=pulumi.get(__ret__, 'state'))
def get_uptime_check_state_output(check_id: Optional[pulumi.Input[_builtins.str]] = None,
                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetUptimeCheckStateProperties]:
    """
    Use this data source to access information about an existing resource.

    :param _builtins.str check_id: A unique identifier for a check.
    """
    __args__ = dict()
    __args__['checkId'] = check_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('digitalocean-native:uptime/v2:getUptimeCheckState', __args__, opts=opts, typ=GetUptimeCheckStateProperties)
    return __ret__.apply(lambda __response__: GetUptimeCheckStateProperties(
        state=pulumi.get(__response__, 'state')))
