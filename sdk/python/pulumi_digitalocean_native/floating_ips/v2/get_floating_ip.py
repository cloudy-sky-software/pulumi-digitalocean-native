# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload, Awaitable
from ... import _utilities
from . import outputs
from ._enums import *

__all__ = [
    'GetFloatingIPProperties',
    'AwaitableGetFloatingIPProperties',
    'get_floating_ip',
    'get_floating_ip_output',
]

@pulumi.output_type
class GetFloatingIPProperties:
    def __init__(__self__, floating_ip=None):
        if floating_ip and not isinstance(floating_ip, dict):
            raise TypeError("Expected argument 'floating_ip' to be a dict")
        pulumi.set(__self__, "floating_ip", floating_ip)

    @property
    @pulumi.getter(name="floatingIp")
    def floating_ip(self) -> Optional['outputs.FloatingIp']:
        return pulumi.get(self, "floating_ip")


class AwaitableGetFloatingIPProperties(GetFloatingIPProperties):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetFloatingIPProperties(
            floating_ip=self.floating_ip)


def get_floating_ip(floating_ip: Optional[str] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetFloatingIPProperties:
    """
    Use this data source to access information about an existing resource.

    :param str floating_ip: A floating IP address.
    """
    __args__ = dict()
    __args__['floatingIp'] = floating_ip
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('digitalocean-native:floating_ips/v2:getFloatingIP', __args__, opts=opts, typ=GetFloatingIPProperties).value

    return AwaitableGetFloatingIPProperties(
        floating_ip=pulumi.get(__ret__, 'floating_ip'))


@_utilities.lift_output_func(get_floating_ip)
def get_floating_ip_output(floating_ip: Optional[pulumi.Input[str]] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetFloatingIPProperties]:
    """
    Use this data source to access information about an existing resource.

    :param str floating_ip: A floating IP address.
    """
    ...
