# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = [
    'NeighborIds',
]

@pulumi.output_type
class NeighborIds(dict):
    def __init__(__self__, *,
                 neighbor_ids: Optional[Sequence[Sequence[int]]] = None):
        """
        :param Sequence[Sequence[int]] neighbor_ids: An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
        """
        if neighbor_ids is not None:
            pulumi.set(__self__, "neighbor_ids", neighbor_ids)

    @property
    @pulumi.getter(name="neighborIds")
    def neighbor_ids(self) -> Optional[Sequence[Sequence[int]]]:
        """
        An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
        """
        return pulumi.get(self, "neighbor_ids")


