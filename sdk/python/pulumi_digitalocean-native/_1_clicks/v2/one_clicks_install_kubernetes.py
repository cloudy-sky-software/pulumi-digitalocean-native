# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from ... import _utilities

__all__ = ['OneClicksInstallKubernetesArgs', 'OneClicksInstallKubernetes']

@pulumi.input_type
class OneClicksInstallKubernetesArgs:
    def __init__(__self__, *,
                 addon_slugs: pulumi.Input[Sequence[pulumi.Input[str]]],
                 cluster_uuid: pulumi.Input[str]):
        """
        The set of arguments for constructing a OneClicksInstallKubernetes resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] addon_slugs: An array of 1-Click Application slugs to be installed to the Kubernetes cluster.
        :param pulumi.Input[str] cluster_uuid: A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed.
        """
        pulumi.set(__self__, "addon_slugs", addon_slugs)
        pulumi.set(__self__, "cluster_uuid", cluster_uuid)

    @property
    @pulumi.getter(name="addonSlugs")
    def addon_slugs(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        An array of 1-Click Application slugs to be installed to the Kubernetes cluster.
        """
        return pulumi.get(self, "addon_slugs")

    @addon_slugs.setter
    def addon_slugs(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "addon_slugs", value)

    @property
    @pulumi.getter(name="clusterUuid")
    def cluster_uuid(self) -> pulumi.Input[str]:
        """
        A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed.
        """
        return pulumi.get(self, "cluster_uuid")

    @cluster_uuid.setter
    def cluster_uuid(self, value: pulumi.Input[str]):
        pulumi.set(self, "cluster_uuid", value)


class OneClicksInstallKubernetes(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 addon_slugs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cluster_uuid: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a OneClicksInstallKubernetes resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] addon_slugs: An array of 1-Click Application slugs to be installed to the Kubernetes cluster.
        :param pulumi.Input[str] cluster_uuid: A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OneClicksInstallKubernetesArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a OneClicksInstallKubernetes resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param OneClicksInstallKubernetesArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OneClicksInstallKubernetesArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 addon_slugs: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cluster_uuid: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OneClicksInstallKubernetesArgs.__new__(OneClicksInstallKubernetesArgs)

            if addon_slugs is None and not opts.urn:
                raise TypeError("Missing required property 'addon_slugs'")
            __props__.__dict__["addon_slugs"] = addon_slugs
            if cluster_uuid is None and not opts.urn:
                raise TypeError("Missing required property 'cluster_uuid'")
            __props__.__dict__["cluster_uuid"] = cluster_uuid
            __props__.__dict__["message"] = None
        super(OneClicksInstallKubernetes, __self__).__init__(
            'digitalocean-native:1-clicks/v2:OneClicksInstallKubernetes',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None) -> 'OneClicksInstallKubernetes':
        """
        Get an existing OneClicksInstallKubernetes resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = OneClicksInstallKubernetesArgs.__new__(OneClicksInstallKubernetesArgs)

        __props__.__dict__["addon_slugs"] = None
        __props__.__dict__["cluster_uuid"] = None
        __props__.__dict__["message"] = None
        return OneClicksInstallKubernetes(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="addonSlugs")
    def addon_slugs(self) -> pulumi.Output[Sequence[str]]:
        """
        An array of 1-Click Application slugs to be installed to the Kubernetes cluster.
        """
        return pulumi.get(self, "addon_slugs")

    @property
    @pulumi.getter(name="clusterUuid")
    def cluster_uuid(self) -> pulumi.Output[str]:
        """
        A unique ID for the Kubernetes cluster to which the 1-Click Applications will be installed.
        """
        return pulumi.get(self, "cluster_uuid")

    @property
    @pulumi.getter
    def message(self) -> pulumi.Output[Optional[str]]:
        """
        A message about the result of the request.
        """
        return pulumi.get(self, "message")

