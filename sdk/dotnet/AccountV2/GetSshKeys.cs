// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.AccountV2
{
    public static class GetSshKeys
    {
        public static Task<GetSshKeysResult> InvokeAsync(GetSshKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSshKeysResult>("digitalocean-native:account/v2:getSshKeys", args ?? new GetSshKeysArgs(), options.WithDefaults());

        public static Output<GetSshKeysResult> Invoke(GetSshKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSshKeysResult>("digitalocean-native:account/v2:getSshKeys", args ?? new GetSshKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSshKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Either the ID or the fingerprint of an existing SSH key.
        /// </summary>
        [Input("sshKeyIdentifier", required: true)]
        public string SshKeyIdentifier { get; set; } = null!;

        public GetSshKeysArgs()
        {
        }
        public static new GetSshKeysArgs Empty => new GetSshKeysArgs();
    }

    public sealed class GetSshKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Either the ID or the fingerprint of an existing SSH key.
        /// </summary>
        [Input("sshKeyIdentifier", required: true)]
        public Input<string> SshKeyIdentifier { get; set; } = null!;

        public GetSshKeysInvokeArgs()
        {
        }
        public static new GetSshKeysInvokeArgs Empty => new GetSshKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetSshKeysResult
    {
        public readonly Outputs.GetSshKeysProperties Items;

        [OutputConstructor]
        private GetSshKeysResult(Outputs.GetSshKeysProperties items)
        {
            Items = items;
        }
    }
}
