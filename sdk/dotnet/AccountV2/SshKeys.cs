// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.AccountV2
{
    [DigitalOceanNativeResourceType("digitalocean-native:account/v2:SshKeys")]
    public partial class SshKeys : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A unique identifier that differentiates this key from other keys using  a format that SSH recognizes. The fingerprint is created when the key is added to your account.
        /// </summary>
        [Output("fingerprint")]
        public Output<string?> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// A human-readable display name for this key, used to easily identify the SSH keys when they are displayed.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The entire public key string that was uploaded. Embedded into the root user's `authorized_keys` file if you include this key during Droplet creation.
        /// </summary>
        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;

        [Output("sshKey")]
        public Output<Outputs.SshKeys?> SshKey { get; private set; } = null!;


        /// <summary>
        /// Create a SshKeys resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SshKeys(string name, SshKeysArgs args, CustomResourceOptions? options = null)
            : base("digitalocean-native:account/v2:SshKeys", name, args ?? new SshKeysArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SshKeys(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:account/v2:SshKeys", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SshKeys resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SshKeys Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new SshKeys(name, id, options);
        }
    }

    public sealed class SshKeysArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A human-readable display name for this key, used to easily identify the SSH keys when they are displayed.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The entire public key string that was uploaded. Embedded into the root user's `authorized_keys` file if you include this key during Droplet creation.
        /// </summary>
        [Input("publicKey", required: true)]
        public Input<string> PublicKey { get; set; } = null!;

        public SshKeysArgs()
        {
        }
        public static new SshKeysArgs Empty => new SshKeysArgs();
    }
}
