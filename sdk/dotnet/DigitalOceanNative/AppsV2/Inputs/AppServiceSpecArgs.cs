// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.AppsV2.Inputs
{

    public sealed class AppServiceSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional build command to run while building this component from source.
        /// </summary>
        [Input("buildCommand")]
        public Input<string>? BuildCommand { get; set; }

        [Input("cors")]
        public Input<Inputs.AppsCorsPolicyArgs>? Cors { get; set; }

        /// <summary>
        /// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
        /// </summary>
        [Input("dockerfilePath")]
        public Input<string>? DockerfilePath { get; set; }

        /// <summary>
        /// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
        /// </summary>
        [Input("environmentSlug")]
        public Input<string>? EnvironmentSlug { get; set; }

        [Input("envs")]
        private InputList<Inputs.AppVariableDefinitionArgs>? _envs;

        /// <summary>
        /// A list of environment variables made available to the component.
        /// </summary>
        public InputList<Inputs.AppVariableDefinitionArgs> Envs
        {
            get => _envs ?? (_envs = new InputList<Inputs.AppVariableDefinitionArgs>());
            set => _envs = value;
        }

        [Input("git")]
        public Input<Inputs.AppsGitSourceSpecArgs>? Git { get; set; }

        [Input("github")]
        public Input<Inputs.AppsGithubSourceSpecArgs>? Github { get; set; }

        [Input("gitlab")]
        public Input<Inputs.AppsGitlabSourceSpecArgs>? Gitlab { get; set; }

        [Input("healthCheck")]
        public Input<Inputs.AppServiceSpecHealthCheckArgs>? HealthCheck { get; set; }

        /// <summary>
        /// The internal port on which this service's run command will listen. Default: 8080
        /// If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.
        /// </summary>
        [Input("httpPort")]
        public Input<int>? HttpPort { get; set; }

        [Input("image")]
        public Input<Inputs.AppsImageSourceSpecArgs>? Image { get; set; }

        /// <summary>
        /// The amount of instances that this component should be scaled to. Default: 1
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// The instance size to use for this component. Default: `basic-xxs`
        /// </summary>
        [Input("instanceSizeSlug")]
        public Input<CloudySkySoftware.Pulumi.DigitalOceanNative.AppsV2.AppComponentInstanceBaseInstanceSizeSlug>? InstanceSizeSlug { get; set; }

        [Input("internalPorts")]
        private InputList<int>? _internalPorts;

        /// <summary>
        /// The ports on which this service will listen for internal traffic.
        /// </summary>
        public InputList<int> InternalPorts
        {
            get => _internalPorts ?? (_internalPorts = new InputList<int>());
            set => _internalPorts = value;
        }

        [Input("logDestinations")]
        public Input<Inputs.AppLogDestinationDefinitionArgs>? LogDestinations { get; set; }

        /// <summary>
        /// The name. Must be unique across all components within the same app.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("routes")]
        private InputList<Inputs.AppRouteSpecArgs>? _routes;

        /// <summary>
        /// A list of HTTP routes that should be routed to this component.
        /// </summary>
        public InputList<Inputs.AppRouteSpecArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.AppRouteSpecArgs>());
            set => _routes = value;
        }

        /// <summary>
        /// An optional run command to override the component's default.
        /// </summary>
        [Input("runCommand")]
        public Input<string>? RunCommand { get; set; }

        /// <summary>
        /// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
        /// </summary>
        [Input("sourceDir")]
        public Input<string>? SourceDir { get; set; }

        public AppServiceSpecArgs()
        {
            InstanceCount = 1;
            InstanceSizeSlug = CloudySkySoftware.Pulumi.DigitalOceanNative.AppsV2.AppComponentInstanceBaseInstanceSizeSlug.BasicXxs;
        }
        public static new AppServiceSpecArgs Empty => new AppServiceSpecArgs();
    }
}
