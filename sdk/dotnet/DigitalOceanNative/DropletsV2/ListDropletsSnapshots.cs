// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.DropletsV2
{
    public static class ListDropletsSnapshots
    {
        public static Task<ListDropletsSnapshotsResult> InvokeAsync(ListDropletsSnapshotsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDropletsSnapshotsResult>("digitalocean-native:droplets/v2:listDropletsSnapshots", args ?? new ListDropletsSnapshotsArgs(), options.WithDefaults());

        public static Output<ListDropletsSnapshotsResult> Invoke(ListDropletsSnapshotsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDropletsSnapshotsResult>("digitalocean-native:droplets/v2:listDropletsSnapshots", args ?? new ListDropletsSnapshotsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListDropletsSnapshotsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a Droplet instance.
        /// </summary>
        [Input("dropletId", required: true)]
        public string DropletId { get; set; } = null!;

        public ListDropletsSnapshotsArgs()
        {
        }
        public static new ListDropletsSnapshotsArgs Empty => new ListDropletsSnapshotsArgs();
    }

    public sealed class ListDropletsSnapshotsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a Droplet instance.
        /// </summary>
        [Input("dropletId", required: true)]
        public Input<string> DropletId { get; set; } = null!;

        public ListDropletsSnapshotsInvokeArgs()
        {
        }
        public static new ListDropletsSnapshotsInvokeArgs Empty => new ListDropletsSnapshotsInvokeArgs();
    }


    [OutputType]
    public sealed class ListDropletsSnapshotsResult
    {
        public readonly Outputs.ListDropletsSnapshotsItems Items;

        [OutputConstructor]
        private ListDropletsSnapshotsResult(Outputs.ListDropletsSnapshotsItems items)
        {
            Items = items;
        }
    }
}
