// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.LoadBalancersV2
{
    public static class GetLoadBalancer
    {
        public static Task<Outputs.GetLoadBalancerProperties> InvokeAsync(GetLoadBalancerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetLoadBalancerProperties>("digitalocean-native:load_balancers/v2:getLoadBalancer", args ?? new GetLoadBalancerArgs(), options.WithDefaults());

        public static Output<Outputs.GetLoadBalancerProperties> Invoke(GetLoadBalancerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetLoadBalancerProperties>("digitalocean-native:load_balancers/v2:getLoadBalancer", args ?? new GetLoadBalancerInvokeArgs(), options.WithDefaults());

        public static Output<Outputs.GetLoadBalancerProperties> Invoke(GetLoadBalancerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetLoadBalancerProperties>("digitalocean-native:load_balancers/v2:getLoadBalancer", args ?? new GetLoadBalancerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLoadBalancerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a load balancer.
        /// </summary>
        [Input("lbId", required: true)]
        public string LbId { get; set; } = null!;

        public GetLoadBalancerArgs()
        {
        }
        public static new GetLoadBalancerArgs Empty => new GetLoadBalancerArgs();
    }

    public sealed class GetLoadBalancerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a load balancer.
        /// </summary>
        [Input("lbId", required: true)]
        public Input<string> LbId { get; set; } = null!;

        public GetLoadBalancerInvokeArgs()
        {
        }
        public static new GetLoadBalancerInvokeArgs Empty => new GetLoadBalancerInvokeArgs();
    }
}
