// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class ListDatabasesUsers
    {
        public static Task<Outputs.ListDatabasesUsersProperties> InvokeAsync(ListDatabasesUsersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.ListDatabasesUsersProperties>("digitalocean-native:databases/v2:listDatabasesUsers", args ?? new ListDatabasesUsersArgs(), options.WithDefaults());

        public static Output<Outputs.ListDatabasesUsersProperties> Invoke(ListDatabasesUsersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.ListDatabasesUsersProperties>("digitalocean-native:databases/v2:listDatabasesUsers", args ?? new ListDatabasesUsersInvokeArgs(), options.WithDefaults());

        public static Output<Outputs.ListDatabasesUsersProperties> Invoke(ListDatabasesUsersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.ListDatabasesUsersProperties>("digitalocean-native:databases/v2:listDatabasesUsers", args ?? new ListDatabasesUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListDatabasesUsersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public string DatabaseClusterUuid { get; set; } = null!;

        public ListDatabasesUsersArgs()
        {
        }
        public static new ListDatabasesUsersArgs Empty => new ListDatabasesUsersArgs();
    }

    public sealed class ListDatabasesUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public Input<string> DatabaseClusterUuid { get; set; } = null!;

        public ListDatabasesUsersInvokeArgs()
        {
        }
        public static new ListDatabasesUsersInvokeArgs Empty => new ListDatabasesUsersInvokeArgs();
    }
}
