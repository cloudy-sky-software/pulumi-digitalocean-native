// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.Outputs
{

    [OutputType]
    public sealed class Creategres
    {
        /// <summary>
        /// Specifies a fraction, in a decimal value, of the table size to add to autovacuum_analyze_threshold when deciding whether to trigger an ANALYZE. The default is 0.2 (20% of table size).
        /// </summary>
        public readonly double? AutovacuumAnalyzeScaleFactor;
        /// <summary>
        /// Specifies the minimum number of inserted, updated, or deleted tuples needed to trigger an ANALYZE in any one table. The default is 50 tuples.
        /// </summary>
        public readonly int? AutovacuumAnalyzeThreshold;
        /// <summary>
        /// Specifies the maximum age (in transactions) that a table's pg_class.relfrozenxid field can attain before a VACUUM operation is forced to prevent transaction ID wraparound within the table. Note that the system will launch autovacuum processes to prevent wraparound even when autovacuum is otherwise disabled. This parameter will cause the server to be restarted.
        /// </summary>
        public readonly int? AutovacuumFreezeMaxAge;
        /// <summary>
        /// Specifies the maximum number of autovacuum processes (other than the autovacuum launcher) that may be running at any one time. The default is three. This parameter can only be set at server start.
        /// </summary>
        public readonly int? AutovacuumMaxWorkers;
        /// <summary>
        /// Specifies the minimum delay, in seconds, between autovacuum runs on any given database. The default is one minute.
        /// </summary>
        public readonly int? AutovacuumNaptime;
        /// <summary>
        /// Specifies the cost delay value, in milliseconds, that will be used in automatic VACUUM operations. If -1, uses the regular vacuum_cost_delay value, which is 20 milliseconds.
        /// </summary>
        public readonly int? AutovacuumVacuumCostDelay;
        /// <summary>
        /// Specifies the cost limit value that will be used in automatic VACUUM operations. If -1 is specified (which is the default), the regular vacuum_cost_limit value will be used.
        /// </summary>
        public readonly int? AutovacuumVacuumCostLimit;
        /// <summary>
        /// Specifies a fraction, in a decimal value, of the table size to add to autovacuum_vacuum_threshold when deciding whether to trigger a VACUUM. The default is 0.2 (20% of table size).
        /// </summary>
        public readonly double? AutovacuumVacuumScaleFactor;
        /// <summary>
        /// Specifies the minimum number of updated or deleted tuples needed to trigger a VACUUM in any one table. The default is 50 tuples.
        /// </summary>
        public readonly int? AutovacuumVacuumThreshold;
        /// <summary>
        /// The hour of day (in UTC) when backup for the service starts. New backup only starts if previous backup has already completed.
        /// </summary>
        public readonly int? BackupHour;
        /// <summary>
        /// The minute of the backup hour when backup for the service starts. New backup is only started if previous backup has already completed.
        /// </summary>
        public readonly int? BackupMinute;
        /// <summary>
        /// Specifies the delay, in milliseconds, between activity rounds for the background writer. Default is 200 ms.
        /// </summary>
        public readonly int? BgwriterDelay;
        /// <summary>
        /// The amount of kilobytes that need to be written by the background writer before attempting to force the OS to issue these writes to underlying storage. Specified in kilobytes, default is 512.  Setting of 0 disables forced writeback.
        /// </summary>
        public readonly int? BgwriterFlushAfter;
        /// <summary>
        /// The maximum number of buffers that the background writer can write. Setting this to zero disables background writing. Default is 100.
        /// </summary>
        public readonly int? BgwriterLruMaxpages;
        /// <summary>
        /// The average recent need for new buffers is multiplied by bgwriter_lru_multiplier to arrive at an estimate of the number that will be needed during the next round, (up to bgwriter_lru_maxpages). 1.0 represents a “just in time” policy of writing exactly the number of buffers predicted to be needed. Larger values provide some cushion against spikes in demand, while smaller values intentionally leave writes to be done by server processes. The default is 2.0.
        /// </summary>
        public readonly double? BgwriterLruMultiplier;
        /// <summary>
        /// The amount of time, in milliseconds, to wait on a lock before checking to see if there is a deadlock condition.
        /// </summary>
        public readonly int? DeadlockTimeout;
        /// <summary>
        /// Specifies the default TOAST compression method for values of compressible columns (the default is lz4).
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresDefaultToastCompression? DefaultToastCompression;
        /// <summary>
        /// Time out sessions with open transactions after this number of milliseconds
        /// </summary>
        public readonly int? IdleInTransactionSessionTimeout;
        /// <summary>
        /// Activates, in a boolean, the system-wide use of Just-in-Time Compilation (JIT).
        /// </summary>
        public readonly bool? Jit;
        /// <summary>
        /// Causes each action executed by autovacuum to be logged if it ran for at least the specified number of milliseconds. Setting this to zero logs all autovacuum actions. Minus-one (the default) disables logging autovacuum actions.
        /// </summary>
        public readonly int? LogAutovacuumMinDuration;
        /// <summary>
        /// Controls the amount of detail written in the server log for each message that is logged.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresLogErrorVerbosity? LogErrorVerbosity;
        /// <summary>
        /// Selects one of the available log-formats. These can support popular log analyzers like pgbadger, pganalyze, etc.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresLogLinePrefix? LogLinePrefix;
        /// <summary>
        /// Log statements that take more than this number of milliseconds to run. If -1, disables.
        /// </summary>
        public readonly int? LogMinDurationStatement;
        /// <summary>
        /// PostgreSQL maximum number of files that can be open per process.
        /// </summary>
        public readonly int? MaxFilesPerProcess;
        /// <summary>
        /// PostgreSQL maximum locks per transaction. Once increased, this parameter cannot be lowered from its set value.
        /// </summary>
        public readonly int? MaxLocksPerTransaction;
        /// <summary>
        /// PostgreSQL maximum logical replication workers (taken from the pool of max_parallel_workers).
        /// </summary>
        public readonly int? MaxLogicalReplicationWorkers;
        /// <summary>
        /// Sets the maximum number of workers that the system can support for parallel queries.
        /// </summary>
        public readonly int? MaxParallelWorkers;
        /// <summary>
        /// Sets the maximum number of workers that can be started by a single Gather or Gather Merge node.
        /// </summary>
        public readonly int? MaxParallelWorkersPerGather;
        /// <summary>
        /// PostgreSQL maximum predicate locks per transaction.
        /// </summary>
        public readonly int? MaxPredLocksPerTransaction;
        /// <summary>
        /// PostgreSQL maximum prepared transactions. Once increased, this parameter cannot be lowered from its set value.
        /// </summary>
        public readonly int? MaxPreparedTransactions;
        /// <summary>
        /// PostgreSQL maximum replication slots.
        /// </summary>
        public readonly int? MaxReplicationSlots;
        /// <summary>
        /// Maximum depth of the stack in bytes.
        /// </summary>
        public readonly int? MaxStackDepth;
        /// <summary>
        /// Max standby archive delay in milliseconds.
        /// </summary>
        public readonly int? MaxStandbyArchiveDelay;
        /// <summary>
        /// Max standby streaming delay in milliseconds.
        /// </summary>
        public readonly int? MaxStandbyStreamingDelay;
        /// <summary>
        /// PostgreSQL maximum WAL senders. Once increased, this parameter cannot be lowered from its set value.
        /// </summary>
        public readonly int? MaxWalSenders;
        /// <summary>
        /// Sets the maximum number of background processes that the system can support. Once increased, this parameter cannot be lowered from its set value.
        /// </summary>
        public readonly int? MaxWorkerProcesses;
        /// <summary>
        /// Sets the time interval to run pg_partman's scheduled tasks.
        /// </summary>
        public readonly int? PgPartmanBgwInterval;
        /// <summary>
        /// Controls which role to use for pg_partman's scheduled background tasks. Must consist of alpha-numeric characters, dots, underscores, or dashes. May not start with dash or dot. Maximum of 64 characters.
        /// </summary>
        public readonly string? PgPartmanBgwRole;
        /// <summary>
        /// Controls which statements are counted. Specify 'top' to track top-level statements (those issued directly by clients), 'all' to also track nested statements (such as statements invoked within functions), or 'none' to disable statement statistics collection. The default value is top.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresPgStatStatementsTrack? PgStatStatementsTrack;
        /// <summary>
        /// PGBouncer connection pooling settings
        /// </summary>
        public readonly Outputs.Pgbouncer? Pgbouncer;
        /// <summary>
        /// Percentage of total RAM that the database server uses for shared memory buffers.  Valid range is 20-60 (float), which corresponds to 20% - 60%.  This setting adjusts the shared_buffers configuration value.
        /// </summary>
        public readonly double? SharedBuffersPercentage;
        /// <summary>
        /// Enable the pg_stat_monitor extension. &lt;b&gt;Enabling this extension will cause the cluster to be restarted.&lt;/b&gt; When this extension is enabled, pg_stat_statements results for utility commands are unreliable.
        /// </summary>
        public readonly bool? StatMonitorEnable;
        /// <summary>
        /// Synchronous replication type. Note that the service plan also needs to support synchronous replication.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresSynchronousReplication? SynchronousReplication;
        /// <summary>
        /// PostgreSQL temporary file limit in KiB. If -1, sets to unlimited.
        /// </summary>
        public readonly int? TempFileLimit;
        /// <summary>
        /// TimescaleDB extension configuration values
        /// </summary>
        public readonly Outputs.Timescaledb? Timescaledb;
        /// <summary>
        /// PostgreSQL service timezone
        /// </summary>
        public readonly string? Timezone;
        /// <summary>
        /// Specifies the number of bytes reserved to track the currently executing command for each active session.
        /// </summary>
        public readonly int? TrackActivityQuerySize;
        /// <summary>
        /// Record commit time of transactions.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresTrackCommitTimestamp? TrackCommitTimestamp;
        /// <summary>
        /// Enables tracking of function call counts and time used.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresTrackFunctions? TrackFunctions;
        /// <summary>
        /// Enables timing of database I/O calls. This parameter is off by default, because it will repeatedly query the operating system for the current time, which may cause significant overhead on some platforms.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresTrackIoTiming? TrackIoTiming;
        public readonly string? Type;
        /// <summary>
        /// Terminate replication connections that are inactive for longer than this amount of time, in milliseconds. Setting this value to zero disables the timeout. Must be either 0 or between 5000 and 10800000.
        /// </summary>
        public readonly int? WalSenderTimeout;
        /// <summary>
        /// WAL flush interval in milliseconds. Note that setting this value to lower than the default 200ms may negatively impact performance
        /// </summary>
        public readonly int? WalWriterDelay;
        /// <summary>
        /// The maximum amount of memory, in MB, used by a query operation (such as a sort or hash table) before writing to temporary disk files. Default is 1MB + 0.075% of total RAM (up to 32MB).
        /// </summary>
        public readonly int? WorkMem;

        [OutputConstructor]
        private Creategres(
            double? autovacuumAnalyzeScaleFactor,

            int? autovacuumAnalyzeThreshold,

            int? autovacuumFreezeMaxAge,

            int? autovacuumMaxWorkers,

            int? autovacuumNaptime,

            int? autovacuumVacuumCostDelay,

            int? autovacuumVacuumCostLimit,

            double? autovacuumVacuumScaleFactor,

            int? autovacuumVacuumThreshold,

            int? backupHour,

            int? backupMinute,

            int? bgwriterDelay,

            int? bgwriterFlushAfter,

            int? bgwriterLruMaxpages,

            double? bgwriterLruMultiplier,

            int? deadlockTimeout,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresDefaultToastCompression? defaultToastCompression,

            int? idleInTransactionSessionTimeout,

            bool? jit,

            int? logAutovacuumMinDuration,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresLogErrorVerbosity? logErrorVerbosity,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresLogLinePrefix? logLinePrefix,

            int? logMinDurationStatement,

            int? maxFilesPerProcess,

            int? maxLocksPerTransaction,

            int? maxLogicalReplicationWorkers,

            int? maxParallelWorkers,

            int? maxParallelWorkersPerGather,

            int? maxPredLocksPerTransaction,

            int? maxPreparedTransactions,

            int? maxReplicationSlots,

            int? maxStackDepth,

            int? maxStandbyArchiveDelay,

            int? maxStandbyStreamingDelay,

            int? maxWalSenders,

            int? maxWorkerProcesses,

            int? pgPartmanBgwInterval,

            string? pgPartmanBgwRole,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresPgStatStatementsTrack? pgStatStatementsTrack,

            Outputs.Pgbouncer? pgbouncer,

            double? sharedBuffersPercentage,

            bool? statMonitorEnable,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresSynchronousReplication? synchronousReplication,

            int? tempFileLimit,

            Outputs.Timescaledb? timescaledb,

            string? timezone,

            int? trackActivityQuerySize,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresTrackCommitTimestamp? trackCommitTimestamp,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresTrackFunctions? trackFunctions,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.CreategresTrackIoTiming? trackIoTiming,

            string? type,

            int? walSenderTimeout,

            int? walWriterDelay,

            int? workMem)
        {
            AutovacuumAnalyzeScaleFactor = autovacuumAnalyzeScaleFactor;
            AutovacuumAnalyzeThreshold = autovacuumAnalyzeThreshold;
            AutovacuumFreezeMaxAge = autovacuumFreezeMaxAge;
            AutovacuumMaxWorkers = autovacuumMaxWorkers;
            AutovacuumNaptime = autovacuumNaptime;
            AutovacuumVacuumCostDelay = autovacuumVacuumCostDelay;
            AutovacuumVacuumCostLimit = autovacuumVacuumCostLimit;
            AutovacuumVacuumScaleFactor = autovacuumVacuumScaleFactor;
            AutovacuumVacuumThreshold = autovacuumVacuumThreshold;
            BackupHour = backupHour;
            BackupMinute = backupMinute;
            BgwriterDelay = bgwriterDelay;
            BgwriterFlushAfter = bgwriterFlushAfter;
            BgwriterLruMaxpages = bgwriterLruMaxpages;
            BgwriterLruMultiplier = bgwriterLruMultiplier;
            DeadlockTimeout = deadlockTimeout;
            DefaultToastCompression = defaultToastCompression;
            IdleInTransactionSessionTimeout = idleInTransactionSessionTimeout;
            Jit = jit;
            LogAutovacuumMinDuration = logAutovacuumMinDuration;
            LogErrorVerbosity = logErrorVerbosity;
            LogLinePrefix = logLinePrefix;
            LogMinDurationStatement = logMinDurationStatement;
            MaxFilesPerProcess = maxFilesPerProcess;
            MaxLocksPerTransaction = maxLocksPerTransaction;
            MaxLogicalReplicationWorkers = maxLogicalReplicationWorkers;
            MaxParallelWorkers = maxParallelWorkers;
            MaxParallelWorkersPerGather = maxParallelWorkersPerGather;
            MaxPredLocksPerTransaction = maxPredLocksPerTransaction;
            MaxPreparedTransactions = maxPreparedTransactions;
            MaxReplicationSlots = maxReplicationSlots;
            MaxStackDepth = maxStackDepth;
            MaxStandbyArchiveDelay = maxStandbyArchiveDelay;
            MaxStandbyStreamingDelay = maxStandbyStreamingDelay;
            MaxWalSenders = maxWalSenders;
            MaxWorkerProcesses = maxWorkerProcesses;
            PgPartmanBgwInterval = pgPartmanBgwInterval;
            PgPartmanBgwRole = pgPartmanBgwRole;
            PgStatStatementsTrack = pgStatStatementsTrack;
            Pgbouncer = pgbouncer;
            SharedBuffersPercentage = sharedBuffersPercentage;
            StatMonitorEnable = statMonitorEnable;
            SynchronousReplication = synchronousReplication;
            TempFileLimit = tempFileLimit;
            Timescaledb = timescaledb;
            Timezone = timezone;
            TrackActivityQuerySize = trackActivityQuerySize;
            TrackCommitTimestamp = trackCommitTimestamp;
            TrackFunctions = trackFunctions;
            TrackIoTiming = trackIoTiming;
            Type = type;
            WalSenderTimeout = walSenderTimeout;
            WalWriterDelay = walWriterDelay;
            WorkMem = workMem;
        }
    }
}
