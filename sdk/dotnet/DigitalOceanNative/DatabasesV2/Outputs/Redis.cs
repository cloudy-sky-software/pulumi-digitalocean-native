// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.Outputs
{

    [OutputType]
    public sealed class Redis
    {
        /// <summary>
        /// Determines default pub/sub channels' ACL for new users if ACL is not supplied. When this option is not defined, all_channels is assumed to keep backward compatibility. This option doesn't affect Redis configuration acl-pubsub-default.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.RedisRedisAclChannelsDefault? RedisAclChannelsDefault;
        /// <summary>
        /// Redis IO thread count
        /// </summary>
        public readonly int? RedisIoThreads;
        /// <summary>
        /// LFU maxmemory-policy counter decay time in minutes
        /// </summary>
        public readonly int? RedisLfuDecayTime;
        /// <summary>
        /// Counter logarithm factor for volatile-lfu and allkeys-lfu maxmemory-policies
        /// </summary>
        public readonly int? RedisLfuLogFactor;
        /// <summary>
        /// A string specifying the desired eviction policy for the Redis cluster.
        /// 
        /// - `noeviction`: Don't evict any data, returns error when memory limit is reached.
        /// - `allkeys_lru:` Evict any key, least recently used (LRU) first.
        /// - `allkeys_random`: Evict keys in a random order.
        /// - `volatile_lru`: Evict keys with expiration only, least recently used (LRU) first.
        /// - `volatile_random`: Evict keys with expiration only in a random order.
        /// - `volatile_ttl`: Evict keys with expiration only, shortest time-to-live (TTL) first.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.RedisRedisMaxmemoryPolicy? RedisMaxmemoryPolicy;
        /// <summary>
        /// Set notify-keyspace-events option
        /// </summary>
        public readonly string? RedisNotifyKeyspaceEvents;
        /// <summary>
        /// Set number of redis databases. Changing this will cause a restart of redis service.
        /// </summary>
        public readonly int? RedisNumberOfDatabases;
        /// <summary>
        /// When persistence is 'rdb', Redis does RDB dumps each 10 minutes if any key is changed. Also RDB dumps are done according to backup schedule for backup purposes. When persistence is 'off', no RDB dumps and backups are done, so data can be lost at any moment if service is restarted for any reason, or if service is powered off. Also service can't be forked.
        /// </summary>
        public readonly CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.RedisRedisPersistence? RedisPersistence;
        /// <summary>
        /// Set output buffer limit for pub / sub clients in MB. The value is the hard limit, the soft limit is 1/4 of the hard limit. When setting the limit, be mindful of the available memory in the selected service plan.
        /// </summary>
        public readonly int? RedisPubsubClientOutputBufferLimit;
        /// <summary>
        /// Require SSL to access Redis
        /// </summary>
        public readonly bool? RedisSsl;
        /// <summary>
        /// Redis idle connection timeout in seconds
        /// </summary>
        public readonly int? RedisTimeout;
        public readonly string? Type;

        [OutputConstructor]
        private Redis(
            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.RedisRedisAclChannelsDefault? redisAclChannelsDefault,

            int? redisIoThreads,

            int? redisLfuDecayTime,

            int? redisLfuLogFactor,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.RedisRedisMaxmemoryPolicy? redisMaxmemoryPolicy,

            string? redisNotifyKeyspaceEvents,

            int? redisNumberOfDatabases,

            CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2.RedisRedisPersistence? redisPersistence,

            int? redisPubsubClientOutputBufferLimit,

            bool? redisSsl,

            int? redisTimeout,

            string? type)
        {
            RedisAclChannelsDefault = redisAclChannelsDefault;
            RedisIoThreads = redisIoThreads;
            RedisLfuDecayTime = redisLfuDecayTime;
            RedisLfuLogFactor = redisLfuLogFactor;
            RedisMaxmemoryPolicy = redisMaxmemoryPolicy;
            RedisNotifyKeyspaceEvents = redisNotifyKeyspaceEvents;
            RedisNumberOfDatabases = redisNumberOfDatabases;
            RedisPersistence = redisPersistence;
            RedisPubsubClientOutputBufferLimit = redisPubsubClientOutputBufferLimit;
            RedisSsl = redisSsl;
            RedisTimeout = redisTimeout;
            Type = type;
        }
    }
}
