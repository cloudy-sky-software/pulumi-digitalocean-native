// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class GetDatabasesConnectionPool
    {
        public static Task<Outputs.GetDatabasesConnectionPoolProperties> InvokeAsync(GetDatabasesConnectionPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.GetDatabasesConnectionPoolProperties>("digitalocean-native:databases/v2:getDatabasesConnectionPool", args ?? new GetDatabasesConnectionPoolArgs(), options.WithDefaults());

        public static Output<Outputs.GetDatabasesConnectionPoolProperties> Invoke(GetDatabasesConnectionPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.GetDatabasesConnectionPoolProperties>("digitalocean-native:databases/v2:getDatabasesConnectionPool", args ?? new GetDatabasesConnectionPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabasesConnectionPoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public string DatabaseClusterUuid { get; set; } = null!;

        /// <summary>
        /// The name used to identify the connection pool.
        /// </summary>
        [Input("poolName", required: true)]
        public string PoolName { get; set; } = null!;

        public GetDatabasesConnectionPoolArgs()
        {
        }
        public static new GetDatabasesConnectionPoolArgs Empty => new GetDatabasesConnectionPoolArgs();
    }

    public sealed class GetDatabasesConnectionPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public Input<string> DatabaseClusterUuid { get; set; } = null!;

        /// <summary>
        /// The name used to identify the connection pool.
        /// </summary>
        [Input("poolName", required: true)]
        public Input<string> PoolName { get; set; } = null!;

        public GetDatabasesConnectionPoolInvokeArgs()
        {
        }
        public static new GetDatabasesConnectionPoolInvokeArgs Empty => new GetDatabasesConnectionPoolInvokeArgs();
    }
}
