// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class GetDatabasesCluster
    {
        public static Task<GetDatabasesClusterResult> InvokeAsync(GetDatabasesClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabasesClusterResult>("digitalocean-native:databases/v2:getDatabasesCluster", args ?? new GetDatabasesClusterArgs(), options.WithDefaults());

        public static Output<GetDatabasesClusterResult> Invoke(GetDatabasesClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabasesClusterResult>("digitalocean-native:databases/v2:getDatabasesCluster", args ?? new GetDatabasesClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabasesClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public string DatabaseClusterUuid { get; set; } = null!;

        public GetDatabasesClusterArgs()
        {
        }
        public static new GetDatabasesClusterArgs Empty => new GetDatabasesClusterArgs();
    }

    public sealed class GetDatabasesClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public Input<string> DatabaseClusterUuid { get; set; } = null!;

        public GetDatabasesClusterInvokeArgs()
        {
        }
        public static new GetDatabasesClusterInvokeArgs Empty => new GetDatabasesClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabasesClusterResult
    {
        public readonly Outputs.GetDatabasesClusterProperties Items;

        [OutputConstructor]
        private GetDatabasesClusterResult(Outputs.GetDatabasesClusterProperties items)
        {
            Items = items;
        }
    }
}
