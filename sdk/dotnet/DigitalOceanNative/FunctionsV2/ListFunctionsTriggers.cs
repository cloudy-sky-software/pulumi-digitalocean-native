// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.FunctionsV2
{
    public static class ListFunctionsTriggers
    {
        public static Task<Outputs.ListFunctionsTriggersItems> InvokeAsync(ListFunctionsTriggersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.ListFunctionsTriggersItems>("digitalocean-native:functions/v2:listFunctionsTriggers", args ?? new ListFunctionsTriggersArgs(), options.WithDefaults());

        public static Output<Outputs.ListFunctionsTriggersItems> Invoke(ListFunctionsTriggersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.ListFunctionsTriggersItems>("digitalocean-native:functions/v2:listFunctionsTriggers", args ?? new ListFunctionsTriggersInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListFunctionsTriggersArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the namespace to be managed.
        /// </summary>
        [Input("namespaceId", required: true)]
        public string NamespaceId { get; set; } = null!;

        public ListFunctionsTriggersArgs()
        {
        }
        public static new ListFunctionsTriggersArgs Empty => new ListFunctionsTriggersArgs();
    }

    public sealed class ListFunctionsTriggersInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the namespace to be managed.
        /// </summary>
        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        public ListFunctionsTriggersInvokeArgs()
        {
        }
        public static new ListFunctionsTriggersInvokeArgs Empty => new ListFunctionsTriggersInvokeArgs();
    }
}
