// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.KubernetesV2
{
    public static class GetKubernetesAvailableUpgrade
    {
        public static Task<GetKubernetesAvailableUpgradeResult> InvokeAsync(GetKubernetesAvailableUpgradeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubernetesAvailableUpgradeResult>("digitalocean-native:kubernetes/v2:getKubernetesAvailableUpgrade", args ?? new GetKubernetesAvailableUpgradeArgs(), options.WithDefaults());

        public static Output<GetKubernetesAvailableUpgradeResult> Invoke(GetKubernetesAvailableUpgradeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubernetesAvailableUpgradeResult>("digitalocean-native:kubernetes/v2:getKubernetesAvailableUpgrade", args ?? new GetKubernetesAvailableUpgradeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesAvailableUpgradeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique ID that can be used to reference a Kubernetes cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        public GetKubernetesAvailableUpgradeArgs()
        {
        }
        public static new GetKubernetesAvailableUpgradeArgs Empty => new GetKubernetesAvailableUpgradeArgs();
    }

    public sealed class GetKubernetesAvailableUpgradeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique ID that can be used to reference a Kubernetes cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        public GetKubernetesAvailableUpgradeInvokeArgs()
        {
        }
        public static new GetKubernetesAvailableUpgradeInvokeArgs Empty => new GetKubernetesAvailableUpgradeInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubernetesAvailableUpgradeResult
    {
        public readonly Outputs.GetKubernetesAvailableUpgradeProperties Items;

        [OutputConstructor]
        private GetKubernetesAvailableUpgradeResult(Outputs.GetKubernetesAvailableUpgradeProperties items)
        {
            Items = items;
        }
    }
}
