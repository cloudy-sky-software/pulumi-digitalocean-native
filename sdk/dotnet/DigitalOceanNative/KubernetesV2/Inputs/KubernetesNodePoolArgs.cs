// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.KubernetesV2.Inputs
{

    public sealed class KubernetesNodePoolArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A boolean value indicating whether auto-scaling is enabled for this node pool.
        /// </summary>
        [Input("autoScale")]
        public Input<bool>? AutoScale { get; set; }

        /// <summary>
        /// The number of Droplet instances in the node pool.
        /// </summary>
        [Input("count")]
        public Input<int>? Count { get; set; }

        /// <summary>
        /// A unique ID that can be used to identify and reference a specific node pool.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
        /// </summary>
        [Input("labels")]
        public Input<object>? Labels { get; set; }

        /// <summary>
        /// The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
        /// </summary>
        [Input("maxNodes")]
        public Input<int>? MaxNodes { get; set; }

        /// <summary>
        /// The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
        /// </summary>
        [Input("minNodes")]
        public Input<int>? MinNodes { get; set; }

        /// <summary>
        /// A human-readable name for the node pool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nodes")]
        private InputList<Inputs.NodeArgs>? _nodes;

        /// <summary>
        /// An object specifying the details of a specific worker node in a node pool.
        /// </summary>
        public InputList<Inputs.NodeArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.NodeArgs>());
            set => _nodes = value;
        }

        /// <summary>
        /// The slug identifier for the type of Droplet used as workers in the node pool.
        /// </summary>
        [Input("size")]
        public Input<string>? Size { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("taints")]
        private InputList<Inputs.KubernetesNodePoolTaintArgs>? _taints;

        /// <summary>
        /// An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
        /// </summary>
        public InputList<Inputs.KubernetesNodePoolTaintArgs> Taints
        {
            get => _taints ?? (_taints = new InputList<Inputs.KubernetesNodePoolTaintArgs>());
            set => _taints = value;
        }

        public KubernetesNodePoolArgs()
        {
        }
        public static new KubernetesNodePoolArgs Empty => new KubernetesNodePoolArgs();
    }
}
