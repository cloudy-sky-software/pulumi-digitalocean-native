// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.KubernetesV2
{
    public static class GetKubernetesClusterUser
    {
        public static Task<Outputs.User> InvokeAsync(GetKubernetesClusterUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<Outputs.User>("digitalocean-native:kubernetes/v2:getKubernetesClusterUser", args ?? new GetKubernetesClusterUserArgs(), options.WithDefaults());

        public static Output<Outputs.User> Invoke(GetKubernetesClusterUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<Outputs.User>("digitalocean-native:kubernetes/v2:getKubernetesClusterUser", args ?? new GetKubernetesClusterUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubernetesClusterUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique ID that can be used to reference a Kubernetes cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        public GetKubernetesClusterUserArgs()
        {
        }
        public static new GetKubernetesClusterUserArgs Empty => new GetKubernetesClusterUserArgs();
    }

    public sealed class GetKubernetesClusterUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique ID that can be used to reference a Kubernetes cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        public GetKubernetesClusterUserInvokeArgs()
        {
        }
        public static new GetKubernetesClusterUserInvokeArgs Empty => new GetKubernetesClusterUserInvokeArgs();
    }
}
