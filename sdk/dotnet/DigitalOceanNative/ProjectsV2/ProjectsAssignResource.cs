// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace CloudySkySoftware.Pulumi.DigitalOceanNative.ProjectsV2
{
    [DigitalOceanNativeResourceType("digitalocean-native:projects/v2:ProjectsAssignResource")]
    public partial class ProjectsAssignResource : global::Pulumi.CustomResource
    {
        [Output("resources")]
        public Output<ImmutableArray<Outputs.Resource>> Resources { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectsAssignResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectsAssignResource(string name, ProjectsAssignResourceArgs? args = null, CustomResourceOptions? options = null)
            : base("digitalocean-native:projects/v2:ProjectsAssignResource", name, args ?? new ProjectsAssignResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectsAssignResource(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:projects/v2:ProjectsAssignResource", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectsAssignResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectsAssignResource Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ProjectsAssignResource(name, id, options);
        }
    }

    public sealed class ProjectsAssignResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A unique identifier for a project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("resources")]
        private InputList<string>? _resources;

        /// <summary>
        /// A list of uniform resource names (URNs) to be added to a project.
        /// </summary>
        public InputList<string> Resources
        {
            get => _resources ?? (_resources = new InputList<string>());
            set => _resources = value;
        }

        public ProjectsAssignResourceArgs()
        {
        }
        public static new ProjectsAssignResourceArgs Empty => new ProjectsAssignResourceArgs();
    }
}
