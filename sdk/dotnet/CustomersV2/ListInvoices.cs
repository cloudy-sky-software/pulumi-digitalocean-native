// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.CustomersV2
{
    public static class ListInvoices
    {
        public static Task<ListInvoicesResult> InvokeAsync(ListInvoicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListInvoicesResult>("digitalocean-native:customers/v2:listInvoices", args ?? new ListInvoicesArgs(), options.WithDefaults());

        public static Output<ListInvoicesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListInvoicesResult>("digitalocean-native:customers/v2:listInvoices", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListInvoicesArgs : global::Pulumi.InvokeArgs
    {
        public ListInvoicesArgs()
        {
        }
        public static new ListInvoicesArgs Empty => new ListInvoicesArgs();
    }


    [OutputType]
    public sealed class ListInvoicesResult
    {
        public readonly Outputs.ListInvoicesItems Items;

        [OutputConstructor]
        private ListInvoicesResult(Outputs.ListInvoicesItems items)
        {
            Items = items;
        }
    }
}
