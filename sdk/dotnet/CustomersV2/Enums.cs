// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.DigitalOceanNative.CustomersV2
{
    /// <summary>
    /// Type of billing history entry.
    /// </summary>
    [EnumType]
    public readonly struct BillingHistoryType : IEquatable<BillingHistoryType>
    {
        private readonly string _value;

        private BillingHistoryType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static BillingHistoryType ACHFailure { get; } = new BillingHistoryType("ACHFailure");
        public static BillingHistoryType Adjustment { get; } = new BillingHistoryType("Adjustment");
        public static BillingHistoryType AttemptFailed { get; } = new BillingHistoryType("AttemptFailed");
        public static BillingHistoryType Chargeback { get; } = new BillingHistoryType("Chargeback");
        public static BillingHistoryType Credit { get; } = new BillingHistoryType("Credit");
        public static BillingHistoryType CreditExpiration { get; } = new BillingHistoryType("CreditExpiration");
        public static BillingHistoryType Invoice { get; } = new BillingHistoryType("Invoice");
        public static BillingHistoryType Payment { get; } = new BillingHistoryType("Payment");
        public static BillingHistoryType Refund { get; } = new BillingHistoryType("Refund");
        public static BillingHistoryType Reversal { get; } = new BillingHistoryType("Reversal");

        public static bool operator ==(BillingHistoryType left, BillingHistoryType right) => left.Equals(right);
        public static bool operator !=(BillingHistoryType left, BillingHistoryType right) => !left.Equals(right);

        public static explicit operator string(BillingHistoryType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is BillingHistoryType other && Equals(other);
        public bool Equals(BillingHistoryType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
