// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.ImagesV2
{
    [DigitalOceanNativeResourceType("digitalocean-native:images/v2:ImagesCustom")]
    public partial class ImagesCustom : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An optional free-form text field to describe an image.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
        /// </summary>
        [Output("distribution")]
        public Output<Pulumi.DigitalOceanNative.ImagesV2.ImagesCustomImageUpdateDistribution?> Distribution { get; private set; } = null!;

        [Output("image")]
        public Output<Outputs.Image?> Image { get; private set; } = null!;

        /// <summary>
        /// The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The slug identifier for the region where the resource will initially be  available.
        /// </summary>
        [Output("region")]
        public Output<Pulumi.DigitalOceanNative.ImagesV2.ImagesCustomPropertiesRegion> Region { get; private set; } = null!;

        /// <summary>
        /// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a ImagesCustom resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImagesCustom(string name, ImagesCustomArgs? args = null, CustomResourceOptions? options = null)
            : base("digitalocean-native:images/v2:ImagesCustom", name, args ?? new ImagesCustomArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImagesCustom(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:images/v2:ImagesCustom", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImagesCustom resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImagesCustom Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ImagesCustom(name, id, options);
        }
    }

    public sealed class ImagesCustomArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional free-form text field to describe an image.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
        /// </summary>
        [Input("distribution")]
        public Input<Pulumi.DigitalOceanNative.ImagesV2.ImagesCustomImageUpdateDistribution>? Distribution { get; set; }

        /// <summary>
        /// The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The slug identifier for the region where the resource will initially be  available.
        /// </summary>
        [Input("region")]
        public Input<Pulumi.DigitalOceanNative.ImagesV2.ImagesCustomPropertiesRegion>? Region { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public ImagesCustomArgs()
        {
        }
        public static new ImagesCustomArgs Empty => new ImagesCustomArgs();
    }
}
