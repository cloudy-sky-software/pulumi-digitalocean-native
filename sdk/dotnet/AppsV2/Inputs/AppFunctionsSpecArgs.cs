// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.AppsV2.Inputs
{

    public sealed class AppFunctionsSpecArgs : global::Pulumi.ResourceArgs
    {
        [Input("alerts")]
        private InputList<Inputs.AppAlertSpecArgs>? _alerts;
        public InputList<Inputs.AppAlertSpecArgs> Alerts
        {
            get => _alerts ?? (_alerts = new InputList<Inputs.AppAlertSpecArgs>());
            set => _alerts = value;
        }

        [Input("cors")]
        public Input<Inputs.AppsCorsPolicyArgs>? Cors { get; set; }

        [Input("envs")]
        private InputList<Inputs.AppVariableDefinitionArgs>? _envs;

        /// <summary>
        /// A list of environment variables made available to the component.
        /// </summary>
        public InputList<Inputs.AppVariableDefinitionArgs> Envs
        {
            get => _envs ?? (_envs = new InputList<Inputs.AppVariableDefinitionArgs>());
            set => _envs = value;
        }

        [Input("git")]
        public Input<Inputs.AppsGitSourceSpecArgs>? Git { get; set; }

        [Input("github")]
        public Input<Inputs.AppsGithubSourceSpecArgs>? Github { get; set; }

        [Input("gitlab")]
        public Input<Inputs.AppsGitlabSourceSpecArgs>? Gitlab { get; set; }

        [Input("logDestinations")]
        public Input<Inputs.AppLogDestinationDefinitionArgs>? LogDestinations { get; set; }

        /// <summary>
        /// The name. Must be unique across all components within the same app.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("routes")]
        private InputList<Inputs.AppRouteSpecArgs>? _routes;

        /// <summary>
        /// A list of HTTP routes that should be routed to this component.
        /// </summary>
        public InputList<Inputs.AppRouteSpecArgs> Routes
        {
            get => _routes ?? (_routes = new InputList<Inputs.AppRouteSpecArgs>());
            set => _routes = value;
        }

        /// <summary>
        /// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
        /// </summary>
        [Input("sourceDir")]
        public Input<string>? SourceDir { get; set; }

        public AppFunctionsSpecArgs()
        {
        }
        public static new AppFunctionsSpecArgs Empty => new AppFunctionsSpecArgs();
    }
}
