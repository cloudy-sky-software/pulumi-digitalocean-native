// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.LoadBalancersV2.Outputs
{

    [OutputType]
    public sealed class LoadBalancer
    {
        /// <summary>
        /// This field has been deprecated. You can no longer specify an algorithm for load balancers.
        /// </summary>
        public readonly Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseAlgorithm? Algorithm;
        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the load balancer was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer.
        /// </summary>
        public readonly bool? DisableLetsEncryptDnsRecords;
        /// <summary>
        /// A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.
        /// </summary>
        public readonly bool? EnableBackendKeepalive;
        /// <summary>
        /// A boolean value indicating whether PROXY Protocol is in use.
        /// </summary>
        public readonly bool? EnableProxyProtocol;
        /// <summary>
        /// An object specifying allow and deny rules to control traffic to the load balancer.
        /// </summary>
        public readonly Outputs.LbFirewall? Firewall;
        /// <summary>
        /// An array of objects specifying the forwarding rules for a load balancer.
        /// </summary>
        public readonly ImmutableArray<Outputs.ForwardingRule> ForwardingRules;
        /// <summary>
        /// An object specifying health check settings for the load balancer.
        /// </summary>
        public readonly Outputs.HealthCheck? HealthCheck;
        /// <summary>
        /// An integer value which configures the idle timeout for HTTP requests to the target droplets.
        /// </summary>
        public readonly int? HttpIdleTimeoutSeconds;
        /// <summary>
        /// A unique ID that can be used to identify and reference a load balancer.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// An attribute containing the public-facing IP address of the load balancer.
        /// </summary>
        public readonly string? Ip;
        /// <summary>
        /// A human-readable name for a load balancer instance.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The ID of the project that the load balancer is associated with. If no ID is provided at creation, the load balancer associates with the user's default project. If an invalid project ID is provided, the load balancer will not be created.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.
        /// </summary>
        public readonly bool? RedirectHttpToHttps;
        /// <summary>
        /// This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.
        /// * `lb-small` = 1 node
        /// * `lb-medium` = 3 nodes
        /// * `lb-large` = 6 nodes
        /// 
        /// You can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.
        /// </summary>
        public readonly Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseSize? Size;
        /// <summary>
        /// How many nodes the load balancer contains. Each additional node increases the load balancer's ability to manage more connections. Load balancers can be scaled up or down, and you can change the number of nodes after creation up to once per hour. This field is currently not available in the AMS2, NYC2, or SFO1 regions. Use the `size` field to scale load balancers that reside in these regions.
        /// </summary>
        public readonly int? SizeUnit;
        /// <summary>
        /// A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
        /// </summary>
        public readonly Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseStatus? Status;
        /// <summary>
        /// An object specifying sticky sessions settings for the load balancer.
        /// </summary>
        public readonly Outputs.StickySessions? StickySessions;
        /// <summary>
        /// The name of a Droplet tag corresponding to Droplets assigned to the load balancer.
        /// </summary>
        public readonly string? Tag;
        /// <summary>
        /// A string specifying the UUID of the VPC to which the load balancer is assigned.
        /// </summary>
        public readonly string? VpcUuid;

        [OutputConstructor]
        private LoadBalancer(
            Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseAlgorithm? algorithm,

            string? createdAt,

            bool? disableLetsEncryptDnsRecords,

            bool? enableBackendKeepalive,

            bool? enableProxyProtocol,

            Outputs.LbFirewall? firewall,

            ImmutableArray<Outputs.ForwardingRule> forwardingRules,

            Outputs.HealthCheck? healthCheck,

            int? httpIdleTimeoutSeconds,

            string? id,

            string? ip,

            string? name,

            string? projectId,

            bool? redirectHttpToHttps,

            Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseSize? size,

            int? sizeUnit,

            Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseStatus? status,

            Outputs.StickySessions? stickySessions,

            string? tag,

            string? vpcUuid)
        {
            Algorithm = algorithm;
            CreatedAt = createdAt;
            DisableLetsEncryptDnsRecords = disableLetsEncryptDnsRecords;
            EnableBackendKeepalive = enableBackendKeepalive;
            EnableProxyProtocol = enableProxyProtocol;
            Firewall = firewall;
            ForwardingRules = forwardingRules;
            HealthCheck = healthCheck;
            HttpIdleTimeoutSeconds = httpIdleTimeoutSeconds;
            Id = id;
            Ip = ip;
            Name = name;
            ProjectId = projectId;
            RedirectHttpToHttps = redirectHttpToHttps;
            Size = size;
            SizeUnit = sizeUnit;
            Status = status;
            StickySessions = stickySessions;
            Tag = tag;
            VpcUuid = vpcUuid;
        }
    }
}
