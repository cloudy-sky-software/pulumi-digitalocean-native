// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.LoadBalancersV2
{
    public static class ListLoadBalancers
    {
        public static Task<ListLoadBalancersResult> InvokeAsync(ListLoadBalancersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListLoadBalancersResult>("digitalocean-native:load_balancers/v2:listLoadBalancers", args ?? new ListLoadBalancersArgs(), options.WithDefaults());

        public static Output<ListLoadBalancersResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListLoadBalancersResult>("digitalocean-native:load_balancers/v2:listLoadBalancers", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListLoadBalancersArgs : global::Pulumi.InvokeArgs
    {
        public ListLoadBalancersArgs()
        {
        }
        public static new ListLoadBalancersArgs Empty => new ListLoadBalancersArgs();
    }


    [OutputType]
    public sealed class ListLoadBalancersResult
    {
        public readonly Outputs.ListLoadBalancers Items;

        [OutputConstructor]
        private ListLoadBalancersResult(Outputs.ListLoadBalancers items)
        {
            Items = items;
        }
    }
}
