// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.LoadBalancersV2.Inputs
{

    /// <summary>
    /// An object specifying a forwarding rule for a load balancer.
    /// </summary>
    public sealed class ForwardingRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the TLS certificate used for SSL termination if enabled.
        /// </summary>
        [Input("certificateId")]
        public Input<string>? CertificateId { get; set; }

        /// <summary>
        /// An integer representing the port on which the load balancer instance will listen.
        /// </summary>
        [Input("entryPort", required: true)]
        public Input<int> EntryPort { get; set; } = null!;

        /// <summary>
        /// The protocol used for traffic to the load balancer. The possible values are: `http`, `https`, `http2`, `http3`, `tcp`, or `udp`. If you set the  `entry_protocol` to `udp`, the `target_protocol` must be set to `udp`.  When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
        /// </summary>
        [Input("entryProtocol", required: true)]
        public Input<Pulumi.DigitalOceanNative.LoadBalancersV2.ForwardingRuleEntryProtocol> EntryProtocol { get; set; } = null!;

        /// <summary>
        /// An integer representing the port on the backend Droplets to which the load balancer will send traffic.
        /// </summary>
        [Input("targetPort", required: true)]
        public Input<int> TargetPort { get; set; } = null!;

        /// <summary>
        /// The protocol used for traffic from the load balancer to the backend Droplets. The possible values are: `http`, `https`, `http2`, `tcp`, or `udp`. If you set the `target_protocol` to `udp`, the `entry_protocol` must be set to  `udp`. When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
        /// </summary>
        [Input("targetProtocol", required: true)]
        public Input<Pulumi.DigitalOceanNative.LoadBalancersV2.ForwardingRuleTargetProtocol> TargetProtocol { get; set; } = null!;

        /// <summary>
        /// A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets.
        /// </summary>
        [Input("tlsPassthrough")]
        public Input<bool>? TlsPassthrough { get; set; }

        public ForwardingRuleArgs()
        {
        }
        public static new ForwardingRuleArgs Empty => new ForwardingRuleArgs();
    }
}
