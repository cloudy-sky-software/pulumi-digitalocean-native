// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.LoadBalancersV2
{
    [DigitalOceanNativeResourceType("digitalocean-native:load_balancers/v2:LoadBalancer")]
    public partial class LoadBalancer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This field has been deprecated. You can no longer specify an algorithm for load balancers.
        /// </summary>
        [Output("algorithm")]
        public Output<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseAlgorithm?> Algorithm { get; private set; } = null!;

        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the load balancer was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer.
        /// </summary>
        [Output("disableLetsEncryptDnsRecords")]
        public Output<bool?> DisableLetsEncryptDnsRecords { get; private set; } = null!;

        /// <summary>
        /// A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.
        /// </summary>
        [Output("enableBackendKeepalive")]
        public Output<bool?> EnableBackendKeepalive { get; private set; } = null!;

        /// <summary>
        /// A boolean value indicating whether PROXY Protocol is in use.
        /// </summary>
        [Output("enableProxyProtocol")]
        public Output<bool?> EnableProxyProtocol { get; private set; } = null!;

        /// <summary>
        /// An object specifying allow and deny rules to control traffic to the load balancer.
        /// </summary>
        [Output("firewall")]
        public Output<Outputs.LbFirewall?> Firewall { get; private set; } = null!;

        /// <summary>
        /// An array of objects specifying the forwarding rules for a load balancer.
        /// </summary>
        [Output("forwardingRules")]
        public Output<ImmutableArray<Outputs.ForwardingRule>> ForwardingRules { get; private set; } = null!;

        /// <summary>
        /// An object specifying health check settings for the load balancer.
        /// </summary>
        [Output("healthCheck")]
        public Output<Outputs.HealthCheck?> HealthCheck { get; private set; } = null!;

        /// <summary>
        /// An integer value which configures the idle timeout for HTTP requests to the target droplets.
        /// </summary>
        [Output("httpIdleTimeoutSeconds")]
        public Output<int?> HttpIdleTimeoutSeconds { get; private set; } = null!;

        /// <summary>
        /// An attribute containing the public-facing IP address of the load balancer.
        /// </summary>
        [Output("ip")]
        public Output<string?> Ip { get; private set; } = null!;

        [Output("loadBalancer")]
        public Output<Outputs.LoadBalancer?> LoadBalancerValue { get; private set; } = null!;

        /// <summary>
        /// A human-readable name for a load balancer instance.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project that the load balancer is associated with. If no ID is provided at creation, the load balancer associates with the user's default project. If an invalid project ID is provided, the load balancer will not be created.
        /// </summary>
        [Output("projectId")]
        public Output<string?> ProjectId { get; private set; } = null!;

        /// <summary>
        /// A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.
        /// </summary>
        [Output("redirectHttpToHttps")]
        public Output<bool?> RedirectHttpToHttps { get; private set; } = null!;

        /// <summary>
        /// The slug identifier for the region where the resource will initially be  available.
        /// </summary>
        [Output("region")]
        public Output<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerPropertiesRegionEnum?> Region { get; private set; } = null!;

        /// <summary>
        /// This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.
        /// * `lb-small` = 1 node
        /// * `lb-medium` = 3 nodes
        /// * `lb-large` = 6 nodes
        /// 
        /// You can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.
        /// </summary>
        [Output("size")]
        public Output<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseSize?> Size { get; private set; } = null!;

        /// <summary>
        /// How many nodes the load balancer contains. Each additional node increases the load balancer's ability to manage more connections. Load balancers can be scaled up or down, and you can change the number of nodes after creation up to once per hour. This field is currently not available in the AMS2, NYC2, or SFO1 regions. Use the `size` field to scale load balancers that reside in these regions.
        /// </summary>
        [Output("sizeUnit")]
        public Output<int?> SizeUnit { get; private set; } = null!;

        /// <summary>
        /// A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseStatus?> Status { get; private set; } = null!;

        /// <summary>
        /// An object specifying sticky sessions settings for the load balancer.
        /// </summary>
        [Output("stickySessions")]
        public Output<Outputs.StickySessions?> StickySessions { get; private set; } = null!;

        /// <summary>
        /// A string specifying the UUID of the VPC to which the load balancer is assigned.
        /// </summary>
        [Output("vpcUuid")]
        public Output<string?> VpcUuid { get; private set; } = null!;


        /// <summary>
        /// Create a LoadBalancer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadBalancer(string name, LoadBalancerArgs args, CustomResourceOptions? options = null)
            : base("digitalocean-native:load_balancers/v2:LoadBalancer", name, args ?? new LoadBalancerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadBalancer(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:load_balancers/v2:LoadBalancer", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadBalancer Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new LoadBalancer(name, id, options);
        }
    }

    public sealed class LoadBalancerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This field has been deprecated. You can no longer specify an algorithm for load balancers.
        /// </summary>
        [Input("algorithm")]
        public Input<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseAlgorithm>? Algorithm { get; set; }

        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the load balancer was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// A boolean value indicating whether to disable automatic DNS record creation for Let's Encrypt certificates that are added to the load balancer.
        /// </summary>
        [Input("disableLetsEncryptDnsRecords")]
        public Input<bool>? DisableLetsEncryptDnsRecords { get; set; }

        /// <summary>
        /// A boolean value indicating whether HTTP keepalive connections are maintained to target Droplets.
        /// </summary>
        [Input("enableBackendKeepalive")]
        public Input<bool>? EnableBackendKeepalive { get; set; }

        /// <summary>
        /// A boolean value indicating whether PROXY Protocol is in use.
        /// </summary>
        [Input("enableProxyProtocol")]
        public Input<bool>? EnableProxyProtocol { get; set; }

        /// <summary>
        /// An object specifying allow and deny rules to control traffic to the load balancer.
        /// </summary>
        [Input("firewall")]
        public Input<Inputs.LbFirewallArgs>? Firewall { get; set; }

        [Input("forwardingRules", required: true)]
        private InputList<Inputs.ForwardingRuleArgs>? _forwardingRules;

        /// <summary>
        /// An array of objects specifying the forwarding rules for a load balancer.
        /// </summary>
        public InputList<Inputs.ForwardingRuleArgs> ForwardingRules
        {
            get => _forwardingRules ?? (_forwardingRules = new InputList<Inputs.ForwardingRuleArgs>());
            set => _forwardingRules = value;
        }

        /// <summary>
        /// An object specifying health check settings for the load balancer.
        /// </summary>
        [Input("healthCheck")]
        public Input<Inputs.HealthCheckArgs>? HealthCheck { get; set; }

        /// <summary>
        /// An integer value which configures the idle timeout for HTTP requests to the target droplets.
        /// </summary>
        [Input("httpIdleTimeoutSeconds")]
        public Input<int>? HttpIdleTimeoutSeconds { get; set; }

        /// <summary>
        /// An attribute containing the public-facing IP address of the load balancer.
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// A human-readable name for a load balancer instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project that the load balancer is associated with. If no ID is provided at creation, the load balancer associates with the user's default project. If an invalid project ID is provided, the load balancer will not be created.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// A boolean value indicating whether HTTP requests to the load balancer on port 80 will be redirected to HTTPS on port 443.
        /// </summary>
        [Input("redirectHttpToHttps")]
        public Input<bool>? RedirectHttpToHttps { get; set; }

        /// <summary>
        /// The slug identifier for the region where the resource will initially be  available.
        /// </summary>
        [Input("region")]
        public Input<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerPropertiesRegionEnum>? Region { get; set; }

        /// <summary>
        /// This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.
        /// * `lb-small` = 1 node
        /// * `lb-medium` = 3 nodes
        /// * `lb-large` = 6 nodes
        /// 
        /// You can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.
        /// </summary>
        [Input("size")]
        public Input<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseSize>? Size { get; set; }

        /// <summary>
        /// How many nodes the load balancer contains. Each additional node increases the load balancer's ability to manage more connections. Load balancers can be scaled up or down, and you can change the number of nodes after creation up to once per hour. This field is currently not available in the AMS2, NYC2, or SFO1 regions. Use the `size` field to scale load balancers that reside in these regions.
        /// </summary>
        [Input("sizeUnit")]
        public Input<int>? SizeUnit { get; set; }

        /// <summary>
        /// A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
        /// </summary>
        [Input("status")]
        public Input<Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseStatus>? Status { get; set; }

        /// <summary>
        /// An object specifying sticky sessions settings for the load balancer.
        /// </summary>
        [Input("stickySessions")]
        public Input<Inputs.StickySessionsArgs>? StickySessions { get; set; }

        /// <summary>
        /// A string specifying the UUID of the VPC to which the load balancer is assigned.
        /// </summary>
        [Input("vpcUuid")]
        public Input<string>? VpcUuid { get; set; }

        public LoadBalancerArgs()
        {
            Algorithm = Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseAlgorithm.RoundRobin;
            DisableLetsEncryptDnsRecords = false;
            EnableBackendKeepalive = false;
            EnableProxyProtocol = false;
            HttpIdleTimeoutSeconds = 60;
            RedirectHttpToHttps = false;
            Size = Pulumi.DigitalOceanNative.LoadBalancersV2.LoadBalancerBaseSize.LbSmall;
            SizeUnit = 1;
        }
        public static new LoadBalancerArgs Empty => new LoadBalancerArgs();
    }
}
