// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DropletsV2
{
    public static class ListDroplets
    {
        public static Task<ListDropletsResult> InvokeAsync(ListDropletsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDropletsResult>("digitalocean-native:droplets/v2:listDroplets", args ?? new ListDropletsArgs(), options.WithDefaults());

        public static Output<ListDropletsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDropletsResult>("digitalocean-native:droplets/v2:listDroplets", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListDropletsArgs : global::Pulumi.InvokeArgs
    {
        public ListDropletsArgs()
        {
        }
        public static new ListDropletsArgs Empty => new ListDropletsArgs();
    }


    [OutputType]
    public sealed class ListDropletsResult
    {
        public readonly Outputs.ListDroplets Items;

        [OutputConstructor]
        private ListDropletsResult(Outputs.ListDroplets items)
        {
            Items = items;
        }
    }
}
