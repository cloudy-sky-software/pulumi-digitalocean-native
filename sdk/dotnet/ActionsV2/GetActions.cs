// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.ActionsV2
{
    public static class GetActions
    {
        public static Task<GetActionsResult> InvokeAsync(GetActionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetActionsResult>("digitalocean-native:actions/v2:getActions", args ?? new GetActionsArgs(), options.WithDefaults());

        public static Output<GetActionsResult> Invoke(GetActionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetActionsResult>("digitalocean-native:actions/v2:getActions", args ?? new GetActionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique numeric ID that can be used to identify and reference an action.
        /// </summary>
        [Input("actionId", required: true)]
        public string ActionId { get; set; } = null!;

        public GetActionsArgs()
        {
        }
        public static new GetActionsArgs Empty => new GetActionsArgs();
    }

    public sealed class GetActionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique numeric ID that can be used to identify and reference an action.
        /// </summary>
        [Input("actionId", required: true)]
        public Input<string> ActionId { get; set; } = null!;

        public GetActionsInvokeArgs()
        {
        }
        public static new GetActionsInvokeArgs Empty => new GetActionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetActionsResult
    {
        public readonly Outputs.GetActionsProperties Items;

        [OutputConstructor]
        private GetActionsResult(Outputs.GetActionsProperties items)
        {
            Items = items;
        }
    }
}
