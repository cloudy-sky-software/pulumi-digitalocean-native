// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class GetDatabasesMigrationStatus
    {
        public static Task<GetDatabasesMigrationStatusResult> InvokeAsync(GetDatabasesMigrationStatusArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabasesMigrationStatusResult>("digitalocean-native:databases/v2:getDatabasesMigrationStatus", args ?? new GetDatabasesMigrationStatusArgs(), options.WithDefaults());

        public static Output<GetDatabasesMigrationStatusResult> Invoke(GetDatabasesMigrationStatusInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabasesMigrationStatusResult>("digitalocean-native:databases/v2:getDatabasesMigrationStatus", args ?? new GetDatabasesMigrationStatusInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabasesMigrationStatusArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public string DatabaseClusterUuid { get; set; } = null!;

        public GetDatabasesMigrationStatusArgs()
        {
        }
        public static new GetDatabasesMigrationStatusArgs Empty => new GetDatabasesMigrationStatusArgs();
    }

    public sealed class GetDatabasesMigrationStatusInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public Input<string> DatabaseClusterUuid { get; set; } = null!;

        public GetDatabasesMigrationStatusInvokeArgs()
        {
        }
        public static new GetDatabasesMigrationStatusInvokeArgs Empty => new GetDatabasesMigrationStatusInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabasesMigrationStatusResult
    {
        public readonly Outputs.OnlineMigration Items;

        [OutputConstructor]
        private GetDatabasesMigrationStatusResult(Outputs.OnlineMigration items)
        {
            Items = items;
        }
    }
}
