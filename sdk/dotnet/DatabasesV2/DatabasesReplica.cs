// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DatabasesV2
{
    [DigitalOceanNativeResourceType("digitalocean-native:databases/v2:DatabasesReplica")]
    public partial class DatabasesReplica : global::Pulumi.CustomResource
    {
        [Output("connection")]
        public Output<Outputs.DatabaseReplicaConnection?> Connection { get; private set; } = null!;

        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the database cluster was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The name to give the read-only replicating
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("privateConnection")]
        public Output<Outputs.DatabaseReplicaPrivateConnection?> PrivateConnection { get; private set; } = null!;

        /// <summary>
        /// A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account's default VPC for the region.
        /// </summary>
        [Output("privateNetworkUuid")]
        public Output<string?> PrivateNetworkUuid { get; private set; } = null!;

        /// <summary>
        /// A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        [Output("replica")]
        public Output<Outputs.DatabaseReplica?> Replica { get; private set; } = null!;

        /// <summary>
        /// A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating.
        /// </summary>
        [Output("size")]
        public Output<string> Size { get; private set; } = null!;

        /// <summary>
        /// A string representing the current status of the database cluster.
        /// </summary>
        [Output("status")]
        public Output<Pulumi.DigitalOceanNative.DatabasesV2.DatabaseReplicaStatus?> Status { get; private set; } = null!;

        /// <summary>
        /// A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DatabasesReplica resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabasesReplica(string name, DatabasesReplicaArgs args, CustomResourceOptions? options = null)
            : base("digitalocean-native:databases/v2:DatabasesReplica", name, args ?? new DatabasesReplicaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatabasesReplica(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:databases/v2:DatabasesReplica", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabasesReplica resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabasesReplica Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DatabasesReplica(name, id, options);
        }
    }

    public sealed class DatabasesReplicaArgs : global::Pulumi.ResourceArgs
    {
        [Input("connection")]
        public Input<Inputs.DatabaseReplicaConnectionArgs>? Connection { get; set; }

        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the database cluster was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid")]
        public Input<string>? DatabaseClusterUuid { get; set; }

        /// <summary>
        /// The name to give the read-only replicating
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("privateConnection")]
        public Input<Inputs.DatabaseReplicaPrivateConnectionArgs>? PrivateConnection { get; set; }

        /// <summary>
        /// A string specifying the UUID of the VPC to which the read-only replica will be assigned. If excluded, the replica will be assigned to your account's default VPC for the region.
        /// </summary>
        [Input("privateNetworkUuid")]
        public Input<string>? PrivateNetworkUuid { get; set; }

        /// <summary>
        /// A slug identifier for the region where the read-only replica will be located. If excluded, the replica will be placed in the same region as the cluster.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A slug identifier representing the size of the node for the read-only replica. The size of the replica must be at least as large as the node size for the database cluster from which it is replicating.
        /// </summary>
        [Input("size")]
        public Input<string>? Size { get; set; }

        /// <summary>
        /// A string representing the current status of the database cluster.
        /// </summary>
        [Input("status")]
        public Input<Pulumi.DigitalOceanNative.DatabasesV2.DatabaseReplicaStatus>? Status { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A flat array of tag names as strings to apply to the read-only replica after it is created. Tag names can either be existing or new tags.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public DatabasesReplicaArgs()
        {
        }
        public static new DatabasesReplicaArgs Empty => new DatabasesReplicaArgs();
    }
}
