// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class ListDatabasesClusters
    {
        public static Task<ListDatabasesClustersResult> InvokeAsync(ListDatabasesClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDatabasesClustersResult>("digitalocean-native:databases/v2:listDatabasesClusters", args ?? new ListDatabasesClustersArgs(), options.WithDefaults());

        public static Output<ListDatabasesClustersResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDatabasesClustersResult>("digitalocean-native:databases/v2:listDatabasesClusters", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListDatabasesClustersArgs : global::Pulumi.InvokeArgs
    {
        public ListDatabasesClustersArgs()
        {
        }
        public static new ListDatabasesClustersArgs Empty => new ListDatabasesClustersArgs();
    }


    [OutputType]
    public sealed class ListDatabasesClustersResult
    {
        public readonly Outputs.ListDatabasesClustersProperties Items;

        [OutputConstructor]
        private ListDatabasesClustersResult(Outputs.ListDatabasesClustersProperties items)
        {
            Items = items;
        }
    }
}
