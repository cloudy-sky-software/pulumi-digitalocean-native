// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class ListDatabasesConnectionPools
    {
        public static Task<ListDatabasesConnectionPoolsResult> InvokeAsync(ListDatabasesConnectionPoolsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDatabasesConnectionPoolsResult>("digitalocean-native:databases/v2:listDatabasesConnectionPools", args ?? new ListDatabasesConnectionPoolsArgs(), options.WithDefaults());

        public static Output<ListDatabasesConnectionPoolsResult> Invoke(ListDatabasesConnectionPoolsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDatabasesConnectionPoolsResult>("digitalocean-native:databases/v2:listDatabasesConnectionPools", args ?? new ListDatabasesConnectionPoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListDatabasesConnectionPoolsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public string DatabaseClusterUuid { get; set; } = null!;

        public ListDatabasesConnectionPoolsArgs()
        {
        }
        public static new ListDatabasesConnectionPoolsArgs Empty => new ListDatabasesConnectionPoolsArgs();
    }

    public sealed class ListDatabasesConnectionPoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public Input<string> DatabaseClusterUuid { get; set; } = null!;

        public ListDatabasesConnectionPoolsInvokeArgs()
        {
        }
        public static new ListDatabasesConnectionPoolsInvokeArgs Empty => new ListDatabasesConnectionPoolsInvokeArgs();
    }


    [OutputType]
    public sealed class ListDatabasesConnectionPoolsResult
    {
        public readonly Outputs.ConnectionPools Items;

        [OutputConstructor]
        private ListDatabasesConnectionPoolsResult(Outputs.ConnectionPools items)
        {
            Items = items;
        }
    }
}
