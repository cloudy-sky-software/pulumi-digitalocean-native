// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class ListDatabasesFirewallRules
    {
        public static Task<ListDatabasesFirewallRulesResult> InvokeAsync(ListDatabasesFirewallRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDatabasesFirewallRulesResult>("digitalocean-native:databases/v2:listDatabasesFirewallRules", args ?? new ListDatabasesFirewallRulesArgs(), options.WithDefaults());

        public static Output<ListDatabasesFirewallRulesResult> Invoke(ListDatabasesFirewallRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDatabasesFirewallRulesResult>("digitalocean-native:databases/v2:listDatabasesFirewallRules", args ?? new ListDatabasesFirewallRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListDatabasesFirewallRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public string DatabaseClusterUuid { get; set; } = null!;

        public ListDatabasesFirewallRulesArgs()
        {
        }
        public static new ListDatabasesFirewallRulesArgs Empty => new ListDatabasesFirewallRulesArgs();
    }

    public sealed class ListDatabasesFirewallRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for a database cluster.
        /// </summary>
        [Input("databaseClusterUuid", required: true)]
        public Input<string> DatabaseClusterUuid { get; set; } = null!;

        public ListDatabasesFirewallRulesInvokeArgs()
        {
        }
        public static new ListDatabasesFirewallRulesInvokeArgs Empty => new ListDatabasesFirewallRulesInvokeArgs();
    }


    [OutputType]
    public sealed class ListDatabasesFirewallRulesResult
    {
        public readonly Outputs.ListDatabasesFirewallRulesProperties Items;

        [OutputConstructor]
        private ListDatabasesFirewallRulesResult(Outputs.ListDatabasesFirewallRulesProperties items)
        {
            Items = items;
        }
    }
}
