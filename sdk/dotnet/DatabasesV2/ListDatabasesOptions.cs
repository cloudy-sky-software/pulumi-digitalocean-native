// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DatabasesV2
{
    public static class ListDatabasesOptions
    {
        public static Task<ListDatabasesOptionsResult> InvokeAsync(ListDatabasesOptionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDatabasesOptionsResult>("digitalocean-native:databases/v2:listDatabasesOptions", args ?? new ListDatabasesOptionsArgs(), options.WithDefaults());

        public static Output<ListDatabasesOptionsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDatabasesOptionsResult>("digitalocean-native:databases/v2:listDatabasesOptions", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListDatabasesOptionsArgs : global::Pulumi.InvokeArgs
    {
        public ListDatabasesOptionsArgs()
        {
        }
        public static new ListDatabasesOptionsArgs Empty => new ListDatabasesOptionsArgs();
    }


    [OutputType]
    public sealed class ListDatabasesOptionsResult
    {
        public readonly Outputs.Options Items;

        [OutputConstructor]
        private ListDatabasesOptionsResult(Outputs.Options items)
        {
            Items = items;
        }
    }
}
