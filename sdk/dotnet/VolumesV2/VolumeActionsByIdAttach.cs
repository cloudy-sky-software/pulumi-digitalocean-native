// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.VolumesV2
{
    [DigitalOceanNativeResourceType("digitalocean-native:volumes/v2:VolumeActionsByIdAttach")]
    public partial class VolumeActionsByIdAttach : global::Pulumi.CustomResource
    {
        [Output("action")]
        public Output<Outputs.VolumeAction?> Action { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the Droplet the volume will be attached or detached from.
        /// </summary>
        [Output("dropletId")]
        public Output<int?> DropletId { get; private set; } = null!;

        /// <summary>
        /// The slug identifier for the region where the resource will initially be  available.
        /// </summary>
        [Output("region")]
        public Output<Pulumi.DigitalOceanNative.VolumesV2.VolumeActionPostBaseRegion?> Region { get; private set; } = null!;

        /// <summary>
        /// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The volume action to initiate.
        /// </summary>
        [Output("type")]
        public Output<Pulumi.DigitalOceanNative.VolumesV2.VolumeActionPostBaseType?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a VolumeActionsByIdAttach resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VolumeActionsByIdAttach(string name, VolumeActionsByIdAttachArgs args, CustomResourceOptions? options = null)
            : base("digitalocean-native:volumes/v2:VolumeActionsByIdAttach", name, args ?? new VolumeActionsByIdAttachArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VolumeActionsByIdAttach(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:volumes/v2:VolumeActionsByIdAttach", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VolumeActionsByIdAttach resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VolumeActionsByIdAttach Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VolumeActionsByIdAttach(name, id, options);
        }
    }

    public sealed class VolumeActionsByIdAttachArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the Droplet the volume will be attached or detached from.
        /// </summary>
        [Input("dropletId", required: true)]
        public Input<int> DropletId { get; set; } = null!;

        /// <summary>
        /// The slug identifier for the region where the resource will initially be  available.
        /// </summary>
        [Input("region")]
        public Input<Pulumi.DigitalOceanNative.VolumesV2.VolumeActionPostBaseRegion>? Region { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The volume action to initiate.
        /// </summary>
        [Input("type", required: true)]
        public Input<Pulumi.DigitalOceanNative.VolumesV2.VolumeActionPostBaseType> Type { get; set; } = null!;

        /// <summary>
        /// The ID of the block storage volume.
        /// </summary>
        [Input("volumeId")]
        public Input<string>? VolumeId { get; set; }

        public VolumeActionsByIdAttachArgs()
        {
        }
        public static new VolumeActionsByIdAttachArgs Empty => new VolumeActionsByIdAttachArgs();
    }
}
