// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.VolumesV2
{
    public static class ListVolumes
    {
        public static Task<ListVolumesResult> InvokeAsync(ListVolumesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListVolumesResult>("digitalocean-native:volumes/v2:listVolumes", args ?? new ListVolumesArgs(), options.WithDefaults());

        public static Output<ListVolumesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListVolumesResult>("digitalocean-native:volumes/v2:listVolumes", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListVolumesArgs : global::Pulumi.InvokeArgs
    {
        public ListVolumesArgs()
        {
        }
        public static new ListVolumesArgs Empty => new ListVolumesArgs();
    }


    [OutputType]
    public sealed class ListVolumesResult
    {
        public readonly Outputs.ListVolumes Items;

        [OutputConstructor]
        private ListVolumesResult(Outputs.ListVolumes items)
        {
            Items = items;
        }
    }
}
