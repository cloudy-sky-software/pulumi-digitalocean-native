// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.FunctionsV2
{
    public static class ListFunctionsNamespaces
    {
        public static Task<ListFunctionsNamespacesResult> InvokeAsync(ListFunctionsNamespacesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListFunctionsNamespacesResult>("digitalocean-native:functions/v2:listFunctionsNamespaces", args ?? new ListFunctionsNamespacesArgs(), options.WithDefaults());

        public static Output<ListFunctionsNamespacesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListFunctionsNamespacesResult>("digitalocean-native:functions/v2:listFunctionsNamespaces", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class ListFunctionsNamespacesArgs : global::Pulumi.InvokeArgs
    {
        public ListFunctionsNamespacesArgs()
        {
        }
        public static new ListFunctionsNamespacesArgs Empty => new ListFunctionsNamespacesArgs();
    }


    [OutputType]
    public sealed class ListFunctionsNamespacesResult
    {
        public readonly Outputs.ListFunctionsNamespacesItems Items;

        [OutputConstructor]
        private ListFunctionsNamespacesResult(Outputs.ListFunctionsNamespacesItems items)
        {
            Items = items;
        }
    }
}
