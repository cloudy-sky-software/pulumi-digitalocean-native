// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.RegistryV2
{
    public static class GetRegistryOptions
    {
        public static Task<GetRegistryOptionsResult> InvokeAsync(GetRegistryOptionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegistryOptionsResult>("digitalocean-native:registry/v2:getRegistryOptions", args ?? new GetRegistryOptionsArgs(), options.WithDefaults());

        public static Output<GetRegistryOptionsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryOptionsResult>("digitalocean-native:registry/v2:getRegistryOptions", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetRegistryOptionsArgs : global::Pulumi.InvokeArgs
    {
        public GetRegistryOptionsArgs()
        {
        }
        public static new GetRegistryOptionsArgs Empty => new GetRegistryOptionsArgs();
    }


    [OutputType]
    public sealed class GetRegistryOptionsResult
    {
        public readonly Outputs.GetRegistryOptionsProperties Items;

        [OutputConstructor]
        private GetRegistryOptionsResult(Outputs.GetRegistryOptionsProperties items)
        {
            Items = items;
        }
    }
}
