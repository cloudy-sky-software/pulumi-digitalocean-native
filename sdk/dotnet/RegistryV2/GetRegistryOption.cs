// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.RegistryV2
{
    public static class GetRegistryOption
    {
        public static Task<GetRegistryOptionResult> InvokeAsync(GetRegistryOptionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegistryOptionResult>("digitalocean-native:registry/v2:getRegistryOption", args ?? new GetRegistryOptionArgs(), options.WithDefaults());

        public static Output<GetRegistryOptionResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryOptionResult>("digitalocean-native:registry/v2:getRegistryOption", InvokeArgs.Empty, options.WithDefaults());
    }


    public sealed class GetRegistryOptionArgs : global::Pulumi.InvokeArgs
    {
        public GetRegistryOptionArgs()
        {
        }
        public static new GetRegistryOptionArgs Empty => new GetRegistryOptionArgs();
    }


    [OutputType]
    public sealed class GetRegistryOptionResult
    {
        public readonly Outputs.GetRegistryOptionProperties Items;

        [OutputConstructor]
        private GetRegistryOptionResult(Outputs.GetRegistryOptionProperties items)
        {
            Items = items;
        }
    }
}
