// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.RegistryV2.Outputs
{

    [OutputType]
    public sealed class RepositoryTag
    {
        /// <summary>
        /// The compressed size of the tag in bytes.
        /// </summary>
        public readonly int? CompressedSizeBytes;
        /// <summary>
        /// The digest of the manifest associated with the tag.
        /// </summary>
        public readonly string? ManifestDigest;
        /// <summary>
        /// The name of the container registry.
        /// </summary>
        public readonly string? RegistryName;
        /// <summary>
        /// The name of the repository.
        /// </summary>
        public readonly string? Repository;
        /// <summary>
        /// The uncompressed size of the tag in bytes (this size is calculated asynchronously so it may not be immediately available).
        /// </summary>
        public readonly int? SizeBytes;
        /// <summary>
        /// The name of the tag.
        /// </summary>
        public readonly string? Tag;
        /// <summary>
        /// The time the tag was last updated.
        /// </summary>
        public readonly string? UpdatedAt;

        [OutputConstructor]
        private RepositoryTag(
            int? compressedSizeBytes,

            string? manifestDigest,

            string? registryName,

            string? repository,

            int? sizeBytes,

            string? tag,

            string? updatedAt)
        {
            CompressedSizeBytes = compressedSizeBytes;
            ManifestDigest = manifestDigest;
            RegistryName = registryName;
            Repository = repository;
            SizeBytes = sizeBytes;
            Tag = tag;
            UpdatedAt = updatedAt;
        }
    }
}
