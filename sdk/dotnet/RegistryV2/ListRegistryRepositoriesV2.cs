// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.RegistryV2
{
    public static class ListRegistryRepositoriesV2
    {
        public static Task<ListRegistryRepositoriesV2Result> InvokeAsync(ListRegistryRepositoriesV2Args args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListRegistryRepositoriesV2Result>("digitalocean-native:registry/v2:listRegistryRepositoriesV2", args ?? new ListRegistryRepositoriesV2Args(), options.WithDefaults());

        public static Output<ListRegistryRepositoriesV2Result> Invoke(ListRegistryRepositoriesV2InvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListRegistryRepositoriesV2Result>("digitalocean-native:registry/v2:listRegistryRepositoriesV2", args ?? new ListRegistryRepositoriesV2InvokeArgs(), options.WithDefaults());
    }


    public sealed class ListRegistryRepositoriesV2Args : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of a container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public string RegistryName { get; set; } = null!;

        public ListRegistryRepositoriesV2Args()
        {
        }
        public static new ListRegistryRepositoriesV2Args Empty => new ListRegistryRepositoriesV2Args();
    }

    public sealed class ListRegistryRepositoriesV2InvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of a container registry.
        /// </summary>
        [Input("registryName", required: true)]
        public Input<string> RegistryName { get; set; } = null!;

        public ListRegistryRepositoriesV2InvokeArgs()
        {
        }
        public static new ListRegistryRepositoriesV2InvokeArgs Empty => new ListRegistryRepositoriesV2InvokeArgs();
    }


    [OutputType]
    public sealed class ListRegistryRepositoriesV2Result
    {
        public readonly Outputs.ListRegistryRepositoriesV2Items Items;

        [OutputConstructor]
        private ListRegistryRepositoriesV2Result(Outputs.ListRegistryRepositoriesV2Items items)
        {
            Items = items;
        }
    }
}
