// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.TagsV2
{
    /// <summary>
    /// A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.
    /// Tags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.
    /// </summary>
    [DigitalOceanNativeResourceType("digitalocean-native:tags/v2:Tags")]
    public partial class Tags : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores.
        /// There is a limit of 255 characters per tag.
        /// 
        /// **Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.
        /// 
        /// When working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named "PROD", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).
        /// 
        /// Tagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named "PROD", you can tag resources in the control panel by entering "prod". The tag will still display with its canonical capitalization, "PROD".
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// An embedded object containing key value pairs of resource type and resource statistics. It also includes a count of the total number of resources tagged with the current tag as well as a `last_tagged_uri` attribute set to the last resource tagged with the current tag.
        /// </summary>
        [Output("resources")]
        public Output<Outputs.Resources?> Resources { get; private set; } = null!;

        /// <summary>
        /// A tag is a label that can be applied to a resource (currently Droplets, Images, Volumes, Volume Snapshots, and Database clusters) in order to better organize or facilitate the lookups and actions on it.
        /// Tags have two attributes: a user defined `name` attribute and an embedded `resources` attribute with information about resources that have been tagged.
        /// </summary>
        [Output("tag")]
        public Output<Outputs.Tags?> Tag { get; private set; } = null!;


        /// <summary>
        /// Create a Tags resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Tags(string name, TagsArgs? args = null, CustomResourceOptions? options = null)
            : base("digitalocean-native:tags/v2:Tags", name, args ?? new TagsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Tags(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:tags/v2:Tags", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Tags resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Tags Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Tags(name, id, options);
        }
    }

    public sealed class TagsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores.
        /// There is a limit of 255 characters per tag.
        /// 
        /// **Note:** Tag names are case stable, which means the capitalization you use when you first create a tag is canonical.
        /// 
        /// When working with tags in the API, you must use the tag's canonical capitalization. For example, if you create a tag named "PROD", the URL to add that tag to a resource would be `https://api.digitalocean.com/v2/tags/PROD/resources` (not `/v2/tags/prod/resources`).
        /// 
        /// Tagged resources in the control panel will always display the canonical capitalization. For example, if you create a tag named "PROD", you can tag resources in the control panel by entering "prod". The tag will still display with its canonical capitalization, "PROD".
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public TagsArgs()
        {
        }
        public static new TagsArgs Empty => new TagsArgs();
    }
}
