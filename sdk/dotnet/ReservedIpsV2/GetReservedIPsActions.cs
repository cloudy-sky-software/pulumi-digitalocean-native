// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.ReservedIpsV2
{
    public static class GetReservedIPsActions
    {
        public static Task<GetReservedIPsActionsResult> InvokeAsync(GetReservedIPsActionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReservedIPsActionsResult>("digitalocean-native:reserved_ips/v2:getReservedIPsActions", args ?? new GetReservedIPsActionsArgs(), options.WithDefaults());

        public static Output<GetReservedIPsActionsResult> Invoke(GetReservedIPsActionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReservedIPsActionsResult>("digitalocean-native:reserved_ips/v2:getReservedIPsActions", args ?? new GetReservedIPsActionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReservedIPsActionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique numeric ID that can be used to identify and reference an action.
        /// </summary>
        [Input("actionId", required: true)]
        public string ActionId { get; set; } = null!;

        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public string ReservedIp { get; set; } = null!;

        public GetReservedIPsActionsArgs()
        {
        }
        public static new GetReservedIPsActionsArgs Empty => new GetReservedIPsActionsArgs();
    }

    public sealed class GetReservedIPsActionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique numeric ID that can be used to identify and reference an action.
        /// </summary>
        [Input("actionId", required: true)]
        public Input<string> ActionId { get; set; } = null!;

        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public Input<string> ReservedIp { get; set; } = null!;

        public GetReservedIPsActionsInvokeArgs()
        {
        }
        public static new GetReservedIPsActionsInvokeArgs Empty => new GetReservedIPsActionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetReservedIPsActionsResult
    {
        public readonly Outputs.GetReservedIPsActionsProperties Items;

        [OutputConstructor]
        private GetReservedIPsActionsResult(Outputs.GetReservedIPsActionsProperties items)
        {
            Items = items;
        }
    }
}
