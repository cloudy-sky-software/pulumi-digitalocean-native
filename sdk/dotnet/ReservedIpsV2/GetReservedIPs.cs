// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.ReservedIpsV2
{
    public static class GetReservedIPs
    {
        public static Task<GetReservedIPsResult> InvokeAsync(GetReservedIPsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReservedIPsResult>("digitalocean-native:reserved_ips/v2:getReservedIPs", args ?? new GetReservedIPsArgs(), options.WithDefaults());

        public static Output<GetReservedIPsResult> Invoke(GetReservedIPsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReservedIPsResult>("digitalocean-native:reserved_ips/v2:getReservedIPs", args ?? new GetReservedIPsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReservedIPsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public string ReservedIp { get; set; } = null!;

        public GetReservedIPsArgs()
        {
        }
        public static new GetReservedIPsArgs Empty => new GetReservedIPsArgs();
    }

    public sealed class GetReservedIPsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public Input<string> ReservedIp { get; set; } = null!;

        public GetReservedIPsInvokeArgs()
        {
        }
        public static new GetReservedIPsInvokeArgs Empty => new GetReservedIPsInvokeArgs();
    }


    [OutputType]
    public sealed class GetReservedIPsResult
    {
        public readonly Outputs.GetReservedIPsProperties Items;

        [OutputConstructor]
        private GetReservedIPsResult(Outputs.GetReservedIPsProperties items)
        {
            Items = items;
        }
    }
}
