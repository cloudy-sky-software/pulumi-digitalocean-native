// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.ReservedIpsV2
{
    public static class GetReservedIP
    {
        public static Task<GetReservedIPResult> InvokeAsync(GetReservedIPArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReservedIPResult>("digitalocean-native:reserved_ips/v2:getReservedIP", args ?? new GetReservedIPArgs(), options.WithDefaults());

        public static Output<GetReservedIPResult> Invoke(GetReservedIPInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReservedIPResult>("digitalocean-native:reserved_ips/v2:getReservedIP", args ?? new GetReservedIPInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReservedIPArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public string ReservedIp { get; set; } = null!;

        public GetReservedIPArgs()
        {
        }
        public static new GetReservedIPArgs Empty => new GetReservedIPArgs();
    }

    public sealed class GetReservedIPInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public Input<string> ReservedIp { get; set; } = null!;

        public GetReservedIPInvokeArgs()
        {
        }
        public static new GetReservedIPInvokeArgs Empty => new GetReservedIPInvokeArgs();
    }


    [OutputType]
    public sealed class GetReservedIPResult
    {
        public readonly Outputs.GetReservedIPProperties Items;

        [OutputConstructor]
        private GetReservedIPResult(Outputs.GetReservedIPProperties items)
        {
            Items = items;
        }
    }
}
