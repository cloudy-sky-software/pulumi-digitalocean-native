// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.ReservedIpsV2
{
    public static class GetReservedIPsAction
    {
        public static Task<GetReservedIPsActionResult> InvokeAsync(GetReservedIPsActionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReservedIPsActionResult>("digitalocean-native:reserved_ips/v2:getReservedIPsAction", args ?? new GetReservedIPsActionArgs(), options.WithDefaults());

        public static Output<GetReservedIPsActionResult> Invoke(GetReservedIPsActionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReservedIPsActionResult>("digitalocean-native:reserved_ips/v2:getReservedIPsAction", args ?? new GetReservedIPsActionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReservedIPsActionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique numeric ID that can be used to identify and reference an action.
        /// </summary>
        [Input("actionId", required: true)]
        public string ActionId { get; set; } = null!;

        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public string ReservedIp { get; set; } = null!;

        public GetReservedIPsActionArgs()
        {
        }
        public static new GetReservedIPsActionArgs Empty => new GetReservedIPsActionArgs();
    }

    public sealed class GetReservedIPsActionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique numeric ID that can be used to identify and reference an action.
        /// </summary>
        [Input("actionId", required: true)]
        public Input<string> ActionId { get; set; } = null!;

        /// <summary>
        /// A reserved IP address.
        /// </summary>
        [Input("reservedIp", required: true)]
        public Input<string> ReservedIp { get; set; } = null!;

        public GetReservedIPsActionInvokeArgs()
        {
        }
        public static new GetReservedIPsActionInvokeArgs Empty => new GetReservedIPsActionInvokeArgs();
    }


    [OutputType]
    public sealed class GetReservedIPsActionResult
    {
        public readonly Outputs.GetReservedIPsActionProperties Items;

        [OutputConstructor]
        private GetReservedIPsActionResult(Outputs.GetReservedIPsActionProperties items)
        {
            Items = items;
        }
    }
}
