// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.KubernetesV2.Outputs
{

    [OutputType]
    public sealed class Cluster
    {
        /// <summary>
        /// A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
        /// </summary>
        public readonly bool? AutoUpgrade;
        /// <summary>
        /// The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation.
        /// </summary>
        public readonly string? ClusterSubnet;
        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created.
        /// </summary>
        public readonly string? CreatedAt;
        /// <summary>
        /// The base URL of the API server on the Kubernetes master node.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.
        /// </summary>
        public readonly bool? Ha;
        /// <summary>
        /// A unique ID that can be used to identify and reference a Kubernetes cluster.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)
        /// </summary>
        public readonly string? Ipv4;
        /// <summary>
        /// An object specifying the maintenance window policy for the Kubernetes cluster.
        /// </summary>
        public readonly Outputs.MaintenancePolicy? MaintenancePolicy;
        /// <summary>
        /// A human-readable name for a Kubernetes cluster.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// An object specifying the details of the worker nodes available to the Kubernetes cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.KubernetesNodePool> NodePools;
        /// <summary>
        /// The slug identifier for the region where the Kubernetes cluster is located.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// A read-only boolean value indicating if a container registry is integrated with the cluster.
        /// </summary>
        public readonly bool? RegistryEnabled;
        /// <summary>
        /// The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation.
        /// </summary>
        public readonly string? ServiceSubnet;
        /// <summary>
        /// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
        /// </summary>
        public readonly Outputs.ClusterStatusProperties? Status;
        /// <summary>
        /// A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
        /// </summary>
        public readonly bool? SurgeUpgrade;
        /// <summary>
        /// An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated.
        /// </summary>
        public readonly string? UpdatedAt;
        /// <summary>
        /// The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. "1.14"), the latest version within it will be used (e.g. "1.14.6-do.1"); if set to "latest", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions.
        /// </summary>
        public readonly string Version;
        /// <summary>
        /// A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned.
        /// </summary>
        public readonly string? VpcUuid;

        [OutputConstructor]
        private Cluster(
            bool? autoUpgrade,

            string? clusterSubnet,

            string? createdAt,

            string? endpoint,

            bool? ha,

            string? id,

            string? ipv4,

            Outputs.MaintenancePolicy? maintenancePolicy,

            string name,

            ImmutableArray<Outputs.KubernetesNodePool> nodePools,

            string region,

            bool? registryEnabled,

            string? serviceSubnet,

            Outputs.ClusterStatusProperties? status,

            bool? surgeUpgrade,

            ImmutableArray<string> tags,

            string? updatedAt,

            string version,

            string? vpcUuid)
        {
            AutoUpgrade = autoUpgrade;
            ClusterSubnet = clusterSubnet;
            CreatedAt = createdAt;
            Endpoint = endpoint;
            Ha = ha;
            Id = id;
            Ipv4 = ipv4;
            MaintenancePolicy = maintenancePolicy;
            Name = name;
            NodePools = nodePools;
            Region = region;
            RegistryEnabled = registryEnabled;
            ServiceSubnet = serviceSubnet;
            Status = status;
            SurgeUpgrade = surgeUpgrade;
            Tags = tags;
            UpdatedAt = updatedAt;
            Version = version;
            VpcUuid = vpcUuid;
        }
    }
}
