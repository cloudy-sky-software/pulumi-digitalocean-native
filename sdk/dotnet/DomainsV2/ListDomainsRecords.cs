// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.DomainsV2
{
    public static class ListDomainsRecords
    {
        public static Task<ListDomainsRecordsResult> InvokeAsync(ListDomainsRecordsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ListDomainsRecordsResult>("digitalocean-native:domains/v2:listDomainsRecords", args ?? new ListDomainsRecordsArgs(), options.WithDefaults());

        public static Output<ListDomainsRecordsResult> Invoke(ListDomainsRecordsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ListDomainsRecordsResult>("digitalocean-native:domains/v2:listDomainsRecords", args ?? new ListDomainsRecordsInvokeArgs(), options.WithDefaults());
    }


    public sealed class ListDomainsRecordsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the domain itself.
        /// </summary>
        [Input("domainName", required: true)]
        public string DomainName { get; set; } = null!;

        public ListDomainsRecordsArgs()
        {
        }
        public static new ListDomainsRecordsArgs Empty => new ListDomainsRecordsArgs();
    }

    public sealed class ListDomainsRecordsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the domain itself.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        public ListDomainsRecordsInvokeArgs()
        {
        }
        public static new ListDomainsRecordsInvokeArgs Empty => new ListDomainsRecordsInvokeArgs();
    }


    [OutputType]
    public sealed class ListDomainsRecordsResult
    {
        public readonly Outputs.ListDomainsRecordsItems Items;

        [OutputConstructor]
        private ListDomainsRecordsResult(Outputs.ListDomainsRecordsItems items)
        {
            Items = items;
        }
    }
}
