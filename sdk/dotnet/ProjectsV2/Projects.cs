// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.ProjectsV2
{
    [DigitalOceanNativeResourceType("digitalocean-native:projects/v2:Projects")]
    public partial class Projects : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the project was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string?> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The description of the project. The maximum length is 255 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The environment of the project's resources.
        /// </summary>
        [Output("environment")]
        public Output<Pulumi.DigitalOceanNative.ProjectsV2.ProjectsProjectBaseEnvironment?> Environment { get; private set; } = null!;

        /// <summary>
        /// The human-readable name for the project. The maximum length is 175 characters and the name must be unique.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The integer id of the project owner.
        /// </summary>
        [Output("ownerId")]
        public Output<int?> OwnerId { get; private set; } = null!;

        /// <summary>
        /// The unique universal identifier of the project owner.
        /// </summary>
        [Output("ownerUuid")]
        public Output<string?> OwnerUuid { get; private set; } = null!;

        [Output("project")]
        public Output<Outputs.Project?> Project { get; private set; } = null!;

        /// <summary>
        /// The purpose of the project. The maximum length is 255 characters. It can
        /// have one of the following values:
        /// 
        /// - Just trying out DigitalOcean
        /// - Class project / Educational purposes
        /// - Website or blog
        /// - Web Application
        /// - Service or API
        /// - Mobile Application
        /// - Machine learning / AI / Data processing
        /// - IoT
        /// - Operational / Developer tooling
        /// 
        /// If another value for purpose is specified, for example, "your custom purpose",
        /// your purpose will be stored as `Other: your custom purpose`.
        /// </summary>
        [Output("purpose")]
        public Output<string> Purpose { get; private set; } = null!;

        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the project was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string?> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a Projects resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Projects(string name, ProjectsArgs? args = null, CustomResourceOptions? options = null)
            : base("digitalocean-native:projects/v2:Projects", name, args ?? new ProjectsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Projects(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("digitalocean-native:projects/v2:Projects", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/cloudy-sky-software/pulumi-digitalocean-native",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Projects resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Projects Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Projects(name, id, options);
        }
    }

    public sealed class ProjectsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the project was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The description of the project. The maximum length is 255 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The environment of the project's resources.
        /// </summary>
        [Input("environment")]
        public Input<Pulumi.DigitalOceanNative.ProjectsV2.ProjectsProjectBaseEnvironment>? Environment { get; set; }

        /// <summary>
        /// The human-readable name for the project. The maximum length is 175 characters and the name must be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The integer id of the project owner.
        /// </summary>
        [Input("ownerId")]
        public Input<int>? OwnerId { get; set; }

        /// <summary>
        /// The unique universal identifier of the project owner.
        /// </summary>
        [Input("ownerUuid")]
        public Input<string>? OwnerUuid { get; set; }

        /// <summary>
        /// The purpose of the project. The maximum length is 255 characters. It can
        /// have one of the following values:
        /// 
        /// - Just trying out DigitalOcean
        /// - Class project / Educational purposes
        /// - Website or blog
        /// - Web Application
        /// - Service or API
        /// - Mobile Application
        /// - Machine learning / AI / Data processing
        /// - IoT
        /// - Operational / Developer tooling
        /// 
        /// If another value for purpose is specified, for example, "your custom purpose",
        /// your purpose will be stored as `Other: your custom purpose`.
        /// </summary>
        [Input("purpose")]
        public Input<string>? Purpose { get; set; }

        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the project was updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public ProjectsArgs()
        {
        }
        public static new ProjectsArgs Empty => new ProjectsArgs();
    }
}
