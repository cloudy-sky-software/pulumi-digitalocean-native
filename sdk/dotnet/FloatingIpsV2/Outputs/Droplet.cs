// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOceanNative.FloatingIpsV2.Outputs
{

    [OutputType]
    public sealed class Droplet
    {
        /// <summary>
        /// An array of backup IDs of any backups that have been taken of the Droplet instance.  Droplet backups are enabled at the time of the instance creation.
        /// </summary>
        public readonly ImmutableArray<int> BackupIds;
        /// <summary>
        /// A time value given in ISO8601 combined date and time format that represents when the Droplet was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The size of the Droplet's disk in gigabytes.
        /// </summary>
        public readonly int Disk;
        /// <summary>
        /// An array of features enabled on this Droplet.
        /// </summary>
        public readonly ImmutableArray<string> Features;
        /// <summary>
        /// A unique identifier for each Droplet instance. This is automatically generated upon Droplet creation.
        /// </summary>
        public readonly int Id;
        public readonly Outputs.Image Image;
        /// <summary>
        /// **Note**: All Droplets created after March 2017 use internal kernels by default.
        /// These Droplets will have this attribute set to `null`.
        /// 
        /// The current [kernel](https://www.digitalocean.com/docs/droplets/how-to/kernel/)
        /// for Droplets with externally managed kernels. This will initially be set to
        /// the kernel of the base image when the Droplet is created.
        /// </summary>
        public readonly Outputs.Kernel? Kernel;
        /// <summary>
        /// A boolean value indicating whether the Droplet has been locked, preventing actions by users.
        /// </summary>
        public readonly bool Locked;
        /// <summary>
        /// Memory of the Droplet in megabytes.
        /// </summary>
        public readonly int Memory;
        /// <summary>
        /// The human-readable name set for the Droplet instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The details of the network that are configured for the Droplet instance.  This is an object that contains keys for IPv4 and IPv6.  The value of each of these is an array that contains objects describing an individual IP resource allocated to the Droplet.  These will define attributes like the IP address, netmask, and gateway of the specific network depending on the type of network it is.
        /// </summary>
        public readonly Outputs.DropletNetworksProperties Networks;
        /// <summary>
        /// The details of the Droplet's backups feature, if backups are configured for the Droplet. This object contains keys for the start and end times of the window during which the backup will start.
        /// </summary>
        public readonly Outputs.DropletNextBackupWindowProperties NextBackupWindow;
        public readonly Outputs.Region Region;
        public readonly Outputs.Size Size;
        /// <summary>
        /// The unique slug identifier for the size of this Droplet.
        /// </summary>
        public readonly string SizeSlug;
        /// <summary>
        /// An array of snapshot IDs of any snapshots created from the Droplet instance.
        /// </summary>
        public readonly ImmutableArray<int> SnapshotIds;
        /// <summary>
        /// A status string indicating the state of the Droplet instance. This may be "new", "active", "off", or "archive".
        /// </summary>
        public readonly Pulumi.DigitalOceanNative.FloatingIpsV2.DropletStatus Status;
        /// <summary>
        /// An array of Tags the Droplet has been tagged with.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The number of virtual CPUs.
        /// </summary>
        public readonly int Vcpus;
        /// <summary>
        /// A flat array including the unique identifier for each Block Storage volume attached to the Droplet.
        /// </summary>
        public readonly ImmutableArray<string> VolumeIds;
        /// <summary>
        /// A string specifying the UUID of the VPC to which the Droplet is assigned.
        /// </summary>
        public readonly string? VpcUuid;

        [OutputConstructor]
        private Droplet(
            ImmutableArray<int> backupIds,

            string createdAt,

            int disk,

            ImmutableArray<string> features,

            int id,

            Outputs.Image image,

            Outputs.Kernel? kernel,

            bool locked,

            int memory,

            string name,

            Outputs.DropletNetworksProperties networks,

            Outputs.DropletNextBackupWindowProperties nextBackupWindow,

            Outputs.Region region,

            Outputs.Size size,

            string sizeSlug,

            ImmutableArray<int> snapshotIds,

            Pulumi.DigitalOceanNative.FloatingIpsV2.DropletStatus status,

            ImmutableArray<string> tags,

            int vcpus,

            ImmutableArray<string> volumeIds,

            string? vpcUuid)
        {
            BackupIds = backupIds;
            CreatedAt = createdAt;
            Disk = disk;
            Features = features;
            Id = id;
            Image = image;
            Kernel = kernel;
            Locked = locked;
            Memory = memory;
            Name = name;
            Networks = networks;
            NextBackupWindow = nextBackupWindow;
            Region = region;
            Size = size;
            SizeSlug = sizeSlug;
            SnapshotIds = snapshotIds;
            Status = status;
            Tags = tags;
            Vcpus = vcpus;
            VolumeIds = volumeIds;
            VpcUuid = vpcUuid;
        }
    }
}
