// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListDomainsRecords(ctx *pulumi.Context, args *ListDomainsRecordsArgs, opts ...pulumi.InvokeOption) (*ListDomainsRecordsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListDomainsRecordsResult
	err := ctx.Invoke("digitalocean-native:domains/v2:listDomainsRecords", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDomainsRecordsArgs struct {
	// The name of the domain itself.
	DomainName string `pulumi:"domainName"`
}

type ListDomainsRecordsResult struct {
	Items ListDomainsRecordsItems `pulumi:"items"`
}

func ListDomainsRecordsOutput(ctx *pulumi.Context, args ListDomainsRecordsOutputArgs, opts ...pulumi.InvokeOption) ListDomainsRecordsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListDomainsRecordsResult, error) {
			args := v.(ListDomainsRecordsArgs)
			r, err := ListDomainsRecords(ctx, &args, opts...)
			var s ListDomainsRecordsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListDomainsRecordsResultOutput)
}

type ListDomainsRecordsOutputArgs struct {
	// The name of the domain itself.
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (ListDomainsRecordsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainsRecordsArgs)(nil)).Elem()
}

type ListDomainsRecordsResultOutput struct{ *pulumi.OutputState }

func (ListDomainsRecordsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainsRecordsResult)(nil)).Elem()
}

func (o ListDomainsRecordsResultOutput) ToListDomainsRecordsResultOutput() ListDomainsRecordsResultOutput {
	return o
}

func (o ListDomainsRecordsResultOutput) ToListDomainsRecordsResultOutputWithContext(ctx context.Context) ListDomainsRecordsResultOutput {
	return o
}

func (o ListDomainsRecordsResultOutput) Items() ListDomainsRecordsItemsOutput {
	return o.ApplyT(func(v ListDomainsRecordsResult) ListDomainsRecordsItems { return v.Items }).(ListDomainsRecordsItemsOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDomainsRecordsResultOutput{})
}
