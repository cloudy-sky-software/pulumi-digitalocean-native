// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DomainType struct {
	// This optional attribute may contain an IP address. When provided, an A record will be automatically created pointing to the apex domain.
	IpAddress *string `pulumi:"ipAddress"`
	// The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name.
	Name *string `pulumi:"name"`
	// This value is the time to live for the records on this domain, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
	Ttl *int `pulumi:"ttl"`
	// This attribute contains the complete contents of the zone file for the selected domain. Individual domain record resources should be used to get more granular control over records. However, this attribute can also be used to get information about the SOA record, which is created automatically and is not accessible as an individual record resource.
	ZoneFile *string `pulumi:"zoneFile"`
}

type DomainTypeOutput struct{ *pulumi.OutputState }

func (DomainTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainType)(nil)).Elem()
}

func (o DomainTypeOutput) ToDomainTypeOutput() DomainTypeOutput {
	return o
}

func (o DomainTypeOutput) ToDomainTypeOutputWithContext(ctx context.Context) DomainTypeOutput {
	return o
}

// This optional attribute may contain an IP address. When provided, an A record will be automatically created pointing to the apex domain.
func (o DomainTypeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainType) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name.
func (o DomainTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// This value is the time to live for the records on this domain, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
func (o DomainTypeOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainType) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

// This attribute contains the complete contents of the zone file for the selected domain. Individual domain record resources should be used to get more granular control over records. However, this attribute can also be used to get information about the SOA record, which is created automatically and is not accessible as an individual record resource.
func (o DomainTypeOutput) ZoneFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainType) *string { return v.ZoneFile }).(pulumi.StringPtrOutput)
}

type DomainTypePtrOutput struct{ *pulumi.OutputState }

func (DomainTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainType)(nil)).Elem()
}

func (o DomainTypePtrOutput) ToDomainTypePtrOutput() DomainTypePtrOutput {
	return o
}

func (o DomainTypePtrOutput) ToDomainTypePtrOutputWithContext(ctx context.Context) DomainTypePtrOutput {
	return o
}

func (o DomainTypePtrOutput) Elem() DomainTypeOutput {
	return o.ApplyT(func(v *DomainType) DomainType {
		if v != nil {
			return *v
		}
		var ret DomainType
		return ret
	}).(DomainTypeOutput)
}

// This optional attribute may contain an IP address. When provided, an A record will be automatically created pointing to the apex domain.
func (o DomainTypePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainType) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The name of the domain itself. This should follow the standard domain format of domain.TLD. For instance, `example.com` is a valid domain name.
func (o DomainTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// This value is the time to live for the records on this domain, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
func (o DomainTypePtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainType) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// This attribute contains the complete contents of the zone file for the selected domain. Individual domain record resources should be used to get more granular control over records. However, this attribute can also be used to get information about the SOA record, which is created automatically and is not accessible as an individual record resource.
func (o DomainTypePtrOutput) ZoneFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainType) *string {
		if v == nil {
			return nil
		}
		return v.ZoneFile
	}).(pulumi.StringPtrOutput)
}

type DomainTypeArrayOutput struct{ *pulumi.OutputState }

func (DomainTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainType)(nil)).Elem()
}

func (o DomainTypeArrayOutput) ToDomainTypeArrayOutput() DomainTypeArrayOutput {
	return o
}

func (o DomainTypeArrayOutput) ToDomainTypeArrayOutputWithContext(ctx context.Context) DomainTypeArrayOutput {
	return o
}

func (o DomainTypeArrayOutput) Index(i pulumi.IntInput) DomainTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainType {
		return vs[0].([]DomainType)[vs[1].(int)]
	}).(DomainTypeOutput)
}

type DomainRecord struct {
	// Variable data depending on record type. For example, the "data" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates.
	Data *string `pulumi:"data"`
	// An unsigned integer between 0-255 used for CAA records.
	Flags *int `pulumi:"flags"`
	// A unique identifier for each domain record.
	Id *int `pulumi:"id"`
	// The host name, alias, or service being defined by the record.
	Name *string `pulumi:"name"`
	// The port for SRV records.
	Port *int `pulumi:"port"`
	// The priority for SRV and MX records.
	Priority *int `pulumi:"priority"`
	// The parameter tag for CAA records. Valid values are "issue", "issuewild", or "iodef"
	Tag *string `pulumi:"tag"`
	// This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
	Ttl *int `pulumi:"ttl"`
	// The type of the DNS record. For example: A, CNAME, TXT, ...
	Type string `pulumi:"type"`
	// The weight for SRV records.
	Weight *int `pulumi:"weight"`
}

type DomainRecordOutput struct{ *pulumi.OutputState }

func (DomainRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRecord)(nil)).Elem()
}

func (o DomainRecordOutput) ToDomainRecordOutput() DomainRecordOutput {
	return o
}

func (o DomainRecordOutput) ToDomainRecordOutputWithContext(ctx context.Context) DomainRecordOutput {
	return o
}

// Variable data depending on record type. For example, the "data" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates.
func (o DomainRecordOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRecord) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// An unsigned integer between 0-255 used for CAA records.
func (o DomainRecordOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRecord) *int { return v.Flags }).(pulumi.IntPtrOutput)
}

// A unique identifier for each domain record.
func (o DomainRecordOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRecord) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// The host name, alias, or service being defined by the record.
func (o DomainRecordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRecord) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The port for SRV records.
func (o DomainRecordOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRecord) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The priority for SRV and MX records.
func (o DomainRecordOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRecord) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The parameter tag for CAA records. Valid values are "issue", "issuewild", or "iodef"
func (o DomainRecordOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRecord) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
func (o DomainRecordOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRecord) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

// The type of the DNS record. For example: A, CNAME, TXT, ...
func (o DomainRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRecord) string { return v.Type }).(pulumi.StringOutput)
}

// The weight for SRV records.
func (o DomainRecordOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRecord) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DomainRecordPtrOutput struct{ *pulumi.OutputState }

func (DomainRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRecord)(nil)).Elem()
}

func (o DomainRecordPtrOutput) ToDomainRecordPtrOutput() DomainRecordPtrOutput {
	return o
}

func (o DomainRecordPtrOutput) ToDomainRecordPtrOutputWithContext(ctx context.Context) DomainRecordPtrOutput {
	return o
}

func (o DomainRecordPtrOutput) Elem() DomainRecordOutput {
	return o.ApplyT(func(v *DomainRecord) DomainRecord {
		if v != nil {
			return *v
		}
		var ret DomainRecord
		return ret
	}).(DomainRecordOutput)
}

// Variable data depending on record type. For example, the "data" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates.
func (o DomainRecordPtrOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *string {
		if v == nil {
			return nil
		}
		return v.Data
	}).(pulumi.StringPtrOutput)
}

// An unsigned integer between 0-255 used for CAA records.
func (o DomainRecordPtrOutput) Flags() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *int {
		if v == nil {
			return nil
		}
		return v.Flags
	}).(pulumi.IntPtrOutput)
}

// A unique identifier for each domain record.
func (o DomainRecordPtrOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *int {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.IntPtrOutput)
}

// The host name, alias, or service being defined by the record.
func (o DomainRecordPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The port for SRV records.
func (o DomainRecordPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The priority for SRV and MX records.
func (o DomainRecordPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The parameter tag for CAA records. Valid values are "issue", "issuewild", or "iodef"
func (o DomainRecordPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

// This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
func (o DomainRecordPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// The type of the DNS record. For example: A, CNAME, TXT, ...
func (o DomainRecordPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The weight for SRV records.
func (o DomainRecordPtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRecord) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type DomainRecordArrayOutput struct{ *pulumi.OutputState }

func (DomainRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRecord)(nil)).Elem()
}

func (o DomainRecordArrayOutput) ToDomainRecordArrayOutput() DomainRecordArrayOutput {
	return o
}

func (o DomainRecordArrayOutput) ToDomainRecordArrayOutputWithContext(ctx context.Context) DomainRecordArrayOutput {
	return o
}

func (o DomainRecordArrayOutput) Index(i pulumi.IntInput) DomainRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRecord {
		return vs[0].([]DomainRecord)[vs[1].(int)]
	}).(DomainRecordOutput)
}

type GetDomainProperties struct {
	Domain *DomainType `pulumi:"domain"`
}

type GetDomainPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainProperties)(nil)).Elem()
}

func (o GetDomainPropertiesOutput) ToGetDomainPropertiesOutput() GetDomainPropertiesOutput {
	return o
}

func (o GetDomainPropertiesOutput) ToGetDomainPropertiesOutputWithContext(ctx context.Context) GetDomainPropertiesOutput {
	return o
}

func (o GetDomainPropertiesOutput) Domain() DomainTypePtrOutput {
	return o.ApplyT(func(v GetDomainProperties) *DomainType { return v.Domain }).(DomainTypePtrOutput)
}

type GetDomainsRecordProperties struct {
	DomainRecord *DomainRecord `pulumi:"domainRecord"`
}

type GetDomainsRecordPropertiesOutput struct{ *pulumi.OutputState }

func (GetDomainsRecordPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsRecordProperties)(nil)).Elem()
}

func (o GetDomainsRecordPropertiesOutput) ToGetDomainsRecordPropertiesOutput() GetDomainsRecordPropertiesOutput {
	return o
}

func (o GetDomainsRecordPropertiesOutput) ToGetDomainsRecordPropertiesOutputWithContext(ctx context.Context) GetDomainsRecordPropertiesOutput {
	return o
}

func (o GetDomainsRecordPropertiesOutput) DomainRecord() DomainRecordPtrOutput {
	return o.ApplyT(func(v GetDomainsRecordProperties) *DomainRecord { return v.DomainRecord }).(DomainRecordPtrOutput)
}

type ListDomainsItems struct {
	// Array of volumes.
	Domains []DomainType `pulumi:"domains"`
	Links   *PageLinks   `pulumi:"links"`
	Meta    MetaMeta     `pulumi:"meta"`
}

type ListDomainsItemsOutput struct{ *pulumi.OutputState }

func (ListDomainsItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainsItems)(nil)).Elem()
}

func (o ListDomainsItemsOutput) ToListDomainsItemsOutput() ListDomainsItemsOutput {
	return o
}

func (o ListDomainsItemsOutput) ToListDomainsItemsOutputWithContext(ctx context.Context) ListDomainsItemsOutput {
	return o
}

// Array of volumes.
func (o ListDomainsItemsOutput) Domains() DomainTypeArrayOutput {
	return o.ApplyT(func(v ListDomainsItems) []DomainType { return v.Domains }).(DomainTypeArrayOutput)
}

func (o ListDomainsItemsOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListDomainsItems) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListDomainsItemsOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListDomainsItems) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

type ListDomainsRecordsItems struct {
	DomainRecords []DomainRecord `pulumi:"domainRecords"`
	Links         *PageLinks     `pulumi:"links"`
	Meta          MetaMeta       `pulumi:"meta"`
}

type ListDomainsRecordsItemsOutput struct{ *pulumi.OutputState }

func (ListDomainsRecordsItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDomainsRecordsItems)(nil)).Elem()
}

func (o ListDomainsRecordsItemsOutput) ToListDomainsRecordsItemsOutput() ListDomainsRecordsItemsOutput {
	return o
}

func (o ListDomainsRecordsItemsOutput) ToListDomainsRecordsItemsOutputWithContext(ctx context.Context) ListDomainsRecordsItemsOutput {
	return o
}

func (o ListDomainsRecordsItemsOutput) DomainRecords() DomainRecordArrayOutput {
	return o.ApplyT(func(v ListDomainsRecordsItems) []DomainRecord { return v.DomainRecords }).(DomainRecordArrayOutput)
}

func (o ListDomainsRecordsItemsOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListDomainsRecordsItems) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListDomainsRecordsItemsOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListDomainsRecordsItems) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

type MetaMeta struct {
	// Number of objects returned by the request.
	Total *int `pulumi:"total"`
}

type MetaMetaOutput struct{ *pulumi.OutputState }

func (MetaMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetaMeta)(nil)).Elem()
}

func (o MetaMetaOutput) ToMetaMetaOutput() MetaMetaOutput {
	return o
}

func (o MetaMetaOutput) ToMetaMetaOutputWithContext(ctx context.Context) MetaMetaOutput {
	return o
}

// Number of objects returned by the request.
func (o MetaMetaOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetaMeta) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type PageLinks struct {
	Pages *PageLinksPagesProperties `pulumi:"pages"`
}

type PageLinksOutput struct{ *pulumi.OutputState }

func (PageLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinks)(nil)).Elem()
}

func (o PageLinksOutput) ToPageLinksOutput() PageLinksOutput {
	return o
}

func (o PageLinksOutput) ToPageLinksOutputWithContext(ctx context.Context) PageLinksOutput {
	return o
}

func (o PageLinksOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v PageLinks) *PageLinksPagesProperties { return v.Pages }).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinks)(nil)).Elem()
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutput() PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutputWithContext(ctx context.Context) PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) Elem() PageLinksOutput {
	return o.ApplyT(func(v *PageLinks) PageLinks {
		if v != nil {
			return *v
		}
		var ret PageLinks
		return ret
	}).(PageLinksOutput)
}

func (o PageLinksPtrOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v *PageLinks) *PageLinksPagesProperties {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPagesProperties struct {
	First *string `pulumi:"first"`
	Last  *string `pulumi:"last"`
	Next  *string `pulumi:"next"`
	Prev  *string `pulumi:"prev"`
}

type PageLinksPagesPropertiesOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutput() PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutputWithContext(ctx context.Context) PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Prev }).(pulumi.StringPtrOutput)
}

type PageLinksPagesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutput() PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutputWithContext(ctx context.Context) PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) Elem() PageLinksPagesPropertiesOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) PageLinksPagesProperties {
		if v != nil {
			return *v
		}
		var ret PageLinksPagesProperties
		return ret
	}).(PageLinksPagesPropertiesOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Prev
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DomainTypeOutput{})
	pulumi.RegisterOutputType(DomainTypePtrOutput{})
	pulumi.RegisterOutputType(DomainTypeArrayOutput{})
	pulumi.RegisterOutputType(DomainRecordOutput{})
	pulumi.RegisterOutputType(DomainRecordPtrOutput{})
	pulumi.RegisterOutputType(DomainRecordArrayOutput{})
	pulumi.RegisterOutputType(GetDomainPropertiesOutput{})
	pulumi.RegisterOutputType(GetDomainsRecordPropertiesOutput{})
	pulumi.RegisterOutputType(ListDomainsItemsOutput{})
	pulumi.RegisterOutputType(ListDomainsRecordsItemsOutput{})
	pulumi.RegisterOutputType(MetaMetaOutput{})
	pulumi.RegisterOutputType(PageLinksOutput{})
	pulumi.RegisterOutputType(PageLinksPtrOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesPtrOutput{})
}
