// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDatabase(ctx *pulumi.Context, args *GetDatabaseArgs, opts ...pulumi.InvokeOption) (*GetDatabaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseResult
	err := ctx.Invoke("digitalocean-native:databases/v2:getDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetDatabaseArgs struct {
	// A unique identifier for a database cluster.
	DatabaseClusterUuid string `pulumi:"databaseClusterUuid"`
	// The name of the database.
	DatabaseName string `pulumi:"databaseName"`
}

type GetDatabaseResult struct {
	Items GetDatabaseProperties `pulumi:"items"`
}

func GetDatabaseOutput(ctx *pulumi.Context, args GetDatabaseOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseResult, error) {
			args := v.(GetDatabaseArgs)
			r, err := GetDatabase(ctx, &args, opts...)
			var s GetDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseResultOutput)
}

type GetDatabaseOutputArgs struct {
	// A unique identifier for a database cluster.
	DatabaseClusterUuid pulumi.StringInput `pulumi:"databaseClusterUuid"`
	// The name of the database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (GetDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseArgs)(nil)).Elem()
}

type GetDatabaseResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseResult)(nil)).Elem()
}

func (o GetDatabaseResultOutput) ToGetDatabaseResultOutput() GetDatabaseResultOutput {
	return o
}

func (o GetDatabaseResultOutput) ToGetDatabaseResultOutputWithContext(ctx context.Context) GetDatabaseResultOutput {
	return o
}

func (o GetDatabaseResultOutput) Items() GetDatabasePropertiesOutput {
	return o.ApplyT(func(v GetDatabaseResult) GetDatabaseProperties { return v.Items }).(GetDatabasePropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseResultOutput{})
}
