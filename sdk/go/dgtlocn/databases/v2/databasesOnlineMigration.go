// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DatabasesOnlineMigration struct {
	pulumi.CustomResourceState

	// The time the migration was initiated, in ISO 8601 format.
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// Enables SSL encryption when connecting to the source database.
	DisableSsl pulumi.BoolPtrOutput      `pulumi:"disableSsl"`
	Source     SourcePropertiesPtrOutput `pulumi:"source"`
	// The current status of the migration.
	Status StatusPtrOutput `pulumi:"status"`
}

// NewDatabasesOnlineMigration registers a new resource with the given unique name, arguments, and options.
func NewDatabasesOnlineMigration(ctx *pulumi.Context,
	name string, args *DatabasesOnlineMigrationArgs, opts ...pulumi.ResourceOption) (*DatabasesOnlineMigration, error) {
	if args == nil {
		args = &DatabasesOnlineMigrationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatabasesOnlineMigration
	err := ctx.RegisterResource("digitalocean-native:databases/v2:DatabasesOnlineMigration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabasesOnlineMigration gets an existing DatabasesOnlineMigration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabasesOnlineMigration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabasesOnlineMigrationState, opts ...pulumi.ResourceOption) (*DatabasesOnlineMigration, error) {
	var resource DatabasesOnlineMigration
	err := ctx.ReadResource("digitalocean-native:databases/v2:DatabasesOnlineMigration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabasesOnlineMigration resources.
type databasesOnlineMigrationState struct {
}

type DatabasesOnlineMigrationState struct {
}

func (DatabasesOnlineMigrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*databasesOnlineMigrationState)(nil)).Elem()
}

type databasesOnlineMigrationArgs struct {
	// A unique identifier for a database cluster.
	DatabaseClusterUuid *string `pulumi:"databaseClusterUuid"`
	// Enables SSL encryption when connecting to the source database.
	DisableSsl *bool             `pulumi:"disableSsl"`
	Source     *SourceProperties `pulumi:"source"`
}

// The set of arguments for constructing a DatabasesOnlineMigration resource.
type DatabasesOnlineMigrationArgs struct {
	// A unique identifier for a database cluster.
	DatabaseClusterUuid pulumi.StringPtrInput
	// Enables SSL encryption when connecting to the source database.
	DisableSsl pulumi.BoolPtrInput
	Source     SourcePropertiesPtrInput
}

func (DatabasesOnlineMigrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databasesOnlineMigrationArgs)(nil)).Elem()
}

type DatabasesOnlineMigrationInput interface {
	pulumi.Input

	ToDatabasesOnlineMigrationOutput() DatabasesOnlineMigrationOutput
	ToDatabasesOnlineMigrationOutputWithContext(ctx context.Context) DatabasesOnlineMigrationOutput
}

func (*DatabasesOnlineMigration) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasesOnlineMigration)(nil)).Elem()
}

func (i *DatabasesOnlineMigration) ToDatabasesOnlineMigrationOutput() DatabasesOnlineMigrationOutput {
	return i.ToDatabasesOnlineMigrationOutputWithContext(context.Background())
}

func (i *DatabasesOnlineMigration) ToDatabasesOnlineMigrationOutputWithContext(ctx context.Context) DatabasesOnlineMigrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabasesOnlineMigrationOutput)
}

type DatabasesOnlineMigrationOutput struct{ *pulumi.OutputState }

func (DatabasesOnlineMigrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabasesOnlineMigration)(nil)).Elem()
}

func (o DatabasesOnlineMigrationOutput) ToDatabasesOnlineMigrationOutput() DatabasesOnlineMigrationOutput {
	return o
}

func (o DatabasesOnlineMigrationOutput) ToDatabasesOnlineMigrationOutputWithContext(ctx context.Context) DatabasesOnlineMigrationOutput {
	return o
}

// The time the migration was initiated, in ISO 8601 format.
func (o DatabasesOnlineMigrationOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatabasesOnlineMigration) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Enables SSL encryption when connecting to the source database.
func (o DatabasesOnlineMigrationOutput) DisableSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatabasesOnlineMigration) pulumi.BoolPtrOutput { return v.DisableSsl }).(pulumi.BoolPtrOutput)
}

func (o DatabasesOnlineMigrationOutput) Source() SourcePropertiesPtrOutput {
	return o.ApplyT(func(v *DatabasesOnlineMigration) SourcePropertiesPtrOutput { return v.Source }).(SourcePropertiesPtrOutput)
}

// The current status of the migration.
func (o DatabasesOnlineMigrationOutput) Status() StatusPtrOutput {
	return o.ApplyT(func(v *DatabasesOnlineMigration) StatusPtrOutput { return v.Status }).(StatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabasesOnlineMigrationInput)(nil)).Elem(), &DatabasesOnlineMigration{})
	pulumi.RegisterOutputType(DatabasesOnlineMigrationOutput{})
}
