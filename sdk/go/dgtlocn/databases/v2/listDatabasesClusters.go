// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListDatabasesClusters(ctx *pulumi.Context, args *ListDatabasesClustersArgs, opts ...pulumi.InvokeOption) (*ListDatabasesClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListDatabasesClustersResult
	err := ctx.Invoke("digitalocean-native:databases/v2:listDatabasesClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDatabasesClustersArgs struct {
}

type ListDatabasesClustersResult struct {
	Databases []DatabaseCluster `pulumi:"databases"`
}

func ListDatabasesClustersOutput(ctx *pulumi.Context, args ListDatabasesClustersOutputArgs, opts ...pulumi.InvokeOption) ListDatabasesClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListDatabasesClustersResult, error) {
			args := v.(ListDatabasesClustersArgs)
			r, err := ListDatabasesClusters(ctx, &args, opts...)
			var s ListDatabasesClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListDatabasesClustersResultOutput)
}

type ListDatabasesClustersOutputArgs struct {
}

func (ListDatabasesClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDatabasesClustersArgs)(nil)).Elem()
}

type ListDatabasesClustersResultOutput struct{ *pulumi.OutputState }

func (ListDatabasesClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDatabasesClustersResult)(nil)).Elem()
}

func (o ListDatabasesClustersResultOutput) ToListDatabasesClustersResultOutput() ListDatabasesClustersResultOutput {
	return o
}

func (o ListDatabasesClustersResultOutput) ToListDatabasesClustersResultOutputWithContext(ctx context.Context) ListDatabasesClustersResultOutput {
	return o
}

func (o ListDatabasesClustersResultOutput) Databases() DatabaseClusterArrayOutput {
	return o.ApplyT(func(v ListDatabasesClustersResult) []DatabaseCluster { return v.Databases }).(DatabaseClusterArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDatabasesClustersResultOutput{})
}
