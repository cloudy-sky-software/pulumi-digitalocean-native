// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The protocol used for traffic to the load balancer. The possible values are: `http`, `https`, `http2`, `http3`, `tcp`, or `udp`. If you set the  `entry_protocol` to `udp`, the `target_protocol` must be set to `udp`.  When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
type ForwardingRuleEntryProtocol string

const (
	ForwardingRuleEntryProtocolHttp  = ForwardingRuleEntryProtocol("http")
	ForwardingRuleEntryProtocolHttps = ForwardingRuleEntryProtocol("https")
	ForwardingRuleEntryProtocolHttp2 = ForwardingRuleEntryProtocol("http2")
	ForwardingRuleEntryProtocolHttp3 = ForwardingRuleEntryProtocol("http3")
	ForwardingRuleEntryProtocolTcp   = ForwardingRuleEntryProtocol("tcp")
	ForwardingRuleEntryProtocolUdp   = ForwardingRuleEntryProtocol("udp")
)

func (ForwardingRuleEntryProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleEntryProtocol)(nil)).Elem()
}

func (e ForwardingRuleEntryProtocol) ToForwardingRuleEntryProtocolOutput() ForwardingRuleEntryProtocolOutput {
	return pulumi.ToOutput(e).(ForwardingRuleEntryProtocolOutput)
}

func (e ForwardingRuleEntryProtocol) ToForwardingRuleEntryProtocolOutputWithContext(ctx context.Context) ForwardingRuleEntryProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardingRuleEntryProtocolOutput)
}

func (e ForwardingRuleEntryProtocol) ToForwardingRuleEntryProtocolPtrOutput() ForwardingRuleEntryProtocolPtrOutput {
	return e.ToForwardingRuleEntryProtocolPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleEntryProtocol) ToForwardingRuleEntryProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleEntryProtocolPtrOutput {
	return ForwardingRuleEntryProtocol(e).ToForwardingRuleEntryProtocolOutputWithContext(ctx).ToForwardingRuleEntryProtocolPtrOutputWithContext(ctx)
}

func (e ForwardingRuleEntryProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleEntryProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleEntryProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleEntryProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardingRuleEntryProtocolOutput struct{ *pulumi.OutputState }

func (ForwardingRuleEntryProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleEntryProtocol)(nil)).Elem()
}

func (o ForwardingRuleEntryProtocolOutput) ToForwardingRuleEntryProtocolOutput() ForwardingRuleEntryProtocolOutput {
	return o
}

func (o ForwardingRuleEntryProtocolOutput) ToForwardingRuleEntryProtocolOutputWithContext(ctx context.Context) ForwardingRuleEntryProtocolOutput {
	return o
}

func (o ForwardingRuleEntryProtocolOutput) ToForwardingRuleEntryProtocolPtrOutput() ForwardingRuleEntryProtocolPtrOutput {
	return o.ToForwardingRuleEntryProtocolPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleEntryProtocolOutput) ToForwardingRuleEntryProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleEntryProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRuleEntryProtocol) *ForwardingRuleEntryProtocol {
		return &v
	}).(ForwardingRuleEntryProtocolPtrOutput)
}

func (o ForwardingRuleEntryProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardingRuleEntryProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleEntryProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardingRuleEntryProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleEntryProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleEntryProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardingRuleEntryProtocolPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleEntryProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleEntryProtocol)(nil)).Elem()
}

func (o ForwardingRuleEntryProtocolPtrOutput) ToForwardingRuleEntryProtocolPtrOutput() ForwardingRuleEntryProtocolPtrOutput {
	return o
}

func (o ForwardingRuleEntryProtocolPtrOutput) ToForwardingRuleEntryProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleEntryProtocolPtrOutput {
	return o
}

func (o ForwardingRuleEntryProtocolPtrOutput) Elem() ForwardingRuleEntryProtocolOutput {
	return o.ApplyT(func(v *ForwardingRuleEntryProtocol) ForwardingRuleEntryProtocol {
		if v != nil {
			return *v
		}
		var ret ForwardingRuleEntryProtocol
		return ret
	}).(ForwardingRuleEntryProtocolOutput)
}

func (o ForwardingRuleEntryProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleEntryProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardingRuleEntryProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardingRuleEntryProtocolInput is an input type that accepts values of the ForwardingRuleEntryProtocol enum
// A concrete instance of `ForwardingRuleEntryProtocolInput` can be one of the following:
//
//	ForwardingRuleEntryProtocolHttp
//	ForwardingRuleEntryProtocolHttps
//	ForwardingRuleEntryProtocolHttp2
//	ForwardingRuleEntryProtocolHttp3
//	ForwardingRuleEntryProtocolTcp
//	ForwardingRuleEntryProtocolUdp
type ForwardingRuleEntryProtocolInput interface {
	pulumi.Input

	ToForwardingRuleEntryProtocolOutput() ForwardingRuleEntryProtocolOutput
	ToForwardingRuleEntryProtocolOutputWithContext(context.Context) ForwardingRuleEntryProtocolOutput
}

var forwardingRuleEntryProtocolPtrType = reflect.TypeOf((**ForwardingRuleEntryProtocol)(nil)).Elem()

type ForwardingRuleEntryProtocolPtrInput interface {
	pulumi.Input

	ToForwardingRuleEntryProtocolPtrOutput() ForwardingRuleEntryProtocolPtrOutput
	ToForwardingRuleEntryProtocolPtrOutputWithContext(context.Context) ForwardingRuleEntryProtocolPtrOutput
}

type forwardingRuleEntryProtocolPtr string

func ForwardingRuleEntryProtocolPtr(v string) ForwardingRuleEntryProtocolPtrInput {
	return (*forwardingRuleEntryProtocolPtr)(&v)
}

func (*forwardingRuleEntryProtocolPtr) ElementType() reflect.Type {
	return forwardingRuleEntryProtocolPtrType
}

func (in *forwardingRuleEntryProtocolPtr) ToForwardingRuleEntryProtocolPtrOutput() ForwardingRuleEntryProtocolPtrOutput {
	return pulumi.ToOutput(in).(ForwardingRuleEntryProtocolPtrOutput)
}

func (in *forwardingRuleEntryProtocolPtr) ToForwardingRuleEntryProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleEntryProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardingRuleEntryProtocolPtrOutput)
}

// The protocol used for traffic from the load balancer to the backend Droplets. The possible values are: `http`, `https`, `http2`, `tcp`, or `udp`. If you set the `target_protocol` to `udp`, the `entry_protocol` must be set to  `udp`. When using UDP, the load balancer requires that you set up a health  check with a port that uses TCP, HTTP, or HTTPS to work properly.
type ForwardingRuleTargetProtocol string

const (
	ForwardingRuleTargetProtocolHttp  = ForwardingRuleTargetProtocol("http")
	ForwardingRuleTargetProtocolHttps = ForwardingRuleTargetProtocol("https")
	ForwardingRuleTargetProtocolHttp2 = ForwardingRuleTargetProtocol("http2")
	ForwardingRuleTargetProtocolTcp   = ForwardingRuleTargetProtocol("tcp")
	ForwardingRuleTargetProtocolUdp   = ForwardingRuleTargetProtocol("udp")
)

func (ForwardingRuleTargetProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleTargetProtocol)(nil)).Elem()
}

func (e ForwardingRuleTargetProtocol) ToForwardingRuleTargetProtocolOutput() ForwardingRuleTargetProtocolOutput {
	return pulumi.ToOutput(e).(ForwardingRuleTargetProtocolOutput)
}

func (e ForwardingRuleTargetProtocol) ToForwardingRuleTargetProtocolOutputWithContext(ctx context.Context) ForwardingRuleTargetProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ForwardingRuleTargetProtocolOutput)
}

func (e ForwardingRuleTargetProtocol) ToForwardingRuleTargetProtocolPtrOutput() ForwardingRuleTargetProtocolPtrOutput {
	return e.ToForwardingRuleTargetProtocolPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleTargetProtocol) ToForwardingRuleTargetProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleTargetProtocolPtrOutput {
	return ForwardingRuleTargetProtocol(e).ToForwardingRuleTargetProtocolOutputWithContext(ctx).ToForwardingRuleTargetProtocolPtrOutputWithContext(ctx)
}

func (e ForwardingRuleTargetProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleTargetProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ForwardingRuleTargetProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ForwardingRuleTargetProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ForwardingRuleTargetProtocolOutput struct{ *pulumi.OutputState }

func (ForwardingRuleTargetProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingRuleTargetProtocol)(nil)).Elem()
}

func (o ForwardingRuleTargetProtocolOutput) ToForwardingRuleTargetProtocolOutput() ForwardingRuleTargetProtocolOutput {
	return o
}

func (o ForwardingRuleTargetProtocolOutput) ToForwardingRuleTargetProtocolOutputWithContext(ctx context.Context) ForwardingRuleTargetProtocolOutput {
	return o
}

func (o ForwardingRuleTargetProtocolOutput) ToForwardingRuleTargetProtocolPtrOutput() ForwardingRuleTargetProtocolPtrOutput {
	return o.ToForwardingRuleTargetProtocolPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleTargetProtocolOutput) ToForwardingRuleTargetProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleTargetProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ForwardingRuleTargetProtocol) *ForwardingRuleTargetProtocol {
		return &v
	}).(ForwardingRuleTargetProtocolPtrOutput)
}

func (o ForwardingRuleTargetProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ForwardingRuleTargetProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleTargetProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ForwardingRuleTargetProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleTargetProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ForwardingRuleTargetProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ForwardingRuleTargetProtocolPtrOutput struct{ *pulumi.OutputState }

func (ForwardingRuleTargetProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ForwardingRuleTargetProtocol)(nil)).Elem()
}

func (o ForwardingRuleTargetProtocolPtrOutput) ToForwardingRuleTargetProtocolPtrOutput() ForwardingRuleTargetProtocolPtrOutput {
	return o
}

func (o ForwardingRuleTargetProtocolPtrOutput) ToForwardingRuleTargetProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleTargetProtocolPtrOutput {
	return o
}

func (o ForwardingRuleTargetProtocolPtrOutput) Elem() ForwardingRuleTargetProtocolOutput {
	return o.ApplyT(func(v *ForwardingRuleTargetProtocol) ForwardingRuleTargetProtocol {
		if v != nil {
			return *v
		}
		var ret ForwardingRuleTargetProtocol
		return ret
	}).(ForwardingRuleTargetProtocolOutput)
}

func (o ForwardingRuleTargetProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ForwardingRuleTargetProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ForwardingRuleTargetProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ForwardingRuleTargetProtocolInput is an input type that accepts values of the ForwardingRuleTargetProtocol enum
// A concrete instance of `ForwardingRuleTargetProtocolInput` can be one of the following:
//
//	ForwardingRuleTargetProtocolHttp
//	ForwardingRuleTargetProtocolHttps
//	ForwardingRuleTargetProtocolHttp2
//	ForwardingRuleTargetProtocolTcp
//	ForwardingRuleTargetProtocolUdp
type ForwardingRuleTargetProtocolInput interface {
	pulumi.Input

	ToForwardingRuleTargetProtocolOutput() ForwardingRuleTargetProtocolOutput
	ToForwardingRuleTargetProtocolOutputWithContext(context.Context) ForwardingRuleTargetProtocolOutput
}

var forwardingRuleTargetProtocolPtrType = reflect.TypeOf((**ForwardingRuleTargetProtocol)(nil)).Elem()

type ForwardingRuleTargetProtocolPtrInput interface {
	pulumi.Input

	ToForwardingRuleTargetProtocolPtrOutput() ForwardingRuleTargetProtocolPtrOutput
	ToForwardingRuleTargetProtocolPtrOutputWithContext(context.Context) ForwardingRuleTargetProtocolPtrOutput
}

type forwardingRuleTargetProtocolPtr string

func ForwardingRuleTargetProtocolPtr(v string) ForwardingRuleTargetProtocolPtrInput {
	return (*forwardingRuleTargetProtocolPtr)(&v)
}

func (*forwardingRuleTargetProtocolPtr) ElementType() reflect.Type {
	return forwardingRuleTargetProtocolPtrType
}

func (in *forwardingRuleTargetProtocolPtr) ToForwardingRuleTargetProtocolPtrOutput() ForwardingRuleTargetProtocolPtrOutput {
	return pulumi.ToOutput(in).(ForwardingRuleTargetProtocolPtrOutput)
}

func (in *forwardingRuleTargetProtocolPtr) ToForwardingRuleTargetProtocolPtrOutputWithContext(ctx context.Context) ForwardingRuleTargetProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ForwardingRuleTargetProtocolPtrOutput)
}

// The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https`, or `tcp`.
type HealthCheckProtocol string

const (
	HealthCheckProtocolHttp  = HealthCheckProtocol("http")
	HealthCheckProtocolHttps = HealthCheckProtocol("https")
	HealthCheckProtocolTcp   = HealthCheckProtocol("tcp")
)

func (HealthCheckProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckProtocol)(nil)).Elem()
}

func (e HealthCheckProtocol) ToHealthCheckProtocolOutput() HealthCheckProtocolOutput {
	return pulumi.ToOutput(e).(HealthCheckProtocolOutput)
}

func (e HealthCheckProtocol) ToHealthCheckProtocolOutputWithContext(ctx context.Context) HealthCheckProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(HealthCheckProtocolOutput)
}

func (e HealthCheckProtocol) ToHealthCheckProtocolPtrOutput() HealthCheckProtocolPtrOutput {
	return e.ToHealthCheckProtocolPtrOutputWithContext(context.Background())
}

func (e HealthCheckProtocol) ToHealthCheckProtocolPtrOutputWithContext(ctx context.Context) HealthCheckProtocolPtrOutput {
	return HealthCheckProtocol(e).ToHealthCheckProtocolOutputWithContext(ctx).ToHealthCheckProtocolPtrOutputWithContext(ctx)
}

func (e HealthCheckProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e HealthCheckProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e HealthCheckProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e HealthCheckProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type HealthCheckProtocolOutput struct{ *pulumi.OutputState }

func (HealthCheckProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthCheckProtocol)(nil)).Elem()
}

func (o HealthCheckProtocolOutput) ToHealthCheckProtocolOutput() HealthCheckProtocolOutput {
	return o
}

func (o HealthCheckProtocolOutput) ToHealthCheckProtocolOutputWithContext(ctx context.Context) HealthCheckProtocolOutput {
	return o
}

func (o HealthCheckProtocolOutput) ToHealthCheckProtocolPtrOutput() HealthCheckProtocolPtrOutput {
	return o.ToHealthCheckProtocolPtrOutputWithContext(context.Background())
}

func (o HealthCheckProtocolOutput) ToHealthCheckProtocolPtrOutputWithContext(ctx context.Context) HealthCheckProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HealthCheckProtocol) *HealthCheckProtocol {
		return &v
	}).(HealthCheckProtocolPtrOutput)
}

func (o HealthCheckProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o HealthCheckProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HealthCheckProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o HealthCheckProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HealthCheckProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e HealthCheckProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type HealthCheckProtocolPtrOutput struct{ *pulumi.OutputState }

func (HealthCheckProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HealthCheckProtocol)(nil)).Elem()
}

func (o HealthCheckProtocolPtrOutput) ToHealthCheckProtocolPtrOutput() HealthCheckProtocolPtrOutput {
	return o
}

func (o HealthCheckProtocolPtrOutput) ToHealthCheckProtocolPtrOutputWithContext(ctx context.Context) HealthCheckProtocolPtrOutput {
	return o
}

func (o HealthCheckProtocolPtrOutput) Elem() HealthCheckProtocolOutput {
	return o.ApplyT(func(v *HealthCheckProtocol) HealthCheckProtocol {
		if v != nil {
			return *v
		}
		var ret HealthCheckProtocol
		return ret
	}).(HealthCheckProtocolOutput)
}

func (o HealthCheckProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o HealthCheckProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *HealthCheckProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// HealthCheckProtocolInput is an input type that accepts values of the HealthCheckProtocol enum
// A concrete instance of `HealthCheckProtocolInput` can be one of the following:
//
//	HealthCheckProtocolHttp
//	HealthCheckProtocolHttps
//	HealthCheckProtocolTcp
type HealthCheckProtocolInput interface {
	pulumi.Input

	ToHealthCheckProtocolOutput() HealthCheckProtocolOutput
	ToHealthCheckProtocolOutputWithContext(context.Context) HealthCheckProtocolOutput
}

var healthCheckProtocolPtrType = reflect.TypeOf((**HealthCheckProtocol)(nil)).Elem()

type HealthCheckProtocolPtrInput interface {
	pulumi.Input

	ToHealthCheckProtocolPtrOutput() HealthCheckProtocolPtrOutput
	ToHealthCheckProtocolPtrOutputWithContext(context.Context) HealthCheckProtocolPtrOutput
}

type healthCheckProtocolPtr string

func HealthCheckProtocolPtr(v string) HealthCheckProtocolPtrInput {
	return (*healthCheckProtocolPtr)(&v)
}

func (*healthCheckProtocolPtr) ElementType() reflect.Type {
	return healthCheckProtocolPtrType
}

func (in *healthCheckProtocolPtr) ToHealthCheckProtocolPtrOutput() HealthCheckProtocolPtrOutput {
	return pulumi.ToOutput(in).(HealthCheckProtocolPtrOutput)
}

func (in *healthCheckProtocolPtr) ToHealthCheckProtocolPtrOutputWithContext(ctx context.Context) HealthCheckProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(HealthCheckProtocolPtrOutput)
}

// This field has been deprecated. You can no longer specify an algorithm for load balancers.
type LoadBalancerBaseAlgorithm string

const (
	LoadBalancerBaseAlgorithmRoundRobin       = LoadBalancerBaseAlgorithm("round_robin")
	LoadBalancerBaseAlgorithmLeastConnections = LoadBalancerBaseAlgorithm("least_connections")
)

func (LoadBalancerBaseAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBaseAlgorithm)(nil)).Elem()
}

func (e LoadBalancerBaseAlgorithm) ToLoadBalancerBaseAlgorithmOutput() LoadBalancerBaseAlgorithmOutput {
	return pulumi.ToOutput(e).(LoadBalancerBaseAlgorithmOutput)
}

func (e LoadBalancerBaseAlgorithm) ToLoadBalancerBaseAlgorithmOutputWithContext(ctx context.Context) LoadBalancerBaseAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerBaseAlgorithmOutput)
}

func (e LoadBalancerBaseAlgorithm) ToLoadBalancerBaseAlgorithmPtrOutput() LoadBalancerBaseAlgorithmPtrOutput {
	return e.ToLoadBalancerBaseAlgorithmPtrOutputWithContext(context.Background())
}

func (e LoadBalancerBaseAlgorithm) ToLoadBalancerBaseAlgorithmPtrOutputWithContext(ctx context.Context) LoadBalancerBaseAlgorithmPtrOutput {
	return LoadBalancerBaseAlgorithm(e).ToLoadBalancerBaseAlgorithmOutputWithContext(ctx).ToLoadBalancerBaseAlgorithmPtrOutputWithContext(ctx)
}

func (e LoadBalancerBaseAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerBaseAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerBaseAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerBaseAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerBaseAlgorithmOutput struct{ *pulumi.OutputState }

func (LoadBalancerBaseAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBaseAlgorithm)(nil)).Elem()
}

func (o LoadBalancerBaseAlgorithmOutput) ToLoadBalancerBaseAlgorithmOutput() LoadBalancerBaseAlgorithmOutput {
	return o
}

func (o LoadBalancerBaseAlgorithmOutput) ToLoadBalancerBaseAlgorithmOutputWithContext(ctx context.Context) LoadBalancerBaseAlgorithmOutput {
	return o
}

func (o LoadBalancerBaseAlgorithmOutput) ToLoadBalancerBaseAlgorithmPtrOutput() LoadBalancerBaseAlgorithmPtrOutput {
	return o.ToLoadBalancerBaseAlgorithmPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseAlgorithmOutput) ToLoadBalancerBaseAlgorithmPtrOutputWithContext(ctx context.Context) LoadBalancerBaseAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerBaseAlgorithm) *LoadBalancerBaseAlgorithm {
		return &v
	}).(LoadBalancerBaseAlgorithmPtrOutput)
}

func (o LoadBalancerBaseAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerBaseAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerBaseAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerBaseAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerBaseAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerBaseAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerBaseAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerBaseAlgorithm)(nil)).Elem()
}

func (o LoadBalancerBaseAlgorithmPtrOutput) ToLoadBalancerBaseAlgorithmPtrOutput() LoadBalancerBaseAlgorithmPtrOutput {
	return o
}

func (o LoadBalancerBaseAlgorithmPtrOutput) ToLoadBalancerBaseAlgorithmPtrOutputWithContext(ctx context.Context) LoadBalancerBaseAlgorithmPtrOutput {
	return o
}

func (o LoadBalancerBaseAlgorithmPtrOutput) Elem() LoadBalancerBaseAlgorithmOutput {
	return o.ApplyT(func(v *LoadBalancerBaseAlgorithm) LoadBalancerBaseAlgorithm {
		if v != nil {
			return *v
		}
		var ret LoadBalancerBaseAlgorithm
		return ret
	}).(LoadBalancerBaseAlgorithmOutput)
}

func (o LoadBalancerBaseAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerBaseAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerBaseAlgorithmInput is an input type that accepts values of the LoadBalancerBaseAlgorithm enum
// A concrete instance of `LoadBalancerBaseAlgorithmInput` can be one of the following:
//
//	LoadBalancerBaseAlgorithmRoundRobin
//	LoadBalancerBaseAlgorithmLeastConnections
type LoadBalancerBaseAlgorithmInput interface {
	pulumi.Input

	ToLoadBalancerBaseAlgorithmOutput() LoadBalancerBaseAlgorithmOutput
	ToLoadBalancerBaseAlgorithmOutputWithContext(context.Context) LoadBalancerBaseAlgorithmOutput
}

var loadBalancerBaseAlgorithmPtrType = reflect.TypeOf((**LoadBalancerBaseAlgorithm)(nil)).Elem()

type LoadBalancerBaseAlgorithmPtrInput interface {
	pulumi.Input

	ToLoadBalancerBaseAlgorithmPtrOutput() LoadBalancerBaseAlgorithmPtrOutput
	ToLoadBalancerBaseAlgorithmPtrOutputWithContext(context.Context) LoadBalancerBaseAlgorithmPtrOutput
}

type loadBalancerBaseAlgorithmPtr string

func LoadBalancerBaseAlgorithmPtr(v string) LoadBalancerBaseAlgorithmPtrInput {
	return (*loadBalancerBaseAlgorithmPtr)(&v)
}

func (*loadBalancerBaseAlgorithmPtr) ElementType() reflect.Type {
	return loadBalancerBaseAlgorithmPtrType
}

func (in *loadBalancerBaseAlgorithmPtr) ToLoadBalancerBaseAlgorithmPtrOutput() LoadBalancerBaseAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerBaseAlgorithmPtrOutput)
}

func (in *loadBalancerBaseAlgorithmPtr) ToLoadBalancerBaseAlgorithmPtrOutputWithContext(ctx context.Context) LoadBalancerBaseAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerBaseAlgorithmPtrOutput)
}

// This field has been replaced by the `size_unit` field for all regions except in AMS2, NYC2, and SFO1. Each available load balancer size now equates to the load balancer having a set number of nodes.
// * `lb-small` = 1 node
// * `lb-medium` = 3 nodes
// * `lb-large` = 6 nodes
//
// You can resize load balancers after creation up to once per hour. You cannot resize a load balancer within the first hour of its creation.
type LoadBalancerBaseSize string

const (
	LoadBalancerBaseSizeLbSmall  = LoadBalancerBaseSize("lb-small")
	LoadBalancerBaseSizeLbMedium = LoadBalancerBaseSize("lb-medium")
	LoadBalancerBaseSizeLbLarge  = LoadBalancerBaseSize("lb-large")
)

func (LoadBalancerBaseSize) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBaseSize)(nil)).Elem()
}

func (e LoadBalancerBaseSize) ToLoadBalancerBaseSizeOutput() LoadBalancerBaseSizeOutput {
	return pulumi.ToOutput(e).(LoadBalancerBaseSizeOutput)
}

func (e LoadBalancerBaseSize) ToLoadBalancerBaseSizeOutputWithContext(ctx context.Context) LoadBalancerBaseSizeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerBaseSizeOutput)
}

func (e LoadBalancerBaseSize) ToLoadBalancerBaseSizePtrOutput() LoadBalancerBaseSizePtrOutput {
	return e.ToLoadBalancerBaseSizePtrOutputWithContext(context.Background())
}

func (e LoadBalancerBaseSize) ToLoadBalancerBaseSizePtrOutputWithContext(ctx context.Context) LoadBalancerBaseSizePtrOutput {
	return LoadBalancerBaseSize(e).ToLoadBalancerBaseSizeOutputWithContext(ctx).ToLoadBalancerBaseSizePtrOutputWithContext(ctx)
}

func (e LoadBalancerBaseSize) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerBaseSize) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerBaseSize) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerBaseSize) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerBaseSizeOutput struct{ *pulumi.OutputState }

func (LoadBalancerBaseSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBaseSize)(nil)).Elem()
}

func (o LoadBalancerBaseSizeOutput) ToLoadBalancerBaseSizeOutput() LoadBalancerBaseSizeOutput {
	return o
}

func (o LoadBalancerBaseSizeOutput) ToLoadBalancerBaseSizeOutputWithContext(ctx context.Context) LoadBalancerBaseSizeOutput {
	return o
}

func (o LoadBalancerBaseSizeOutput) ToLoadBalancerBaseSizePtrOutput() LoadBalancerBaseSizePtrOutput {
	return o.ToLoadBalancerBaseSizePtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseSizeOutput) ToLoadBalancerBaseSizePtrOutputWithContext(ctx context.Context) LoadBalancerBaseSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerBaseSize) *LoadBalancerBaseSize {
		return &v
	}).(LoadBalancerBaseSizePtrOutput)
}

func (o LoadBalancerBaseSizeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerBaseSizeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerBaseSize) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerBaseSizeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseSizeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerBaseSize) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerBaseSizePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerBaseSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerBaseSize)(nil)).Elem()
}

func (o LoadBalancerBaseSizePtrOutput) ToLoadBalancerBaseSizePtrOutput() LoadBalancerBaseSizePtrOutput {
	return o
}

func (o LoadBalancerBaseSizePtrOutput) ToLoadBalancerBaseSizePtrOutputWithContext(ctx context.Context) LoadBalancerBaseSizePtrOutput {
	return o
}

func (o LoadBalancerBaseSizePtrOutput) Elem() LoadBalancerBaseSizeOutput {
	return o.ApplyT(func(v *LoadBalancerBaseSize) LoadBalancerBaseSize {
		if v != nil {
			return *v
		}
		var ret LoadBalancerBaseSize
		return ret
	}).(LoadBalancerBaseSizeOutput)
}

func (o LoadBalancerBaseSizePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseSizePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerBaseSize) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerBaseSizeInput is an input type that accepts values of the LoadBalancerBaseSize enum
// A concrete instance of `LoadBalancerBaseSizeInput` can be one of the following:
//
//	LoadBalancerBaseSizeLbSmall
//	LoadBalancerBaseSizeLbMedium
//	LoadBalancerBaseSizeLbLarge
type LoadBalancerBaseSizeInput interface {
	pulumi.Input

	ToLoadBalancerBaseSizeOutput() LoadBalancerBaseSizeOutput
	ToLoadBalancerBaseSizeOutputWithContext(context.Context) LoadBalancerBaseSizeOutput
}

var loadBalancerBaseSizePtrType = reflect.TypeOf((**LoadBalancerBaseSize)(nil)).Elem()

type LoadBalancerBaseSizePtrInput interface {
	pulumi.Input

	ToLoadBalancerBaseSizePtrOutput() LoadBalancerBaseSizePtrOutput
	ToLoadBalancerBaseSizePtrOutputWithContext(context.Context) LoadBalancerBaseSizePtrOutput
}

type loadBalancerBaseSizePtr string

func LoadBalancerBaseSizePtr(v string) LoadBalancerBaseSizePtrInput {
	return (*loadBalancerBaseSizePtr)(&v)
}

func (*loadBalancerBaseSizePtr) ElementType() reflect.Type {
	return loadBalancerBaseSizePtrType
}

func (in *loadBalancerBaseSizePtr) ToLoadBalancerBaseSizePtrOutput() LoadBalancerBaseSizePtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerBaseSizePtrOutput)
}

func (in *loadBalancerBaseSizePtr) ToLoadBalancerBaseSizePtrOutputWithContext(ctx context.Context) LoadBalancerBaseSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerBaseSizePtrOutput)
}

// A status string indicating the current state of the load balancer. This can be `new`, `active`, or `errored`.
type LoadBalancerBaseStatus string

const (
	LoadBalancerBaseStatusNew     = LoadBalancerBaseStatus("new")
	LoadBalancerBaseStatusActive  = LoadBalancerBaseStatus("active")
	LoadBalancerBaseStatusErrored = LoadBalancerBaseStatus("errored")
)

func (LoadBalancerBaseStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBaseStatus)(nil)).Elem()
}

func (e LoadBalancerBaseStatus) ToLoadBalancerBaseStatusOutput() LoadBalancerBaseStatusOutput {
	return pulumi.ToOutput(e).(LoadBalancerBaseStatusOutput)
}

func (e LoadBalancerBaseStatus) ToLoadBalancerBaseStatusOutputWithContext(ctx context.Context) LoadBalancerBaseStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerBaseStatusOutput)
}

func (e LoadBalancerBaseStatus) ToLoadBalancerBaseStatusPtrOutput() LoadBalancerBaseStatusPtrOutput {
	return e.ToLoadBalancerBaseStatusPtrOutputWithContext(context.Background())
}

func (e LoadBalancerBaseStatus) ToLoadBalancerBaseStatusPtrOutputWithContext(ctx context.Context) LoadBalancerBaseStatusPtrOutput {
	return LoadBalancerBaseStatus(e).ToLoadBalancerBaseStatusOutputWithContext(ctx).ToLoadBalancerBaseStatusPtrOutputWithContext(ctx)
}

func (e LoadBalancerBaseStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerBaseStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerBaseStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerBaseStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerBaseStatusOutput struct{ *pulumi.OutputState }

func (LoadBalancerBaseStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBaseStatus)(nil)).Elem()
}

func (o LoadBalancerBaseStatusOutput) ToLoadBalancerBaseStatusOutput() LoadBalancerBaseStatusOutput {
	return o
}

func (o LoadBalancerBaseStatusOutput) ToLoadBalancerBaseStatusOutputWithContext(ctx context.Context) LoadBalancerBaseStatusOutput {
	return o
}

func (o LoadBalancerBaseStatusOutput) ToLoadBalancerBaseStatusPtrOutput() LoadBalancerBaseStatusPtrOutput {
	return o.ToLoadBalancerBaseStatusPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseStatusOutput) ToLoadBalancerBaseStatusPtrOutputWithContext(ctx context.Context) LoadBalancerBaseStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerBaseStatus) *LoadBalancerBaseStatus {
		return &v
	}).(LoadBalancerBaseStatusPtrOutput)
}

func (o LoadBalancerBaseStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerBaseStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerBaseStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerBaseStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerBaseStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerBaseStatusPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerBaseStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerBaseStatus)(nil)).Elem()
}

func (o LoadBalancerBaseStatusPtrOutput) ToLoadBalancerBaseStatusPtrOutput() LoadBalancerBaseStatusPtrOutput {
	return o
}

func (o LoadBalancerBaseStatusPtrOutput) ToLoadBalancerBaseStatusPtrOutputWithContext(ctx context.Context) LoadBalancerBaseStatusPtrOutput {
	return o
}

func (o LoadBalancerBaseStatusPtrOutput) Elem() LoadBalancerBaseStatusOutput {
	return o.ApplyT(func(v *LoadBalancerBaseStatus) LoadBalancerBaseStatus {
		if v != nil {
			return *v
		}
		var ret LoadBalancerBaseStatus
		return ret
	}).(LoadBalancerBaseStatusOutput)
}

func (o LoadBalancerBaseStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerBaseStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerBaseStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerBaseStatusInput is an input type that accepts values of the LoadBalancerBaseStatus enum
// A concrete instance of `LoadBalancerBaseStatusInput` can be one of the following:
//
//	LoadBalancerBaseStatusNew
//	LoadBalancerBaseStatusActive
//	LoadBalancerBaseStatusErrored
type LoadBalancerBaseStatusInput interface {
	pulumi.Input

	ToLoadBalancerBaseStatusOutput() LoadBalancerBaseStatusOutput
	ToLoadBalancerBaseStatusOutputWithContext(context.Context) LoadBalancerBaseStatusOutput
}

var loadBalancerBaseStatusPtrType = reflect.TypeOf((**LoadBalancerBaseStatus)(nil)).Elem()

type LoadBalancerBaseStatusPtrInput interface {
	pulumi.Input

	ToLoadBalancerBaseStatusPtrOutput() LoadBalancerBaseStatusPtrOutput
	ToLoadBalancerBaseStatusPtrOutputWithContext(context.Context) LoadBalancerBaseStatusPtrOutput
}

type loadBalancerBaseStatusPtr string

func LoadBalancerBaseStatusPtr(v string) LoadBalancerBaseStatusPtrInput {
	return (*loadBalancerBaseStatusPtr)(&v)
}

func (*loadBalancerBaseStatusPtr) ElementType() reflect.Type {
	return loadBalancerBaseStatusPtrType
}

func (in *loadBalancerBaseStatusPtr) ToLoadBalancerBaseStatusPtrOutput() LoadBalancerBaseStatusPtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerBaseStatusPtrOutput)
}

func (in *loadBalancerBaseStatusPtr) ToLoadBalancerBaseStatusPtrOutputWithContext(ctx context.Context) LoadBalancerBaseStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerBaseStatusPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type LoadBalancerPropertiesRegionEnum string

const (
	LoadBalancerPropertiesRegionEnumAms1 = LoadBalancerPropertiesRegionEnum("ams1")
	LoadBalancerPropertiesRegionEnumAms2 = LoadBalancerPropertiesRegionEnum("ams2")
	LoadBalancerPropertiesRegionEnumAms3 = LoadBalancerPropertiesRegionEnum("ams3")
	LoadBalancerPropertiesRegionEnumBlr1 = LoadBalancerPropertiesRegionEnum("blr1")
	LoadBalancerPropertiesRegionEnumFra1 = LoadBalancerPropertiesRegionEnum("fra1")
	LoadBalancerPropertiesRegionEnumLon1 = LoadBalancerPropertiesRegionEnum("lon1")
	LoadBalancerPropertiesRegionEnumNyc1 = LoadBalancerPropertiesRegionEnum("nyc1")
	LoadBalancerPropertiesRegionEnumNyc2 = LoadBalancerPropertiesRegionEnum("nyc2")
	LoadBalancerPropertiesRegionEnumNyc3 = LoadBalancerPropertiesRegionEnum("nyc3")
	LoadBalancerPropertiesRegionEnumSfo1 = LoadBalancerPropertiesRegionEnum("sfo1")
	LoadBalancerPropertiesRegionEnumSfo2 = LoadBalancerPropertiesRegionEnum("sfo2")
	LoadBalancerPropertiesRegionEnumSfo3 = LoadBalancerPropertiesRegionEnum("sfo3")
	LoadBalancerPropertiesRegionEnumSgp1 = LoadBalancerPropertiesRegionEnum("sgp1")
	LoadBalancerPropertiesRegionEnumTor1 = LoadBalancerPropertiesRegionEnum("tor1")
)

func (LoadBalancerPropertiesRegionEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPropertiesRegionEnum)(nil)).Elem()
}

func (e LoadBalancerPropertiesRegionEnum) ToLoadBalancerPropertiesRegionEnumOutput() LoadBalancerPropertiesRegionEnumOutput {
	return pulumi.ToOutput(e).(LoadBalancerPropertiesRegionEnumOutput)
}

func (e LoadBalancerPropertiesRegionEnum) ToLoadBalancerPropertiesRegionEnumOutputWithContext(ctx context.Context) LoadBalancerPropertiesRegionEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoadBalancerPropertiesRegionEnumOutput)
}

func (e LoadBalancerPropertiesRegionEnum) ToLoadBalancerPropertiesRegionEnumPtrOutput() LoadBalancerPropertiesRegionEnumPtrOutput {
	return e.ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(context.Background())
}

func (e LoadBalancerPropertiesRegionEnum) ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesRegionEnumPtrOutput {
	return LoadBalancerPropertiesRegionEnum(e).ToLoadBalancerPropertiesRegionEnumOutputWithContext(ctx).ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(ctx)
}

func (e LoadBalancerPropertiesRegionEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerPropertiesRegionEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoadBalancerPropertiesRegionEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoadBalancerPropertiesRegionEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoadBalancerPropertiesRegionEnumOutput struct{ *pulumi.OutputState }

func (LoadBalancerPropertiesRegionEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerPropertiesRegionEnum)(nil)).Elem()
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToLoadBalancerPropertiesRegionEnumOutput() LoadBalancerPropertiesRegionEnumOutput {
	return o
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToLoadBalancerPropertiesRegionEnumOutputWithContext(ctx context.Context) LoadBalancerPropertiesRegionEnumOutput {
	return o
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToLoadBalancerPropertiesRegionEnumPtrOutput() LoadBalancerPropertiesRegionEnumPtrOutput {
	return o.ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(context.Background())
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesRegionEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerPropertiesRegionEnum) *LoadBalancerPropertiesRegionEnum {
		return &v
	}).(LoadBalancerPropertiesRegionEnumPtrOutput)
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerPropertiesRegionEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerPropertiesRegionEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoadBalancerPropertiesRegionEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoadBalancerPropertiesRegionEnumPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerPropertiesRegionEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerPropertiesRegionEnum)(nil)).Elem()
}

func (o LoadBalancerPropertiesRegionEnumPtrOutput) ToLoadBalancerPropertiesRegionEnumPtrOutput() LoadBalancerPropertiesRegionEnumPtrOutput {
	return o
}

func (o LoadBalancerPropertiesRegionEnumPtrOutput) ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesRegionEnumPtrOutput {
	return o
}

func (o LoadBalancerPropertiesRegionEnumPtrOutput) Elem() LoadBalancerPropertiesRegionEnumOutput {
	return o.ApplyT(func(v *LoadBalancerPropertiesRegionEnum) LoadBalancerPropertiesRegionEnum {
		if v != nil {
			return *v
		}
		var ret LoadBalancerPropertiesRegionEnum
		return ret
	}).(LoadBalancerPropertiesRegionEnumOutput)
}

func (o LoadBalancerPropertiesRegionEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoadBalancerPropertiesRegionEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoadBalancerPropertiesRegionEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoadBalancerPropertiesRegionEnumInput is an input type that accepts values of the LoadBalancerPropertiesRegionEnum enum
// A concrete instance of `LoadBalancerPropertiesRegionEnumInput` can be one of the following:
//
//	LoadBalancerPropertiesRegionEnumAms1
//	LoadBalancerPropertiesRegionEnumAms2
//	LoadBalancerPropertiesRegionEnumAms3
//	LoadBalancerPropertiesRegionEnumBlr1
//	LoadBalancerPropertiesRegionEnumFra1
//	LoadBalancerPropertiesRegionEnumLon1
//	LoadBalancerPropertiesRegionEnumNyc1
//	LoadBalancerPropertiesRegionEnumNyc2
//	LoadBalancerPropertiesRegionEnumNyc3
//	LoadBalancerPropertiesRegionEnumSfo1
//	LoadBalancerPropertiesRegionEnumSfo2
//	LoadBalancerPropertiesRegionEnumSfo3
//	LoadBalancerPropertiesRegionEnumSgp1
//	LoadBalancerPropertiesRegionEnumTor1
type LoadBalancerPropertiesRegionEnumInput interface {
	pulumi.Input

	ToLoadBalancerPropertiesRegionEnumOutput() LoadBalancerPropertiesRegionEnumOutput
	ToLoadBalancerPropertiesRegionEnumOutputWithContext(context.Context) LoadBalancerPropertiesRegionEnumOutput
}

var loadBalancerPropertiesRegionEnumPtrType = reflect.TypeOf((**LoadBalancerPropertiesRegionEnum)(nil)).Elem()

type LoadBalancerPropertiesRegionEnumPtrInput interface {
	pulumi.Input

	ToLoadBalancerPropertiesRegionEnumPtrOutput() LoadBalancerPropertiesRegionEnumPtrOutput
	ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(context.Context) LoadBalancerPropertiesRegionEnumPtrOutput
}

type loadBalancerPropertiesRegionEnumPtr string

func LoadBalancerPropertiesRegionEnumPtr(v string) LoadBalancerPropertiesRegionEnumPtrInput {
	return (*loadBalancerPropertiesRegionEnumPtr)(&v)
}

func (*loadBalancerPropertiesRegionEnumPtr) ElementType() reflect.Type {
	return loadBalancerPropertiesRegionEnumPtrType
}

func (in *loadBalancerPropertiesRegionEnumPtr) ToLoadBalancerPropertiesRegionEnumPtrOutput() LoadBalancerPropertiesRegionEnumPtrOutput {
	return pulumi.ToOutput(in).(LoadBalancerPropertiesRegionEnumPtrOutput)
}

func (in *loadBalancerPropertiesRegionEnumPtr) ToLoadBalancerPropertiesRegionEnumPtrOutputWithContext(ctx context.Context) LoadBalancerPropertiesRegionEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoadBalancerPropertiesRegionEnumPtrOutput)
}

// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`.
type StickySessionsType string

const (
	StickySessionsTypeCookies = StickySessionsType("cookies")
	StickySessionsTypeNone    = StickySessionsType("none")
)

func (StickySessionsType) ElementType() reflect.Type {
	return reflect.TypeOf((*StickySessionsType)(nil)).Elem()
}

func (e StickySessionsType) ToStickySessionsTypeOutput() StickySessionsTypeOutput {
	return pulumi.ToOutput(e).(StickySessionsTypeOutput)
}

func (e StickySessionsType) ToStickySessionsTypeOutputWithContext(ctx context.Context) StickySessionsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StickySessionsTypeOutput)
}

func (e StickySessionsType) ToStickySessionsTypePtrOutput() StickySessionsTypePtrOutput {
	return e.ToStickySessionsTypePtrOutputWithContext(context.Background())
}

func (e StickySessionsType) ToStickySessionsTypePtrOutputWithContext(ctx context.Context) StickySessionsTypePtrOutput {
	return StickySessionsType(e).ToStickySessionsTypeOutputWithContext(ctx).ToStickySessionsTypePtrOutputWithContext(ctx)
}

func (e StickySessionsType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StickySessionsType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StickySessionsType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StickySessionsType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StickySessionsTypeOutput struct{ *pulumi.OutputState }

func (StickySessionsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StickySessionsType)(nil)).Elem()
}

func (o StickySessionsTypeOutput) ToStickySessionsTypeOutput() StickySessionsTypeOutput {
	return o
}

func (o StickySessionsTypeOutput) ToStickySessionsTypeOutputWithContext(ctx context.Context) StickySessionsTypeOutput {
	return o
}

func (o StickySessionsTypeOutput) ToStickySessionsTypePtrOutput() StickySessionsTypePtrOutput {
	return o.ToStickySessionsTypePtrOutputWithContext(context.Background())
}

func (o StickySessionsTypeOutput) ToStickySessionsTypePtrOutputWithContext(ctx context.Context) StickySessionsTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StickySessionsType) *StickySessionsType {
		return &v
	}).(StickySessionsTypePtrOutput)
}

func (o StickySessionsTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StickySessionsTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StickySessionsType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StickySessionsTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StickySessionsTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StickySessionsType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StickySessionsTypePtrOutput struct{ *pulumi.OutputState }

func (StickySessionsTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StickySessionsType)(nil)).Elem()
}

func (o StickySessionsTypePtrOutput) ToStickySessionsTypePtrOutput() StickySessionsTypePtrOutput {
	return o
}

func (o StickySessionsTypePtrOutput) ToStickySessionsTypePtrOutputWithContext(ctx context.Context) StickySessionsTypePtrOutput {
	return o
}

func (o StickySessionsTypePtrOutput) Elem() StickySessionsTypeOutput {
	return o.ApplyT(func(v *StickySessionsType) StickySessionsType {
		if v != nil {
			return *v
		}
		var ret StickySessionsType
		return ret
	}).(StickySessionsTypeOutput)
}

func (o StickySessionsTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StickySessionsTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StickySessionsType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StickySessionsTypeInput is an input type that accepts values of the StickySessionsType enum
// A concrete instance of `StickySessionsTypeInput` can be one of the following:
//
//	StickySessionsTypeCookies
//	StickySessionsTypeNone
type StickySessionsTypeInput interface {
	pulumi.Input

	ToStickySessionsTypeOutput() StickySessionsTypeOutput
	ToStickySessionsTypeOutputWithContext(context.Context) StickySessionsTypeOutput
}

var stickySessionsTypePtrType = reflect.TypeOf((**StickySessionsType)(nil)).Elem()

type StickySessionsTypePtrInput interface {
	pulumi.Input

	ToStickySessionsTypePtrOutput() StickySessionsTypePtrOutput
	ToStickySessionsTypePtrOutputWithContext(context.Context) StickySessionsTypePtrOutput
}

type stickySessionsTypePtr string

func StickySessionsTypePtr(v string) StickySessionsTypePtrInput {
	return (*stickySessionsTypePtr)(&v)
}

func (*stickySessionsTypePtr) ElementType() reflect.Type {
	return stickySessionsTypePtrType
}

func (in *stickySessionsTypePtr) ToStickySessionsTypePtrOutput() StickySessionsTypePtrOutput {
	return pulumi.ToOutput(in).(StickySessionsTypePtrOutput)
}

func (in *stickySessionsTypePtr) ToStickySessionsTypePtrOutputWithContext(ctx context.Context) StickySessionsTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StickySessionsTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleEntryProtocolInput)(nil)).Elem(), ForwardingRuleEntryProtocol("http"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleEntryProtocolPtrInput)(nil)).Elem(), ForwardingRuleEntryProtocol("http"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleTargetProtocolInput)(nil)).Elem(), ForwardingRuleTargetProtocol("http"))
	pulumi.RegisterInputType(reflect.TypeOf((*ForwardingRuleTargetProtocolPtrInput)(nil)).Elem(), ForwardingRuleTargetProtocol("http"))
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckProtocolInput)(nil)).Elem(), HealthCheckProtocol("http"))
	pulumi.RegisterInputType(reflect.TypeOf((*HealthCheckProtocolPtrInput)(nil)).Elem(), HealthCheckProtocol("http"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerBaseAlgorithmInput)(nil)).Elem(), LoadBalancerBaseAlgorithm("round_robin"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerBaseAlgorithmPtrInput)(nil)).Elem(), LoadBalancerBaseAlgorithm("round_robin"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerBaseSizeInput)(nil)).Elem(), LoadBalancerBaseSize("lb-small"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerBaseSizePtrInput)(nil)).Elem(), LoadBalancerBaseSize("lb-small"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerBaseStatusInput)(nil)).Elem(), LoadBalancerBaseStatus("new"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerBaseStatusPtrInput)(nil)).Elem(), LoadBalancerBaseStatus("new"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPropertiesRegionEnumInput)(nil)).Elem(), LoadBalancerPropertiesRegionEnum("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerPropertiesRegionEnumPtrInput)(nil)).Elem(), LoadBalancerPropertiesRegionEnum("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*StickySessionsTypeInput)(nil)).Elem(), StickySessionsType("cookies"))
	pulumi.RegisterInputType(reflect.TypeOf((*StickySessionsTypePtrInput)(nil)).Elem(), StickySessionsType("cookies"))
	pulumi.RegisterOutputType(ForwardingRuleEntryProtocolOutput{})
	pulumi.RegisterOutputType(ForwardingRuleEntryProtocolPtrOutput{})
	pulumi.RegisterOutputType(ForwardingRuleTargetProtocolOutput{})
	pulumi.RegisterOutputType(ForwardingRuleTargetProtocolPtrOutput{})
	pulumi.RegisterOutputType(HealthCheckProtocolOutput{})
	pulumi.RegisterOutputType(HealthCheckProtocolPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerBaseAlgorithmOutput{})
	pulumi.RegisterOutputType(LoadBalancerBaseAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerBaseSizeOutput{})
	pulumi.RegisterOutputType(LoadBalancerBaseSizePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerBaseStatusOutput{})
	pulumi.RegisterOutputType(LoadBalancerBaseStatusPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerPropertiesRegionEnumOutput{})
	pulumi.RegisterOutputType(LoadBalancerPropertiesRegionEnumPtrOutput{})
	pulumi.RegisterOutputType(StickySessionsTypeOutput{})
	pulumi.RegisterOutputType(StickySessionsTypePtrOutput{})
}
