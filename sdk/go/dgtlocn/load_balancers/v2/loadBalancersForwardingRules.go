// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LoadBalancersForwardingRules struct {
	pulumi.CustomResourceState

	ForwardingRules ForwardingRuleArrayOutput `pulumi:"forwardingRules"`
}

// NewLoadBalancersForwardingRules registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancersForwardingRules(ctx *pulumi.Context,
	name string, args *LoadBalancersForwardingRulesArgs, opts ...pulumi.ResourceOption) (*LoadBalancersForwardingRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ForwardingRules == nil {
		return nil, errors.New("invalid value for required argument 'ForwardingRules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LoadBalancersForwardingRules
	err := ctx.RegisterResource("digitalocean-native:load_balancers/v2:LoadBalancersForwardingRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancersForwardingRules gets an existing LoadBalancersForwardingRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancersForwardingRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancersForwardingRulesState, opts ...pulumi.ResourceOption) (*LoadBalancersForwardingRules, error) {
	var resource LoadBalancersForwardingRules
	err := ctx.ReadResource("digitalocean-native:load_balancers/v2:LoadBalancersForwardingRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancersForwardingRules resources.
type loadBalancersForwardingRulesState struct {
}

type LoadBalancersForwardingRulesState struct {
}

func (LoadBalancersForwardingRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancersForwardingRulesState)(nil)).Elem()
}

type loadBalancersForwardingRulesArgs struct {
	ForwardingRules []ForwardingRule `pulumi:"forwardingRules"`
	// A unique identifier for a load balancer.
	LbId *string `pulumi:"lbId"`
}

// The set of arguments for constructing a LoadBalancersForwardingRules resource.
type LoadBalancersForwardingRulesArgs struct {
	ForwardingRules ForwardingRuleArrayInput
	// A unique identifier for a load balancer.
	LbId pulumi.StringPtrInput
}

func (LoadBalancersForwardingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancersForwardingRulesArgs)(nil)).Elem()
}

type LoadBalancersForwardingRulesInput interface {
	pulumi.Input

	ToLoadBalancersForwardingRulesOutput() LoadBalancersForwardingRulesOutput
	ToLoadBalancersForwardingRulesOutputWithContext(ctx context.Context) LoadBalancersForwardingRulesOutput
}

func (*LoadBalancersForwardingRules) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancersForwardingRules)(nil)).Elem()
}

func (i *LoadBalancersForwardingRules) ToLoadBalancersForwardingRulesOutput() LoadBalancersForwardingRulesOutput {
	return i.ToLoadBalancersForwardingRulesOutputWithContext(context.Background())
}

func (i *LoadBalancersForwardingRules) ToLoadBalancersForwardingRulesOutputWithContext(ctx context.Context) LoadBalancersForwardingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancersForwardingRulesOutput)
}

type LoadBalancersForwardingRulesOutput struct{ *pulumi.OutputState }

func (LoadBalancersForwardingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancersForwardingRules)(nil)).Elem()
}

func (o LoadBalancersForwardingRulesOutput) ToLoadBalancersForwardingRulesOutput() LoadBalancersForwardingRulesOutput {
	return o
}

func (o LoadBalancersForwardingRulesOutput) ToLoadBalancersForwardingRulesOutputWithContext(ctx context.Context) LoadBalancersForwardingRulesOutput {
	return o
}

func (o LoadBalancersForwardingRulesOutput) ForwardingRules() ForwardingRuleArrayOutput {
	return o.ApplyT(func(v *LoadBalancersForwardingRules) ForwardingRuleArrayOutput { return v.ForwardingRules }).(ForwardingRuleArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancersForwardingRulesInput)(nil)).Elem(), &LoadBalancersForwardingRules{})
	pulumi.RegisterOutputType(LoadBalancersForwardingRulesOutput{})
}
