// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupFunctionsNamespace(ctx *pulumi.Context, args *LookupFunctionsNamespaceArgs, opts ...pulumi.InvokeOption) (*LookupFunctionsNamespaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFunctionsNamespaceResult
	err := ctx.Invoke("digitalocean-native:functions/v2:getFunctionsNamespace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFunctionsNamespaceArgs struct {
	// The ID of the namespace to be managed.
	NamespaceId string `pulumi:"namespaceId"`
}

type LookupFunctionsNamespaceResult struct {
	Namespace *NamespaceInfo `pulumi:"namespace"`
}

func LookupFunctionsNamespaceOutput(ctx *pulumi.Context, args LookupFunctionsNamespaceOutputArgs, opts ...pulumi.InvokeOption) LookupFunctionsNamespaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFunctionsNamespaceResult, error) {
			args := v.(LookupFunctionsNamespaceArgs)
			r, err := LookupFunctionsNamespace(ctx, &args, opts...)
			var s LookupFunctionsNamespaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFunctionsNamespaceResultOutput)
}

type LookupFunctionsNamespaceOutputArgs struct {
	// The ID of the namespace to be managed.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
}

func (LookupFunctionsNamespaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionsNamespaceArgs)(nil)).Elem()
}

type LookupFunctionsNamespaceResultOutput struct{ *pulumi.OutputState }

func (LookupFunctionsNamespaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFunctionsNamespaceResult)(nil)).Elem()
}

func (o LookupFunctionsNamespaceResultOutput) ToLookupFunctionsNamespaceResultOutput() LookupFunctionsNamespaceResultOutput {
	return o
}

func (o LookupFunctionsNamespaceResultOutput) ToLookupFunctionsNamespaceResultOutputWithContext(ctx context.Context) LookupFunctionsNamespaceResultOutput {
	return o
}

func (o LookupFunctionsNamespaceResultOutput) Namespace() NamespaceInfoPtrOutput {
	return o.ApplyT(func(v LookupFunctionsNamespaceResult) *NamespaceInfo { return v.Namespace }).(NamespaceInfoPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFunctionsNamespaceResultOutput{})
}
