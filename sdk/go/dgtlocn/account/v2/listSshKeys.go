// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListSshKeys(ctx *pulumi.Context, args *ListSshKeysArgs, opts ...pulumi.InvokeOption) (*ListSshKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListSshKeysResult
	err := ctx.Invoke("digitalocean-native:account/v2:listSshKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSshKeysArgs struct {
}

type ListSshKeysResult struct {
	Items ListSshKeysItems `pulumi:"items"`
}

func ListSshKeysOutput(ctx *pulumi.Context, args ListSshKeysOutputArgs, opts ...pulumi.InvokeOption) ListSshKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSshKeysResult, error) {
			args := v.(ListSshKeysArgs)
			r, err := ListSshKeys(ctx, &args, opts...)
			var s ListSshKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListSshKeysResultOutput)
}

type ListSshKeysOutputArgs struct {
}

func (ListSshKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSshKeysArgs)(nil)).Elem()
}

type ListSshKeysResultOutput struct{ *pulumi.OutputState }

func (ListSshKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSshKeysResult)(nil)).Elem()
}

func (o ListSshKeysResultOutput) ToListSshKeysResultOutput() ListSshKeysResultOutput {
	return o
}

func (o ListSshKeysResultOutput) ToListSshKeysResultOutputWithContext(ctx context.Context) ListSshKeysResultOutput {
	return o
}

func (o ListSshKeysResultOutput) Items() ListSshKeysItemsOutput {
	return o.ApplyT(func(v ListSshKeysResult) ListSshKeysItems { return v.Items }).(ListSshKeysItemsOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSshKeysResultOutput{})
}
