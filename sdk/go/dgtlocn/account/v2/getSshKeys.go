// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSshKeys(ctx *pulumi.Context, args *LookupSshKeysArgs, opts ...pulumi.InvokeOption) (*LookupSshKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSshKeysResult
	err := ctx.Invoke("digitalocean-native:account/v2:getSshKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSshKeysArgs struct {
	// Either the ID or the fingerprint of an existing SSH key.
	SshKeyIdentifier string `pulumi:"sshKeyIdentifier"`
}

type LookupSshKeysResult struct {
	Items GetSshKeysProperties `pulumi:"items"`
}

func LookupSshKeysOutput(ctx *pulumi.Context, args LookupSshKeysOutputArgs, opts ...pulumi.InvokeOption) LookupSshKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSshKeysResult, error) {
			args := v.(LookupSshKeysArgs)
			r, err := LookupSshKeys(ctx, &args, opts...)
			var s LookupSshKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSshKeysResultOutput)
}

type LookupSshKeysOutputArgs struct {
	// Either the ID or the fingerprint of an existing SSH key.
	SshKeyIdentifier pulumi.StringInput `pulumi:"sshKeyIdentifier"`
}

func (LookupSshKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSshKeysArgs)(nil)).Elem()
}

type LookupSshKeysResultOutput struct{ *pulumi.OutputState }

func (LookupSshKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSshKeysResult)(nil)).Elem()
}

func (o LookupSshKeysResultOutput) ToLookupSshKeysResultOutput() LookupSshKeysResultOutput {
	return o
}

func (o LookupSshKeysResultOutput) ToLookupSshKeysResultOutputWithContext(ctx context.Context) LookupSshKeysResultOutput {
	return o
}

func (o LookupSshKeysResultOutput) Items() GetSshKeysPropertiesOutput {
	return o.ApplyT(func(v LookupSshKeysResult) GetSshKeysProperties { return v.Items }).(GetSshKeysPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSshKeysResultOutput{})
}
