// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Firewall struct {
	pulumi.CustomResourceState

	// A time value given in ISO8601 combined date and time format that represents when the firewall was created.
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// An array containing the IDs of the Droplets assigned to the firewall.
	DropletIds   pulumi.IntArrayOutput                    `pulumi:"dropletIds"`
	Firewall     FirewallTypePtrOutput                    `pulumi:"firewall"`
	InboundRules FirewallRulesInboundRulesItemArrayOutput `pulumi:"inboundRules"`
	// A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-).
	Name          pulumi.StringPtrOutput                    `pulumi:"name"`
	OutboundRules FirewallRulesOutboundRulesItemArrayOutput `pulumi:"outboundRules"`
	// An array of objects each containing the fields "droplet_id", "removing", and "status". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied.
	PendingChanges FirewallPropertiesPendingChangesItemPropertiesArrayOutput `pulumi:"pendingChanges"`
	// A status string indicating the current state of the firewall. This can be "waiting", "succeeded", or "failed".
	Status FirewallPropertiesStatusPtrOutput `pulumi:"status"`
	Tags   FirewallPropertiesTagsPtrOutput   `pulumi:"tags"`
}

// NewFirewall registers a new resource with the given unique name, arguments, and options.
func NewFirewall(ctx *pulumi.Context,
	name string, args *FirewallArgs, opts ...pulumi.ResourceOption) (*Firewall, error) {
	if args == nil {
		args = &FirewallArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Firewall
	err := ctx.RegisterResource("digitalocean-native:firewalls/v2:Firewall", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewall gets an existing Firewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewall(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallState, opts ...pulumi.ResourceOption) (*Firewall, error) {
	var resource Firewall
	err := ctx.ReadResource("digitalocean-native:firewalls/v2:Firewall", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Firewall resources.
type firewallState struct {
}

type FirewallState struct {
}

func (FirewallState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallState)(nil)).Elem()
}

type firewallArgs struct {
	// A time value given in ISO8601 combined date and time format that represents when the firewall was created.
	CreatedAt *string `pulumi:"createdAt"`
	// An array containing the IDs of the Droplets assigned to the firewall.
	DropletIds   []int                           `pulumi:"dropletIds"`
	InboundRules []FirewallRulesInboundRulesItem `pulumi:"inboundRules"`
	// A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-).
	Name          *string                          `pulumi:"name"`
	OutboundRules []FirewallRulesOutboundRulesItem `pulumi:"outboundRules"`
	// An array of objects each containing the fields "droplet_id", "removing", and "status". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied.
	PendingChanges []FirewallPropertiesPendingChangesItemProperties `pulumi:"pendingChanges"`
	// A status string indicating the current state of the firewall. This can be "waiting", "succeeded", or "failed".
	Status *FirewallPropertiesStatus `pulumi:"status"`
	Tags   *FirewallPropertiesTags   `pulumi:"tags"`
}

// The set of arguments for constructing a Firewall resource.
type FirewallArgs struct {
	// A time value given in ISO8601 combined date and time format that represents when the firewall was created.
	CreatedAt pulumi.StringPtrInput
	// An array containing the IDs of the Droplets assigned to the firewall.
	DropletIds   pulumi.IntArrayInput
	InboundRules FirewallRulesInboundRulesItemArrayInput
	// A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-).
	Name          pulumi.StringPtrInput
	OutboundRules FirewallRulesOutboundRulesItemArrayInput
	// An array of objects each containing the fields "droplet_id", "removing", and "status". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied.
	PendingChanges FirewallPropertiesPendingChangesItemPropertiesArrayInput
	// A status string indicating the current state of the firewall. This can be "waiting", "succeeded", or "failed".
	Status FirewallPropertiesStatusPtrInput
	Tags   FirewallPropertiesTagsPtrInput
}

func (FirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallArgs)(nil)).Elem()
}

type FirewallInput interface {
	pulumi.Input

	ToFirewallOutput() FirewallOutput
	ToFirewallOutputWithContext(ctx context.Context) FirewallOutput
}

func (*Firewall) ElementType() reflect.Type {
	return reflect.TypeOf((**Firewall)(nil)).Elem()
}

func (i *Firewall) ToFirewallOutput() FirewallOutput {
	return i.ToFirewallOutputWithContext(context.Background())
}

func (i *Firewall) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutput)
}

type FirewallOutput struct{ *pulumi.OutputState }

func (FirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Firewall)(nil)).Elem()
}

func (o FirewallOutput) ToFirewallOutput() FirewallOutput {
	return o
}

func (o FirewallOutput) ToFirewallOutputWithContext(ctx context.Context) FirewallOutput {
	return o
}

// A time value given in ISO8601 combined date and time format that represents when the firewall was created.
func (o FirewallOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// An array containing the IDs of the Droplets assigned to the firewall.
func (o FirewallOutput) DropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *Firewall) pulumi.IntArrayOutput { return v.DropletIds }).(pulumi.IntArrayOutput)
}

func (o FirewallOutput) Firewall() FirewallTypePtrOutput {
	return o.ApplyT(func(v *Firewall) FirewallTypePtrOutput { return v.Firewall }).(FirewallTypePtrOutput)
}

func (o FirewallOutput) InboundRules() FirewallRulesInboundRulesItemArrayOutput {
	return o.ApplyT(func(v *Firewall) FirewallRulesInboundRulesItemArrayOutput { return v.InboundRules }).(FirewallRulesInboundRulesItemArrayOutput)
}

// A human-readable name for a firewall. The name must begin with an alphanumeric character. Subsequent characters must either be alphanumeric characters, a period (.), or a dash (-).
func (o FirewallOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Firewall) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FirewallOutput) OutboundRules() FirewallRulesOutboundRulesItemArrayOutput {
	return o.ApplyT(func(v *Firewall) FirewallRulesOutboundRulesItemArrayOutput { return v.OutboundRules }).(FirewallRulesOutboundRulesItemArrayOutput)
}

// An array of objects each containing the fields "droplet_id", "removing", and "status". It is provided to detail exactly which Droplets are having their security policies updated. When empty, all changes have been successfully applied.
func (o FirewallOutput) PendingChanges() FirewallPropertiesPendingChangesItemPropertiesArrayOutput {
	return o.ApplyT(func(v *Firewall) FirewallPropertiesPendingChangesItemPropertiesArrayOutput { return v.PendingChanges }).(FirewallPropertiesPendingChangesItemPropertiesArrayOutput)
}

// A status string indicating the current state of the firewall. This can be "waiting", "succeeded", or "failed".
func (o FirewallOutput) Status() FirewallPropertiesStatusPtrOutput {
	return o.ApplyT(func(v *Firewall) FirewallPropertiesStatusPtrOutput { return v.Status }).(FirewallPropertiesStatusPtrOutput)
}

func (o FirewallOutput) Tags() FirewallPropertiesTagsPtrOutput {
	return o.ApplyT(func(v *Firewall) FirewallPropertiesTagsPtrOutput { return v.Tags }).(FirewallPropertiesTagsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInput)(nil)).Elem(), &Firewall{})
	pulumi.RegisterOutputType(FirewallOutput{})
}
