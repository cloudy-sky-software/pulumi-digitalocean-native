// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallsTag struct {
	pulumi.CustomResourceState

	Tags TagsOutput `pulumi:"tags"`
}

// NewFirewallsTag registers a new resource with the given unique name, arguments, and options.
func NewFirewallsTag(ctx *pulumi.Context,
	name string, args *FirewallsTagArgs, opts ...pulumi.ResourceOption) (*FirewallsTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Tags == nil {
		return nil, errors.New("invalid value for required argument 'Tags'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallsTag
	err := ctx.RegisterResource("digitalocean-native:firewalls/v2:FirewallsTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallsTag gets an existing FirewallsTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallsTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallsTagState, opts ...pulumi.ResourceOption) (*FirewallsTag, error) {
	var resource FirewallsTag
	err := ctx.ReadResource("digitalocean-native:firewalls/v2:FirewallsTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallsTag resources.
type firewallsTagState struct {
}

type FirewallsTagState struct {
}

func (FirewallsTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallsTagState)(nil)).Elem()
}

type firewallsTagArgs struct {
	// A unique ID that can be used to identify and reference a firewall.
	FirewallId *string `pulumi:"firewallId"`
	Tags       Tags    `pulumi:"tags"`
}

// The set of arguments for constructing a FirewallsTag resource.
type FirewallsTagArgs struct {
	// A unique ID that can be used to identify and reference a firewall.
	FirewallId pulumi.StringPtrInput
	Tags       TagsInput
}

func (FirewallsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallsTagArgs)(nil)).Elem()
}

type FirewallsTagInput interface {
	pulumi.Input

	ToFirewallsTagOutput() FirewallsTagOutput
	ToFirewallsTagOutputWithContext(ctx context.Context) FirewallsTagOutput
}

func (*FirewallsTag) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallsTag)(nil)).Elem()
}

func (i *FirewallsTag) ToFirewallsTagOutput() FirewallsTagOutput {
	return i.ToFirewallsTagOutputWithContext(context.Background())
}

func (i *FirewallsTag) ToFirewallsTagOutputWithContext(ctx context.Context) FirewallsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallsTagOutput)
}

type FirewallsTagOutput struct{ *pulumi.OutputState }

func (FirewallsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallsTag)(nil)).Elem()
}

func (o FirewallsTagOutput) ToFirewallsTagOutput() FirewallsTagOutput {
	return o
}

func (o FirewallsTagOutput) ToFirewallsTagOutputWithContext(ctx context.Context) FirewallsTagOutput {
	return o
}

func (o FirewallsTagOutput) Tags() TagsOutput {
	return o.ApplyT(func(v *FirewallsTag) TagsOutput { return v.Tags }).(TagsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallsTagInput)(nil)).Elem(), &FirewallsTag{})
	pulumi.RegisterOutputType(FirewallsTagOutput{})
}
