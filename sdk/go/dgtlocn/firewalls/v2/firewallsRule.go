// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FirewallsRule struct {
	pulumi.CustomResourceState

	InboundRules  FirewallRulesInboundRulesItemArrayOutput  `pulumi:"inboundRules"`
	OutboundRules FirewallRulesOutboundRulesItemArrayOutput `pulumi:"outboundRules"`
}

// NewFirewallsRule registers a new resource with the given unique name, arguments, and options.
func NewFirewallsRule(ctx *pulumi.Context,
	name string, args *FirewallsRuleArgs, opts ...pulumi.ResourceOption) (*FirewallsRule, error) {
	if args == nil {
		args = &FirewallsRuleArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallsRule
	err := ctx.RegisterResource("digitalocean-native:firewalls/v2:FirewallsRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallsRule gets an existing FirewallsRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallsRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallsRuleState, opts ...pulumi.ResourceOption) (*FirewallsRule, error) {
	var resource FirewallsRule
	err := ctx.ReadResource("digitalocean-native:firewalls/v2:FirewallsRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallsRule resources.
type firewallsRuleState struct {
}

type FirewallsRuleState struct {
}

func (FirewallsRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallsRuleState)(nil)).Elem()
}

type firewallsRuleArgs struct {
	// A unique ID that can be used to identify and reference a firewall.
	FirewallId    *string                          `pulumi:"firewallId"`
	InboundRules  []FirewallRulesInboundRulesItem  `pulumi:"inboundRules"`
	OutboundRules []FirewallRulesOutboundRulesItem `pulumi:"outboundRules"`
}

// The set of arguments for constructing a FirewallsRule resource.
type FirewallsRuleArgs struct {
	// A unique ID that can be used to identify and reference a firewall.
	FirewallId    pulumi.StringPtrInput
	InboundRules  FirewallRulesInboundRulesItemArrayInput
	OutboundRules FirewallRulesOutboundRulesItemArrayInput
}

func (FirewallsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallsRuleArgs)(nil)).Elem()
}

type FirewallsRuleInput interface {
	pulumi.Input

	ToFirewallsRuleOutput() FirewallsRuleOutput
	ToFirewallsRuleOutputWithContext(ctx context.Context) FirewallsRuleOutput
}

func (*FirewallsRule) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallsRule)(nil)).Elem()
}

func (i *FirewallsRule) ToFirewallsRuleOutput() FirewallsRuleOutput {
	return i.ToFirewallsRuleOutputWithContext(context.Background())
}

func (i *FirewallsRule) ToFirewallsRuleOutputWithContext(ctx context.Context) FirewallsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallsRuleOutput)
}

type FirewallsRuleOutput struct{ *pulumi.OutputState }

func (FirewallsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallsRule)(nil)).Elem()
}

func (o FirewallsRuleOutput) ToFirewallsRuleOutput() FirewallsRuleOutput {
	return o
}

func (o FirewallsRuleOutput) ToFirewallsRuleOutputWithContext(ctx context.Context) FirewallsRuleOutput {
	return o
}

func (o FirewallsRuleOutput) InboundRules() FirewallRulesInboundRulesItemArrayOutput {
	return o.ApplyT(func(v *FirewallsRule) FirewallRulesInboundRulesItemArrayOutput { return v.InboundRules }).(FirewallRulesInboundRulesItemArrayOutput)
}

func (o FirewallsRuleOutput) OutboundRules() FirewallRulesOutboundRulesItemArrayOutput {
	return o.ApplyT(func(v *FirewallsRule) FirewallRulesOutboundRulesItemArrayOutput { return v.OutboundRules }).(FirewallRulesOutboundRulesItemArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallsRuleInput)(nil)).Elem(), &FirewallsRule{})
	pulumi.RegisterOutputType(FirewallsRuleOutput{})
}
