// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CdnEndpoint struct {
	pulumi.CustomResourceState

	// The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
	CertificateId pulumi.StringPtrOutput `pulumi:"certificateId"`
	// A time value given in ISO8601 combined date and time format that represents when the CDN endpoint was created.
	CreatedAt pulumi.StringPtrOutput `pulumi:"createdAt"`
	// The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.
	CustomDomain pulumi.StringPtrOutput   `pulumi:"customDomain"`
	Endpoint     CdnEndpointTypePtrOutput `pulumi:"endpoint"`
	// The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space.
	Origin pulumi.StringOutput `pulumi:"origin"`
	// The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.
	Ttl CdnEndpointTtlPtrOutput `pulumi:"ttl"`
}

// NewCdnEndpoint registers a new resource with the given unique name, arguments, and options.
func NewCdnEndpoint(ctx *pulumi.Context,
	name string, args *CdnEndpointArgs, opts ...pulumi.ResourceOption) (*CdnEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Origin == nil {
		return nil, errors.New("invalid value for required argument 'Origin'")
	}
	if args.Ttl == nil {
		args.Ttl = CdnEndpointTtl(3600)
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CdnEndpoint
	err := ctx.RegisterResource("digitalocean-native:cdn/v2:CdnEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCdnEndpoint gets an existing CdnEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCdnEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CdnEndpointState, opts ...pulumi.ResourceOption) (*CdnEndpoint, error) {
	var resource CdnEndpoint
	err := ctx.ReadResource("digitalocean-native:cdn/v2:CdnEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CdnEndpoint resources.
type cdnEndpointState struct {
}

type CdnEndpointState struct {
}

func (CdnEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*cdnEndpointState)(nil)).Elem()
}

type cdnEndpointArgs struct {
	// The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
	CertificateId *string `pulumi:"certificateId"`
	// The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.
	CustomDomain *string `pulumi:"customDomain"`
	// The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space.
	Origin string `pulumi:"origin"`
	// The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.
	Ttl *CdnEndpointTtl `pulumi:"ttl"`
}

// The set of arguments for constructing a CdnEndpoint resource.
type CdnEndpointArgs struct {
	// The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
	CertificateId pulumi.StringPtrInput
	// The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.
	CustomDomain pulumi.StringPtrInput
	// The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space.
	Origin pulumi.StringInput
	// The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.
	Ttl CdnEndpointTtlPtrInput
}

func (CdnEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cdnEndpointArgs)(nil)).Elem()
}

type CdnEndpointInput interface {
	pulumi.Input

	ToCdnEndpointOutput() CdnEndpointOutput
	ToCdnEndpointOutputWithContext(ctx context.Context) CdnEndpointOutput
}

func (*CdnEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**CdnEndpoint)(nil)).Elem()
}

func (i *CdnEndpoint) ToCdnEndpointOutput() CdnEndpointOutput {
	return i.ToCdnEndpointOutputWithContext(context.Background())
}

func (i *CdnEndpoint) ToCdnEndpointOutputWithContext(ctx context.Context) CdnEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CdnEndpointOutput)
}

type CdnEndpointOutput struct{ *pulumi.OutputState }

func (CdnEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CdnEndpoint)(nil)).Elem()
}

func (o CdnEndpointOutput) ToCdnEndpointOutput() CdnEndpointOutput {
	return o
}

func (o CdnEndpointOutput) ToCdnEndpointOutputWithContext(ctx context.Context) CdnEndpointOutput {
	return o
}

// The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
func (o CdnEndpointOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnEndpoint) pulumi.StringPtrOutput { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the CDN endpoint was created.
func (o CdnEndpointOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnEndpoint) pulumi.StringPtrOutput { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The fully qualified domain name (FQDN) of the custom subdomain used with the CDN endpoint.
func (o CdnEndpointOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CdnEndpoint) pulumi.StringPtrOutput { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

func (o CdnEndpointOutput) Endpoint() CdnEndpointTypePtrOutput {
	return o.ApplyT(func(v *CdnEndpoint) CdnEndpointTypePtrOutput { return v.Endpoint }).(CdnEndpointTypePtrOutput)
}

// The fully qualified domain name (FQDN) for the origin server which provides the content for the CDN. This is currently restricted to a Space.
func (o CdnEndpointOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v *CdnEndpoint) pulumi.StringOutput { return v.Origin }).(pulumi.StringOutput)
}

// The amount of time the content is cached by the CDN's edge servers in seconds. TTL must be one of 60, 600, 3600, 86400, or 604800. Defaults to 3600 (one hour) when excluded.
func (o CdnEndpointOutput) Ttl() CdnEndpointTtlPtrOutput {
	return o.ApplyT(func(v *CdnEndpoint) CdnEndpointTtlPtrOutput { return v.Ttl }).(CdnEndpointTtlPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CdnEndpointInput)(nil)).Elem(), &CdnEndpoint{})
	pulumi.RegisterOutputType(CdnEndpointOutput{})
}
