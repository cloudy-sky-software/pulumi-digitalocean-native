// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupReservedIP(ctx *pulumi.Context, args *LookupReservedIPArgs, opts ...pulumi.InvokeOption) (*LookupReservedIPResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReservedIPResult
	err := ctx.Invoke("digitalocean-native:reserved_ips/v2:getReservedIP", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupReservedIPArgs struct {
	// A reserved IP address.
	ReservedIp string `pulumi:"reservedIp"`
}

type LookupReservedIPResult struct {
	ReservedIp *ReservedIpType `pulumi:"reservedIp"`
}

// Defaults sets the appropriate defaults for LookupReservedIPResult
func (val *LookupReservedIPResult) Defaults() *LookupReservedIPResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ReservedIp = tmp.ReservedIp.Defaults()

	return &tmp
}

func LookupReservedIPOutput(ctx *pulumi.Context, args LookupReservedIPOutputArgs, opts ...pulumi.InvokeOption) LookupReservedIPResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReservedIPResult, error) {
			args := v.(LookupReservedIPArgs)
			r, err := LookupReservedIP(ctx, &args, opts...)
			var s LookupReservedIPResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReservedIPResultOutput)
}

type LookupReservedIPOutputArgs struct {
	// A reserved IP address.
	ReservedIp pulumi.StringInput `pulumi:"reservedIp"`
}

func (LookupReservedIPOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservedIPArgs)(nil)).Elem()
}

type LookupReservedIPResultOutput struct{ *pulumi.OutputState }

func (LookupReservedIPResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservedIPResult)(nil)).Elem()
}

func (o LookupReservedIPResultOutput) ToLookupReservedIPResultOutput() LookupReservedIPResultOutput {
	return o
}

func (o LookupReservedIPResultOutput) ToLookupReservedIPResultOutputWithContext(ctx context.Context) LookupReservedIPResultOutput {
	return o
}

func (o LookupReservedIPResultOutput) ReservedIp() ReservedIpTypePtrOutput {
	return o.ApplyT(func(v LookupReservedIPResult) *ReservedIpType { return v.ReservedIp }).(ReservedIpTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReservedIPResultOutput{})
}
