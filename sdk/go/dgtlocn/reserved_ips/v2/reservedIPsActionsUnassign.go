// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReservedIPsActionsUnassign struct {
	pulumi.CustomResourceState

	Action ActionPtrOutput `pulumi:"action"`
	// The ID of the Droplet that the reserved IP will be unassigned from.
	DropletId pulumi.IntOutput `pulumi:"dropletId"`
	// The type of action to initiate for the reserved IP.
	Type ReservedIpActionTypeTypePtrOutput `pulumi:"type"`
}

// NewReservedIPsActionsUnassign registers a new resource with the given unique name, arguments, and options.
func NewReservedIPsActionsUnassign(ctx *pulumi.Context,
	name string, args *ReservedIPsActionsUnassignArgs, opts ...pulumi.ResourceOption) (*ReservedIPsActionsUnassign, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ReservedIPsActionsUnassign
	err := ctx.RegisterResource("digitalocean-native:reserved_ips/v2:ReservedIPsActionsUnassign", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReservedIPsActionsUnassign gets an existing ReservedIPsActionsUnassign resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReservedIPsActionsUnassign(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReservedIPsActionsUnassignState, opts ...pulumi.ResourceOption) (*ReservedIPsActionsUnassign, error) {
	var resource ReservedIPsActionsUnassign
	err := ctx.ReadResource("digitalocean-native:reserved_ips/v2:ReservedIPsActionsUnassign", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReservedIPsActionsUnassign resources.
type reservedIPsActionsUnassignState struct {
}

type ReservedIPsActionsUnassignState struct {
}

func (ReservedIPsActionsUnassignState) ElementType() reflect.Type {
	return reflect.TypeOf((*reservedIPsActionsUnassignState)(nil)).Elem()
}

type reservedIPsActionsUnassignArgs struct {
	// The ID of the Droplet that the reserved IP will be unassigned from.
	DropletId *int `pulumi:"dropletId"`
	// A reserved IP address.
	ReservedIp *string `pulumi:"reservedIp"`
	// The type of action to initiate for the reserved IP.
	Type ReservedIpActionTypeType `pulumi:"type"`
}

// The set of arguments for constructing a ReservedIPsActionsUnassign resource.
type ReservedIPsActionsUnassignArgs struct {
	// The ID of the Droplet that the reserved IP will be unassigned from.
	DropletId pulumi.IntPtrInput
	// A reserved IP address.
	ReservedIp pulumi.StringPtrInput
	// The type of action to initiate for the reserved IP.
	Type ReservedIpActionTypeTypeInput
}

func (ReservedIPsActionsUnassignArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*reservedIPsActionsUnassignArgs)(nil)).Elem()
}

type ReservedIPsActionsUnassignInput interface {
	pulumi.Input

	ToReservedIPsActionsUnassignOutput() ReservedIPsActionsUnassignOutput
	ToReservedIPsActionsUnassignOutputWithContext(ctx context.Context) ReservedIPsActionsUnassignOutput
}

func (*ReservedIPsActionsUnassign) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservedIPsActionsUnassign)(nil)).Elem()
}

func (i *ReservedIPsActionsUnassign) ToReservedIPsActionsUnassignOutput() ReservedIPsActionsUnassignOutput {
	return i.ToReservedIPsActionsUnassignOutputWithContext(context.Background())
}

func (i *ReservedIPsActionsUnassign) ToReservedIPsActionsUnassignOutputWithContext(ctx context.Context) ReservedIPsActionsUnassignOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservedIPsActionsUnassignOutput)
}

type ReservedIPsActionsUnassignOutput struct{ *pulumi.OutputState }

func (ReservedIPsActionsUnassignOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReservedIPsActionsUnassign)(nil)).Elem()
}

func (o ReservedIPsActionsUnassignOutput) ToReservedIPsActionsUnassignOutput() ReservedIPsActionsUnassignOutput {
	return o
}

func (o ReservedIPsActionsUnassignOutput) ToReservedIPsActionsUnassignOutputWithContext(ctx context.Context) ReservedIPsActionsUnassignOutput {
	return o
}

func (o ReservedIPsActionsUnassignOutput) Action() ActionPtrOutput {
	return o.ApplyT(func(v *ReservedIPsActionsUnassign) ActionPtrOutput { return v.Action }).(ActionPtrOutput)
}

// The ID of the Droplet that the reserved IP will be unassigned from.
func (o ReservedIPsActionsUnassignOutput) DropletId() pulumi.IntOutput {
	return o.ApplyT(func(v *ReservedIPsActionsUnassign) pulumi.IntOutput { return v.DropletId }).(pulumi.IntOutput)
}

// The type of action to initiate for the reserved IP.
func (o ReservedIPsActionsUnassignOutput) Type() ReservedIpActionTypeTypePtrOutput {
	return o.ApplyT(func(v *ReservedIPsActionsUnassign) ReservedIpActionTypeTypePtrOutput { return v.Type }).(ReservedIpActionTypeTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReservedIPsActionsUnassignInput)(nil)).Elem(), &ReservedIPsActionsUnassign{})
	pulumi.RegisterOutputType(ReservedIPsActionsUnassignOutput{})
}
