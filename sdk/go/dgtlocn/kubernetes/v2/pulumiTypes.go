// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AssociatedKubernetesResource struct {
	// The ID of a resource associated with a Kubernetes cluster.
	Id *string `pulumi:"id"`
	// The name of a resource associated with a Kubernetes cluster.
	Name *string `pulumi:"name"`
}

type AssociatedKubernetesResourceOutput struct{ *pulumi.OutputState }

func (AssociatedKubernetesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociatedKubernetesResource)(nil)).Elem()
}

func (o AssociatedKubernetesResourceOutput) ToAssociatedKubernetesResourceOutput() AssociatedKubernetesResourceOutput {
	return o
}

func (o AssociatedKubernetesResourceOutput) ToAssociatedKubernetesResourceOutputWithContext(ctx context.Context) AssociatedKubernetesResourceOutput {
	return o
}

// The ID of a resource associated with a Kubernetes cluster.
func (o AssociatedKubernetesResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssociatedKubernetesResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of a resource associated with a Kubernetes cluster.
func (o AssociatedKubernetesResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AssociatedKubernetesResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type AssociatedKubernetesResourceArrayOutput struct{ *pulumi.OutputState }

func (AssociatedKubernetesResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssociatedKubernetesResource)(nil)).Elem()
}

func (o AssociatedKubernetesResourceArrayOutput) ToAssociatedKubernetesResourceArrayOutput() AssociatedKubernetesResourceArrayOutput {
	return o
}

func (o AssociatedKubernetesResourceArrayOutput) ToAssociatedKubernetesResourceArrayOutputWithContext(ctx context.Context) AssociatedKubernetesResourceArrayOutput {
	return o
}

func (o AssociatedKubernetesResourceArrayOutput) Index(i pulumi.IntInput) AssociatedKubernetesResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AssociatedKubernetesResource {
		return vs[0].([]AssociatedKubernetesResource)[vs[1].(int)]
	}).(AssociatedKubernetesResourceOutput)
}

// An object containing the IDs of resources associated with a Kubernetes cluster.
type AssociatedKubernetesResources struct {
	// A list of names and IDs for associated load balancers that can be destroyed along with the cluster.
	LoadBalancers []AssociatedKubernetesResource `pulumi:"loadBalancers"`
	// A list of names and IDs for associated volume snapshots that can be destroyed along with the cluster.
	VolumeSnapshots []AssociatedKubernetesResource `pulumi:"volumeSnapshots"`
	// A list of names and IDs for associated volumes that can be destroyed along with the cluster.
	Volumes []AssociatedKubernetesResource `pulumi:"volumes"`
}

// An object containing the IDs of resources associated with a Kubernetes cluster.
type AssociatedKubernetesResourcesOutput struct{ *pulumi.OutputState }

func (AssociatedKubernetesResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssociatedKubernetesResources)(nil)).Elem()
}

func (o AssociatedKubernetesResourcesOutput) ToAssociatedKubernetesResourcesOutput() AssociatedKubernetesResourcesOutput {
	return o
}

func (o AssociatedKubernetesResourcesOutput) ToAssociatedKubernetesResourcesOutputWithContext(ctx context.Context) AssociatedKubernetesResourcesOutput {
	return o
}

// A list of names and IDs for associated load balancers that can be destroyed along with the cluster.
func (o AssociatedKubernetesResourcesOutput) LoadBalancers() AssociatedKubernetesResourceArrayOutput {
	return o.ApplyT(func(v AssociatedKubernetesResources) []AssociatedKubernetesResource { return v.LoadBalancers }).(AssociatedKubernetesResourceArrayOutput)
}

// A list of names and IDs for associated volume snapshots that can be destroyed along with the cluster.
func (o AssociatedKubernetesResourcesOutput) VolumeSnapshots() AssociatedKubernetesResourceArrayOutput {
	return o.ApplyT(func(v AssociatedKubernetesResources) []AssociatedKubernetesResource { return v.VolumeSnapshots }).(AssociatedKubernetesResourceArrayOutput)
}

// A list of names and IDs for associated volumes that can be destroyed along with the cluster.
func (o AssociatedKubernetesResourcesOutput) Volumes() AssociatedKubernetesResourceArrayOutput {
	return o.ApplyT(func(v AssociatedKubernetesResources) []AssociatedKubernetesResource { return v.Volumes }).(AssociatedKubernetesResourceArrayOutput)
}

type Cluster struct {
	// A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
	AutoUpgrade *bool `pulumi:"autoUpgrade"`
	// The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation.
	ClusterSubnet *string `pulumi:"clusterSubnet"`
	// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The base URL of the API server on the Kubernetes master node.
	Endpoint *string `pulumi:"endpoint"`
	// A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.
	Ha *bool `pulumi:"ha"`
	// A unique ID that can be used to identify and reference a Kubernetes cluster.
	Id *string `pulumi:"id"`
	// The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)
	Ipv4 *string `pulumi:"ipv4"`
	// An object specifying the maintenance window policy for the Kubernetes cluster.
	MaintenancePolicy *MaintenancePolicy `pulumi:"maintenancePolicy"`
	// A human-readable name for a Kubernetes cluster.
	Name string `pulumi:"name"`
	// An object specifying the details of the worker nodes available to the Kubernetes cluster.
	NodePools []KubernetesNodePoolType `pulumi:"nodePools"`
	// The slug identifier for the region where the Kubernetes cluster is located.
	Region string `pulumi:"region"`
	// A read-only boolean value indicating if a container registry is integrated with the cluster.
	RegistryEnabled *bool `pulumi:"registryEnabled"`
	// The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation.
	ServiceSubnet *string `pulumi:"serviceSubnet"`
	// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
	Status *ClusterStatusProperties `pulumi:"status"`
	// A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
	SurgeUpgrade *bool `pulumi:"surgeUpgrade"`
	// An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
	Tags []string `pulumi:"tags"`
	// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. "1.14"), the latest version within it will be used (e.g. "1.14.6-do.1"); if set to "latest", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions.
	Version string `pulumi:"version"`
	// A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned.
	VpcUuid *string `pulumi:"vpcUuid"`
}

// Defaults sets the appropriate defaults for Cluster
func (val *Cluster) Defaults() *Cluster {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.AutoUpgrade == nil {
		autoUpgrade_ := false
		tmp.AutoUpgrade = &autoUpgrade_
	}
	if tmp.Ha == nil {
		ha_ := false
		tmp.Ha = &ha_
	}
	if tmp.SurgeUpgrade == nil {
		surgeUpgrade_ := false
		tmp.SurgeUpgrade = &surgeUpgrade_
	}
	return &tmp
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
func (o ClusterOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Cluster) *bool { return v.AutoUpgrade }).(pulumi.BoolPtrOutput)
}

// The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation.
func (o ClusterOutput) ClusterSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.ClusterSubnet }).(pulumi.StringPtrOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created.
func (o ClusterOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The base URL of the API server on the Kubernetes master node.
func (o ClusterOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.
func (o ClusterOutput) Ha() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Cluster) *bool { return v.Ha }).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference a Kubernetes cluster.
func (o ClusterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)
func (o ClusterOutput) Ipv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.Ipv4 }).(pulumi.StringPtrOutput)
}

// An object specifying the maintenance window policy for the Kubernetes cluster.
func (o ClusterOutput) MaintenancePolicy() MaintenancePolicyPtrOutput {
	return o.ApplyT(func(v Cluster) *MaintenancePolicy { return v.MaintenancePolicy }).(MaintenancePolicyPtrOutput)
}

// A human-readable name for a Kubernetes cluster.
func (o ClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Name }).(pulumi.StringOutput)
}

// An object specifying the details of the worker nodes available to the Kubernetes cluster.
func (o ClusterOutput) NodePools() KubernetesNodePoolTypeArrayOutput {
	return o.ApplyT(func(v Cluster) []KubernetesNodePoolType { return v.NodePools }).(KubernetesNodePoolTypeArrayOutput)
}

// The slug identifier for the region where the Kubernetes cluster is located.
func (o ClusterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Region }).(pulumi.StringOutput)
}

// A read-only boolean value indicating if a container registry is integrated with the cluster.
func (o ClusterOutput) RegistryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Cluster) *bool { return v.RegistryEnabled }).(pulumi.BoolPtrOutput)
}

// The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation.
func (o ClusterOutput) ServiceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.ServiceSubnet }).(pulumi.StringPtrOutput)
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
func (o ClusterOutput) Status() ClusterStatusPropertiesPtrOutput {
	return o.ApplyT(func(v Cluster) *ClusterStatusProperties { return v.Status }).(ClusterStatusPropertiesPtrOutput)
}

// A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
func (o ClusterOutput) SurgeUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Cluster) *bool { return v.SurgeUpgrade }).(pulumi.BoolPtrOutput)
}

// An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
func (o ClusterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Cluster) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated.
func (o ClusterOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. "1.14"), the latest version within it will be used (e.g. "1.14.6-do.1"); if set to "latest", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions.
func (o ClusterOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v Cluster) string { return v.Version }).(pulumi.StringOutput)
}

// A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned.
func (o ClusterOutput) VpcUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Cluster) *string { return v.VpcUuid }).(pulumi.StringPtrOutput)
}

type ClusterPtrOutput struct{ *pulumi.OutputState }

func (ClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterPtrOutput) ToClusterPtrOutput() ClusterPtrOutput {
	return o
}

func (o ClusterPtrOutput) ToClusterPtrOutputWithContext(ctx context.Context) ClusterPtrOutput {
	return o
}

func (o ClusterPtrOutput) Elem() ClusterOutput {
	return o.ApplyT(func(v *Cluster) Cluster {
		if v != nil {
			return *v
		}
		var ret Cluster
		return ret
	}).(ClusterOutput)
}

// A boolean value indicating whether the cluster will be automatically upgraded to new patch releases during its maintenance window.
func (o ClusterPtrOutput) AutoUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) *bool {
		if v == nil {
			return nil
		}
		return v.AutoUpgrade
	}).(pulumi.BoolPtrOutput)
}

// The range of IP addresses in the overlay network of the Kubernetes cluster in CIDR notation.
func (o ClusterPtrOutput) ClusterSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.ClusterSubnet
	}).(pulumi.StringPtrOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was created.
func (o ClusterPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

// The base URL of the API server on the Kubernetes master node.
func (o ClusterPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// A boolean value indicating whether the control plane is run in a highly available configuration in the cluster. Highly available control planes incur less downtime. The property cannot be disabled.
func (o ClusterPtrOutput) Ha() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) *bool {
		if v == nil {
			return nil
		}
		return v.Ha
	}).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference a Kubernetes cluster.
func (o ClusterPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The public IPv4 address of the Kubernetes master node. This will not be set if high availability is configured on the cluster (v1.21+)
func (o ClusterPtrOutput) Ipv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.Ipv4
	}).(pulumi.StringPtrOutput)
}

// An object specifying the maintenance window policy for the Kubernetes cluster.
func (o ClusterPtrOutput) MaintenancePolicy() MaintenancePolicyPtrOutput {
	return o.ApplyT(func(v *Cluster) *MaintenancePolicy {
		if v == nil {
			return nil
		}
		return v.MaintenancePolicy
	}).(MaintenancePolicyPtrOutput)
}

// A human-readable name for a Kubernetes cluster.
func (o ClusterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// An object specifying the details of the worker nodes available to the Kubernetes cluster.
func (o ClusterPtrOutput) NodePools() KubernetesNodePoolTypeArrayOutput {
	return o.ApplyT(func(v *Cluster) []KubernetesNodePoolType {
		if v == nil {
			return nil
		}
		return v.NodePools
	}).(KubernetesNodePoolTypeArrayOutput)
}

// The slug identifier for the region where the Kubernetes cluster is located.
func (o ClusterPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// A read-only boolean value indicating if a container registry is integrated with the cluster.
func (o ClusterPtrOutput) RegistryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) *bool {
		if v == nil {
			return nil
		}
		return v.RegistryEnabled
	}).(pulumi.BoolPtrOutput)
}

// The range of assignable IP addresses for services running in the Kubernetes cluster in CIDR notation.
func (o ClusterPtrOutput) ServiceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.ServiceSubnet
	}).(pulumi.StringPtrOutput)
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
func (o ClusterPtrOutput) Status() ClusterStatusPropertiesPtrOutput {
	return o.ApplyT(func(v *Cluster) *ClusterStatusProperties {
		if v == nil {
			return nil
		}
		return v.Status
	}).(ClusterStatusPropertiesPtrOutput)
}

// A boolean value indicating whether surge upgrade is enabled/disabled for the cluster. Surge upgrade makes cluster upgrades fast and reliable by bringing up new nodes before destroying the outdated nodes.
func (o ClusterPtrOutput) SurgeUpgrade() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) *bool {
		if v == nil {
			return nil
		}
		return v.SurgeUpgrade
	}).(pulumi.BoolPtrOutput)
}

// An array of tags applied to the Kubernetes cluster. All clusters are automatically tagged `k8s` and `k8s:$K8S_CLUSTER_ID`.
func (o ClusterPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the Kubernetes cluster was last updated.
func (o ClusterPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the version of Kubernetes used for the cluster. If set to a minor version (e.g. "1.14"), the latest version within it will be used (e.g. "1.14.6-do.1"); if set to "latest", the latest published version will be used. See the `/v2/kubernetes/options` endpoint to find all currently available versions.
func (o ClusterPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

// A string specifying the UUID of the VPC to which the Kubernetes cluster is assigned.
func (o ClusterPtrOutput) VpcUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) *string {
		if v == nil {
			return nil
		}
		return v.VpcUuid
	}).(pulumi.StringPtrOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Cluster {
		return vs[0].([]Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
type ClusterStatusProperties struct {
	// An optional message providing additional information about the current cluster state.
	Message *string `pulumi:"message"`
	// A string indicating the current status of the cluster.
	State *ClusterStatusPropertiesState `pulumi:"state"`
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
type ClusterStatusPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterStatusPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStatusProperties)(nil)).Elem()
}

func (o ClusterStatusPropertiesOutput) ToClusterStatusPropertiesOutput() ClusterStatusPropertiesOutput {
	return o
}

func (o ClusterStatusPropertiesOutput) ToClusterStatusPropertiesOutputWithContext(ctx context.Context) ClusterStatusPropertiesOutput {
	return o
}

// An optional message providing additional information about the current cluster state.
func (o ClusterStatusPropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterStatusProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A string indicating the current status of the cluster.
func (o ClusterStatusPropertiesOutput) State() ClusterStatusPropertiesStatePtrOutput {
	return o.ApplyT(func(v ClusterStatusProperties) *ClusterStatusPropertiesState { return v.State }).(ClusterStatusPropertiesStatePtrOutput)
}

type ClusterStatusPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterStatusPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStatusProperties)(nil)).Elem()
}

func (o ClusterStatusPropertiesPtrOutput) ToClusterStatusPropertiesPtrOutput() ClusterStatusPropertiesPtrOutput {
	return o
}

func (o ClusterStatusPropertiesPtrOutput) ToClusterStatusPropertiesPtrOutputWithContext(ctx context.Context) ClusterStatusPropertiesPtrOutput {
	return o
}

func (o ClusterStatusPropertiesPtrOutput) Elem() ClusterStatusPropertiesOutput {
	return o.ApplyT(func(v *ClusterStatusProperties) ClusterStatusProperties {
		if v != nil {
			return *v
		}
		var ret ClusterStatusProperties
		return ret
	}).(ClusterStatusPropertiesOutput)
}

// An optional message providing additional information about the current cluster state.
func (o ClusterStatusPropertiesPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterStatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// A string indicating the current status of the cluster.
func (o ClusterStatusPropertiesPtrOutput) State() ClusterStatusPropertiesStatePtrOutput {
	return o.ApplyT(func(v *ClusterStatusProperties) *ClusterStatusPropertiesState {
		if v == nil {
			return nil
		}
		return v.State
	}).(ClusterStatusPropertiesStatePtrOutput)
}

type ClusterlintResults struct {
	// A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was completed.
	CompletedAt *string `pulumi:"completedAt"`
	// An array of diagnostics reporting potential problems for the given cluster.
	Diagnostics []ClusterlintResultsDiagnosticsItemProperties `pulumi:"diagnostics"`
	// A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was made.
	RequestedAt *string `pulumi:"requestedAt"`
	// Id of the clusterlint run that can be used later to fetch the diagnostics.
	RunId *string `pulumi:"runId"`
}

type ClusterlintResultsOutput struct{ *pulumi.OutputState }

func (ClusterlintResultsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterlintResults)(nil)).Elem()
}

func (o ClusterlintResultsOutput) ToClusterlintResultsOutput() ClusterlintResultsOutput {
	return o
}

func (o ClusterlintResultsOutput) ToClusterlintResultsOutputWithContext(ctx context.Context) ClusterlintResultsOutput {
	return o
}

// A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was completed.
func (o ClusterlintResultsOutput) CompletedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResults) *string { return v.CompletedAt }).(pulumi.StringPtrOutput)
}

// An array of diagnostics reporting potential problems for the given cluster.
func (o ClusterlintResultsOutput) Diagnostics() ClusterlintResultsDiagnosticsItemPropertiesArrayOutput {
	return o.ApplyT(func(v ClusterlintResults) []ClusterlintResultsDiagnosticsItemProperties { return v.Diagnostics }).(ClusterlintResultsDiagnosticsItemPropertiesArrayOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the schedule clusterlint run request was made.
func (o ClusterlintResultsOutput) RequestedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResults) *string { return v.RequestedAt }).(pulumi.StringPtrOutput)
}

// Id of the clusterlint run that can be used later to fetch the diagnostics.
func (o ClusterlintResultsOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResults) *string { return v.RunId }).(pulumi.StringPtrOutput)
}

type ClusterlintResultsDiagnosticsItemProperties struct {
	// The clusterlint check that resulted in the diagnostic.
	CheckName *string `pulumi:"checkName"`
	// Feedback about the object for users to fix.
	Message *string `pulumi:"message"`
	// Metadata about the Kubernetes API object the diagnostic is reported on.
	Object *ClusterlintResultsDiagnosticsItemPropertiesObjectProperties `pulumi:"object"`
	// Can be one of error, warning or suggestion.
	Severity *string `pulumi:"severity"`
}

type ClusterlintResultsDiagnosticsItemPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterlintResultsDiagnosticsItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterlintResultsDiagnosticsItemProperties)(nil)).Elem()
}

func (o ClusterlintResultsDiagnosticsItemPropertiesOutput) ToClusterlintResultsDiagnosticsItemPropertiesOutput() ClusterlintResultsDiagnosticsItemPropertiesOutput {
	return o
}

func (o ClusterlintResultsDiagnosticsItemPropertiesOutput) ToClusterlintResultsDiagnosticsItemPropertiesOutputWithContext(ctx context.Context) ClusterlintResultsDiagnosticsItemPropertiesOutput {
	return o
}

// The clusterlint check that resulted in the diagnostic.
func (o ClusterlintResultsDiagnosticsItemPropertiesOutput) CheckName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResultsDiagnosticsItemProperties) *string { return v.CheckName }).(pulumi.StringPtrOutput)
}

// Feedback about the object for users to fix.
func (o ClusterlintResultsDiagnosticsItemPropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResultsDiagnosticsItemProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// Metadata about the Kubernetes API object the diagnostic is reported on.
func (o ClusterlintResultsDiagnosticsItemPropertiesOutput) Object() ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput {
	return o.ApplyT(func(v ClusterlintResultsDiagnosticsItemProperties) *ClusterlintResultsDiagnosticsItemPropertiesObjectProperties {
		return v.Object
	}).(ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput)
}

// Can be one of error, warning or suggestion.
func (o ClusterlintResultsDiagnosticsItemPropertiesOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResultsDiagnosticsItemProperties) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

type ClusterlintResultsDiagnosticsItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (ClusterlintResultsDiagnosticsItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterlintResultsDiagnosticsItemProperties)(nil)).Elem()
}

func (o ClusterlintResultsDiagnosticsItemPropertiesArrayOutput) ToClusterlintResultsDiagnosticsItemPropertiesArrayOutput() ClusterlintResultsDiagnosticsItemPropertiesArrayOutput {
	return o
}

func (o ClusterlintResultsDiagnosticsItemPropertiesArrayOutput) ToClusterlintResultsDiagnosticsItemPropertiesArrayOutputWithContext(ctx context.Context) ClusterlintResultsDiagnosticsItemPropertiesArrayOutput {
	return o
}

func (o ClusterlintResultsDiagnosticsItemPropertiesArrayOutput) Index(i pulumi.IntInput) ClusterlintResultsDiagnosticsItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterlintResultsDiagnosticsItemProperties {
		return vs[0].([]ClusterlintResultsDiagnosticsItemProperties)[vs[1].(int)]
	}).(ClusterlintResultsDiagnosticsItemPropertiesOutput)
}

// Metadata about the Kubernetes API object the diagnostic is reported on.
type ClusterlintResultsDiagnosticsItemPropertiesObjectProperties struct {
	// The kind of Kubernetes API object
	Kind *string `pulumi:"kind"`
	// Name of the object
	Name *string `pulumi:"name"`
	// The namespace the object resides in the cluster.
	Namespace *string `pulumi:"namespace"`
}

// Metadata about the Kubernetes API object the diagnostic is reported on.
type ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput struct{ *pulumi.OutputState }

func (ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterlintResultsDiagnosticsItemPropertiesObjectProperties)(nil)).Elem()
}

func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput) ToClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput() ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput {
	return o
}

func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput) ToClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutputWithContext(ctx context.Context) ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput {
	return o
}

// The kind of Kubernetes API object
func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResultsDiagnosticsItemPropertiesObjectProperties) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the object
func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResultsDiagnosticsItemPropertiesObjectProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace the object resides in the cluster.
func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterlintResultsDiagnosticsItemPropertiesObjectProperties) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterlintResultsDiagnosticsItemPropertiesObjectProperties)(nil)).Elem()
}

func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput) ToClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput() ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput {
	return o
}

func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput) ToClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutputWithContext(ctx context.Context) ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput {
	return o
}

func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput) Elem() ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput {
	return o.ApplyT(func(v *ClusterlintResultsDiagnosticsItemPropertiesObjectProperties) ClusterlintResultsDiagnosticsItemPropertiesObjectProperties {
		if v != nil {
			return *v
		}
		var ret ClusterlintResultsDiagnosticsItemPropertiesObjectProperties
		return ret
	}).(ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput)
}

// The kind of Kubernetes API object
func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterlintResultsDiagnosticsItemPropertiesObjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the object
func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterlintResultsDiagnosticsItemPropertiesObjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace the object resides in the cluster.
func (o ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterlintResultsDiagnosticsItemPropertiesObjectProperties) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type Credentials struct {
	// A base64 encoding of bytes representing the certificate authority data for accessing the cluster.
	CertificateAuthorityData *string `pulumi:"certificateAuthorityData"`
	// A base64 encoding of bytes representing the x509 client
	// certificate data for access the cluster. This is only returned for clusters
	// without support for token-based authentication.
	//
	// Newly created Kubernetes clusters do not return credentials using
	// certificate-based authentication. For additional information,
	// [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
	ClientCertificateData *string `pulumi:"clientCertificateData"`
	// A base64 encoding of bytes representing the x509 client key
	// data for access the cluster. This is only returned for clusters without
	// support for token-based authentication.
	//
	// Newly created Kubernetes clusters do not return credentials using
	// certificate-based authentication. For additional information,
	// [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
	ClientKeyData *string `pulumi:"clientKeyData"`
	// A time value given in ISO8601 combined date and time format that represents when the access token expires.
	ExpiresAt *string `pulumi:"expiresAt"`
	// The URL used to access the cluster API server.
	Server *string `pulumi:"server"`
	// An access token used to authenticate with the cluster. This is only returned for clusters with support for token-based authentication.
	Token *string `pulumi:"token"`
}

type CredentialsOutput struct{ *pulumi.OutputState }

func (CredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Credentials)(nil)).Elem()
}

func (o CredentialsOutput) ToCredentialsOutput() CredentialsOutput {
	return o
}

func (o CredentialsOutput) ToCredentialsOutputWithContext(ctx context.Context) CredentialsOutput {
	return o
}

// A base64 encoding of bytes representing the certificate authority data for accessing the cluster.
func (o CredentialsOutput) CertificateAuthorityData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Credentials) *string { return v.CertificateAuthorityData }).(pulumi.StringPtrOutput)
}

// A base64 encoding of bytes representing the x509 client
// certificate data for access the cluster. This is only returned for clusters
// without support for token-based authentication.
//
// Newly created Kubernetes clusters do not return credentials using
// certificate-based authentication. For additional information,
// [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
func (o CredentialsOutput) ClientCertificateData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Credentials) *string { return v.ClientCertificateData }).(pulumi.StringPtrOutput)
}

// A base64 encoding of bytes representing the x509 client key
// data for access the cluster. This is only returned for clusters without
// support for token-based authentication.
//
// Newly created Kubernetes clusters do not return credentials using
// certificate-based authentication. For additional information,
// [see here](https://www.digitalocean.com/docs/kubernetes/how-to/connect-to-cluster/#authenticate).
func (o CredentialsOutput) ClientKeyData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Credentials) *string { return v.ClientKeyData }).(pulumi.StringPtrOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the access token expires.
func (o CredentialsOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Credentials) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// The URL used to access the cluster API server.
func (o CredentialsOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Credentials) *string { return v.Server }).(pulumi.StringPtrOutput)
}

// An access token used to authenticate with the cluster. This is only returned for clusters with support for token-based authentication.
func (o CredentialsOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Credentials) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type GetKubernetesAvailableUpgradeProperties struct {
	AvailableUpgradeVersions []KubernetesVersion `pulumi:"availableUpgradeVersions"`
}

type GetKubernetesAvailableUpgradePropertiesOutput struct{ *pulumi.OutputState }

func (GetKubernetesAvailableUpgradePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesAvailableUpgradeProperties)(nil)).Elem()
}

func (o GetKubernetesAvailableUpgradePropertiesOutput) ToGetKubernetesAvailableUpgradePropertiesOutput() GetKubernetesAvailableUpgradePropertiesOutput {
	return o
}

func (o GetKubernetesAvailableUpgradePropertiesOutput) ToGetKubernetesAvailableUpgradePropertiesOutputWithContext(ctx context.Context) GetKubernetesAvailableUpgradePropertiesOutput {
	return o
}

func (o GetKubernetesAvailableUpgradePropertiesOutput) AvailableUpgradeVersions() KubernetesVersionArrayOutput {
	return o.ApplyT(func(v GetKubernetesAvailableUpgradeProperties) []KubernetesVersion { return v.AvailableUpgradeVersions }).(KubernetesVersionArrayOutput)
}

type GetKubernetesClusterProperties struct {
	KubernetesCluster *Cluster `pulumi:"kubernetesCluster"`
}

// Defaults sets the appropriate defaults for GetKubernetesClusterProperties
func (val *GetKubernetesClusterProperties) Defaults() *GetKubernetesClusterProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.KubernetesCluster = tmp.KubernetesCluster.Defaults()

	return &tmp
}

type GetKubernetesClusterPropertiesOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterProperties)(nil)).Elem()
}

func (o GetKubernetesClusterPropertiesOutput) ToGetKubernetesClusterPropertiesOutput() GetKubernetesClusterPropertiesOutput {
	return o
}

func (o GetKubernetesClusterPropertiesOutput) ToGetKubernetesClusterPropertiesOutputWithContext(ctx context.Context) GetKubernetesClusterPropertiesOutput {
	return o
}

func (o GetKubernetesClusterPropertiesOutput) KubernetesCluster() ClusterPtrOutput {
	return o.ApplyT(func(v GetKubernetesClusterProperties) *Cluster { return v.KubernetesCluster }).(ClusterPtrOutput)
}

type GetKubernetesNodePoolProperties struct {
	NodePool *KubernetesNodePoolType `pulumi:"nodePool"`
}

type GetKubernetesNodePoolPropertiesOutput struct{ *pulumi.OutputState }

func (GetKubernetesNodePoolPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesNodePoolProperties)(nil)).Elem()
}

func (o GetKubernetesNodePoolPropertiesOutput) ToGetKubernetesNodePoolPropertiesOutput() GetKubernetesNodePoolPropertiesOutput {
	return o
}

func (o GetKubernetesNodePoolPropertiesOutput) ToGetKubernetesNodePoolPropertiesOutputWithContext(ctx context.Context) GetKubernetesNodePoolPropertiesOutput {
	return o
}

func (o GetKubernetesNodePoolPropertiesOutput) NodePool() KubernetesNodePoolTypePtrOutput {
	return o.ApplyT(func(v GetKubernetesNodePoolProperties) *KubernetesNodePoolType { return v.NodePool }).(KubernetesNodePoolTypePtrOutput)
}

type KubernetesNodePoolType struct {
	// A boolean value indicating whether auto-scaling is enabled for this node pool.
	AutoScale *bool `pulumi:"autoScale"`
	// The number of Droplet instances in the node pool.
	Count *int `pulumi:"count"`
	// A unique ID that can be used to identify and reference a specific node pool.
	Id *string `pulumi:"id"`
	// An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
	Labels interface{} `pulumi:"labels"`
	// The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
	MaxNodes *int `pulumi:"maxNodes"`
	// The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
	MinNodes *int `pulumi:"minNodes"`
	// A human-readable name for the node pool.
	Name *string `pulumi:"name"`
	// An object specifying the details of a specific worker node in a node pool.
	Nodes []Node `pulumi:"nodes"`
	// The slug identifier for the type of Droplet used as workers in the node pool.
	Size *string `pulumi:"size"`
	// An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
	Tags []string `pulumi:"tags"`
	// An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
	Taints []KubernetesNodePoolTaint `pulumi:"taints"`
}

// KubernetesNodePoolTypeInput is an input type that accepts KubernetesNodePoolTypeArgs and KubernetesNodePoolTypeOutput values.
// You can construct a concrete instance of `KubernetesNodePoolTypeInput` via:
//
//	KubernetesNodePoolTypeArgs{...}
type KubernetesNodePoolTypeInput interface {
	pulumi.Input

	ToKubernetesNodePoolTypeOutput() KubernetesNodePoolTypeOutput
	ToKubernetesNodePoolTypeOutputWithContext(context.Context) KubernetesNodePoolTypeOutput
}

type KubernetesNodePoolTypeArgs struct {
	// A boolean value indicating whether auto-scaling is enabled for this node pool.
	AutoScale pulumi.BoolPtrInput `pulumi:"autoScale"`
	// The number of Droplet instances in the node pool.
	Count pulumi.IntPtrInput `pulumi:"count"`
	// A unique ID that can be used to identify and reference a specific node pool.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
	Labels pulumi.Input `pulumi:"labels"`
	// The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
	MaxNodes pulumi.IntPtrInput `pulumi:"maxNodes"`
	// The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
	MinNodes pulumi.IntPtrInput `pulumi:"minNodes"`
	// A human-readable name for the node pool.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An object specifying the details of a specific worker node in a node pool.
	Nodes NodeArrayInput `pulumi:"nodes"`
	// The slug identifier for the type of Droplet used as workers in the node pool.
	Size pulumi.StringPtrInput `pulumi:"size"`
	// An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
	Taints KubernetesNodePoolTaintArrayInput `pulumi:"taints"`
}

func (KubernetesNodePoolTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolType)(nil)).Elem()
}

func (i KubernetesNodePoolTypeArgs) ToKubernetesNodePoolTypeOutput() KubernetesNodePoolTypeOutput {
	return i.ToKubernetesNodePoolTypeOutputWithContext(context.Background())
}

func (i KubernetesNodePoolTypeArgs) ToKubernetesNodePoolTypeOutputWithContext(ctx context.Context) KubernetesNodePoolTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolTypeOutput)
}

// KubernetesNodePoolTypeArrayInput is an input type that accepts KubernetesNodePoolTypeArray and KubernetesNodePoolTypeArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolTypeArrayInput` via:
//
//	KubernetesNodePoolTypeArray{ KubernetesNodePoolTypeArgs{...} }
type KubernetesNodePoolTypeArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolTypeArrayOutput() KubernetesNodePoolTypeArrayOutput
	ToKubernetesNodePoolTypeArrayOutputWithContext(context.Context) KubernetesNodePoolTypeArrayOutput
}

type KubernetesNodePoolTypeArray []KubernetesNodePoolTypeInput

func (KubernetesNodePoolTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolType)(nil)).Elem()
}

func (i KubernetesNodePoolTypeArray) ToKubernetesNodePoolTypeArrayOutput() KubernetesNodePoolTypeArrayOutput {
	return i.ToKubernetesNodePoolTypeArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolTypeArray) ToKubernetesNodePoolTypeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolTypeArrayOutput)
}

type KubernetesNodePoolTypeOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolType)(nil)).Elem()
}

func (o KubernetesNodePoolTypeOutput) ToKubernetesNodePoolTypeOutput() KubernetesNodePoolTypeOutput {
	return o
}

func (o KubernetesNodePoolTypeOutput) ToKubernetesNodePoolTypeOutputWithContext(ctx context.Context) KubernetesNodePoolTypeOutput {
	return o
}

// A boolean value indicating whether auto-scaling is enabled for this node pool.
func (o KubernetesNodePoolTypeOutput) AutoScale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) *bool { return v.AutoScale }).(pulumi.BoolPtrOutput)
}

// The number of Droplet instances in the node pool.
func (o KubernetesNodePoolTypeOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// A unique ID that can be used to identify and reference a specific node pool.
func (o KubernetesNodePoolTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
func (o KubernetesNodePoolTypeOutput) Labels() pulumi.AnyOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) interface{} { return v.Labels }).(pulumi.AnyOutput)
}

// The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
func (o KubernetesNodePoolTypeOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) *int { return v.MaxNodes }).(pulumi.IntPtrOutput)
}

// The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
func (o KubernetesNodePoolTypeOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) *int { return v.MinNodes }).(pulumi.IntPtrOutput)
}

// A human-readable name for the node pool.
func (o KubernetesNodePoolTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An object specifying the details of a specific worker node in a node pool.
func (o KubernetesNodePoolTypeOutput) Nodes() NodeArrayOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) []Node { return v.Nodes }).(NodeArrayOutput)
}

// The slug identifier for the type of Droplet used as workers in the node pool.
func (o KubernetesNodePoolTypeOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) *string { return v.Size }).(pulumi.StringPtrOutput)
}

// An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
func (o KubernetesNodePoolTypeOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
func (o KubernetesNodePoolTypeOutput) Taints() KubernetesNodePoolTaintArrayOutput {
	return o.ApplyT(func(v KubernetesNodePoolType) []KubernetesNodePoolTaint { return v.Taints }).(KubernetesNodePoolTaintArrayOutput)
}

type KubernetesNodePoolTypePtrOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesNodePoolType)(nil)).Elem()
}

func (o KubernetesNodePoolTypePtrOutput) ToKubernetesNodePoolTypePtrOutput() KubernetesNodePoolTypePtrOutput {
	return o
}

func (o KubernetesNodePoolTypePtrOutput) ToKubernetesNodePoolTypePtrOutputWithContext(ctx context.Context) KubernetesNodePoolTypePtrOutput {
	return o
}

func (o KubernetesNodePoolTypePtrOutput) Elem() KubernetesNodePoolTypeOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) KubernetesNodePoolType {
		if v != nil {
			return *v
		}
		var ret KubernetesNodePoolType
		return ret
	}).(KubernetesNodePoolTypeOutput)
}

// A boolean value indicating whether auto-scaling is enabled for this node pool.
func (o KubernetesNodePoolTypePtrOutput) AutoScale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) *bool {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(pulumi.BoolPtrOutput)
}

// The number of Droplet instances in the node pool.
func (o KubernetesNodePoolTypePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// A unique ID that can be used to identify and reference a specific node pool.
func (o KubernetesNodePoolTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An object of key/value mappings specifying labels to apply to all nodes in a pool. Labels will automatically be applied to all existing nodes and any subsequent nodes added to the pool. Note that when a label is removed, it is not deleted from the nodes in the pool.
func (o KubernetesNodePoolTypePtrOutput) Labels() pulumi.AnyOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) interface{} {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.AnyOutput)
}

// The maximum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
func (o KubernetesNodePoolTypePtrOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodes
	}).(pulumi.IntPtrOutput)
}

// The minimum number of nodes that this node pool can be auto-scaled to. The value will be `0` if `auto_scale` is set to `false`.
func (o KubernetesNodePoolTypePtrOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) *int {
		if v == nil {
			return nil
		}
		return v.MinNodes
	}).(pulumi.IntPtrOutput)
}

// A human-readable name for the node pool.
func (o KubernetesNodePoolTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// An object specifying the details of a specific worker node in a node pool.
func (o KubernetesNodePoolTypePtrOutput) Nodes() NodeArrayOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) []Node {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(NodeArrayOutput)
}

// The slug identifier for the type of Droplet used as workers in the node pool.
func (o KubernetesNodePoolTypePtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) *string {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.StringPtrOutput)
}

// An array containing the tags applied to the node pool. All node pools are automatically tagged `k8s`, `k8s-worker`, and `k8s:$K8S_CLUSTER_ID`.
func (o KubernetesNodePoolTypePtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// An array of taints to apply to all nodes in a pool. Taints will automatically be applied to all existing nodes and any subsequent nodes added to the pool. When a taint is removed, it is deleted from all nodes in the pool.
func (o KubernetesNodePoolTypePtrOutput) Taints() KubernetesNodePoolTaintArrayOutput {
	return o.ApplyT(func(v *KubernetesNodePoolType) []KubernetesNodePoolTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(KubernetesNodePoolTaintArrayOutput)
}

type KubernetesNodePoolTypeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolType)(nil)).Elem()
}

func (o KubernetesNodePoolTypeArrayOutput) ToKubernetesNodePoolTypeArrayOutput() KubernetesNodePoolTypeArrayOutput {
	return o
}

func (o KubernetesNodePoolTypeArrayOutput) ToKubernetesNodePoolTypeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolTypeArrayOutput {
	return o
}

func (o KubernetesNodePoolTypeArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolType {
		return vs[0].([]KubernetesNodePoolType)[vs[1].(int)]
	}).(KubernetesNodePoolTypeOutput)
}

type KubernetesNodePoolTaint struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`.
	Effect *KubernetesNodePoolTaintEffect `pulumi:"effect"`
	// An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
	Key *string `pulumi:"key"`
	// An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
	Value *string `pulumi:"value"`
}

// KubernetesNodePoolTaintInput is an input type that accepts KubernetesNodePoolTaintArgs and KubernetesNodePoolTaintOutput values.
// You can construct a concrete instance of `KubernetesNodePoolTaintInput` via:
//
//	KubernetesNodePoolTaintArgs{...}
type KubernetesNodePoolTaintInput interface {
	pulumi.Input

	ToKubernetesNodePoolTaintOutput() KubernetesNodePoolTaintOutput
	ToKubernetesNodePoolTaintOutputWithContext(context.Context) KubernetesNodePoolTaintOutput
}

type KubernetesNodePoolTaintArgs struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`.
	Effect KubernetesNodePoolTaintEffectPtrInput `pulumi:"effect"`
	// An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (KubernetesNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolTaint)(nil)).Elem()
}

func (i KubernetesNodePoolTaintArgs) ToKubernetesNodePoolTaintOutput() KubernetesNodePoolTaintOutput {
	return i.ToKubernetesNodePoolTaintOutputWithContext(context.Background())
}

func (i KubernetesNodePoolTaintArgs) ToKubernetesNodePoolTaintOutputWithContext(ctx context.Context) KubernetesNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolTaintOutput)
}

// KubernetesNodePoolTaintArrayInput is an input type that accepts KubernetesNodePoolTaintArray and KubernetesNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolTaintArrayInput` via:
//
//	KubernetesNodePoolTaintArray{ KubernetesNodePoolTaintArgs{...} }
type KubernetesNodePoolTaintArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolTaintArrayOutput() KubernetesNodePoolTaintArrayOutput
	ToKubernetesNodePoolTaintArrayOutputWithContext(context.Context) KubernetesNodePoolTaintArrayOutput
}

type KubernetesNodePoolTaintArray []KubernetesNodePoolTaintInput

func (KubernetesNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolTaint)(nil)).Elem()
}

func (i KubernetesNodePoolTaintArray) ToKubernetesNodePoolTaintArrayOutput() KubernetesNodePoolTaintArrayOutput {
	return i.ToKubernetesNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolTaintArray) ToKubernetesNodePoolTaintArrayOutputWithContext(ctx context.Context) KubernetesNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolTaintArrayOutput)
}

type KubernetesNodePoolTaintOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolTaint)(nil)).Elem()
}

func (o KubernetesNodePoolTaintOutput) ToKubernetesNodePoolTaintOutput() KubernetesNodePoolTaintOutput {
	return o
}

func (o KubernetesNodePoolTaintOutput) ToKubernetesNodePoolTaintOutputWithContext(ctx context.Context) KubernetesNodePoolTaintOutput {
	return o
}

// How the node reacts to pods that it won't tolerate. Available effect values are `NoSchedule`, `PreferNoSchedule`, and `NoExecute`.
func (o KubernetesNodePoolTaintOutput) Effect() KubernetesNodePoolTaintEffectPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolTaint) *KubernetesNodePoolTaintEffect { return v.Effect }).(KubernetesNodePoolTaintEffectPtrOutput)
}

// An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
func (o KubernetesNodePoolTaintOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolTaint) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// An arbitrary string. The `key` and `value` fields of the `taint` object form a key-value pair. For example, if the value of the `key` field is "special" and the value of the `value` field is "gpu", the key value pair would be `special=gpu`.
func (o KubernetesNodePoolTaintOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolTaint) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolTaint)(nil)).Elem()
}

func (o KubernetesNodePoolTaintArrayOutput) ToKubernetesNodePoolTaintArrayOutput() KubernetesNodePoolTaintArrayOutput {
	return o
}

func (o KubernetesNodePoolTaintArrayOutput) ToKubernetesNodePoolTaintArrayOutputWithContext(ctx context.Context) KubernetesNodePoolTaintArrayOutput {
	return o
}

func (o KubernetesNodePoolTaintArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolTaint {
		return vs[0].([]KubernetesNodePoolTaint)[vs[1].(int)]
	}).(KubernetesNodePoolTaintOutput)
}

type KubernetesOptions struct {
	Options *KubernetesOptionsOptionsProperties `pulumi:"options"`
}

type KubernetesOptionsOutput struct{ *pulumi.OutputState }

func (KubernetesOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesOptions)(nil)).Elem()
}

func (o KubernetesOptionsOutput) ToKubernetesOptionsOutput() KubernetesOptionsOutput {
	return o
}

func (o KubernetesOptionsOutput) ToKubernetesOptionsOutputWithContext(ctx context.Context) KubernetesOptionsOutput {
	return o
}

func (o KubernetesOptionsOutput) Options() KubernetesOptionsOptionsPropertiesPtrOutput {
	return o.ApplyT(func(v KubernetesOptions) *KubernetesOptionsOptionsProperties { return v.Options }).(KubernetesOptionsOptionsPropertiesPtrOutput)
}

type KubernetesOptionsOptionsProperties struct {
	Regions  []KubernetesRegion  `pulumi:"regions"`
	Sizes    []KubernetesSize    `pulumi:"sizes"`
	Versions []KubernetesVersion `pulumi:"versions"`
}

type KubernetesOptionsOptionsPropertiesOutput struct{ *pulumi.OutputState }

func (KubernetesOptionsOptionsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesOptionsOptionsProperties)(nil)).Elem()
}

func (o KubernetesOptionsOptionsPropertiesOutput) ToKubernetesOptionsOptionsPropertiesOutput() KubernetesOptionsOptionsPropertiesOutput {
	return o
}

func (o KubernetesOptionsOptionsPropertiesOutput) ToKubernetesOptionsOptionsPropertiesOutputWithContext(ctx context.Context) KubernetesOptionsOptionsPropertiesOutput {
	return o
}

func (o KubernetesOptionsOptionsPropertiesOutput) Regions() KubernetesRegionArrayOutput {
	return o.ApplyT(func(v KubernetesOptionsOptionsProperties) []KubernetesRegion { return v.Regions }).(KubernetesRegionArrayOutput)
}

func (o KubernetesOptionsOptionsPropertiesOutput) Sizes() KubernetesSizeArrayOutput {
	return o.ApplyT(func(v KubernetesOptionsOptionsProperties) []KubernetesSize { return v.Sizes }).(KubernetesSizeArrayOutput)
}

func (o KubernetesOptionsOptionsPropertiesOutput) Versions() KubernetesVersionArrayOutput {
	return o.ApplyT(func(v KubernetesOptionsOptionsProperties) []KubernetesVersion { return v.Versions }).(KubernetesVersionArrayOutput)
}

type KubernetesOptionsOptionsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (KubernetesOptionsOptionsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesOptionsOptionsProperties)(nil)).Elem()
}

func (o KubernetesOptionsOptionsPropertiesPtrOutput) ToKubernetesOptionsOptionsPropertiesPtrOutput() KubernetesOptionsOptionsPropertiesPtrOutput {
	return o
}

func (o KubernetesOptionsOptionsPropertiesPtrOutput) ToKubernetesOptionsOptionsPropertiesPtrOutputWithContext(ctx context.Context) KubernetesOptionsOptionsPropertiesPtrOutput {
	return o
}

func (o KubernetesOptionsOptionsPropertiesPtrOutput) Elem() KubernetesOptionsOptionsPropertiesOutput {
	return o.ApplyT(func(v *KubernetesOptionsOptionsProperties) KubernetesOptionsOptionsProperties {
		if v != nil {
			return *v
		}
		var ret KubernetesOptionsOptionsProperties
		return ret
	}).(KubernetesOptionsOptionsPropertiesOutput)
}

func (o KubernetesOptionsOptionsPropertiesPtrOutput) Regions() KubernetesRegionArrayOutput {
	return o.ApplyT(func(v *KubernetesOptionsOptionsProperties) []KubernetesRegion {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(KubernetesRegionArrayOutput)
}

func (o KubernetesOptionsOptionsPropertiesPtrOutput) Sizes() KubernetesSizeArrayOutput {
	return o.ApplyT(func(v *KubernetesOptionsOptionsProperties) []KubernetesSize {
		if v == nil {
			return nil
		}
		return v.Sizes
	}).(KubernetesSizeArrayOutput)
}

func (o KubernetesOptionsOptionsPropertiesPtrOutput) Versions() KubernetesVersionArrayOutput {
	return o.ApplyT(func(v *KubernetesOptionsOptionsProperties) []KubernetesVersion {
		if v == nil {
			return nil
		}
		return v.Versions
	}).(KubernetesVersionArrayOutput)
}

type KubernetesRegion struct {
	// A DigitalOcean region where Kubernetes is available.
	Name *string `pulumi:"name"`
	// The identifier for a region for use when creating a new cluster.
	Slug *string `pulumi:"slug"`
}

type KubernetesRegionOutput struct{ *pulumi.OutputState }

func (KubernetesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesRegion)(nil)).Elem()
}

func (o KubernetesRegionOutput) ToKubernetesRegionOutput() KubernetesRegionOutput {
	return o
}

func (o KubernetesRegionOutput) ToKubernetesRegionOutputWithContext(ctx context.Context) KubernetesRegionOutput {
	return o
}

// A DigitalOcean region where Kubernetes is available.
func (o KubernetesRegionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesRegion) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The identifier for a region for use when creating a new cluster.
func (o KubernetesRegionOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesRegion) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

type KubernetesRegionArrayOutput struct{ *pulumi.OutputState }

func (KubernetesRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesRegion)(nil)).Elem()
}

func (o KubernetesRegionArrayOutput) ToKubernetesRegionArrayOutput() KubernetesRegionArrayOutput {
	return o
}

func (o KubernetesRegionArrayOutput) ToKubernetesRegionArrayOutputWithContext(ctx context.Context) KubernetesRegionArrayOutput {
	return o
}

func (o KubernetesRegionArrayOutput) Index(i pulumi.IntInput) KubernetesRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesRegion {
		return vs[0].([]KubernetesRegion)[vs[1].(int)]
	}).(KubernetesRegionOutput)
}

type KubernetesSize struct {
	// A Droplet size available for use in a Kubernetes node pool.
	Name *string `pulumi:"name"`
	// The identifier for a size for use when creating a new cluster.
	Slug *string `pulumi:"slug"`
}

type KubernetesSizeOutput struct{ *pulumi.OutputState }

func (KubernetesSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesSize)(nil)).Elem()
}

func (o KubernetesSizeOutput) ToKubernetesSizeOutput() KubernetesSizeOutput {
	return o
}

func (o KubernetesSizeOutput) ToKubernetesSizeOutputWithContext(ctx context.Context) KubernetesSizeOutput {
	return o
}

// A Droplet size available for use in a Kubernetes node pool.
func (o KubernetesSizeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesSize) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The identifier for a size for use when creating a new cluster.
func (o KubernetesSizeOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesSize) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

type KubernetesSizeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesSize)(nil)).Elem()
}

func (o KubernetesSizeArrayOutput) ToKubernetesSizeArrayOutput() KubernetesSizeArrayOutput {
	return o
}

func (o KubernetesSizeArrayOutput) ToKubernetesSizeArrayOutputWithContext(ctx context.Context) KubernetesSizeArrayOutput {
	return o
}

func (o KubernetesSizeArrayOutput) Index(i pulumi.IntInput) KubernetesSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesSize {
		return vs[0].([]KubernetesSize)[vs[1].(int)]
	}).(KubernetesSizeOutput)
}

type KubernetesVersion struct {
	// The upstream version string for the version of Kubernetes provided by a given slug.
	KubernetesVersion *string `pulumi:"kubernetesVersion"`
	// The slug identifier for an available version of Kubernetes for use when creating or updating a cluster. The string contains both the upstream version of Kubernetes as well as the DigitalOcean revision.
	Slug *string `pulumi:"slug"`
	// The features available with the version of Kubernetes provided by a given slug.
	SupportedFeatures []string `pulumi:"supportedFeatures"`
}

type KubernetesVersionOutput struct{ *pulumi.OutputState }

func (KubernetesVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesVersion)(nil)).Elem()
}

func (o KubernetesVersionOutput) ToKubernetesVersionOutput() KubernetesVersionOutput {
	return o
}

func (o KubernetesVersionOutput) ToKubernetesVersionOutputWithContext(ctx context.Context) KubernetesVersionOutput {
	return o
}

// The upstream version string for the version of Kubernetes provided by a given slug.
func (o KubernetesVersionOutput) KubernetesVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesVersion) *string { return v.KubernetesVersion }).(pulumi.StringPtrOutput)
}

// The slug identifier for an available version of Kubernetes for use when creating or updating a cluster. The string contains both the upstream version of Kubernetes as well as the DigitalOcean revision.
func (o KubernetesVersionOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesVersion) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

// The features available with the version of Kubernetes provided by a given slug.
func (o KubernetesVersionOutput) SupportedFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesVersion) []string { return v.SupportedFeatures }).(pulumi.StringArrayOutput)
}

type KubernetesVersionArrayOutput struct{ *pulumi.OutputState }

func (KubernetesVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesVersion)(nil)).Elem()
}

func (o KubernetesVersionArrayOutput) ToKubernetesVersionArrayOutput() KubernetesVersionArrayOutput {
	return o
}

func (o KubernetesVersionArrayOutput) ToKubernetesVersionArrayOutputWithContext(ctx context.Context) KubernetesVersionArrayOutput {
	return o
}

func (o KubernetesVersionArrayOutput) Index(i pulumi.IntInput) KubernetesVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesVersion {
		return vs[0].([]KubernetesVersion)[vs[1].(int)]
	}).(KubernetesVersionOutput)
}

type ListKubernetesClustersItems struct {
	KubernetesClusters []Cluster  `pulumi:"kubernetesClusters"`
	Links              *PageLinks `pulumi:"links"`
	Meta               MetaMeta   `pulumi:"meta"`
}

type ListKubernetesClustersItemsOutput struct{ *pulumi.OutputState }

func (ListKubernetesClustersItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListKubernetesClustersItems)(nil)).Elem()
}

func (o ListKubernetesClustersItemsOutput) ToListKubernetesClustersItemsOutput() ListKubernetesClustersItemsOutput {
	return o
}

func (o ListKubernetesClustersItemsOutput) ToListKubernetesClustersItemsOutputWithContext(ctx context.Context) ListKubernetesClustersItemsOutput {
	return o
}

func (o ListKubernetesClustersItemsOutput) KubernetesClusters() ClusterArrayOutput {
	return o.ApplyT(func(v ListKubernetesClustersItems) []Cluster { return v.KubernetesClusters }).(ClusterArrayOutput)
}

func (o ListKubernetesClustersItemsOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListKubernetesClustersItems) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListKubernetesClustersItemsOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListKubernetesClustersItems) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

type ListKubernetesNodePoolsProperties struct {
	NodePools []KubernetesNodePoolType `pulumi:"nodePools"`
}

type ListKubernetesNodePoolsPropertiesOutput struct{ *pulumi.OutputState }

func (ListKubernetesNodePoolsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListKubernetesNodePoolsProperties)(nil)).Elem()
}

func (o ListKubernetesNodePoolsPropertiesOutput) ToListKubernetesNodePoolsPropertiesOutput() ListKubernetesNodePoolsPropertiesOutput {
	return o
}

func (o ListKubernetesNodePoolsPropertiesOutput) ToListKubernetesNodePoolsPropertiesOutputWithContext(ctx context.Context) ListKubernetesNodePoolsPropertiesOutput {
	return o
}

func (o ListKubernetesNodePoolsPropertiesOutput) NodePools() KubernetesNodePoolTypeArrayOutput {
	return o.ApplyT(func(v ListKubernetesNodePoolsProperties) []KubernetesNodePoolType { return v.NodePools }).(KubernetesNodePoolTypeArrayOutput)
}

// An object specifying the maintenance window policy for the Kubernetes cluster.
type MaintenancePolicy struct {
	// The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.
	Day *MaintenancePolicyDay `pulumi:"day"`
	// The duration of the maintenance window policy in human-readable format.
	Duration *string `pulumi:"duration"`
	// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`).
	StartTime *string `pulumi:"startTime"`
}

// MaintenancePolicyInput is an input type that accepts MaintenancePolicyArgs and MaintenancePolicyOutput values.
// You can construct a concrete instance of `MaintenancePolicyInput` via:
//
//	MaintenancePolicyArgs{...}
type MaintenancePolicyInput interface {
	pulumi.Input

	ToMaintenancePolicyOutput() MaintenancePolicyOutput
	ToMaintenancePolicyOutputWithContext(context.Context) MaintenancePolicyOutput
}

// An object specifying the maintenance window policy for the Kubernetes cluster.
type MaintenancePolicyArgs struct {
	// The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.
	Day MaintenancePolicyDayPtrInput `pulumi:"day"`
	// The duration of the maintenance window policy in human-readable format.
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`).
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (MaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenancePolicy)(nil)).Elem()
}

func (i MaintenancePolicyArgs) ToMaintenancePolicyOutput() MaintenancePolicyOutput {
	return i.ToMaintenancePolicyOutputWithContext(context.Background())
}

func (i MaintenancePolicyArgs) ToMaintenancePolicyOutputWithContext(ctx context.Context) MaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenancePolicyOutput)
}

func (i MaintenancePolicyArgs) ToMaintenancePolicyPtrOutput() MaintenancePolicyPtrOutput {
	return i.ToMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i MaintenancePolicyArgs) ToMaintenancePolicyPtrOutputWithContext(ctx context.Context) MaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenancePolicyOutput).ToMaintenancePolicyPtrOutputWithContext(ctx)
}

// MaintenancePolicyPtrInput is an input type that accepts MaintenancePolicyArgs, MaintenancePolicyPtr and MaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `MaintenancePolicyPtrInput` via:
//
//	        MaintenancePolicyArgs{...}
//
//	or:
//
//	        nil
type MaintenancePolicyPtrInput interface {
	pulumi.Input

	ToMaintenancePolicyPtrOutput() MaintenancePolicyPtrOutput
	ToMaintenancePolicyPtrOutputWithContext(context.Context) MaintenancePolicyPtrOutput
}

type maintenancePolicyPtrType MaintenancePolicyArgs

func MaintenancePolicyPtr(v *MaintenancePolicyArgs) MaintenancePolicyPtrInput {
	return (*maintenancePolicyPtrType)(v)
}

func (*maintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenancePolicy)(nil)).Elem()
}

func (i *maintenancePolicyPtrType) ToMaintenancePolicyPtrOutput() MaintenancePolicyPtrOutput {
	return i.ToMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *maintenancePolicyPtrType) ToMaintenancePolicyPtrOutputWithContext(ctx context.Context) MaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MaintenancePolicyPtrOutput)
}

// An object specifying the maintenance window policy for the Kubernetes cluster.
type MaintenancePolicyOutput struct{ *pulumi.OutputState }

func (MaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MaintenancePolicy)(nil)).Elem()
}

func (o MaintenancePolicyOutput) ToMaintenancePolicyOutput() MaintenancePolicyOutput {
	return o
}

func (o MaintenancePolicyOutput) ToMaintenancePolicyOutputWithContext(ctx context.Context) MaintenancePolicyOutput {
	return o
}

func (o MaintenancePolicyOutput) ToMaintenancePolicyPtrOutput() MaintenancePolicyPtrOutput {
	return o.ToMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o MaintenancePolicyOutput) ToMaintenancePolicyPtrOutputWithContext(ctx context.Context) MaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MaintenancePolicy) *MaintenancePolicy {
		return &v
	}).(MaintenancePolicyPtrOutput)
}

// The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.
func (o MaintenancePolicyOutput) Day() MaintenancePolicyDayPtrOutput {
	return o.ApplyT(func(v MaintenancePolicy) *MaintenancePolicyDay { return v.Day }).(MaintenancePolicyDayPtrOutput)
}

// The duration of the maintenance window policy in human-readable format.
func (o MaintenancePolicyOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenancePolicy) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`).
func (o MaintenancePolicyOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MaintenancePolicy) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type MaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (MaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MaintenancePolicy)(nil)).Elem()
}

func (o MaintenancePolicyPtrOutput) ToMaintenancePolicyPtrOutput() MaintenancePolicyPtrOutput {
	return o
}

func (o MaintenancePolicyPtrOutput) ToMaintenancePolicyPtrOutputWithContext(ctx context.Context) MaintenancePolicyPtrOutput {
	return o
}

func (o MaintenancePolicyPtrOutput) Elem() MaintenancePolicyOutput {
	return o.ApplyT(func(v *MaintenancePolicy) MaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret MaintenancePolicy
		return ret
	}).(MaintenancePolicyOutput)
}

// The day of the maintenance window policy. May be one of `monday` through `sunday`, or `any` to indicate an arbitrary week day.
func (o MaintenancePolicyPtrOutput) Day() MaintenancePolicyDayPtrOutput {
	return o.ApplyT(func(v *MaintenancePolicy) *MaintenancePolicyDay {
		if v == nil {
			return nil
		}
		return v.Day
	}).(MaintenancePolicyDayPtrOutput)
}

// The duration of the maintenance window policy in human-readable format.
func (o MaintenancePolicyPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., `15:00`).
func (o MaintenancePolicyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type MetaMeta struct {
	// Number of objects returned by the request.
	Total *int `pulumi:"total"`
}

type MetaMetaOutput struct{ *pulumi.OutputState }

func (MetaMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetaMeta)(nil)).Elem()
}

func (o MetaMetaOutput) ToMetaMetaOutput() MetaMetaOutput {
	return o
}

func (o MetaMetaOutput) ToMetaMetaOutputWithContext(ctx context.Context) MetaMetaOutput {
	return o
}

// Number of objects returned by the request.
func (o MetaMetaOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetaMeta) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type Node struct {
	// A time value given in ISO8601 combined date and time format that represents when the node was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the Droplet used for the worker node.
	DropletId *string `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id *string `pulumi:"id"`
	// An automatically generated, human-readable name for the node.
	Name *string `pulumi:"name"`
	// An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
	Status *NodeStatusProperties `pulumi:"status"`
	// A time value given in ISO8601 combined date and time format that represents when the node was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// NodeInput is an input type that accepts NodeArgs and NodeOutput values.
// You can construct a concrete instance of `NodeInput` via:
//
//	NodeArgs{...}
type NodeInput interface {
	pulumi.Input

	ToNodeOutput() NodeOutput
	ToNodeOutputWithContext(context.Context) NodeOutput
}

type NodeArgs struct {
	// A time value given in ISO8601 combined date and time format that represents when the node was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The ID of the Droplet used for the worker node.
	DropletId pulumi.StringPtrInput `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An automatically generated, human-readable name for the node.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
	Status NodeStatusPropertiesPtrInput `pulumi:"status"`
	// A time value given in ISO8601 combined date and time format that represents when the node was last updated.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (NodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Node)(nil)).Elem()
}

func (i NodeArgs) ToNodeOutput() NodeOutput {
	return i.ToNodeOutputWithContext(context.Background())
}

func (i NodeArgs) ToNodeOutputWithContext(ctx context.Context) NodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeOutput)
}

// NodeArrayInput is an input type that accepts NodeArray and NodeArrayOutput values.
// You can construct a concrete instance of `NodeArrayInput` via:
//
//	NodeArray{ NodeArgs{...} }
type NodeArrayInput interface {
	pulumi.Input

	ToNodeArrayOutput() NodeArrayOutput
	ToNodeArrayOutputWithContext(context.Context) NodeArrayOutput
}

type NodeArray []NodeInput

func (NodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Node)(nil)).Elem()
}

func (i NodeArray) ToNodeArrayOutput() NodeArrayOutput {
	return i.ToNodeArrayOutputWithContext(context.Background())
}

func (i NodeArray) ToNodeArrayOutputWithContext(ctx context.Context) NodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeArrayOutput)
}

type NodeOutput struct{ *pulumi.OutputState }

func (NodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Node)(nil)).Elem()
}

func (o NodeOutput) ToNodeOutput() NodeOutput {
	return o
}

func (o NodeOutput) ToNodeOutputWithContext(ctx context.Context) NodeOutput {
	return o
}

// A time value given in ISO8601 combined date and time format that represents when the node was created.
func (o NodeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The ID of the Droplet used for the worker node.
func (o NodeOutput) DropletId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.DropletId }).(pulumi.StringPtrOutput)
}

// A unique ID that can be used to identify and reference the node.
func (o NodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An automatically generated, human-readable name for the node.
func (o NodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
func (o NodeOutput) Status() NodeStatusPropertiesPtrOutput {
	return o.ApplyT(func(v Node) *NodeStatusProperties { return v.Status }).(NodeStatusPropertiesPtrOutput)
}

// A time value given in ISO8601 combined date and time format that represents when the node was last updated.
func (o NodeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Node) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type NodeArrayOutput struct{ *pulumi.OutputState }

func (NodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Node)(nil)).Elem()
}

func (o NodeArrayOutput) ToNodeArrayOutput() NodeArrayOutput {
	return o
}

func (o NodeArrayOutput) ToNodeArrayOutputWithContext(ctx context.Context) NodeArrayOutput {
	return o
}

func (o NodeArrayOutput) Index(i pulumi.IntInput) NodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Node {
		return vs[0].([]Node)[vs[1].(int)]
	}).(NodeOutput)
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
type NodeStatusProperties struct {
	// A string indicating the current status of the node.
	State *NodeStatusPropertiesState `pulumi:"state"`
}

// NodeStatusPropertiesInput is an input type that accepts NodeStatusPropertiesArgs and NodeStatusPropertiesOutput values.
// You can construct a concrete instance of `NodeStatusPropertiesInput` via:
//
//	NodeStatusPropertiesArgs{...}
type NodeStatusPropertiesInput interface {
	pulumi.Input

	ToNodeStatusPropertiesOutput() NodeStatusPropertiesOutput
	ToNodeStatusPropertiesOutputWithContext(context.Context) NodeStatusPropertiesOutput
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
type NodeStatusPropertiesArgs struct {
	// A string indicating the current status of the node.
	State NodeStatusPropertiesStatePtrInput `pulumi:"state"`
}

func (NodeStatusPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStatusProperties)(nil)).Elem()
}

func (i NodeStatusPropertiesArgs) ToNodeStatusPropertiesOutput() NodeStatusPropertiesOutput {
	return i.ToNodeStatusPropertiesOutputWithContext(context.Background())
}

func (i NodeStatusPropertiesArgs) ToNodeStatusPropertiesOutputWithContext(ctx context.Context) NodeStatusPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStatusPropertiesOutput)
}

func (i NodeStatusPropertiesArgs) ToNodeStatusPropertiesPtrOutput() NodeStatusPropertiesPtrOutput {
	return i.ToNodeStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i NodeStatusPropertiesArgs) ToNodeStatusPropertiesPtrOutputWithContext(ctx context.Context) NodeStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStatusPropertiesOutput).ToNodeStatusPropertiesPtrOutputWithContext(ctx)
}

// NodeStatusPropertiesPtrInput is an input type that accepts NodeStatusPropertiesArgs, NodeStatusPropertiesPtr and NodeStatusPropertiesPtrOutput values.
// You can construct a concrete instance of `NodeStatusPropertiesPtrInput` via:
//
//	        NodeStatusPropertiesArgs{...}
//
//	or:
//
//	        nil
type NodeStatusPropertiesPtrInput interface {
	pulumi.Input

	ToNodeStatusPropertiesPtrOutput() NodeStatusPropertiesPtrOutput
	ToNodeStatusPropertiesPtrOutputWithContext(context.Context) NodeStatusPropertiesPtrOutput
}

type nodeStatusPropertiesPtrType NodeStatusPropertiesArgs

func NodeStatusPropertiesPtr(v *NodeStatusPropertiesArgs) NodeStatusPropertiesPtrInput {
	return (*nodeStatusPropertiesPtrType)(v)
}

func (*nodeStatusPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStatusProperties)(nil)).Elem()
}

func (i *nodeStatusPropertiesPtrType) ToNodeStatusPropertiesPtrOutput() NodeStatusPropertiesPtrOutput {
	return i.ToNodeStatusPropertiesPtrOutputWithContext(context.Background())
}

func (i *nodeStatusPropertiesPtrType) ToNodeStatusPropertiesPtrOutputWithContext(ctx context.Context) NodeStatusPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeStatusPropertiesPtrOutput)
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the node.
type NodeStatusPropertiesOutput struct{ *pulumi.OutputState }

func (NodeStatusPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeStatusProperties)(nil)).Elem()
}

func (o NodeStatusPropertiesOutput) ToNodeStatusPropertiesOutput() NodeStatusPropertiesOutput {
	return o
}

func (o NodeStatusPropertiesOutput) ToNodeStatusPropertiesOutputWithContext(ctx context.Context) NodeStatusPropertiesOutput {
	return o
}

func (o NodeStatusPropertiesOutput) ToNodeStatusPropertiesPtrOutput() NodeStatusPropertiesPtrOutput {
	return o.ToNodeStatusPropertiesPtrOutputWithContext(context.Background())
}

func (o NodeStatusPropertiesOutput) ToNodeStatusPropertiesPtrOutputWithContext(ctx context.Context) NodeStatusPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NodeStatusProperties) *NodeStatusProperties {
		return &v
	}).(NodeStatusPropertiesPtrOutput)
}

// A string indicating the current status of the node.
func (o NodeStatusPropertiesOutput) State() NodeStatusPropertiesStatePtrOutput {
	return o.ApplyT(func(v NodeStatusProperties) *NodeStatusPropertiesState { return v.State }).(NodeStatusPropertiesStatePtrOutput)
}

type NodeStatusPropertiesPtrOutput struct{ *pulumi.OutputState }

func (NodeStatusPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodeStatusProperties)(nil)).Elem()
}

func (o NodeStatusPropertiesPtrOutput) ToNodeStatusPropertiesPtrOutput() NodeStatusPropertiesPtrOutput {
	return o
}

func (o NodeStatusPropertiesPtrOutput) ToNodeStatusPropertiesPtrOutputWithContext(ctx context.Context) NodeStatusPropertiesPtrOutput {
	return o
}

func (o NodeStatusPropertiesPtrOutput) Elem() NodeStatusPropertiesOutput {
	return o.ApplyT(func(v *NodeStatusProperties) NodeStatusProperties {
		if v != nil {
			return *v
		}
		var ret NodeStatusProperties
		return ret
	}).(NodeStatusPropertiesOutput)
}

// A string indicating the current status of the node.
func (o NodeStatusPropertiesPtrOutput) State() NodeStatusPropertiesStatePtrOutput {
	return o.ApplyT(func(v *NodeStatusProperties) *NodeStatusPropertiesState {
		if v == nil {
			return nil
		}
		return v.State
	}).(NodeStatusPropertiesStatePtrOutput)
}

type PageLinks struct {
	Pages *PageLinksPagesProperties `pulumi:"pages"`
}

type PageLinksOutput struct{ *pulumi.OutputState }

func (PageLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinks)(nil)).Elem()
}

func (o PageLinksOutput) ToPageLinksOutput() PageLinksOutput {
	return o
}

func (o PageLinksOutput) ToPageLinksOutputWithContext(ctx context.Context) PageLinksOutput {
	return o
}

func (o PageLinksOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v PageLinks) *PageLinksPagesProperties { return v.Pages }).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinks)(nil)).Elem()
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutput() PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutputWithContext(ctx context.Context) PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) Elem() PageLinksOutput {
	return o.ApplyT(func(v *PageLinks) PageLinks {
		if v != nil {
			return *v
		}
		var ret PageLinks
		return ret
	}).(PageLinksOutput)
}

func (o PageLinksPtrOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v *PageLinks) *PageLinksPagesProperties {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPagesProperties struct {
	First *string `pulumi:"first"`
	Last  *string `pulumi:"last"`
	Next  *string `pulumi:"next"`
	Prev  *string `pulumi:"prev"`
}

type PageLinksPagesPropertiesOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutput() PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutputWithContext(ctx context.Context) PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Prev }).(pulumi.StringPtrOutput)
}

type PageLinksPagesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutput() PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutputWithContext(ctx context.Context) PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) Elem() PageLinksPagesPropertiesOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) PageLinksPagesProperties {
		if v != nil {
			return *v
		}
		var ret PageLinksPagesProperties
		return ret
	}).(PageLinksPagesPropertiesOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Prev
	}).(pulumi.StringPtrOutput)
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
type StatusProperties struct {
	// An optional message providing additional information about the current cluster state.
	Message *string `pulumi:"message"`
	// A string indicating the current status of the cluster.
	State *StatusPropertiesState `pulumi:"state"`
}

// An object containing a `state` attribute whose value is set to a string indicating the current status of the cluster.
type StatusPropertiesOutput struct{ *pulumi.OutputState }

func (StatusPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatusProperties)(nil)).Elem()
}

func (o StatusPropertiesOutput) ToStatusPropertiesOutput() StatusPropertiesOutput {
	return o
}

func (o StatusPropertiesOutput) ToStatusPropertiesOutputWithContext(ctx context.Context) StatusPropertiesOutput {
	return o
}

// An optional message providing additional information about the current cluster state.
func (o StatusPropertiesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StatusProperties) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A string indicating the current status of the cluster.
func (o StatusPropertiesOutput) State() StatusPropertiesStatePtrOutput {
	return o.ApplyT(func(v StatusProperties) *StatusPropertiesState { return v.State }).(StatusPropertiesStatePtrOutput)
}

type StatusPropertiesPtrOutput struct{ *pulumi.OutputState }

func (StatusPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusProperties)(nil)).Elem()
}

func (o StatusPropertiesPtrOutput) ToStatusPropertiesPtrOutput() StatusPropertiesPtrOutput {
	return o
}

func (o StatusPropertiesPtrOutput) ToStatusPropertiesPtrOutputWithContext(ctx context.Context) StatusPropertiesPtrOutput {
	return o
}

func (o StatusPropertiesPtrOutput) Elem() StatusPropertiesOutput {
	return o.ApplyT(func(v *StatusProperties) StatusProperties {
		if v != nil {
			return *v
		}
		var ret StatusProperties
		return ret
	}).(StatusPropertiesOutput)
}

// An optional message providing additional information about the current cluster state.
func (o StatusPropertiesPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StatusProperties) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// A string indicating the current status of the cluster.
func (o StatusPropertiesPtrOutput) State() StatusPropertiesStatePtrOutput {
	return o.ApplyT(func(v *StatusProperties) *StatusPropertiesState {
		if v == nil {
			return nil
		}
		return v.State
	}).(StatusPropertiesStatePtrOutput)
}

type User struct {
	KubernetesClusterUser *UserKubernetesClusterUserProperties `pulumi:"kubernetesClusterUser"`
}

type UserOutput struct{ *pulumi.OutputState }

func (UserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*User)(nil)).Elem()
}

func (o UserOutput) ToUserOutput() UserOutput {
	return o
}

func (o UserOutput) ToUserOutputWithContext(ctx context.Context) UserOutput {
	return o
}

func (o UserOutput) KubernetesClusterUser() UserKubernetesClusterUserPropertiesPtrOutput {
	return o.ApplyT(func(v User) *UserKubernetesClusterUserProperties { return v.KubernetesClusterUser }).(UserKubernetesClusterUserPropertiesPtrOutput)
}

type UserKubernetesClusterUserProperties struct {
	// A list of in-cluster groups that the user belongs to.
	Groups []string `pulumi:"groups"`
	// The username for the cluster admin user.
	Username *string `pulumi:"username"`
}

type UserKubernetesClusterUserPropertiesOutput struct{ *pulumi.OutputState }

func (UserKubernetesClusterUserPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserKubernetesClusterUserProperties)(nil)).Elem()
}

func (o UserKubernetesClusterUserPropertiesOutput) ToUserKubernetesClusterUserPropertiesOutput() UserKubernetesClusterUserPropertiesOutput {
	return o
}

func (o UserKubernetesClusterUserPropertiesOutput) ToUserKubernetesClusterUserPropertiesOutputWithContext(ctx context.Context) UserKubernetesClusterUserPropertiesOutput {
	return o
}

// A list of in-cluster groups that the user belongs to.
func (o UserKubernetesClusterUserPropertiesOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserKubernetesClusterUserProperties) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// The username for the cluster admin user.
func (o UserKubernetesClusterUserPropertiesOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserKubernetesClusterUserProperties) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type UserKubernetesClusterUserPropertiesPtrOutput struct{ *pulumi.OutputState }

func (UserKubernetesClusterUserPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserKubernetesClusterUserProperties)(nil)).Elem()
}

func (o UserKubernetesClusterUserPropertiesPtrOutput) ToUserKubernetesClusterUserPropertiesPtrOutput() UserKubernetesClusterUserPropertiesPtrOutput {
	return o
}

func (o UserKubernetesClusterUserPropertiesPtrOutput) ToUserKubernetesClusterUserPropertiesPtrOutputWithContext(ctx context.Context) UserKubernetesClusterUserPropertiesPtrOutput {
	return o
}

func (o UserKubernetesClusterUserPropertiesPtrOutput) Elem() UserKubernetesClusterUserPropertiesOutput {
	return o.ApplyT(func(v *UserKubernetesClusterUserProperties) UserKubernetesClusterUserProperties {
		if v != nil {
			return *v
		}
		var ret UserKubernetesClusterUserProperties
		return ret
	}).(UserKubernetesClusterUserPropertiesOutput)
}

// A list of in-cluster groups that the user belongs to.
func (o UserKubernetesClusterUserPropertiesPtrOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserKubernetesClusterUserProperties) []string {
		if v == nil {
			return nil
		}
		return v.Groups
	}).(pulumi.StringArrayOutput)
}

// The username for the cluster admin user.
func (o UserKubernetesClusterUserPropertiesPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserKubernetesClusterUserProperties) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolTypeInput)(nil)).Elem(), KubernetesNodePoolTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolTypeArrayInput)(nil)).Elem(), KubernetesNodePoolTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolTaintInput)(nil)).Elem(), KubernetesNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolTaintArrayInput)(nil)).Elem(), KubernetesNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenancePolicyInput)(nil)).Elem(), MaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MaintenancePolicyPtrInput)(nil)).Elem(), MaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeInput)(nil)).Elem(), NodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeArrayInput)(nil)).Elem(), NodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeStatusPropertiesInput)(nil)).Elem(), NodeStatusPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodeStatusPropertiesPtrInput)(nil)).Elem(), NodeStatusPropertiesArgs{})
	pulumi.RegisterOutputType(AssociatedKubernetesResourceOutput{})
	pulumi.RegisterOutputType(AssociatedKubernetesResourceArrayOutput{})
	pulumi.RegisterOutputType(AssociatedKubernetesResourcesOutput{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterPtrOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterStatusPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterStatusPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterlintResultsOutput{})
	pulumi.RegisterOutputType(ClusterlintResultsDiagnosticsItemPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterlintResultsDiagnosticsItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesOutput{})
	pulumi.RegisterOutputType(ClusterlintResultsDiagnosticsItemPropertiesObjectPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CredentialsOutput{})
	pulumi.RegisterOutputType(GetKubernetesAvailableUpgradePropertiesOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterPropertiesOutput{})
	pulumi.RegisterOutputType(GetKubernetesNodePoolPropertiesOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolTypeOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolTypePtrOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolTypeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolTaintOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(KubernetesOptionsOutput{})
	pulumi.RegisterOutputType(KubernetesOptionsOptionsPropertiesOutput{})
	pulumi.RegisterOutputType(KubernetesOptionsOptionsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(KubernetesRegionOutput{})
	pulumi.RegisterOutputType(KubernetesRegionArrayOutput{})
	pulumi.RegisterOutputType(KubernetesSizeOutput{})
	pulumi.RegisterOutputType(KubernetesSizeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesVersionOutput{})
	pulumi.RegisterOutputType(KubernetesVersionArrayOutput{})
	pulumi.RegisterOutputType(ListKubernetesClustersItemsOutput{})
	pulumi.RegisterOutputType(ListKubernetesNodePoolsPropertiesOutput{})
	pulumi.RegisterOutputType(MaintenancePolicyOutput{})
	pulumi.RegisterOutputType(MaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(MetaMetaOutput{})
	pulumi.RegisterOutputType(NodeOutput{})
	pulumi.RegisterOutputType(NodeArrayOutput{})
	pulumi.RegisterOutputType(NodeStatusPropertiesOutput{})
	pulumi.RegisterOutputType(NodeStatusPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PageLinksOutput{})
	pulumi.RegisterOutputType(PageLinksPtrOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(StatusPropertiesOutput{})
	pulumi.RegisterOutputType(StatusPropertiesPtrOutput{})
	pulumi.RegisterOutputType(UserOutput{})
	pulumi.RegisterOutputType(UserKubernetesClusterUserPropertiesOutput{})
	pulumi.RegisterOutputType(UserKubernetesClusterUserPropertiesPtrOutput{})
}
