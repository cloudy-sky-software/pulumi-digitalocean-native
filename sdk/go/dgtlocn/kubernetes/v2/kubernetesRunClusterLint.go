// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KubernetesRunClusterLint struct {
	pulumi.CustomResourceState

	// An array of checks that will be run when clusterlint executes checks.
	ExcludeChecks pulumi.StringArrayOutput `pulumi:"excludeChecks"`
	// An array of check groups that will be omitted when clusterlint executes checks.
	ExcludeGroups pulumi.StringArrayOutput `pulumi:"excludeGroups"`
	// An array of checks that will be run when clusterlint executes checks.
	IncludeChecks pulumi.StringArrayOutput `pulumi:"includeChecks"`
	// An array of check groups that will be run when clusterlint executes checks.
	IncludeGroups pulumi.StringArrayOutput `pulumi:"includeGroups"`
	// ID of the clusterlint run that can be used later to fetch the diagnostics.
	RunId pulumi.StringPtrOutput `pulumi:"runId"`
}

// NewKubernetesRunClusterLint registers a new resource with the given unique name, arguments, and options.
func NewKubernetesRunClusterLint(ctx *pulumi.Context,
	name string, args *KubernetesRunClusterLintArgs, opts ...pulumi.ResourceOption) (*KubernetesRunClusterLint, error) {
	if args == nil {
		args = &KubernetesRunClusterLintArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesRunClusterLint
	err := ctx.RegisterResource("digitalocean-native:kubernetes/v2:KubernetesRunClusterLint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesRunClusterLint gets an existing KubernetesRunClusterLint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesRunClusterLint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesRunClusterLintState, opts ...pulumi.ResourceOption) (*KubernetesRunClusterLint, error) {
	var resource KubernetesRunClusterLint
	err := ctx.ReadResource("digitalocean-native:kubernetes/v2:KubernetesRunClusterLint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesRunClusterLint resources.
type kubernetesRunClusterLintState struct {
}

type KubernetesRunClusterLintState struct {
}

func (KubernetesRunClusterLintState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesRunClusterLintState)(nil)).Elem()
}

type kubernetesRunClusterLintArgs struct {
	// A unique ID that can be used to reference a Kubernetes cluster.
	ClusterId *string `pulumi:"clusterId"`
	// An array of checks that will be run when clusterlint executes checks.
	ExcludeChecks []string `pulumi:"excludeChecks"`
	// An array of check groups that will be omitted when clusterlint executes checks.
	ExcludeGroups []string `pulumi:"excludeGroups"`
	// An array of checks that will be run when clusterlint executes checks.
	IncludeChecks []string `pulumi:"includeChecks"`
	// An array of check groups that will be run when clusterlint executes checks.
	IncludeGroups []string `pulumi:"includeGroups"`
}

// The set of arguments for constructing a KubernetesRunClusterLint resource.
type KubernetesRunClusterLintArgs struct {
	// A unique ID that can be used to reference a Kubernetes cluster.
	ClusterId pulumi.StringPtrInput
	// An array of checks that will be run when clusterlint executes checks.
	ExcludeChecks pulumi.StringArrayInput
	// An array of check groups that will be omitted when clusterlint executes checks.
	ExcludeGroups pulumi.StringArrayInput
	// An array of checks that will be run when clusterlint executes checks.
	IncludeChecks pulumi.StringArrayInput
	// An array of check groups that will be run when clusterlint executes checks.
	IncludeGroups pulumi.StringArrayInput
}

func (KubernetesRunClusterLintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesRunClusterLintArgs)(nil)).Elem()
}

type KubernetesRunClusterLintInput interface {
	pulumi.Input

	ToKubernetesRunClusterLintOutput() KubernetesRunClusterLintOutput
	ToKubernetesRunClusterLintOutputWithContext(ctx context.Context) KubernetesRunClusterLintOutput
}

func (*KubernetesRunClusterLint) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesRunClusterLint)(nil)).Elem()
}

func (i *KubernetesRunClusterLint) ToKubernetesRunClusterLintOutput() KubernetesRunClusterLintOutput {
	return i.ToKubernetesRunClusterLintOutputWithContext(context.Background())
}

func (i *KubernetesRunClusterLint) ToKubernetesRunClusterLintOutputWithContext(ctx context.Context) KubernetesRunClusterLintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesRunClusterLintOutput)
}

type KubernetesRunClusterLintOutput struct{ *pulumi.OutputState }

func (KubernetesRunClusterLintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesRunClusterLint)(nil)).Elem()
}

func (o KubernetesRunClusterLintOutput) ToKubernetesRunClusterLintOutput() KubernetesRunClusterLintOutput {
	return o
}

func (o KubernetesRunClusterLintOutput) ToKubernetesRunClusterLintOutputWithContext(ctx context.Context) KubernetesRunClusterLintOutput {
	return o
}

// An array of checks that will be run when clusterlint executes checks.
func (o KubernetesRunClusterLintOutput) ExcludeChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesRunClusterLint) pulumi.StringArrayOutput { return v.ExcludeChecks }).(pulumi.StringArrayOutput)
}

// An array of check groups that will be omitted when clusterlint executes checks.
func (o KubernetesRunClusterLintOutput) ExcludeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesRunClusterLint) pulumi.StringArrayOutput { return v.ExcludeGroups }).(pulumi.StringArrayOutput)
}

// An array of checks that will be run when clusterlint executes checks.
func (o KubernetesRunClusterLintOutput) IncludeChecks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesRunClusterLint) pulumi.StringArrayOutput { return v.IncludeChecks }).(pulumi.StringArrayOutput)
}

// An array of check groups that will be run when clusterlint executes checks.
func (o KubernetesRunClusterLintOutput) IncludeGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesRunClusterLint) pulumi.StringArrayOutput { return v.IncludeGroups }).(pulumi.StringArrayOutput)
}

// ID of the clusterlint run that can be used later to fetch the diagnostics.
func (o KubernetesRunClusterLintOutput) RunId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesRunClusterLint) pulumi.StringPtrOutput { return v.RunId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesRunClusterLintInput)(nil)).Elem(), &KubernetesRunClusterLint{})
	pulumi.RegisterOutputType(KubernetesRunClusterLintOutput{})
}
