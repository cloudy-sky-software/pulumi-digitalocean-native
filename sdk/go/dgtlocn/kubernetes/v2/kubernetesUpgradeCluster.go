// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KubernetesUpgradeCluster struct {
	pulumi.CustomResourceState

	// The slug identifier for the version of Kubernetes that the cluster will be upgraded to.
	Version pulumi.StringPtrOutput `pulumi:"version"`
}

// NewKubernetesUpgradeCluster registers a new resource with the given unique name, arguments, and options.
func NewKubernetesUpgradeCluster(ctx *pulumi.Context,
	name string, args *KubernetesUpgradeClusterArgs, opts ...pulumi.ResourceOption) (*KubernetesUpgradeCluster, error) {
	if args == nil {
		args = &KubernetesUpgradeClusterArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesUpgradeCluster
	err := ctx.RegisterResource("digitalocean-native:kubernetes/v2:KubernetesUpgradeCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesUpgradeCluster gets an existing KubernetesUpgradeCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesUpgradeCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesUpgradeClusterState, opts ...pulumi.ResourceOption) (*KubernetesUpgradeCluster, error) {
	var resource KubernetesUpgradeCluster
	err := ctx.ReadResource("digitalocean-native:kubernetes/v2:KubernetesUpgradeCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesUpgradeCluster resources.
type kubernetesUpgradeClusterState struct {
}

type KubernetesUpgradeClusterState struct {
}

func (KubernetesUpgradeClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesUpgradeClusterState)(nil)).Elem()
}

type kubernetesUpgradeClusterArgs struct {
	// A unique ID that can be used to reference a Kubernetes cluster.
	ClusterId *string `pulumi:"clusterId"`
	// The slug identifier for the version of Kubernetes that the cluster will be upgraded to.
	Version *string `pulumi:"version"`
}

// The set of arguments for constructing a KubernetesUpgradeCluster resource.
type KubernetesUpgradeClusterArgs struct {
	// A unique ID that can be used to reference a Kubernetes cluster.
	ClusterId pulumi.StringPtrInput
	// The slug identifier for the version of Kubernetes that the cluster will be upgraded to.
	Version pulumi.StringPtrInput
}

func (KubernetesUpgradeClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesUpgradeClusterArgs)(nil)).Elem()
}

type KubernetesUpgradeClusterInput interface {
	pulumi.Input

	ToKubernetesUpgradeClusterOutput() KubernetesUpgradeClusterOutput
	ToKubernetesUpgradeClusterOutputWithContext(ctx context.Context) KubernetesUpgradeClusterOutput
}

func (*KubernetesUpgradeCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesUpgradeCluster)(nil)).Elem()
}

func (i *KubernetesUpgradeCluster) ToKubernetesUpgradeClusterOutput() KubernetesUpgradeClusterOutput {
	return i.ToKubernetesUpgradeClusterOutputWithContext(context.Background())
}

func (i *KubernetesUpgradeCluster) ToKubernetesUpgradeClusterOutputWithContext(ctx context.Context) KubernetesUpgradeClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesUpgradeClusterOutput)
}

type KubernetesUpgradeClusterOutput struct{ *pulumi.OutputState }

func (KubernetesUpgradeClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesUpgradeCluster)(nil)).Elem()
}

func (o KubernetesUpgradeClusterOutput) ToKubernetesUpgradeClusterOutput() KubernetesUpgradeClusterOutput {
	return o
}

func (o KubernetesUpgradeClusterOutput) ToKubernetesUpgradeClusterOutputWithContext(ctx context.Context) KubernetesUpgradeClusterOutput {
	return o
}

// The slug identifier for the version of Kubernetes that the cluster will be upgraded to.
func (o KubernetesUpgradeClusterOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesUpgradeCluster) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesUpgradeClusterInput)(nil)).Elem(), &KubernetesUpgradeCluster{})
	pulumi.RegisterOutputType(KubernetesUpgradeClusterOutput{})
}
