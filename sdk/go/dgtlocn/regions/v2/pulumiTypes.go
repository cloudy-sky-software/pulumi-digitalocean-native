// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ListRegionsItems struct {
	Links   *PageLinks `pulumi:"links"`
	Meta    MetaMeta   `pulumi:"meta"`
	Regions []Region   `pulumi:"regions"`
}

type ListRegionsItemsOutput struct{ *pulumi.OutputState }

func (ListRegionsItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRegionsItems)(nil)).Elem()
}

func (o ListRegionsItemsOutput) ToListRegionsItemsOutput() ListRegionsItemsOutput {
	return o
}

func (o ListRegionsItemsOutput) ToListRegionsItemsOutputWithContext(ctx context.Context) ListRegionsItemsOutput {
	return o
}

func (o ListRegionsItemsOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListRegionsItems) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListRegionsItemsOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListRegionsItems) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

func (o ListRegionsItemsOutput) Regions() RegionArrayOutput {
	return o.ApplyT(func(v ListRegionsItems) []Region { return v.Regions }).(RegionArrayOutput)
}

type MetaMeta struct {
	// Number of objects returned by the request.
	Total *int `pulumi:"total"`
}

type MetaMetaOutput struct{ *pulumi.OutputState }

func (MetaMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetaMeta)(nil)).Elem()
}

func (o MetaMetaOutput) ToMetaMetaOutput() MetaMetaOutput {
	return o
}

func (o MetaMetaOutput) ToMetaMetaOutputWithContext(ctx context.Context) MetaMetaOutput {
	return o
}

// Number of objects returned by the request.
func (o MetaMetaOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetaMeta) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type PageLinks struct {
	Pages *PageLinksPagesProperties `pulumi:"pages"`
}

type PageLinksOutput struct{ *pulumi.OutputState }

func (PageLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinks)(nil)).Elem()
}

func (o PageLinksOutput) ToPageLinksOutput() PageLinksOutput {
	return o
}

func (o PageLinksOutput) ToPageLinksOutputWithContext(ctx context.Context) PageLinksOutput {
	return o
}

func (o PageLinksOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v PageLinks) *PageLinksPagesProperties { return v.Pages }).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinks)(nil)).Elem()
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutput() PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutputWithContext(ctx context.Context) PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) Elem() PageLinksOutput {
	return o.ApplyT(func(v *PageLinks) PageLinks {
		if v != nil {
			return *v
		}
		var ret PageLinks
		return ret
	}).(PageLinksOutput)
}

func (o PageLinksPtrOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v *PageLinks) *PageLinksPagesProperties {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPagesProperties struct {
	First *string `pulumi:"first"`
	Last  *string `pulumi:"last"`
	Next  *string `pulumi:"next"`
	Prev  *string `pulumi:"prev"`
}

type PageLinksPagesPropertiesOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutput() PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutputWithContext(ctx context.Context) PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Prev }).(pulumi.StringPtrOutput)
}

type PageLinksPagesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutput() PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutputWithContext(ctx context.Context) PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) Elem() PageLinksPagesPropertiesOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) PageLinksPagesProperties {
		if v != nil {
			return *v
		}
		var ret PageLinksPagesProperties
		return ret
	}).(PageLinksPagesPropertiesOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Prev
	}).(pulumi.StringPtrOutput)
}

type Region struct {
	// This is a boolean value that represents whether new Droplets can be created in this region.
	Available bool `pulumi:"available"`
	// This attribute is set to an array which contains features available in this region
	Features []string `pulumi:"features"`
	// The display name of the region.  This will be a full name that is used in the control panel and other interfaces.
	Name string `pulumi:"name"`
	// This attribute is set to an array which contains the identifying slugs for the sizes available in this region.
	Sizes []string `pulumi:"sizes"`
	// A human-readable string that is used as a unique identifier for each region.
	Slug string `pulumi:"slug"`
}

type RegionOutput struct{ *pulumi.OutputState }

func (RegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Region)(nil)).Elem()
}

func (o RegionOutput) ToRegionOutput() RegionOutput {
	return o
}

func (o RegionOutput) ToRegionOutputWithContext(ctx context.Context) RegionOutput {
	return o
}

// This is a boolean value that represents whether new Droplets can be created in this region.
func (o RegionOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v Region) bool { return v.Available }).(pulumi.BoolOutput)
}

// This attribute is set to an array which contains features available in this region
func (o RegionOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Region) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// The display name of the region.  This will be a full name that is used in the control panel and other interfaces.
func (o RegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v Region) string { return v.Name }).(pulumi.StringOutput)
}

// This attribute is set to an array which contains the identifying slugs for the sizes available in this region.
func (o RegionOutput) Sizes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Region) []string { return v.Sizes }).(pulumi.StringArrayOutput)
}

// A human-readable string that is used as a unique identifier for each region.
func (o RegionOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v Region) string { return v.Slug }).(pulumi.StringOutput)
}

type RegionArrayOutput struct{ *pulumi.OutputState }

func (RegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Region)(nil)).Elem()
}

func (o RegionArrayOutput) ToRegionArrayOutput() RegionArrayOutput {
	return o
}

func (o RegionArrayOutput) ToRegionArrayOutputWithContext(ctx context.Context) RegionArrayOutput {
	return o
}

func (o RegionArrayOutput) Index(i pulumi.IntInput) RegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Region {
		return vs[0].([]Region)[vs[1].(int)]
	}).(RegionOutput)
}

func init() {
	pulumi.RegisterOutputType(ListRegionsItemsOutput{})
	pulumi.RegisterOutputType(MetaMetaOutput{})
	pulumi.RegisterOutputType(PageLinksOutput{})
	pulumi.RegisterOutputType(PageLinksPtrOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RegionOutput{})
	pulumi.RegisterOutputType(RegionArrayOutput{})
}
