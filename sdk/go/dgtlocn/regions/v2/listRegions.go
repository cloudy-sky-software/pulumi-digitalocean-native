// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListRegions(ctx *pulumi.Context, args *ListRegionsArgs, opts ...pulumi.InvokeOption) (*ListRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListRegionsResult
	err := ctx.Invoke("digitalocean-native:regions/v2:listRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListRegionsArgs struct {
}

type ListRegionsResult struct {
	Links   *PageLinks `pulumi:"links"`
	Meta    MetaMeta   `pulumi:"meta"`
	Regions []Region   `pulumi:"regions"`
}

func ListRegionsOutput(ctx *pulumi.Context, args ListRegionsOutputArgs, opts ...pulumi.InvokeOption) ListRegionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListRegionsResult, error) {
			args := v.(ListRegionsArgs)
			r, err := ListRegions(ctx, &args, opts...)
			var s ListRegionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListRegionsResultOutput)
}

type ListRegionsOutputArgs struct {
}

func (ListRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRegionsArgs)(nil)).Elem()
}

type ListRegionsResultOutput struct{ *pulumi.OutputState }

func (ListRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRegionsResult)(nil)).Elem()
}

func (o ListRegionsResultOutput) ToListRegionsResultOutput() ListRegionsResultOutput {
	return o
}

func (o ListRegionsResultOutput) ToListRegionsResultOutputWithContext(ctx context.Context) ListRegionsResultOutput {
	return o
}

func (o ListRegionsResultOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListRegionsResult) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListRegionsResultOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListRegionsResult) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

func (o ListRegionsResultOutput) Regions() RegionArrayOutput {
	return o.ApplyT(func(v ListRegionsResult) []Region { return v.Regions }).(RegionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListRegionsResultOutput{})
}
