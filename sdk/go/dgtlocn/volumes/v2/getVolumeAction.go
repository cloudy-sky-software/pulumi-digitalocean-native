// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetVolumeAction(ctx *pulumi.Context, args *GetVolumeActionArgs, opts ...pulumi.InvokeOption) (*GetVolumeActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVolumeActionResult
	err := ctx.Invoke("digitalocean-native:volumes/v2:getVolumeAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetVolumeActionArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId string `pulumi:"actionId"`
	// The ID of the block storage volume.
	VolumeId string `pulumi:"volumeId"`
}

type GetVolumeActionResult struct {
	Items GetVolumeActionProperties `pulumi:"items"`
}

// Defaults sets the appropriate defaults for GetVolumeActionResult
func (val *GetVolumeActionResult) Defaults() *GetVolumeActionResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func GetVolumeActionOutput(ctx *pulumi.Context, args GetVolumeActionOutputArgs, opts ...pulumi.InvokeOption) GetVolumeActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVolumeActionResult, error) {
			args := v.(GetVolumeActionArgs)
			r, err := GetVolumeAction(ctx, &args, opts...)
			var s GetVolumeActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVolumeActionResultOutput)
}

type GetVolumeActionOutputArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId pulumi.StringInput `pulumi:"actionId"`
	// The ID of the block storage volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (GetVolumeActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeActionArgs)(nil)).Elem()
}

type GetVolumeActionResultOutput struct{ *pulumi.OutputState }

func (GetVolumeActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeActionResult)(nil)).Elem()
}

func (o GetVolumeActionResultOutput) ToGetVolumeActionResultOutput() GetVolumeActionResultOutput {
	return o
}

func (o GetVolumeActionResultOutput) ToGetVolumeActionResultOutputWithContext(ctx context.Context) GetVolumeActionResultOutput {
	return o
}

func (o GetVolumeActionResultOutput) Items() GetVolumeActionPropertiesOutput {
	return o.ApplyT(func(v GetVolumeActionResult) GetVolumeActionProperties { return v.Items }).(GetVolumeActionPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumeActionResultOutput{})
}
