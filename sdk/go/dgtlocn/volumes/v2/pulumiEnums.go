// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current status of the action. This can be "in-progress", "completed", or "errored".
type ActionStatus string

const (
	ActionStatusInProgress = ActionStatus("in-progress")
	ActionStatusCompleted  = ActionStatus("completed")
	ActionStatusErrored    = ActionStatus("errored")
)

type ActionStatusOutput struct{ *pulumi.OutputState }

func (ActionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionStatus)(nil)).Elem()
}

func (o ActionStatusOutput) ToActionStatusOutput() ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusOutputWithContext(ctx context.Context) ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o.ToActionStatusPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionStatus) *ActionStatus {
		return &v
	}).(ActionStatusPtrOutput)
}

func (o ActionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionStatusPtrOutput struct{ *pulumi.OutputState }

func (ActionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionStatus)(nil)).Elem()
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) Elem() ActionStatusOutput {
	return o.ApplyT(func(v *ActionStatus) ActionStatus {
		if v != nil {
			return *v
		}
		var ret ActionStatus
		return ret
	}).(ActionStatusOutput)
}

func (o ActionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of resource that the snapshot originated from.
type SnapshotsPropertiesResourceType string

const (
	SnapshotsPropertiesResourceTypeDroplet = SnapshotsPropertiesResourceType("droplet")
	SnapshotsPropertiesResourceTypeVolume  = SnapshotsPropertiesResourceType("volume")
)

type SnapshotsPropertiesResourceTypeOutput struct{ *pulumi.OutputState }

func (SnapshotsPropertiesResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotsPropertiesResourceType)(nil)).Elem()
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypeOutput() SnapshotsPropertiesResourceTypeOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypeOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypeOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypePtrOutput() SnapshotsPropertiesResourceTypePtrOutput {
	return o.ToSnapshotsPropertiesResourceTypePtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypePtrOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotsPropertiesResourceType) *SnapshotsPropertiesResourceType {
		return &v
	}).(SnapshotsPropertiesResourceTypePtrOutput)
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotsPropertiesResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotsPropertiesResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotsPropertiesResourceTypePtrOutput struct{ *pulumi.OutputState }

func (SnapshotsPropertiesResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotsPropertiesResourceType)(nil)).Elem()
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToSnapshotsPropertiesResourceTypePtrOutput() SnapshotsPropertiesResourceTypePtrOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToSnapshotsPropertiesResourceTypePtrOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypePtrOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypePtrOutput) Elem() SnapshotsPropertiesResourceTypeOutput {
	return o.ApplyT(func(v *SnapshotsPropertiesResourceType) SnapshotsPropertiesResourceType {
		if v != nil {
			return *v
		}
		var ret SnapshotsPropertiesResourceType
		return ret
	}).(SnapshotsPropertiesResourceTypeOutput)
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotsPropertiesResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type VolumeActionPostBaseRegion string

const (
	VolumeActionPostBaseRegionAms1 = VolumeActionPostBaseRegion("ams1")
	VolumeActionPostBaseRegionAms2 = VolumeActionPostBaseRegion("ams2")
	VolumeActionPostBaseRegionAms3 = VolumeActionPostBaseRegion("ams3")
	VolumeActionPostBaseRegionBlr1 = VolumeActionPostBaseRegion("blr1")
	VolumeActionPostBaseRegionFra1 = VolumeActionPostBaseRegion("fra1")
	VolumeActionPostBaseRegionLon1 = VolumeActionPostBaseRegion("lon1")
	VolumeActionPostBaseRegionNyc1 = VolumeActionPostBaseRegion("nyc1")
	VolumeActionPostBaseRegionNyc2 = VolumeActionPostBaseRegion("nyc2")
	VolumeActionPostBaseRegionNyc3 = VolumeActionPostBaseRegion("nyc3")
	VolumeActionPostBaseRegionSfo1 = VolumeActionPostBaseRegion("sfo1")
	VolumeActionPostBaseRegionSfo2 = VolumeActionPostBaseRegion("sfo2")
	VolumeActionPostBaseRegionSfo3 = VolumeActionPostBaseRegion("sfo3")
	VolumeActionPostBaseRegionSgp1 = VolumeActionPostBaseRegion("sgp1")
	VolumeActionPostBaseRegionTor1 = VolumeActionPostBaseRegion("tor1")
)

func (VolumeActionPostBaseRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionPostBaseRegion)(nil)).Elem()
}

func (e VolumeActionPostBaseRegion) ToVolumeActionPostBaseRegionOutput() VolumeActionPostBaseRegionOutput {
	return pulumi.ToOutput(e).(VolumeActionPostBaseRegionOutput)
}

func (e VolumeActionPostBaseRegion) ToVolumeActionPostBaseRegionOutputWithContext(ctx context.Context) VolumeActionPostBaseRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeActionPostBaseRegionOutput)
}

func (e VolumeActionPostBaseRegion) ToVolumeActionPostBaseRegionPtrOutput() VolumeActionPostBaseRegionPtrOutput {
	return e.ToVolumeActionPostBaseRegionPtrOutputWithContext(context.Background())
}

func (e VolumeActionPostBaseRegion) ToVolumeActionPostBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionPostBaseRegionPtrOutput {
	return VolumeActionPostBaseRegion(e).ToVolumeActionPostBaseRegionOutputWithContext(ctx).ToVolumeActionPostBaseRegionPtrOutputWithContext(ctx)
}

func (e VolumeActionPostBaseRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionPostBaseRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionPostBaseRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeActionPostBaseRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeActionPostBaseRegionOutput struct{ *pulumi.OutputState }

func (VolumeActionPostBaseRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionPostBaseRegion)(nil)).Elem()
}

func (o VolumeActionPostBaseRegionOutput) ToVolumeActionPostBaseRegionOutput() VolumeActionPostBaseRegionOutput {
	return o
}

func (o VolumeActionPostBaseRegionOutput) ToVolumeActionPostBaseRegionOutputWithContext(ctx context.Context) VolumeActionPostBaseRegionOutput {
	return o
}

func (o VolumeActionPostBaseRegionOutput) ToVolumeActionPostBaseRegionPtrOutput() VolumeActionPostBaseRegionPtrOutput {
	return o.ToVolumeActionPostBaseRegionPtrOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseRegionOutput) ToVolumeActionPostBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionPostBaseRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeActionPostBaseRegion) *VolumeActionPostBaseRegion {
		return &v
	}).(VolumeActionPostBaseRegionPtrOutput)
}

func (o VolumeActionPostBaseRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionPostBaseRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeActionPostBaseRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionPostBaseRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeActionPostBaseRegionPtrOutput struct{ *pulumi.OutputState }

func (VolumeActionPostBaseRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeActionPostBaseRegion)(nil)).Elem()
}

func (o VolumeActionPostBaseRegionPtrOutput) ToVolumeActionPostBaseRegionPtrOutput() VolumeActionPostBaseRegionPtrOutput {
	return o
}

func (o VolumeActionPostBaseRegionPtrOutput) ToVolumeActionPostBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionPostBaseRegionPtrOutput {
	return o
}

func (o VolumeActionPostBaseRegionPtrOutput) Elem() VolumeActionPostBaseRegionOutput {
	return o.ApplyT(func(v *VolumeActionPostBaseRegion) VolumeActionPostBaseRegion {
		if v != nil {
			return *v
		}
		var ret VolumeActionPostBaseRegion
		return ret
	}).(VolumeActionPostBaseRegionOutput)
}

func (o VolumeActionPostBaseRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeActionPostBaseRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeActionPostBaseRegionInput is an input type that accepts values of the VolumeActionPostBaseRegion enum
// A concrete instance of `VolumeActionPostBaseRegionInput` can be one of the following:
//
//	VolumeActionPostBaseRegionAms1
//	VolumeActionPostBaseRegionAms2
//	VolumeActionPostBaseRegionAms3
//	VolumeActionPostBaseRegionBlr1
//	VolumeActionPostBaseRegionFra1
//	VolumeActionPostBaseRegionLon1
//	VolumeActionPostBaseRegionNyc1
//	VolumeActionPostBaseRegionNyc2
//	VolumeActionPostBaseRegionNyc3
//	VolumeActionPostBaseRegionSfo1
//	VolumeActionPostBaseRegionSfo2
//	VolumeActionPostBaseRegionSfo3
//	VolumeActionPostBaseRegionSgp1
//	VolumeActionPostBaseRegionTor1
type VolumeActionPostBaseRegionInput interface {
	pulumi.Input

	ToVolumeActionPostBaseRegionOutput() VolumeActionPostBaseRegionOutput
	ToVolumeActionPostBaseRegionOutputWithContext(context.Context) VolumeActionPostBaseRegionOutput
}

var volumeActionPostBaseRegionPtrType = reflect.TypeOf((**VolumeActionPostBaseRegion)(nil)).Elem()

type VolumeActionPostBaseRegionPtrInput interface {
	pulumi.Input

	ToVolumeActionPostBaseRegionPtrOutput() VolumeActionPostBaseRegionPtrOutput
	ToVolumeActionPostBaseRegionPtrOutputWithContext(context.Context) VolumeActionPostBaseRegionPtrOutput
}

type volumeActionPostBaseRegionPtr string

func VolumeActionPostBaseRegionPtr(v string) VolumeActionPostBaseRegionPtrInput {
	return (*volumeActionPostBaseRegionPtr)(&v)
}

func (*volumeActionPostBaseRegionPtr) ElementType() reflect.Type {
	return volumeActionPostBaseRegionPtrType
}

func (in *volumeActionPostBaseRegionPtr) ToVolumeActionPostBaseRegionPtrOutput() VolumeActionPostBaseRegionPtrOutput {
	return pulumi.ToOutput(in).(VolumeActionPostBaseRegionPtrOutput)
}

func (in *volumeActionPostBaseRegionPtr) ToVolumeActionPostBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionPostBaseRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeActionPostBaseRegionPtrOutput)
}

// The volume action to initiate.
type VolumeActionPostBaseType string

const (
	VolumeActionPostBaseTypeAttach = VolumeActionPostBaseType("attach")
	VolumeActionPostBaseTypeDetach = VolumeActionPostBaseType("detach")
	VolumeActionPostBaseTypeResize = VolumeActionPostBaseType("resize")
)

func (VolumeActionPostBaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionPostBaseType)(nil)).Elem()
}

func (e VolumeActionPostBaseType) ToVolumeActionPostBaseTypeOutput() VolumeActionPostBaseTypeOutput {
	return pulumi.ToOutput(e).(VolumeActionPostBaseTypeOutput)
}

func (e VolumeActionPostBaseType) ToVolumeActionPostBaseTypeOutputWithContext(ctx context.Context) VolumeActionPostBaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeActionPostBaseTypeOutput)
}

func (e VolumeActionPostBaseType) ToVolumeActionPostBaseTypePtrOutput() VolumeActionPostBaseTypePtrOutput {
	return e.ToVolumeActionPostBaseTypePtrOutputWithContext(context.Background())
}

func (e VolumeActionPostBaseType) ToVolumeActionPostBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionPostBaseTypePtrOutput {
	return VolumeActionPostBaseType(e).ToVolumeActionPostBaseTypeOutputWithContext(ctx).ToVolumeActionPostBaseTypePtrOutputWithContext(ctx)
}

func (e VolumeActionPostBaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionPostBaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionPostBaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeActionPostBaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeActionPostBaseTypeOutput struct{ *pulumi.OutputState }

func (VolumeActionPostBaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionPostBaseType)(nil)).Elem()
}

func (o VolumeActionPostBaseTypeOutput) ToVolumeActionPostBaseTypeOutput() VolumeActionPostBaseTypeOutput {
	return o
}

func (o VolumeActionPostBaseTypeOutput) ToVolumeActionPostBaseTypeOutputWithContext(ctx context.Context) VolumeActionPostBaseTypeOutput {
	return o
}

func (o VolumeActionPostBaseTypeOutput) ToVolumeActionPostBaseTypePtrOutput() VolumeActionPostBaseTypePtrOutput {
	return o.ToVolumeActionPostBaseTypePtrOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseTypeOutput) ToVolumeActionPostBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionPostBaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeActionPostBaseType) *VolumeActionPostBaseType {
		return &v
	}).(VolumeActionPostBaseTypePtrOutput)
}

func (o VolumeActionPostBaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionPostBaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeActionPostBaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionPostBaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeActionPostBaseTypePtrOutput struct{ *pulumi.OutputState }

func (VolumeActionPostBaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeActionPostBaseType)(nil)).Elem()
}

func (o VolumeActionPostBaseTypePtrOutput) ToVolumeActionPostBaseTypePtrOutput() VolumeActionPostBaseTypePtrOutput {
	return o
}

func (o VolumeActionPostBaseTypePtrOutput) ToVolumeActionPostBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionPostBaseTypePtrOutput {
	return o
}

func (o VolumeActionPostBaseTypePtrOutput) Elem() VolumeActionPostBaseTypeOutput {
	return o.ApplyT(func(v *VolumeActionPostBaseType) VolumeActionPostBaseType {
		if v != nil {
			return *v
		}
		var ret VolumeActionPostBaseType
		return ret
	}).(VolumeActionPostBaseTypeOutput)
}

func (o VolumeActionPostBaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionPostBaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeActionPostBaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeActionPostBaseTypeInput is an input type that accepts values of the VolumeActionPostBaseType enum
// A concrete instance of `VolumeActionPostBaseTypeInput` can be one of the following:
//
//	VolumeActionPostBaseTypeAttach
//	VolumeActionPostBaseTypeDetach
//	VolumeActionPostBaseTypeResize
type VolumeActionPostBaseTypeInput interface {
	pulumi.Input

	ToVolumeActionPostBaseTypeOutput() VolumeActionPostBaseTypeOutput
	ToVolumeActionPostBaseTypeOutputWithContext(context.Context) VolumeActionPostBaseTypeOutput
}

var volumeActionPostBaseTypePtrType = reflect.TypeOf((**VolumeActionPostBaseType)(nil)).Elem()

type VolumeActionPostBaseTypePtrInput interface {
	pulumi.Input

	ToVolumeActionPostBaseTypePtrOutput() VolumeActionPostBaseTypePtrOutput
	ToVolumeActionPostBaseTypePtrOutputWithContext(context.Context) VolumeActionPostBaseTypePtrOutput
}

type volumeActionPostBaseTypePtr string

func VolumeActionPostBaseTypePtr(v string) VolumeActionPostBaseTypePtrInput {
	return (*volumeActionPostBaseTypePtr)(&v)
}

func (*volumeActionPostBaseTypePtr) ElementType() reflect.Type {
	return volumeActionPostBaseTypePtrType
}

func (in *volumeActionPostBaseTypePtr) ToVolumeActionPostBaseTypePtrOutput() VolumeActionPostBaseTypePtrOutput {
	return pulumi.ToOutput(in).(VolumeActionPostBaseTypePtrOutput)
}

func (in *volumeActionPostBaseTypePtr) ToVolumeActionPostBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionPostBaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeActionPostBaseTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionPostBaseRegionInput)(nil)).Elem(), VolumeActionPostBaseRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionPostBaseRegionPtrInput)(nil)).Elem(), VolumeActionPostBaseRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionPostBaseTypeInput)(nil)).Elem(), VolumeActionPostBaseType("attach"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionPostBaseTypePtrInput)(nil)).Elem(), VolumeActionPostBaseType("attach"))
	pulumi.RegisterOutputType(ActionStatusOutput{})
	pulumi.RegisterOutputType(ActionStatusPtrOutput{})
	pulumi.RegisterOutputType(SnapshotsPropertiesResourceTypeOutput{})
	pulumi.RegisterOutputType(SnapshotsPropertiesResourceTypePtrOutput{})
	pulumi.RegisterOutputType(VolumeActionPostBaseRegionOutput{})
	pulumi.RegisterOutputType(VolumeActionPostBaseRegionPtrOutput{})
	pulumi.RegisterOutputType(VolumeActionPostBaseTypeOutput{})
	pulumi.RegisterOutputType(VolumeActionPostBaseTypePtrOutput{})
}
