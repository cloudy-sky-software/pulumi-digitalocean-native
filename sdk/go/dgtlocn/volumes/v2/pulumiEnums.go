// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current status of the action. This can be "in-progress", "completed", or "errored".
type ActionStatus string

const (
	ActionStatusInProgress = ActionStatus("in-progress")
	ActionStatusCompleted  = ActionStatus("completed")
	ActionStatusErrored    = ActionStatus("errored")
)

type ActionStatusOutput struct{ *pulumi.OutputState }

func (ActionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionStatus)(nil)).Elem()
}

func (o ActionStatusOutput) ToActionStatusOutput() ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusOutputWithContext(ctx context.Context) ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o.ToActionStatusPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionStatus) *ActionStatus {
		return &v
	}).(ActionStatusPtrOutput)
}

func (o ActionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionStatusPtrOutput struct{ *pulumi.OutputState }

func (ActionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionStatus)(nil)).Elem()
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) Elem() ActionStatusOutput {
	return o.ApplyT(func(v *ActionStatus) ActionStatus {
		if v != nil {
			return *v
		}
		var ret ActionStatus
		return ret
	}).(ActionStatusOutput)
}

func (o ActionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type Ext4PropertiesRegion string

const (
	Ext4PropertiesRegionAms1 = Ext4PropertiesRegion("ams1")
	Ext4PropertiesRegionAms2 = Ext4PropertiesRegion("ams2")
	Ext4PropertiesRegionAms3 = Ext4PropertiesRegion("ams3")
	Ext4PropertiesRegionBlr1 = Ext4PropertiesRegion("blr1")
	Ext4PropertiesRegionFra1 = Ext4PropertiesRegion("fra1")
	Ext4PropertiesRegionLon1 = Ext4PropertiesRegion("lon1")
	Ext4PropertiesRegionNyc1 = Ext4PropertiesRegion("nyc1")
	Ext4PropertiesRegionNyc2 = Ext4PropertiesRegion("nyc2")
	Ext4PropertiesRegionNyc3 = Ext4PropertiesRegion("nyc3")
	Ext4PropertiesRegionSfo1 = Ext4PropertiesRegion("sfo1")
	Ext4PropertiesRegionSfo2 = Ext4PropertiesRegion("sfo2")
	Ext4PropertiesRegionSfo3 = Ext4PropertiesRegion("sfo3")
	Ext4PropertiesRegionSgp1 = Ext4PropertiesRegion("sgp1")
	Ext4PropertiesRegionTor1 = Ext4PropertiesRegion("tor1")
)

func (Ext4PropertiesRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*Ext4PropertiesRegion)(nil)).Elem()
}

func (e Ext4PropertiesRegion) ToExt4PropertiesRegionOutput() Ext4PropertiesRegionOutput {
	return pulumi.ToOutput(e).(Ext4PropertiesRegionOutput)
}

func (e Ext4PropertiesRegion) ToExt4PropertiesRegionOutputWithContext(ctx context.Context) Ext4PropertiesRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(Ext4PropertiesRegionOutput)
}

func (e Ext4PropertiesRegion) ToExt4PropertiesRegionPtrOutput() Ext4PropertiesRegionPtrOutput {
	return e.ToExt4PropertiesRegionPtrOutputWithContext(context.Background())
}

func (e Ext4PropertiesRegion) ToExt4PropertiesRegionPtrOutputWithContext(ctx context.Context) Ext4PropertiesRegionPtrOutput {
	return Ext4PropertiesRegion(e).ToExt4PropertiesRegionOutputWithContext(ctx).ToExt4PropertiesRegionPtrOutputWithContext(ctx)
}

func (e Ext4PropertiesRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Ext4PropertiesRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Ext4PropertiesRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Ext4PropertiesRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type Ext4PropertiesRegionOutput struct{ *pulumi.OutputState }

func (Ext4PropertiesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ext4PropertiesRegion)(nil)).Elem()
}

func (o Ext4PropertiesRegionOutput) ToExt4PropertiesRegionOutput() Ext4PropertiesRegionOutput {
	return o
}

func (o Ext4PropertiesRegionOutput) ToExt4PropertiesRegionOutputWithContext(ctx context.Context) Ext4PropertiesRegionOutput {
	return o
}

func (o Ext4PropertiesRegionOutput) ToExt4PropertiesRegionPtrOutput() Ext4PropertiesRegionPtrOutput {
	return o.ToExt4PropertiesRegionPtrOutputWithContext(context.Background())
}

func (o Ext4PropertiesRegionOutput) ToExt4PropertiesRegionPtrOutputWithContext(ctx context.Context) Ext4PropertiesRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Ext4PropertiesRegion) *Ext4PropertiesRegion {
		return &v
	}).(Ext4PropertiesRegionPtrOutput)
}

func (o Ext4PropertiesRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o Ext4PropertiesRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Ext4PropertiesRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o Ext4PropertiesRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o Ext4PropertiesRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Ext4PropertiesRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type Ext4PropertiesRegionPtrOutput struct{ *pulumi.OutputState }

func (Ext4PropertiesRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ext4PropertiesRegion)(nil)).Elem()
}

func (o Ext4PropertiesRegionPtrOutput) ToExt4PropertiesRegionPtrOutput() Ext4PropertiesRegionPtrOutput {
	return o
}

func (o Ext4PropertiesRegionPtrOutput) ToExt4PropertiesRegionPtrOutputWithContext(ctx context.Context) Ext4PropertiesRegionPtrOutput {
	return o
}

func (o Ext4PropertiesRegionPtrOutput) Elem() Ext4PropertiesRegionOutput {
	return o.ApplyT(func(v *Ext4PropertiesRegion) Ext4PropertiesRegion {
		if v != nil {
			return *v
		}
		var ret Ext4PropertiesRegion
		return ret
	}).(Ext4PropertiesRegionOutput)
}

func (o Ext4PropertiesRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o Ext4PropertiesRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Ext4PropertiesRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Ext4PropertiesRegionInput is an input type that accepts values of the Ext4PropertiesRegion enum
// A concrete instance of `Ext4PropertiesRegionInput` can be one of the following:
//
//	Ext4PropertiesRegionAms1
//	Ext4PropertiesRegionAms2
//	Ext4PropertiesRegionAms3
//	Ext4PropertiesRegionBlr1
//	Ext4PropertiesRegionFra1
//	Ext4PropertiesRegionLon1
//	Ext4PropertiesRegionNyc1
//	Ext4PropertiesRegionNyc2
//	Ext4PropertiesRegionNyc3
//	Ext4PropertiesRegionSfo1
//	Ext4PropertiesRegionSfo2
//	Ext4PropertiesRegionSfo3
//	Ext4PropertiesRegionSgp1
//	Ext4PropertiesRegionTor1
type Ext4PropertiesRegionInput interface {
	pulumi.Input

	ToExt4PropertiesRegionOutput() Ext4PropertiesRegionOutput
	ToExt4PropertiesRegionOutputWithContext(context.Context) Ext4PropertiesRegionOutput
}

var ext4PropertiesRegionPtrType = reflect.TypeOf((**Ext4PropertiesRegion)(nil)).Elem()

type Ext4PropertiesRegionPtrInput interface {
	pulumi.Input

	ToExt4PropertiesRegionPtrOutput() Ext4PropertiesRegionPtrOutput
	ToExt4PropertiesRegionPtrOutputWithContext(context.Context) Ext4PropertiesRegionPtrOutput
}

type ext4PropertiesRegionPtr string

func Ext4PropertiesRegionPtr(v string) Ext4PropertiesRegionPtrInput {
	return (*ext4PropertiesRegionPtr)(&v)
}

func (*ext4PropertiesRegionPtr) ElementType() reflect.Type {
	return ext4PropertiesRegionPtrType
}

func (in *ext4PropertiesRegionPtr) ToExt4PropertiesRegionPtrOutput() Ext4PropertiesRegionPtrOutput {
	return pulumi.ToOutput(in).(Ext4PropertiesRegionPtrOutput)
}

func (in *ext4PropertiesRegionPtr) ToExt4PropertiesRegionPtrOutputWithContext(ctx context.Context) Ext4PropertiesRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(Ext4PropertiesRegionPtrOutput)
}

// The type of resource that the snapshot originated from.
type SnapshotsPropertiesResourceType string

const (
	SnapshotsPropertiesResourceTypeDroplet = SnapshotsPropertiesResourceType("droplet")
	SnapshotsPropertiesResourceTypeVolume  = SnapshotsPropertiesResourceType("volume")
)

type SnapshotsPropertiesResourceTypeOutput struct{ *pulumi.OutputState }

func (SnapshotsPropertiesResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotsPropertiesResourceType)(nil)).Elem()
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypeOutput() SnapshotsPropertiesResourceTypeOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypeOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypeOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypePtrOutput() SnapshotsPropertiesResourceTypePtrOutput {
	return o.ToSnapshotsPropertiesResourceTypePtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypePtrOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotsPropertiesResourceType) *SnapshotsPropertiesResourceType {
		return &v
	}).(SnapshotsPropertiesResourceTypePtrOutput)
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotsPropertiesResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotsPropertiesResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotsPropertiesResourceTypePtrOutput struct{ *pulumi.OutputState }

func (SnapshotsPropertiesResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotsPropertiesResourceType)(nil)).Elem()
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToSnapshotsPropertiesResourceTypePtrOutput() SnapshotsPropertiesResourceTypePtrOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToSnapshotsPropertiesResourceTypePtrOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypePtrOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypePtrOutput) Elem() SnapshotsPropertiesResourceTypeOutput {
	return o.ApplyT(func(v *SnapshotsPropertiesResourceType) SnapshotsPropertiesResourceType {
		if v != nil {
			return *v
		}
		var ret SnapshotsPropertiesResourceType
		return ret
	}).(SnapshotsPropertiesResourceTypeOutput)
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotsPropertiesResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type VolumeActionCreateBaseRegion string

const (
	VolumeActionCreateBaseRegionAms1 = VolumeActionCreateBaseRegion("ams1")
	VolumeActionCreateBaseRegionAms2 = VolumeActionCreateBaseRegion("ams2")
	VolumeActionCreateBaseRegionAms3 = VolumeActionCreateBaseRegion("ams3")
	VolumeActionCreateBaseRegionBlr1 = VolumeActionCreateBaseRegion("blr1")
	VolumeActionCreateBaseRegionFra1 = VolumeActionCreateBaseRegion("fra1")
	VolumeActionCreateBaseRegionLon1 = VolumeActionCreateBaseRegion("lon1")
	VolumeActionCreateBaseRegionNyc1 = VolumeActionCreateBaseRegion("nyc1")
	VolumeActionCreateBaseRegionNyc2 = VolumeActionCreateBaseRegion("nyc2")
	VolumeActionCreateBaseRegionNyc3 = VolumeActionCreateBaseRegion("nyc3")
	VolumeActionCreateBaseRegionSfo1 = VolumeActionCreateBaseRegion("sfo1")
	VolumeActionCreateBaseRegionSfo2 = VolumeActionCreateBaseRegion("sfo2")
	VolumeActionCreateBaseRegionSfo3 = VolumeActionCreateBaseRegion("sfo3")
	VolumeActionCreateBaseRegionSgp1 = VolumeActionCreateBaseRegion("sgp1")
	VolumeActionCreateBaseRegionTor1 = VolumeActionCreateBaseRegion("tor1")
)

func (VolumeActionCreateBaseRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseRegion)(nil)).Elem()
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionOutput() VolumeActionCreateBaseRegionOutput {
	return pulumi.ToOutput(e).(VolumeActionCreateBaseRegionOutput)
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeActionCreateBaseRegionOutput)
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return e.ToVolumeActionCreateBaseRegionPtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return VolumeActionCreateBaseRegion(e).ToVolumeActionCreateBaseRegionOutputWithContext(ctx).ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx)
}

func (e VolumeActionCreateBaseRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeActionCreateBaseRegionOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseRegion)(nil)).Elem()
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionOutput() VolumeActionCreateBaseRegionOutput {
	return o
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionOutput {
	return o
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return o.ToVolumeActionCreateBaseRegionPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeActionCreateBaseRegion) *VolumeActionCreateBaseRegion {
		return &v
	}).(VolumeActionCreateBaseRegionPtrOutput)
}

func (o VolumeActionCreateBaseRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeActionCreateBaseRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeActionCreateBaseRegionPtrOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeActionCreateBaseRegion)(nil)).Elem()
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return o
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return o
}

func (o VolumeActionCreateBaseRegionPtrOutput) Elem() VolumeActionCreateBaseRegionOutput {
	return o.ApplyT(func(v *VolumeActionCreateBaseRegion) VolumeActionCreateBaseRegion {
		if v != nil {
			return *v
		}
		var ret VolumeActionCreateBaseRegion
		return ret
	}).(VolumeActionCreateBaseRegionOutput)
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeActionCreateBaseRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeActionCreateBaseRegionInput is an input type that accepts values of the VolumeActionCreateBaseRegion enum
// A concrete instance of `VolumeActionCreateBaseRegionInput` can be one of the following:
//
//	VolumeActionCreateBaseRegionAms1
//	VolumeActionCreateBaseRegionAms2
//	VolumeActionCreateBaseRegionAms3
//	VolumeActionCreateBaseRegionBlr1
//	VolumeActionCreateBaseRegionFra1
//	VolumeActionCreateBaseRegionLon1
//	VolumeActionCreateBaseRegionNyc1
//	VolumeActionCreateBaseRegionNyc2
//	VolumeActionCreateBaseRegionNyc3
//	VolumeActionCreateBaseRegionSfo1
//	VolumeActionCreateBaseRegionSfo2
//	VolumeActionCreateBaseRegionSfo3
//	VolumeActionCreateBaseRegionSgp1
//	VolumeActionCreateBaseRegionTor1
type VolumeActionCreateBaseRegionInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseRegionOutput() VolumeActionCreateBaseRegionOutput
	ToVolumeActionCreateBaseRegionOutputWithContext(context.Context) VolumeActionCreateBaseRegionOutput
}

var volumeActionCreateBaseRegionPtrType = reflect.TypeOf((**VolumeActionCreateBaseRegion)(nil)).Elem()

type VolumeActionCreateBaseRegionPtrInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput
	ToVolumeActionCreateBaseRegionPtrOutputWithContext(context.Context) VolumeActionCreateBaseRegionPtrOutput
}

type volumeActionCreateBaseRegionPtr string

func VolumeActionCreateBaseRegionPtr(v string) VolumeActionCreateBaseRegionPtrInput {
	return (*volumeActionCreateBaseRegionPtr)(&v)
}

func (*volumeActionCreateBaseRegionPtr) ElementType() reflect.Type {
	return volumeActionCreateBaseRegionPtrType
}

func (in *volumeActionCreateBaseRegionPtr) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return pulumi.ToOutput(in).(VolumeActionCreateBaseRegionPtrOutput)
}

func (in *volumeActionCreateBaseRegionPtr) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeActionCreateBaseRegionPtrOutput)
}

// The volume action to initiate.
type VolumeActionCreateBaseType string

const (
	VolumeActionCreateBaseTypeAttach = VolumeActionCreateBaseType("attach")
	VolumeActionCreateBaseTypeDetach = VolumeActionCreateBaseType("detach")
	VolumeActionCreateBaseTypeResize = VolumeActionCreateBaseType("resize")
)

func (VolumeActionCreateBaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseType)(nil)).Elem()
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypeOutput() VolumeActionCreateBaseTypeOutput {
	return pulumi.ToOutput(e).(VolumeActionCreateBaseTypeOutput)
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypeOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeActionCreateBaseTypeOutput)
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return e.ToVolumeActionCreateBaseTypePtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return VolumeActionCreateBaseType(e).ToVolumeActionCreateBaseTypeOutputWithContext(ctx).ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx)
}

func (e VolumeActionCreateBaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeActionCreateBaseTypeOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseType)(nil)).Elem()
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypeOutput() VolumeActionCreateBaseTypeOutput {
	return o
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypeOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypeOutput {
	return o
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return o.ToVolumeActionCreateBaseTypePtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeActionCreateBaseType) *VolumeActionCreateBaseType {
		return &v
	}).(VolumeActionCreateBaseTypePtrOutput)
}

func (o VolumeActionCreateBaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeActionCreateBaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeActionCreateBaseTypePtrOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeActionCreateBaseType)(nil)).Elem()
}

func (o VolumeActionCreateBaseTypePtrOutput) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return o
}

func (o VolumeActionCreateBaseTypePtrOutput) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return o
}

func (o VolumeActionCreateBaseTypePtrOutput) Elem() VolumeActionCreateBaseTypeOutput {
	return o.ApplyT(func(v *VolumeActionCreateBaseType) VolumeActionCreateBaseType {
		if v != nil {
			return *v
		}
		var ret VolumeActionCreateBaseType
		return ret
	}).(VolumeActionCreateBaseTypeOutput)
}

func (o VolumeActionCreateBaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeActionCreateBaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeActionCreateBaseTypeInput is an input type that accepts values of the VolumeActionCreateBaseType enum
// A concrete instance of `VolumeActionCreateBaseTypeInput` can be one of the following:
//
//	VolumeActionCreateBaseTypeAttach
//	VolumeActionCreateBaseTypeDetach
//	VolumeActionCreateBaseTypeResize
type VolumeActionCreateBaseTypeInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseTypeOutput() VolumeActionCreateBaseTypeOutput
	ToVolumeActionCreateBaseTypeOutputWithContext(context.Context) VolumeActionCreateBaseTypeOutput
}

var volumeActionCreateBaseTypePtrType = reflect.TypeOf((**VolumeActionCreateBaseType)(nil)).Elem()

type VolumeActionCreateBaseTypePtrInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput
	ToVolumeActionCreateBaseTypePtrOutputWithContext(context.Context) VolumeActionCreateBaseTypePtrOutput
}

type volumeActionCreateBaseTypePtr string

func VolumeActionCreateBaseTypePtr(v string) VolumeActionCreateBaseTypePtrInput {
	return (*volumeActionCreateBaseTypePtr)(&v)
}

func (*volumeActionCreateBaseTypePtr) ElementType() reflect.Type {
	return volumeActionCreateBaseTypePtrType
}

func (in *volumeActionCreateBaseTypePtr) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return pulumi.ToOutput(in).(VolumeActionCreateBaseTypePtrOutput)
}

func (in *volumeActionCreateBaseTypePtr) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeActionCreateBaseTypePtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type XfsPropertiesRegion string

const (
	XfsPropertiesRegionAms1 = XfsPropertiesRegion("ams1")
	XfsPropertiesRegionAms2 = XfsPropertiesRegion("ams2")
	XfsPropertiesRegionAms3 = XfsPropertiesRegion("ams3")
	XfsPropertiesRegionBlr1 = XfsPropertiesRegion("blr1")
	XfsPropertiesRegionFra1 = XfsPropertiesRegion("fra1")
	XfsPropertiesRegionLon1 = XfsPropertiesRegion("lon1")
	XfsPropertiesRegionNyc1 = XfsPropertiesRegion("nyc1")
	XfsPropertiesRegionNyc2 = XfsPropertiesRegion("nyc2")
	XfsPropertiesRegionNyc3 = XfsPropertiesRegion("nyc3")
	XfsPropertiesRegionSfo1 = XfsPropertiesRegion("sfo1")
	XfsPropertiesRegionSfo2 = XfsPropertiesRegion("sfo2")
	XfsPropertiesRegionSfo3 = XfsPropertiesRegion("sfo3")
	XfsPropertiesRegionSgp1 = XfsPropertiesRegion("sgp1")
	XfsPropertiesRegionTor1 = XfsPropertiesRegion("tor1")
)

func (XfsPropertiesRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*XfsPropertiesRegion)(nil)).Elem()
}

func (e XfsPropertiesRegion) ToXfsPropertiesRegionOutput() XfsPropertiesRegionOutput {
	return pulumi.ToOutput(e).(XfsPropertiesRegionOutput)
}

func (e XfsPropertiesRegion) ToXfsPropertiesRegionOutputWithContext(ctx context.Context) XfsPropertiesRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(XfsPropertiesRegionOutput)
}

func (e XfsPropertiesRegion) ToXfsPropertiesRegionPtrOutput() XfsPropertiesRegionPtrOutput {
	return e.ToXfsPropertiesRegionPtrOutputWithContext(context.Background())
}

func (e XfsPropertiesRegion) ToXfsPropertiesRegionPtrOutputWithContext(ctx context.Context) XfsPropertiesRegionPtrOutput {
	return XfsPropertiesRegion(e).ToXfsPropertiesRegionOutputWithContext(ctx).ToXfsPropertiesRegionPtrOutputWithContext(ctx)
}

func (e XfsPropertiesRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e XfsPropertiesRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e XfsPropertiesRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e XfsPropertiesRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type XfsPropertiesRegionOutput struct{ *pulumi.OutputState }

func (XfsPropertiesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XfsPropertiesRegion)(nil)).Elem()
}

func (o XfsPropertiesRegionOutput) ToXfsPropertiesRegionOutput() XfsPropertiesRegionOutput {
	return o
}

func (o XfsPropertiesRegionOutput) ToXfsPropertiesRegionOutputWithContext(ctx context.Context) XfsPropertiesRegionOutput {
	return o
}

func (o XfsPropertiesRegionOutput) ToXfsPropertiesRegionPtrOutput() XfsPropertiesRegionPtrOutput {
	return o.ToXfsPropertiesRegionPtrOutputWithContext(context.Background())
}

func (o XfsPropertiesRegionOutput) ToXfsPropertiesRegionPtrOutputWithContext(ctx context.Context) XfsPropertiesRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v XfsPropertiesRegion) *XfsPropertiesRegion {
		return &v
	}).(XfsPropertiesRegionPtrOutput)
}

func (o XfsPropertiesRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o XfsPropertiesRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e XfsPropertiesRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o XfsPropertiesRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o XfsPropertiesRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e XfsPropertiesRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type XfsPropertiesRegionPtrOutput struct{ *pulumi.OutputState }

func (XfsPropertiesRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XfsPropertiesRegion)(nil)).Elem()
}

func (o XfsPropertiesRegionPtrOutput) ToXfsPropertiesRegionPtrOutput() XfsPropertiesRegionPtrOutput {
	return o
}

func (o XfsPropertiesRegionPtrOutput) ToXfsPropertiesRegionPtrOutputWithContext(ctx context.Context) XfsPropertiesRegionPtrOutput {
	return o
}

func (o XfsPropertiesRegionPtrOutput) Elem() XfsPropertiesRegionOutput {
	return o.ApplyT(func(v *XfsPropertiesRegion) XfsPropertiesRegion {
		if v != nil {
			return *v
		}
		var ret XfsPropertiesRegion
		return ret
	}).(XfsPropertiesRegionOutput)
}

func (o XfsPropertiesRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o XfsPropertiesRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *XfsPropertiesRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// XfsPropertiesRegionInput is an input type that accepts values of the XfsPropertiesRegion enum
// A concrete instance of `XfsPropertiesRegionInput` can be one of the following:
//
//	XfsPropertiesRegionAms1
//	XfsPropertiesRegionAms2
//	XfsPropertiesRegionAms3
//	XfsPropertiesRegionBlr1
//	XfsPropertiesRegionFra1
//	XfsPropertiesRegionLon1
//	XfsPropertiesRegionNyc1
//	XfsPropertiesRegionNyc2
//	XfsPropertiesRegionNyc3
//	XfsPropertiesRegionSfo1
//	XfsPropertiesRegionSfo2
//	XfsPropertiesRegionSfo3
//	XfsPropertiesRegionSgp1
//	XfsPropertiesRegionTor1
type XfsPropertiesRegionInput interface {
	pulumi.Input

	ToXfsPropertiesRegionOutput() XfsPropertiesRegionOutput
	ToXfsPropertiesRegionOutputWithContext(context.Context) XfsPropertiesRegionOutput
}

var xfsPropertiesRegionPtrType = reflect.TypeOf((**XfsPropertiesRegion)(nil)).Elem()

type XfsPropertiesRegionPtrInput interface {
	pulumi.Input

	ToXfsPropertiesRegionPtrOutput() XfsPropertiesRegionPtrOutput
	ToXfsPropertiesRegionPtrOutputWithContext(context.Context) XfsPropertiesRegionPtrOutput
}

type xfsPropertiesRegionPtr string

func XfsPropertiesRegionPtr(v string) XfsPropertiesRegionPtrInput {
	return (*xfsPropertiesRegionPtr)(&v)
}

func (*xfsPropertiesRegionPtr) ElementType() reflect.Type {
	return xfsPropertiesRegionPtrType
}

func (in *xfsPropertiesRegionPtr) ToXfsPropertiesRegionPtrOutput() XfsPropertiesRegionPtrOutput {
	return pulumi.ToOutput(in).(XfsPropertiesRegionPtrOutput)
}

func (in *xfsPropertiesRegionPtr) ToXfsPropertiesRegionPtrOutputWithContext(ctx context.Context) XfsPropertiesRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(XfsPropertiesRegionPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ext4PropertiesRegionInput)(nil)).Elem(), Ext4PropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*Ext4PropertiesRegionPtrInput)(nil)).Elem(), Ext4PropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseRegionInput)(nil)).Elem(), VolumeActionCreateBaseRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseRegionPtrInput)(nil)).Elem(), VolumeActionCreateBaseRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseTypeInput)(nil)).Elem(), VolumeActionCreateBaseType("attach"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseTypePtrInput)(nil)).Elem(), VolumeActionCreateBaseType("attach"))
	pulumi.RegisterInputType(reflect.TypeOf((*XfsPropertiesRegionInput)(nil)).Elem(), XfsPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*XfsPropertiesRegionPtrInput)(nil)).Elem(), XfsPropertiesRegion("ams1"))
	pulumi.RegisterOutputType(ActionStatusOutput{})
	pulumi.RegisterOutputType(ActionStatusPtrOutput{})
	pulumi.RegisterOutputType(Ext4PropertiesRegionOutput{})
	pulumi.RegisterOutputType(Ext4PropertiesRegionPtrOutput{})
	pulumi.RegisterOutputType(SnapshotsPropertiesResourceTypeOutput{})
	pulumi.RegisterOutputType(SnapshotsPropertiesResourceTypePtrOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseRegionOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseRegionPtrOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseTypeOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseTypePtrOutput{})
	pulumi.RegisterOutputType(XfsPropertiesRegionOutput{})
	pulumi.RegisterOutputType(XfsPropertiesRegionPtrOutput{})
}
