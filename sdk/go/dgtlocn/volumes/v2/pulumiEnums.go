// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current status of the action. This can be "in-progress", "completed", or "errored".
type ActionStatus string

const (
	ActionStatusInProgress = ActionStatus("in-progress")
	ActionStatusCompleted  = ActionStatus("completed")
	ActionStatusErrored    = ActionStatus("errored")
)

type ActionStatusOutput struct{ *pulumi.OutputState }

func (ActionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionStatus)(nil)).Elem()
}

func (o ActionStatusOutput) ToActionStatusOutput() ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusOutputWithContext(ctx context.Context) ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o.ToActionStatusPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionStatus) *ActionStatus {
		return &v
	}).(ActionStatusPtrOutput)
}

func (o ActionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionStatusPtrOutput struct{ *pulumi.OutputState }

func (ActionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionStatus)(nil)).Elem()
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) Elem() ActionStatusOutput {
	return o.ApplyT(func(v *ActionStatus) ActionStatus {
		if v != nil {
			return *v
		}
		var ret ActionStatus
		return ret
	}).(ActionStatusOutput)
}

func (o ActionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of resource that the snapshot originated from.
type SnapshotsPropertiesResourceType string

const (
	SnapshotsPropertiesResourceTypeDroplet = SnapshotsPropertiesResourceType("droplet")
	SnapshotsPropertiesResourceTypeVolume  = SnapshotsPropertiesResourceType("volume")
)

type SnapshotsPropertiesResourceTypeOutput struct{ *pulumi.OutputState }

func (SnapshotsPropertiesResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SnapshotsPropertiesResourceType)(nil)).Elem()
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypeOutput() SnapshotsPropertiesResourceTypeOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypeOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypeOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypePtrOutput() SnapshotsPropertiesResourceTypePtrOutput {
	return o.ToSnapshotsPropertiesResourceTypePtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToSnapshotsPropertiesResourceTypePtrOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SnapshotsPropertiesResourceType) *SnapshotsPropertiesResourceType {
		return &v
	}).(SnapshotsPropertiesResourceTypePtrOutput)
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotsPropertiesResourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SnapshotsPropertiesResourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SnapshotsPropertiesResourceTypePtrOutput struct{ *pulumi.OutputState }

func (SnapshotsPropertiesResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SnapshotsPropertiesResourceType)(nil)).Elem()
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToSnapshotsPropertiesResourceTypePtrOutput() SnapshotsPropertiesResourceTypePtrOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToSnapshotsPropertiesResourceTypePtrOutputWithContext(ctx context.Context) SnapshotsPropertiesResourceTypePtrOutput {
	return o
}

func (o SnapshotsPropertiesResourceTypePtrOutput) Elem() SnapshotsPropertiesResourceTypeOutput {
	return o.ApplyT(func(v *SnapshotsPropertiesResourceType) SnapshotsPropertiesResourceType {
		if v != nil {
			return *v
		}
		var ret SnapshotsPropertiesResourceType
		return ret
	}).(SnapshotsPropertiesResourceTypeOutput)
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SnapshotsPropertiesResourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SnapshotsPropertiesResourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type VolumeActionCreateBaseRegion string

const (
	VolumeActionCreateBaseRegionAms1 = VolumeActionCreateBaseRegion("ams1")
	VolumeActionCreateBaseRegionAms2 = VolumeActionCreateBaseRegion("ams2")
	VolumeActionCreateBaseRegionAms3 = VolumeActionCreateBaseRegion("ams3")
	VolumeActionCreateBaseRegionBlr1 = VolumeActionCreateBaseRegion("blr1")
	VolumeActionCreateBaseRegionFra1 = VolumeActionCreateBaseRegion("fra1")
	VolumeActionCreateBaseRegionLon1 = VolumeActionCreateBaseRegion("lon1")
	VolumeActionCreateBaseRegionNyc1 = VolumeActionCreateBaseRegion("nyc1")
	VolumeActionCreateBaseRegionNyc2 = VolumeActionCreateBaseRegion("nyc2")
	VolumeActionCreateBaseRegionNyc3 = VolumeActionCreateBaseRegion("nyc3")
	VolumeActionCreateBaseRegionSfo1 = VolumeActionCreateBaseRegion("sfo1")
	VolumeActionCreateBaseRegionSfo2 = VolumeActionCreateBaseRegion("sfo2")
	VolumeActionCreateBaseRegionSfo3 = VolumeActionCreateBaseRegion("sfo3")
	VolumeActionCreateBaseRegionSgp1 = VolumeActionCreateBaseRegion("sgp1")
	VolumeActionCreateBaseRegionTor1 = VolumeActionCreateBaseRegion("tor1")
)

func (VolumeActionCreateBaseRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseRegion)(nil)).Elem()
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionOutput() VolumeActionCreateBaseRegionOutput {
	return pulumi.ToOutput(e).(VolumeActionCreateBaseRegionOutput)
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeActionCreateBaseRegionOutput)
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return e.ToVolumeActionCreateBaseRegionPtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseRegion) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return VolumeActionCreateBaseRegion(e).ToVolumeActionCreateBaseRegionOutputWithContext(ctx).ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx)
}

func (e VolumeActionCreateBaseRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeActionCreateBaseRegionOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseRegion)(nil)).Elem()
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionOutput() VolumeActionCreateBaseRegionOutput {
	return o
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionOutput {
	return o
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return o.ToVolumeActionCreateBaseRegionPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionOutput) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeActionCreateBaseRegion) *VolumeActionCreateBaseRegion {
		return &v
	}).(VolumeActionCreateBaseRegionPtrOutput)
}

func (o VolumeActionCreateBaseRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeActionCreateBaseRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeActionCreateBaseRegionPtrOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeActionCreateBaseRegion)(nil)).Elem()
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return o
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return o
}

func (o VolumeActionCreateBaseRegionPtrOutput) Elem() VolumeActionCreateBaseRegionOutput {
	return o.ApplyT(func(v *VolumeActionCreateBaseRegion) VolumeActionCreateBaseRegion {
		if v != nil {
			return *v
		}
		var ret VolumeActionCreateBaseRegion
		return ret
	}).(VolumeActionCreateBaseRegionOutput)
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeActionCreateBaseRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeActionCreateBaseRegionInput is an input type that accepts values of the VolumeActionCreateBaseRegion enum
// A concrete instance of `VolumeActionCreateBaseRegionInput` can be one of the following:
//
//	VolumeActionCreateBaseRegionAms1
//	VolumeActionCreateBaseRegionAms2
//	VolumeActionCreateBaseRegionAms3
//	VolumeActionCreateBaseRegionBlr1
//	VolumeActionCreateBaseRegionFra1
//	VolumeActionCreateBaseRegionLon1
//	VolumeActionCreateBaseRegionNyc1
//	VolumeActionCreateBaseRegionNyc2
//	VolumeActionCreateBaseRegionNyc3
//	VolumeActionCreateBaseRegionSfo1
//	VolumeActionCreateBaseRegionSfo2
//	VolumeActionCreateBaseRegionSfo3
//	VolumeActionCreateBaseRegionSgp1
//	VolumeActionCreateBaseRegionTor1
type VolumeActionCreateBaseRegionInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseRegionOutput() VolumeActionCreateBaseRegionOutput
	ToVolumeActionCreateBaseRegionOutputWithContext(context.Context) VolumeActionCreateBaseRegionOutput
}

var volumeActionCreateBaseRegionPtrType = reflect.TypeOf((**VolumeActionCreateBaseRegion)(nil)).Elem()

type VolumeActionCreateBaseRegionPtrInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput
	ToVolumeActionCreateBaseRegionPtrOutputWithContext(context.Context) VolumeActionCreateBaseRegionPtrOutput
}

type volumeActionCreateBaseRegionPtr string

func VolumeActionCreateBaseRegionPtr(v string) VolumeActionCreateBaseRegionPtrInput {
	return (*volumeActionCreateBaseRegionPtr)(&v)
}

func (*volumeActionCreateBaseRegionPtr) ElementType() reflect.Type {
	return volumeActionCreateBaseRegionPtrType
}

func (in *volumeActionCreateBaseRegionPtr) ToVolumeActionCreateBaseRegionPtrOutput() VolumeActionCreateBaseRegionPtrOutput {
	return pulumi.ToOutput(in).(VolumeActionCreateBaseRegionPtrOutput)
}

func (in *volumeActionCreateBaseRegionPtr) ToVolumeActionCreateBaseRegionPtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeActionCreateBaseRegionPtrOutput)
}

// The volume action to initiate.
type VolumeActionCreateBaseType string

const (
	VolumeActionCreateBaseTypeAttach = VolumeActionCreateBaseType("attach")
	VolumeActionCreateBaseTypeDetach = VolumeActionCreateBaseType("detach")
	VolumeActionCreateBaseTypeResize = VolumeActionCreateBaseType("resize")
)

func (VolumeActionCreateBaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseType)(nil)).Elem()
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypeOutput() VolumeActionCreateBaseTypeOutput {
	return pulumi.ToOutput(e).(VolumeActionCreateBaseTypeOutput)
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypeOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VolumeActionCreateBaseTypeOutput)
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return e.ToVolumeActionCreateBaseTypePtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseType) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return VolumeActionCreateBaseType(e).ToVolumeActionCreateBaseTypeOutputWithContext(ctx).ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx)
}

func (e VolumeActionCreateBaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VolumeActionCreateBaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VolumeActionCreateBaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VolumeActionCreateBaseTypeOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VolumeActionCreateBaseType)(nil)).Elem()
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypeOutput() VolumeActionCreateBaseTypeOutput {
	return o
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypeOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypeOutput {
	return o
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return o.ToVolumeActionCreateBaseTypePtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypeOutput) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VolumeActionCreateBaseType) *VolumeActionCreateBaseType {
		return &v
	}).(VolumeActionCreateBaseTypePtrOutput)
}

func (o VolumeActionCreateBaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VolumeActionCreateBaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VolumeActionCreateBaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VolumeActionCreateBaseTypePtrOutput struct{ *pulumi.OutputState }

func (VolumeActionCreateBaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VolumeActionCreateBaseType)(nil)).Elem()
}

func (o VolumeActionCreateBaseTypePtrOutput) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return o
}

func (o VolumeActionCreateBaseTypePtrOutput) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return o
}

func (o VolumeActionCreateBaseTypePtrOutput) Elem() VolumeActionCreateBaseTypeOutput {
	return o.ApplyT(func(v *VolumeActionCreateBaseType) VolumeActionCreateBaseType {
		if v != nil {
			return *v
		}
		var ret VolumeActionCreateBaseType
		return ret
	}).(VolumeActionCreateBaseTypeOutput)
}

func (o VolumeActionCreateBaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VolumeActionCreateBaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VolumeActionCreateBaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VolumeActionCreateBaseTypeInput is an input type that accepts values of the VolumeActionCreateBaseType enum
// A concrete instance of `VolumeActionCreateBaseTypeInput` can be one of the following:
//
//	VolumeActionCreateBaseTypeAttach
//	VolumeActionCreateBaseTypeDetach
//	VolumeActionCreateBaseTypeResize
type VolumeActionCreateBaseTypeInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseTypeOutput() VolumeActionCreateBaseTypeOutput
	ToVolumeActionCreateBaseTypeOutputWithContext(context.Context) VolumeActionCreateBaseTypeOutput
}

var volumeActionCreateBaseTypePtrType = reflect.TypeOf((**VolumeActionCreateBaseType)(nil)).Elem()

type VolumeActionCreateBaseTypePtrInput interface {
	pulumi.Input

	ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput
	ToVolumeActionCreateBaseTypePtrOutputWithContext(context.Context) VolumeActionCreateBaseTypePtrOutput
}

type volumeActionCreateBaseTypePtr string

func VolumeActionCreateBaseTypePtr(v string) VolumeActionCreateBaseTypePtrInput {
	return (*volumeActionCreateBaseTypePtr)(&v)
}

func (*volumeActionCreateBaseTypePtr) ElementType() reflect.Type {
	return volumeActionCreateBaseTypePtrType
}

func (in *volumeActionCreateBaseTypePtr) ToVolumeActionCreateBaseTypePtrOutput() VolumeActionCreateBaseTypePtrOutput {
	return pulumi.ToOutput(in).(VolumeActionCreateBaseTypePtrOutput)
}

func (in *volumeActionCreateBaseTypePtr) ToVolumeActionCreateBaseTypePtrOutputWithContext(ctx context.Context) VolumeActionCreateBaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VolumeActionCreateBaseTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseRegionInput)(nil)).Elem(), VolumeActionCreateBaseRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseRegionPtrInput)(nil)).Elem(), VolumeActionCreateBaseRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseTypeInput)(nil)).Elem(), VolumeActionCreateBaseType("attach"))
	pulumi.RegisterInputType(reflect.TypeOf((*VolumeActionCreateBaseTypePtrInput)(nil)).Elem(), VolumeActionCreateBaseType("attach"))
	pulumi.RegisterOutputType(ActionStatusOutput{})
	pulumi.RegisterOutputType(ActionStatusPtrOutput{})
	pulumi.RegisterOutputType(SnapshotsPropertiesResourceTypeOutput{})
	pulumi.RegisterOutputType(SnapshotsPropertiesResourceTypePtrOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseRegionOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseRegionPtrOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseTypeOutput{})
	pulumi.RegisterOutputType(VolumeActionCreateBaseTypePtrOutput{})
}
