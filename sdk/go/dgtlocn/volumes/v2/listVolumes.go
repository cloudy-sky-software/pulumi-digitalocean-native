// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListVolumes(ctx *pulumi.Context, args *ListVolumesArgs, opts ...pulumi.InvokeOption) (*ListVolumesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListVolumesResult
	err := ctx.Invoke("digitalocean-native:volumes/v2:listVolumes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListVolumesArgs struct {
}

type ListVolumesResult struct {
	Links *PageLinks `pulumi:"links"`
	Meta  MetaMeta   `pulumi:"meta"`
	// Array of volumes.
	Volumes []VolumeFull `pulumi:"volumes"`
}

func ListVolumesOutput(ctx *pulumi.Context, args ListVolumesOutputArgs, opts ...pulumi.InvokeOption) ListVolumesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListVolumesResultOutput, error) {
			args := v.(ListVolumesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListVolumesResult
			secret, err := ctx.InvokePackageRaw("digitalocean-native:volumes/v2:listVolumes", args, &rv, "", opts...)
			if err != nil {
				return ListVolumesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListVolumesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListVolumesResultOutput), nil
			}
			return output, nil
		}).(ListVolumesResultOutput)
}

type ListVolumesOutputArgs struct {
}

func (ListVolumesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListVolumesArgs)(nil)).Elem()
}

type ListVolumesResultOutput struct{ *pulumi.OutputState }

func (ListVolumesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListVolumesResult)(nil)).Elem()
}

func (o ListVolumesResultOutput) ToListVolumesResultOutput() ListVolumesResultOutput {
	return o
}

func (o ListVolumesResultOutput) ToListVolumesResultOutputWithContext(ctx context.Context) ListVolumesResultOutput {
	return o
}

func (o ListVolumesResultOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListVolumesResult) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListVolumesResultOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListVolumesResult) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

// Array of volumes.
func (o ListVolumesResultOutput) Volumes() VolumeFullArrayOutput {
	return o.ApplyT(func(v ListVolumesResult) []VolumeFull { return v.Volumes }).(VolumeFullArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListVolumesResultOutput{})
}
