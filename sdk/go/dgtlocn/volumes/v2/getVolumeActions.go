// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetVolumeActions(ctx *pulumi.Context, args *GetVolumeActionsArgs, opts ...pulumi.InvokeOption) (*GetVolumeActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVolumeActionsResult
	err := ctx.Invoke("digitalocean-native:volumes/v2:getVolumeActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetVolumeActionsArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId string `pulumi:"actionId"`
	// The ID of the block storage volume.
	VolumeId string `pulumi:"volumeId"`
}

type GetVolumeActionsResult struct {
	Items GetVolumeActionsProperties `pulumi:"items"`
}

// Defaults sets the appropriate defaults for GetVolumeActionsResult
func (val *GetVolumeActionsResult) Defaults() *GetVolumeActionsResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func GetVolumeActionsOutput(ctx *pulumi.Context, args GetVolumeActionsOutputArgs, opts ...pulumi.InvokeOption) GetVolumeActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVolumeActionsResult, error) {
			args := v.(GetVolumeActionsArgs)
			r, err := GetVolumeActions(ctx, &args, opts...)
			var s GetVolumeActionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVolumeActionsResultOutput)
}

type GetVolumeActionsOutputArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId pulumi.StringInput `pulumi:"actionId"`
	// The ID of the block storage volume.
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
}

func (GetVolumeActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeActionsArgs)(nil)).Elem()
}

type GetVolumeActionsResultOutput struct{ *pulumi.OutputState }

func (GetVolumeActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVolumeActionsResult)(nil)).Elem()
}

func (o GetVolumeActionsResultOutput) ToGetVolumeActionsResultOutput() GetVolumeActionsResultOutput {
	return o
}

func (o GetVolumeActionsResultOutput) ToGetVolumeActionsResultOutputWithContext(ctx context.Context) GetVolumeActionsResultOutput {
	return o
}

func (o GetVolumeActionsResultOutput) Items() GetVolumeActionsPropertiesOutput {
	return o.ApplyT(func(v GetVolumeActionsResult) GetVolumeActionsProperties { return v.Items }).(GetVolumeActionsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVolumeActionsResultOutput{})
}
