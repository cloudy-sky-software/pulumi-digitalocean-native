// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListCertificates(ctx *pulumi.Context, args *ListCertificatesArgs, opts ...pulumi.InvokeOption) (*ListCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListCertificatesResult
	err := ctx.Invoke("digitalocean-native:certificates/v2:listCertificates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListCertificatesArgs struct {
}

type ListCertificatesResult struct {
	Certificates []CertificateType `pulumi:"certificates"`
	Links        *PageLinks        `pulumi:"links"`
	Meta         MetaMeta          `pulumi:"meta"`
}

func ListCertificatesOutput(ctx *pulumi.Context, args ListCertificatesOutputArgs, opts ...pulumi.InvokeOption) ListCertificatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListCertificatesResultOutput, error) {
			args := v.(ListCertificatesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListCertificatesResult
			secret, err := ctx.InvokePackageRaw("digitalocean-native:certificates/v2:listCertificates", args, &rv, "", opts...)
			if err != nil {
				return ListCertificatesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListCertificatesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListCertificatesResultOutput), nil
			}
			return output, nil
		}).(ListCertificatesResultOutput)
}

type ListCertificatesOutputArgs struct {
}

func (ListCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCertificatesArgs)(nil)).Elem()
}

type ListCertificatesResultOutput struct{ *pulumi.OutputState }

func (ListCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListCertificatesResult)(nil)).Elem()
}

func (o ListCertificatesResultOutput) ToListCertificatesResultOutput() ListCertificatesResultOutput {
	return o
}

func (o ListCertificatesResultOutput) ToListCertificatesResultOutputWithContext(ctx context.Context) ListCertificatesResultOutput {
	return o
}

func (o ListCertificatesResultOutput) Certificates() CertificateTypeArrayOutput {
	return o.ApplyT(func(v ListCertificatesResult) []CertificateType { return v.Certificates }).(CertificateTypeArrayOutput)
}

func (o ListCertificatesResultOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListCertificatesResult) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListCertificatesResultOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListCertificatesResult) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

func init() {
	pulumi.RegisterOutputType(ListCertificatesResultOutput{})
}
