// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCertificates(ctx *pulumi.Context, args *LookupCertificatesArgs, opts ...pulumi.InvokeOption) (*LookupCertificatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCertificatesResult
	err := ctx.Invoke("digitalocean-native:certificates/v2:getCertificates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCertificatesArgs struct {
	// A unique identifier for a certificate.
	CertificateId string `pulumi:"certificateId"`
}

type LookupCertificatesResult struct {
	Items GetCertificatesProperties `pulumi:"items"`
}

func LookupCertificatesOutput(ctx *pulumi.Context, args LookupCertificatesOutputArgs, opts ...pulumi.InvokeOption) LookupCertificatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCertificatesResult, error) {
			args := v.(LookupCertificatesArgs)
			r, err := LookupCertificates(ctx, &args, opts...)
			var s LookupCertificatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCertificatesResultOutput)
}

type LookupCertificatesOutputArgs struct {
	// A unique identifier for a certificate.
	CertificateId pulumi.StringInput `pulumi:"certificateId"`
}

func (LookupCertificatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificatesArgs)(nil)).Elem()
}

type LookupCertificatesResultOutput struct{ *pulumi.OutputState }

func (LookupCertificatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificatesResult)(nil)).Elem()
}

func (o LookupCertificatesResultOutput) ToLookupCertificatesResultOutput() LookupCertificatesResultOutput {
	return o
}

func (o LookupCertificatesResultOutput) ToLookupCertificatesResultOutputWithContext(ctx context.Context) LookupCertificatesResultOutput {
	return o
}

func (o LookupCertificatesResultOutput) Items() GetCertificatesPropertiesOutput {
	return o.ApplyT(func(v LookupCertificatesResult) GetCertificatesProperties { return v.Items }).(GetCertificatesPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCertificatesResultOutput{})
}
