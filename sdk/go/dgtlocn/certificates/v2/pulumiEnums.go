// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt.
type CertificateCreateBaseType string

const (
	CertificateCreateBaseTypeCustom      = CertificateCreateBaseType("custom")
	CertificateCreateBaseTypeLetsEncrypt = CertificateCreateBaseType("lets_encrypt")
)

func (CertificateCreateBaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCreateBaseType)(nil)).Elem()
}

func (e CertificateCreateBaseType) ToCertificateCreateBaseTypeOutput() CertificateCreateBaseTypeOutput {
	return pulumi.ToOutput(e).(CertificateCreateBaseTypeOutput)
}

func (e CertificateCreateBaseType) ToCertificateCreateBaseTypeOutputWithContext(ctx context.Context) CertificateCreateBaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(CertificateCreateBaseTypeOutput)
}

func (e CertificateCreateBaseType) ToCertificateCreateBaseTypePtrOutput() CertificateCreateBaseTypePtrOutput {
	return e.ToCertificateCreateBaseTypePtrOutputWithContext(context.Background())
}

func (e CertificateCreateBaseType) ToCertificateCreateBaseTypePtrOutputWithContext(ctx context.Context) CertificateCreateBaseTypePtrOutput {
	return CertificateCreateBaseType(e).ToCertificateCreateBaseTypeOutputWithContext(ctx).ToCertificateCreateBaseTypePtrOutputWithContext(ctx)
}

func (e CertificateCreateBaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e CertificateCreateBaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e CertificateCreateBaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e CertificateCreateBaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type CertificateCreateBaseTypeOutput struct{ *pulumi.OutputState }

func (CertificateCreateBaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateCreateBaseType)(nil)).Elem()
}

func (o CertificateCreateBaseTypeOutput) ToCertificateCreateBaseTypeOutput() CertificateCreateBaseTypeOutput {
	return o
}

func (o CertificateCreateBaseTypeOutput) ToCertificateCreateBaseTypeOutputWithContext(ctx context.Context) CertificateCreateBaseTypeOutput {
	return o
}

func (o CertificateCreateBaseTypeOutput) ToCertificateCreateBaseTypePtrOutput() CertificateCreateBaseTypePtrOutput {
	return o.ToCertificateCreateBaseTypePtrOutputWithContext(context.Background())
}

func (o CertificateCreateBaseTypeOutput) ToCertificateCreateBaseTypePtrOutputWithContext(ctx context.Context) CertificateCreateBaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateCreateBaseType) *CertificateCreateBaseType {
		return &v
	}).(CertificateCreateBaseTypePtrOutput)
}

func (o CertificateCreateBaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CertificateCreateBaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateCreateBaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CertificateCreateBaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateCreateBaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateCreateBaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CertificateCreateBaseTypePtrOutput struct{ *pulumi.OutputState }

func (CertificateCreateBaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateCreateBaseType)(nil)).Elem()
}

func (o CertificateCreateBaseTypePtrOutput) ToCertificateCreateBaseTypePtrOutput() CertificateCreateBaseTypePtrOutput {
	return o
}

func (o CertificateCreateBaseTypePtrOutput) ToCertificateCreateBaseTypePtrOutputWithContext(ctx context.Context) CertificateCreateBaseTypePtrOutput {
	return o
}

func (o CertificateCreateBaseTypePtrOutput) Elem() CertificateCreateBaseTypeOutput {
	return o.ApplyT(func(v *CertificateCreateBaseType) CertificateCreateBaseType {
		if v != nil {
			return *v
		}
		var ret CertificateCreateBaseType
		return ret
	}).(CertificateCreateBaseTypeOutput)
}

func (o CertificateCreateBaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateCreateBaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CertificateCreateBaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// CertificateCreateBaseTypeInput is an input type that accepts values of the CertificateCreateBaseType enum
// A concrete instance of `CertificateCreateBaseTypeInput` can be one of the following:
//
//	CertificateCreateBaseTypeCustom
//	CertificateCreateBaseTypeLetsEncrypt
type CertificateCreateBaseTypeInput interface {
	pulumi.Input

	ToCertificateCreateBaseTypeOutput() CertificateCreateBaseTypeOutput
	ToCertificateCreateBaseTypeOutputWithContext(context.Context) CertificateCreateBaseTypeOutput
}

var certificateCreateBaseTypePtrType = reflect.TypeOf((**CertificateCreateBaseType)(nil)).Elem()

type CertificateCreateBaseTypePtrInput interface {
	pulumi.Input

	ToCertificateCreateBaseTypePtrOutput() CertificateCreateBaseTypePtrOutput
	ToCertificateCreateBaseTypePtrOutputWithContext(context.Context) CertificateCreateBaseTypePtrOutput
}

type certificateCreateBaseTypePtr string

func CertificateCreateBaseTypePtr(v string) CertificateCreateBaseTypePtrInput {
	return (*certificateCreateBaseTypePtr)(&v)
}

func (*certificateCreateBaseTypePtr) ElementType() reflect.Type {
	return certificateCreateBaseTypePtrType
}

func (in *certificateCreateBaseTypePtr) ToCertificateCreateBaseTypePtrOutput() CertificateCreateBaseTypePtrOutput {
	return pulumi.ToOutput(in).(CertificateCreateBaseTypePtrOutput)
}

func (in *certificateCreateBaseTypePtr) ToCertificateCreateBaseTypePtrOutputWithContext(ctx context.Context) CertificateCreateBaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(CertificateCreateBaseTypePtrOutput)
}

// A string representing the current state of the certificate. It may be `pending`, `verified`, or `error`.
type CertificateStateEnum string

const (
	CertificateStateEnumPending  = CertificateStateEnum("pending")
	CertificateStateEnumVerified = CertificateStateEnum("verified")
	CertificateStateEnumError    = CertificateStateEnum("error")
)

type CertificateStateEnumOutput struct{ *pulumi.OutputState }

func (CertificateStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateStateEnum)(nil)).Elem()
}

func (o CertificateStateEnumOutput) ToCertificateStateEnumOutput() CertificateStateEnumOutput {
	return o
}

func (o CertificateStateEnumOutput) ToCertificateStateEnumOutputWithContext(ctx context.Context) CertificateStateEnumOutput {
	return o
}

func (o CertificateStateEnumOutput) ToCertificateStateEnumPtrOutput() CertificateStateEnumPtrOutput {
	return o.ToCertificateStateEnumPtrOutputWithContext(context.Background())
}

func (o CertificateStateEnumOutput) ToCertificateStateEnumPtrOutputWithContext(ctx context.Context) CertificateStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateStateEnum) *CertificateStateEnum {
		return &v
	}).(CertificateStateEnumPtrOutput)
}

func (o CertificateStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CertificateStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CertificateStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CertificateStateEnumPtrOutput struct{ *pulumi.OutputState }

func (CertificateStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateStateEnum)(nil)).Elem()
}

func (o CertificateStateEnumPtrOutput) ToCertificateStateEnumPtrOutput() CertificateStateEnumPtrOutput {
	return o
}

func (o CertificateStateEnumPtrOutput) ToCertificateStateEnumPtrOutputWithContext(ctx context.Context) CertificateStateEnumPtrOutput {
	return o
}

func (o CertificateStateEnumPtrOutput) Elem() CertificateStateEnumOutput {
	return o.ApplyT(func(v *CertificateStateEnum) CertificateStateEnum {
		if v != nil {
			return *v
		}
		var ret CertificateStateEnum
		return ret
	}).(CertificateStateEnumOutput)
}

func (o CertificateStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CertificateStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// A string representing the type of the certificate. The value will be `custom` for a user-uploaded certificate or `lets_encrypt` for one automatically generated with Let's Encrypt.
type CertificateTypeEnum string

const (
	CertificateTypeEnumCustom      = CertificateTypeEnum("custom")
	CertificateTypeEnumLetsEncrypt = CertificateTypeEnum("lets_encrypt")
)

type CertificateTypeEnumOutput struct{ *pulumi.OutputState }

func (CertificateTypeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateTypeEnum)(nil)).Elem()
}

func (o CertificateTypeEnumOutput) ToCertificateTypeEnumOutput() CertificateTypeEnumOutput {
	return o
}

func (o CertificateTypeEnumOutput) ToCertificateTypeEnumOutputWithContext(ctx context.Context) CertificateTypeEnumOutput {
	return o
}

func (o CertificateTypeEnumOutput) ToCertificateTypeEnumPtrOutput() CertificateTypeEnumPtrOutput {
	return o.ToCertificateTypeEnumPtrOutputWithContext(context.Background())
}

func (o CertificateTypeEnumOutput) ToCertificateTypeEnumPtrOutputWithContext(ctx context.Context) CertificateTypeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CertificateTypeEnum) *CertificateTypeEnum {
		return &v
	}).(CertificateTypeEnumPtrOutput)
}

func (o CertificateTypeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o CertificateTypeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateTypeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o CertificateTypeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateTypeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e CertificateTypeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type CertificateTypeEnumPtrOutput struct{ *pulumi.OutputState }

func (CertificateTypeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CertificateTypeEnum)(nil)).Elem()
}

func (o CertificateTypeEnumPtrOutput) ToCertificateTypeEnumPtrOutput() CertificateTypeEnumPtrOutput {
	return o
}

func (o CertificateTypeEnumPtrOutput) ToCertificateTypeEnumPtrOutputWithContext(ctx context.Context) CertificateTypeEnumPtrOutput {
	return o
}

func (o CertificateTypeEnumPtrOutput) Elem() CertificateTypeEnumOutput {
	return o.ApplyT(func(v *CertificateTypeEnum) CertificateTypeEnum {
		if v != nil {
			return *v
		}
		var ret CertificateTypeEnum
		return ret
	}).(CertificateTypeEnumOutput)
}

func (o CertificateTypeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o CertificateTypeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *CertificateTypeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCreateBaseTypeInput)(nil)).Elem(), CertificateCreateBaseType("custom"))
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateCreateBaseTypePtrInput)(nil)).Elem(), CertificateCreateBaseType("custom"))
	pulumi.RegisterOutputType(CertificateCreateBaseTypeOutput{})
	pulumi.RegisterOutputType(CertificateCreateBaseTypePtrOutput{})
	pulumi.RegisterOutputType(CertificateStateEnumOutput{})
	pulumi.RegisterOutputType(CertificateStateEnumPtrOutput{})
	pulumi.RegisterOutputType(CertificateTypeEnumOutput{})
	pulumi.RegisterOutputType(CertificateTypeEnumPtrOutput{})
}
