// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TagsAssignResources struct {
	pulumi.CustomResourceState

	// An array of objects containing resource_id and resource_type  attributes.
	Resources ResourcesItemPropertiesArrayOutput `pulumi:"resources"`
}

// NewTagsAssignResources registers a new resource with the given unique name, arguments, and options.
func NewTagsAssignResources(ctx *pulumi.Context,
	name string, args *TagsAssignResourcesArgs, opts ...pulumi.ResourceOption) (*TagsAssignResources, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Resources == nil {
		return nil, errors.New("invalid value for required argument 'Resources'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TagsAssignResources
	err := ctx.RegisterResource("digitalocean-native:tags/v2:TagsAssignResources", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTagsAssignResources gets an existing TagsAssignResources resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTagsAssignResources(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TagsAssignResourcesState, opts ...pulumi.ResourceOption) (*TagsAssignResources, error) {
	var resource TagsAssignResources
	err := ctx.ReadResource("digitalocean-native:tags/v2:TagsAssignResources", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TagsAssignResources resources.
type tagsAssignResourcesState struct {
}

type TagsAssignResourcesState struct {
}

func (TagsAssignResourcesState) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsAssignResourcesState)(nil)).Elem()
}

type tagsAssignResourcesArgs struct {
	// An array of objects containing resource_id and resource_type  attributes.
	Resources []ResourcesItemProperties `pulumi:"resources"`
	// The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag.
	TagId *string `pulumi:"tagId"`
}

// The set of arguments for constructing a TagsAssignResources resource.
type TagsAssignResourcesArgs struct {
	// An array of objects containing resource_id and resource_type  attributes.
	Resources ResourcesItemPropertiesArrayInput
	// The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag.
	TagId pulumi.StringPtrInput
}

func (TagsAssignResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tagsAssignResourcesArgs)(nil)).Elem()
}

type TagsAssignResourcesInput interface {
	pulumi.Input

	ToTagsAssignResourcesOutput() TagsAssignResourcesOutput
	ToTagsAssignResourcesOutputWithContext(ctx context.Context) TagsAssignResourcesOutput
}

func (*TagsAssignResources) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsAssignResources)(nil)).Elem()
}

func (i *TagsAssignResources) ToTagsAssignResourcesOutput() TagsAssignResourcesOutput {
	return i.ToTagsAssignResourcesOutputWithContext(context.Background())
}

func (i *TagsAssignResources) ToTagsAssignResourcesOutputWithContext(ctx context.Context) TagsAssignResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagsAssignResourcesOutput)
}

type TagsAssignResourcesOutput struct{ *pulumi.OutputState }

func (TagsAssignResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TagsAssignResources)(nil)).Elem()
}

func (o TagsAssignResourcesOutput) ToTagsAssignResourcesOutput() TagsAssignResourcesOutput {
	return o
}

func (o TagsAssignResourcesOutput) ToTagsAssignResourcesOutputWithContext(ctx context.Context) TagsAssignResourcesOutput {
	return o
}

// An array of objects containing resource_id and resource_type  attributes.
func (o TagsAssignResourcesOutput) Resources() ResourcesItemPropertiesArrayOutput {
	return o.ApplyT(func(v *TagsAssignResources) ResourcesItemPropertiesArrayOutput { return v.Resources }).(ResourcesItemPropertiesArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TagsAssignResourcesInput)(nil)).Elem(), &TagsAssignResources{})
	pulumi.RegisterOutputType(TagsAssignResourcesOutput{})
}
