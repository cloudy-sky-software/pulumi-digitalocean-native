// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupTags(ctx *pulumi.Context, args *LookupTagsArgs, opts ...pulumi.InvokeOption) (*LookupTagsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTagsResult
	err := ctx.Invoke("digitalocean-native:tags/v2:getTags", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTagsArgs struct {
	// The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag.
	TagId string `pulumi:"tagId"`
}

type LookupTagsResult struct {
	Items GetTagsProperties `pulumi:"items"`
}

func LookupTagsOutput(ctx *pulumi.Context, args LookupTagsOutputArgs, opts ...pulumi.InvokeOption) LookupTagsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTagsResult, error) {
			args := v.(LookupTagsArgs)
			r, err := LookupTags(ctx, &args, opts...)
			var s LookupTagsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTagsResultOutput)
}

type LookupTagsOutputArgs struct {
	// The name of the tag. Tags may contain letters, numbers, colons, dashes, and underscores. There is a limit of 255 characters per tag.
	TagId pulumi.StringInput `pulumi:"tagId"`
}

func (LookupTagsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagsArgs)(nil)).Elem()
}

type LookupTagsResultOutput struct{ *pulumi.OutputState }

func (LookupTagsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTagsResult)(nil)).Elem()
}

func (o LookupTagsResultOutput) ToLookupTagsResultOutput() LookupTagsResultOutput {
	return o
}

func (o LookupTagsResultOutput) ToLookupTagsResultOutputWithContext(ctx context.Context) LookupTagsResultOutput {
	return o
}

func (o LookupTagsResultOutput) Items() GetTagsPropertiesOutput {
	return o.ApplyT(func(v LookupTagsResult) GetTagsProperties { return v.Items }).(GetTagsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTagsResultOutput{})
}
