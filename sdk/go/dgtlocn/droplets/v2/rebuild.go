// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Rebuild struct {
	pulumi.CustomResourceState

	Action ActionPtrOutput `pulumi:"action"`
	// The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base.
	Image pulumi.AnyOutput `pulumi:"image"`
	// The type of action to initiate for the Droplet.
	Type RebuildDropletActionTypePtrOutput `pulumi:"type"`
}

// NewRebuild registers a new resource with the given unique name, arguments, and options.
func NewRebuild(ctx *pulumi.Context,
	name string, args *RebuildArgs, opts ...pulumi.ResourceOption) (*Rebuild, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Rebuild
	err := ctx.RegisterResource("digitalocean-native:droplets/v2:Rebuild", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRebuild gets an existing Rebuild resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRebuild(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RebuildState, opts ...pulumi.ResourceOption) (*Rebuild, error) {
	var resource Rebuild
	err := ctx.ReadResource("digitalocean-native:droplets/v2:Rebuild", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Rebuild resources.
type rebuildState struct {
}

type RebuildState struct {
}

func (RebuildState) ElementType() reflect.Type {
	return reflect.TypeOf((*rebuildState)(nil)).Elem()
}

type rebuildArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId *string `pulumi:"dropletId"`
	// The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base.
	Image interface{} `pulumi:"image"`
	// The type of action to initiate for the Droplet.
	Type RebuildDropletActionType `pulumi:"type"`
}

// The set of arguments for constructing a Rebuild resource.
type RebuildArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId pulumi.StringPtrInput
	// The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base.
	Image pulumi.Input
	// The type of action to initiate for the Droplet.
	Type RebuildDropletActionTypeInput
}

func (RebuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rebuildArgs)(nil)).Elem()
}

type RebuildInput interface {
	pulumi.Input

	ToRebuildOutput() RebuildOutput
	ToRebuildOutputWithContext(ctx context.Context) RebuildOutput
}

func (*Rebuild) ElementType() reflect.Type {
	return reflect.TypeOf((**Rebuild)(nil)).Elem()
}

func (i *Rebuild) ToRebuildOutput() RebuildOutput {
	return i.ToRebuildOutputWithContext(context.Background())
}

func (i *Rebuild) ToRebuildOutputWithContext(ctx context.Context) RebuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RebuildOutput)
}

type RebuildOutput struct{ *pulumi.OutputState }

func (RebuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Rebuild)(nil)).Elem()
}

func (o RebuildOutput) ToRebuildOutput() RebuildOutput {
	return o
}

func (o RebuildOutput) ToRebuildOutputWithContext(ctx context.Context) RebuildOutput {
	return o
}

func (o RebuildOutput) Action() ActionPtrOutput {
	return o.ApplyT(func(v *Rebuild) ActionPtrOutput { return v.Action }).(ActionPtrOutput)
}

// The image ID of a public or private image or the slug identifier for a public image. The Droplet will be rebuilt using this image as its base.
func (o RebuildOutput) Image() pulumi.AnyOutput {
	return o.ApplyT(func(v *Rebuild) pulumi.AnyOutput { return v.Image }).(pulumi.AnyOutput)
}

// The type of action to initiate for the Droplet.
func (o RebuildOutput) Type() RebuildDropletActionTypePtrOutput {
	return o.ApplyT(func(v *Rebuild) RebuildDropletActionTypePtrOutput { return v.Type }).(RebuildDropletActionTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RebuildInput)(nil)).Elem(), &Rebuild{})
	pulumi.RegisterOutputType(RebuildOutput{})
}
