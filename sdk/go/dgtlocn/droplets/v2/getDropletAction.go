// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDropletAction(ctx *pulumi.Context, args *GetDropletActionArgs, opts ...pulumi.InvokeOption) (*GetDropletActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDropletActionResult
	err := ctx.Invoke("digitalocean-native:droplets/v2:getDropletAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetDropletActionArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId string `pulumi:"actionId"`
	// A unique identifier for a Droplet instance.
	DropletId string `pulumi:"dropletId"`
}

type GetDropletActionResult struct {
	Action *Action `pulumi:"action"`
}

// Defaults sets the appropriate defaults for GetDropletActionResult
func (val *GetDropletActionResult) Defaults() *GetDropletActionResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Action = tmp.Action.Defaults()

	return &tmp
}

func GetDropletActionOutput(ctx *pulumi.Context, args GetDropletActionOutputArgs, opts ...pulumi.InvokeOption) GetDropletActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDropletActionResultOutput, error) {
			args := v.(GetDropletActionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetDropletActionResult
			secret, err := ctx.InvokePackageRaw("digitalocean-native:droplets/v2:getDropletAction", args, &rv, "", opts...)
			if err != nil {
				return GetDropletActionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetDropletActionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetDropletActionResultOutput), nil
			}
			return output, nil
		}).(GetDropletActionResultOutput)
}

type GetDropletActionOutputArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId pulumi.StringInput `pulumi:"actionId"`
	// A unique identifier for a Droplet instance.
	DropletId pulumi.StringInput `pulumi:"dropletId"`
}

func (GetDropletActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletActionArgs)(nil)).Elem()
}

type GetDropletActionResultOutput struct{ *pulumi.OutputState }

func (GetDropletActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletActionResult)(nil)).Elem()
}

func (o GetDropletActionResultOutput) ToGetDropletActionResultOutput() GetDropletActionResultOutput {
	return o
}

func (o GetDropletActionResultOutput) ToGetDropletActionResultOutputWithContext(ctx context.Context) GetDropletActionResultOutput {
	return o
}

func (o GetDropletActionResultOutput) Action() ActionPtrOutput {
	return o.ApplyT(func(v GetDropletActionResult) *Action { return v.Action }).(ActionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDropletActionResultOutput{})
}
