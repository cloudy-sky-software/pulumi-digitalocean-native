// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the action that will be taken on the Droplet.
type DropletActionsByTagPowerCycle struct {
	pulumi.CustomResourceState

	Actions ActionArrayOutput `pulumi:"actions"`
	// The type of action to initiate for the Droplet.
	Type TypeOutput `pulumi:"type"`
}

// NewDropletActionsByTagPowerCycle registers a new resource with the given unique name, arguments, and options.
func NewDropletActionsByTagPowerCycle(ctx *pulumi.Context,
	name string, args *DropletActionsByTagPowerCycleArgs, opts ...pulumi.ResourceOption) (*DropletActionsByTagPowerCycle, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DropletActionsByTagPowerCycle
	err := ctx.RegisterResource("digitalocean-native:droplets/v2:DropletActionsByTagPowerCycle", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDropletActionsByTagPowerCycle gets an existing DropletActionsByTagPowerCycle resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDropletActionsByTagPowerCycle(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DropletActionsByTagPowerCycleState, opts ...pulumi.ResourceOption) (*DropletActionsByTagPowerCycle, error) {
	var resource DropletActionsByTagPowerCycle
	err := ctx.ReadResource("digitalocean-native:droplets/v2:DropletActionsByTagPowerCycle", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DropletActionsByTagPowerCycle resources.
type dropletActionsByTagPowerCycleState struct {
}

type DropletActionsByTagPowerCycleState struct {
}

func (DropletActionsByTagPowerCycleState) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsByTagPowerCycleState)(nil)).Elem()
}

type dropletActionsByTagPowerCycleArgs struct {
	// The type of action to initiate for the Droplet.
	Type Type `pulumi:"type"`
}

// The set of arguments for constructing a DropletActionsByTagPowerCycle resource.
type DropletActionsByTagPowerCycleArgs struct {
	// The type of action to initiate for the Droplet.
	Type TypeInput
}

func (DropletActionsByTagPowerCycleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsByTagPowerCycleArgs)(nil)).Elem()
}

type DropletActionsByTagPowerCycleInput interface {
	pulumi.Input

	ToDropletActionsByTagPowerCycleOutput() DropletActionsByTagPowerCycleOutput
	ToDropletActionsByTagPowerCycleOutputWithContext(ctx context.Context) DropletActionsByTagPowerCycleOutput
}

func (*DropletActionsByTagPowerCycle) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsByTagPowerCycle)(nil)).Elem()
}

func (i *DropletActionsByTagPowerCycle) ToDropletActionsByTagPowerCycleOutput() DropletActionsByTagPowerCycleOutput {
	return i.ToDropletActionsByTagPowerCycleOutputWithContext(context.Background())
}

func (i *DropletActionsByTagPowerCycle) ToDropletActionsByTagPowerCycleOutputWithContext(ctx context.Context) DropletActionsByTagPowerCycleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropletActionsByTagPowerCycleOutput)
}

type DropletActionsByTagPowerCycleOutput struct{ *pulumi.OutputState }

func (DropletActionsByTagPowerCycleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsByTagPowerCycle)(nil)).Elem()
}

func (o DropletActionsByTagPowerCycleOutput) ToDropletActionsByTagPowerCycleOutput() DropletActionsByTagPowerCycleOutput {
	return o
}

func (o DropletActionsByTagPowerCycleOutput) ToDropletActionsByTagPowerCycleOutputWithContext(ctx context.Context) DropletActionsByTagPowerCycleOutput {
	return o
}

func (o DropletActionsByTagPowerCycleOutput) Actions() ActionArrayOutput {
	return o.ApplyT(func(v *DropletActionsByTagPowerCycle) ActionArrayOutput { return v.Actions }).(ActionArrayOutput)
}

// The type of action to initiate for the Droplet.
func (o DropletActionsByTagPowerCycleOutput) Type() TypeOutput {
	return o.ApplyT(func(v *DropletActionsByTagPowerCycle) TypeOutput { return v.Type }).(TypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DropletActionsByTagPowerCycleInput)(nil)).Elem(), &DropletActionsByTagPowerCycle{})
	pulumi.RegisterOutputType(DropletActionsByTagPowerCycleOutput{})
}
