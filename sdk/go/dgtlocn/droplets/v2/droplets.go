// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Droplets struct {
	pulumi.CustomResourceState
}

// NewDroplets registers a new resource with the given unique name, arguments, and options.
func NewDroplets(ctx *pulumi.Context,
	name string, args *DropletsArgs, opts ...pulumi.ResourceOption) (*Droplets, error) {
	if args == nil {
		args = &DropletsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Droplets
	err := ctx.RegisterResource("digitalocean-native:droplets/v2:Droplets", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDroplets gets an existing Droplets resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDroplets(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DropletsState, opts ...pulumi.ResourceOption) (*Droplets, error) {
	var resource Droplets
	err := ctx.ReadResource("digitalocean-native:droplets/v2:Droplets", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Droplets resources.
type dropletsState struct {
}

type DropletsState struct {
}

func (DropletsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletsState)(nil)).Elem()
}

type dropletsArgs struct {
}

// The set of arguments for constructing a Droplets resource.
type DropletsArgs struct {
}

func (DropletsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletsArgs)(nil)).Elem()
}

type DropletsInput interface {
	pulumi.Input

	ToDropletsOutput() DropletsOutput
	ToDropletsOutputWithContext(ctx context.Context) DropletsOutput
}

func (*Droplets) ElementType() reflect.Type {
	return reflect.TypeOf((**Droplets)(nil)).Elem()
}

func (i *Droplets) ToDropletsOutput() DropletsOutput {
	return i.ToDropletsOutputWithContext(context.Background())
}

func (i *Droplets) ToDropletsOutputWithContext(ctx context.Context) DropletsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropletsOutput)
}

type DropletsOutput struct{ *pulumi.OutputState }

func (DropletsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Droplets)(nil)).Elem()
}

func (o DropletsOutput) ToDropletsOutput() DropletsOutput {
	return o
}

func (o DropletsOutput) ToDropletsOutputWithContext(ctx context.Context) DropletsOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DropletsInput)(nil)).Elem(), &Droplets{})
	pulumi.RegisterOutputType(DropletsOutput{})
}
