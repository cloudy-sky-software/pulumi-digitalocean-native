// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDroplets(ctx *pulumi.Context, args *LookupDropletsArgs, opts ...pulumi.InvokeOption) (*LookupDropletsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDropletsResult
	err := ctx.Invoke("digitalocean-native:droplets/v2:getDroplets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupDropletsArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId string `pulumi:"dropletId"`
}

type LookupDropletsResult struct {
	Items GetDropletsProperties `pulumi:"items"`
}

// Defaults sets the appropriate defaults for LookupDropletsResult
func (val *LookupDropletsResult) Defaults() *LookupDropletsResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func LookupDropletsOutput(ctx *pulumi.Context, args LookupDropletsOutputArgs, opts ...pulumi.InvokeOption) LookupDropletsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDropletsResult, error) {
			args := v.(LookupDropletsArgs)
			r, err := LookupDroplets(ctx, &args, opts...)
			var s LookupDropletsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDropletsResultOutput)
}

type LookupDropletsOutputArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId pulumi.StringInput `pulumi:"dropletId"`
}

func (LookupDropletsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDropletsArgs)(nil)).Elem()
}

type LookupDropletsResultOutput struct{ *pulumi.OutputState }

func (LookupDropletsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDropletsResult)(nil)).Elem()
}

func (o LookupDropletsResultOutput) ToLookupDropletsResultOutput() LookupDropletsResultOutput {
	return o
}

func (o LookupDropletsResultOutput) ToLookupDropletsResultOutputWithContext(ctx context.Context) LookupDropletsResultOutput {
	return o
}

func (o LookupDropletsResultOutput) Items() GetDropletsPropertiesOutput {
	return o.ApplyT(func(v LookupDropletsResult) GetDropletsProperties { return v.Items }).(GetDropletsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDropletsResultOutput{})
}
