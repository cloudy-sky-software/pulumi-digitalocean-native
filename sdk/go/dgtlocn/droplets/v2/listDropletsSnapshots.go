// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListDropletsSnapshots(ctx *pulumi.Context, args *ListDropletsSnapshotsArgs, opts ...pulumi.InvokeOption) (*ListDropletsSnapshotsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListDropletsSnapshotsResult
	err := ctx.Invoke("digitalocean-native:droplets/v2:listDropletsSnapshots", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDropletsSnapshotsArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId string `pulumi:"dropletId"`
}

type ListDropletsSnapshotsResult struct {
	Items ListDropletsSnapshotsItems `pulumi:"items"`
}

func ListDropletsSnapshotsOutput(ctx *pulumi.Context, args ListDropletsSnapshotsOutputArgs, opts ...pulumi.InvokeOption) ListDropletsSnapshotsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListDropletsSnapshotsResult, error) {
			args := v.(ListDropletsSnapshotsArgs)
			r, err := ListDropletsSnapshots(ctx, &args, opts...)
			var s ListDropletsSnapshotsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListDropletsSnapshotsResultOutput)
}

type ListDropletsSnapshotsOutputArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId pulumi.StringInput `pulumi:"dropletId"`
}

func (ListDropletsSnapshotsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDropletsSnapshotsArgs)(nil)).Elem()
}

type ListDropletsSnapshotsResultOutput struct{ *pulumi.OutputState }

func (ListDropletsSnapshotsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDropletsSnapshotsResult)(nil)).Elem()
}

func (o ListDropletsSnapshotsResultOutput) ToListDropletsSnapshotsResultOutput() ListDropletsSnapshotsResultOutput {
	return o
}

func (o ListDropletsSnapshotsResultOutput) ToListDropletsSnapshotsResultOutputWithContext(ctx context.Context) ListDropletsSnapshotsResultOutput {
	return o
}

func (o ListDropletsSnapshotsResultOutput) Items() ListDropletsSnapshotsItemsOutput {
	return o.ApplyT(func(v ListDropletsSnapshotsResult) ListDropletsSnapshotsItems { return v.Items }).(ListDropletsSnapshotsItemsOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDropletsSnapshotsResultOutput{})
}
