// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current status of the action. This can be "in-progress", "completed", or "errored".
type ActionStatus string

const (
	ActionStatusInProgress = ActionStatus("in-progress")
	ActionStatusCompleted  = ActionStatus("completed")
	ActionStatusErrored    = ActionStatus("errored")
)

type ActionStatusOutput struct{ *pulumi.OutputState }

func (ActionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionStatus)(nil)).Elem()
}

func (o ActionStatusOutput) ToActionStatusOutput() ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusOutputWithContext(ctx context.Context) ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o.ToActionStatusPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionStatus) *ActionStatus {
		return &v
	}).(ActionStatusPtrOutput)
}

func (o ActionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionStatusPtrOutput struct{ *pulumi.OutputState }

func (ActionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionStatus)(nil)).Elem()
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) Elem() ActionStatusOutput {
	return o.ApplyT(func(v *ActionStatus) ActionStatus {
		if v != nil {
			return *v
		}
		var ret ActionStatus
		return ret
	}).(ActionStatusOutput)
}

func (o ActionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of action to initiate for the Droplet.
type DropletActionType string

const (
	DropletActionTypeEnableBackups  = DropletActionType("enable_backups")
	DropletActionTypeDisableBackups = DropletActionType("disable_backups")
	DropletActionTypeReboot         = DropletActionType("reboot")
	DropletActionTypePowerCycle     = DropletActionType("power_cycle")
	DropletActionTypeShutdown       = DropletActionType("shutdown")
	DropletActionTypePowerOff       = DropletActionType("power_off")
	DropletActionTypePowerOn        = DropletActionType("power_on")
	DropletActionTypeRestore        = DropletActionType("restore")
	DropletActionTypePasswordReset  = DropletActionType("password_reset")
	DropletActionTypeResize         = DropletActionType("resize")
	DropletActionTypeRebuild        = DropletActionType("rebuild")
	DropletActionTypeRename         = DropletActionType("rename")
	DropletActionTypeChangeKernel   = DropletActionType("change_kernel")
	DropletActionTypeEnableIpv6     = DropletActionType("enable_ipv6")
	DropletActionTypeSnapshot       = DropletActionType("snapshot")
)

func (DropletActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*DropletActionType)(nil)).Elem()
}

func (e DropletActionType) ToDropletActionTypeOutput() DropletActionTypeOutput {
	return pulumi.ToOutput(e).(DropletActionTypeOutput)
}

func (e DropletActionType) ToDropletActionTypeOutputWithContext(ctx context.Context) DropletActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DropletActionTypeOutput)
}

func (e DropletActionType) ToDropletActionTypePtrOutput() DropletActionTypePtrOutput {
	return e.ToDropletActionTypePtrOutputWithContext(context.Background())
}

func (e DropletActionType) ToDropletActionTypePtrOutputWithContext(ctx context.Context) DropletActionTypePtrOutput {
	return DropletActionType(e).ToDropletActionTypeOutputWithContext(ctx).ToDropletActionTypePtrOutputWithContext(ctx)
}

func (e DropletActionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DropletActionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DropletActionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DropletActionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DropletActionTypeOutput struct{ *pulumi.OutputState }

func (DropletActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DropletActionType)(nil)).Elem()
}

func (o DropletActionTypeOutput) ToDropletActionTypeOutput() DropletActionTypeOutput {
	return o
}

func (o DropletActionTypeOutput) ToDropletActionTypeOutputWithContext(ctx context.Context) DropletActionTypeOutput {
	return o
}

func (o DropletActionTypeOutput) ToDropletActionTypePtrOutput() DropletActionTypePtrOutput {
	return o.ToDropletActionTypePtrOutputWithContext(context.Background())
}

func (o DropletActionTypeOutput) ToDropletActionTypePtrOutputWithContext(ctx context.Context) DropletActionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DropletActionType) *DropletActionType {
		return &v
	}).(DropletActionTypePtrOutput)
}

func (o DropletActionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DropletActionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DropletActionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DropletActionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DropletActionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DropletActionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DropletActionTypePtrOutput struct{ *pulumi.OutputState }

func (DropletActionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionType)(nil)).Elem()
}

func (o DropletActionTypePtrOutput) ToDropletActionTypePtrOutput() DropletActionTypePtrOutput {
	return o
}

func (o DropletActionTypePtrOutput) ToDropletActionTypePtrOutputWithContext(ctx context.Context) DropletActionTypePtrOutput {
	return o
}

func (o DropletActionTypePtrOutput) Elem() DropletActionTypeOutput {
	return o.ApplyT(func(v *DropletActionType) DropletActionType {
		if v != nil {
			return *v
		}
		var ret DropletActionType
		return ret
	}).(DropletActionTypeOutput)
}

func (o DropletActionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DropletActionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DropletActionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DropletActionTypeInput is an input type that accepts values of the DropletActionType enum
// A concrete instance of `DropletActionTypeInput` can be one of the following:
//
//	DropletActionTypeEnableBackups
//	DropletActionTypeDisableBackups
//	DropletActionTypeReboot
//	DropletActionTypePowerCycle
//	DropletActionTypeShutdown
//	DropletActionTypePowerOff
//	DropletActionTypePowerOn
//	DropletActionTypeRestore
//	DropletActionTypePasswordReset
//	DropletActionTypeResize
//	DropletActionTypeRebuild
//	DropletActionTypeRename
//	DropletActionTypeChangeKernel
//	DropletActionTypeEnableIpv6
//	DropletActionTypeSnapshot
type DropletActionTypeInput interface {
	pulumi.Input

	ToDropletActionTypeOutput() DropletActionTypeOutput
	ToDropletActionTypeOutputWithContext(context.Context) DropletActionTypeOutput
}

var dropletActionTypePtrType = reflect.TypeOf((**DropletActionType)(nil)).Elem()

type DropletActionTypePtrInput interface {
	pulumi.Input

	ToDropletActionTypePtrOutput() DropletActionTypePtrOutput
	ToDropletActionTypePtrOutputWithContext(context.Context) DropletActionTypePtrOutput
}

type dropletActionTypePtr string

func DropletActionTypePtr(v string) DropletActionTypePtrInput {
	return (*dropletActionTypePtr)(&v)
}

func (*dropletActionTypePtr) ElementType() reflect.Type {
	return dropletActionTypePtrType
}

func (in *dropletActionTypePtr) ToDropletActionTypePtrOutput() DropletActionTypePtrOutput {
	return pulumi.ToOutput(in).(DropletActionTypePtrOutput)
}

func (in *dropletActionTypePtr) ToDropletActionTypePtrOutputWithContext(ctx context.Context) DropletActionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DropletActionTypePtrOutput)
}

// Describes the kind of image. It may be one of `snapshot` or `backup`. This specifies whether an image is a user-generated Droplet snapshot or automatically created Droplet backup.
type DropletSnapshotPropertiesType string

const (
	DropletSnapshotPropertiesTypeSnapshot = DropletSnapshotPropertiesType("snapshot")
	DropletSnapshotPropertiesTypeBackup   = DropletSnapshotPropertiesType("backup")
)

type DropletSnapshotPropertiesTypeOutput struct{ *pulumi.OutputState }

func (DropletSnapshotPropertiesTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DropletSnapshotPropertiesType)(nil)).Elem()
}

func (o DropletSnapshotPropertiesTypeOutput) ToDropletSnapshotPropertiesTypeOutput() DropletSnapshotPropertiesTypeOutput {
	return o
}

func (o DropletSnapshotPropertiesTypeOutput) ToDropletSnapshotPropertiesTypeOutputWithContext(ctx context.Context) DropletSnapshotPropertiesTypeOutput {
	return o
}

func (o DropletSnapshotPropertiesTypeOutput) ToDropletSnapshotPropertiesTypePtrOutput() DropletSnapshotPropertiesTypePtrOutput {
	return o.ToDropletSnapshotPropertiesTypePtrOutputWithContext(context.Background())
}

func (o DropletSnapshotPropertiesTypeOutput) ToDropletSnapshotPropertiesTypePtrOutputWithContext(ctx context.Context) DropletSnapshotPropertiesTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DropletSnapshotPropertiesType) *DropletSnapshotPropertiesType {
		return &v
	}).(DropletSnapshotPropertiesTypePtrOutput)
}

func (o DropletSnapshotPropertiesTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DropletSnapshotPropertiesTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DropletSnapshotPropertiesType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DropletSnapshotPropertiesTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DropletSnapshotPropertiesTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DropletSnapshotPropertiesType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DropletSnapshotPropertiesTypePtrOutput struct{ *pulumi.OutputState }

func (DropletSnapshotPropertiesTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletSnapshotPropertiesType)(nil)).Elem()
}

func (o DropletSnapshotPropertiesTypePtrOutput) ToDropletSnapshotPropertiesTypePtrOutput() DropletSnapshotPropertiesTypePtrOutput {
	return o
}

func (o DropletSnapshotPropertiesTypePtrOutput) ToDropletSnapshotPropertiesTypePtrOutputWithContext(ctx context.Context) DropletSnapshotPropertiesTypePtrOutput {
	return o
}

func (o DropletSnapshotPropertiesTypePtrOutput) Elem() DropletSnapshotPropertiesTypeOutput {
	return o.ApplyT(func(v *DropletSnapshotPropertiesType) DropletSnapshotPropertiesType {
		if v != nil {
			return *v
		}
		var ret DropletSnapshotPropertiesType
		return ret
	}).(DropletSnapshotPropertiesTypeOutput)
}

func (o DropletSnapshotPropertiesTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DropletSnapshotPropertiesTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DropletSnapshotPropertiesType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// A status string indicating the state of the Droplet instance. This may be "new", "active", "off", or "archive".
type DropletStatus string

const (
	DropletStatusNew     = DropletStatus("new")
	DropletStatusActive  = DropletStatus("active")
	DropletStatusOff     = DropletStatus("off")
	DropletStatusArchive = DropletStatus("archive")
)

type DropletStatusOutput struct{ *pulumi.OutputState }

func (DropletStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DropletStatus)(nil)).Elem()
}

func (o DropletStatusOutput) ToDropletStatusOutput() DropletStatusOutput {
	return o
}

func (o DropletStatusOutput) ToDropletStatusOutputWithContext(ctx context.Context) DropletStatusOutput {
	return o
}

func (o DropletStatusOutput) ToDropletStatusPtrOutput() DropletStatusPtrOutput {
	return o.ToDropletStatusPtrOutputWithContext(context.Background())
}

func (o DropletStatusOutput) ToDropletStatusPtrOutputWithContext(ctx context.Context) DropletStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DropletStatus) *DropletStatus {
		return &v
	}).(DropletStatusPtrOutput)
}

func (o DropletStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DropletStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DropletStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DropletStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DropletStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DropletStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DropletStatusPtrOutput struct{ *pulumi.OutputState }

func (DropletStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletStatus)(nil)).Elem()
}

func (o DropletStatusPtrOutput) ToDropletStatusPtrOutput() DropletStatusPtrOutput {
	return o
}

func (o DropletStatusPtrOutput) ToDropletStatusPtrOutputWithContext(ctx context.Context) DropletStatusPtrOutput {
	return o
}

func (o DropletStatusPtrOutput) Elem() DropletStatusOutput {
	return o.ApplyT(func(v *DropletStatus) DropletStatus {
		if v != nil {
			return *v
		}
		var ret DropletStatus
		return ret
	}).(DropletStatusOutput)
}

func (o DropletStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DropletStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DropletStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// A status string indicating the current state of the firewall. This can be "waiting", "succeeded", or "failed".
type FirewallPropertiesStatus string

const (
	FirewallPropertiesStatusWaiting   = FirewallPropertiesStatus("waiting")
	FirewallPropertiesStatusSucceeded = FirewallPropertiesStatus("succeeded")
	FirewallPropertiesStatusFailed    = FirewallPropertiesStatus("failed")
)

type FirewallPropertiesStatusOutput struct{ *pulumi.OutputState }

func (FirewallPropertiesStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPropertiesStatus)(nil)).Elem()
}

func (o FirewallPropertiesStatusOutput) ToFirewallPropertiesStatusOutput() FirewallPropertiesStatusOutput {
	return o
}

func (o FirewallPropertiesStatusOutput) ToFirewallPropertiesStatusOutputWithContext(ctx context.Context) FirewallPropertiesStatusOutput {
	return o
}

func (o FirewallPropertiesStatusOutput) ToFirewallPropertiesStatusPtrOutput() FirewallPropertiesStatusPtrOutput {
	return o.ToFirewallPropertiesStatusPtrOutputWithContext(context.Background())
}

func (o FirewallPropertiesStatusOutput) ToFirewallPropertiesStatusPtrOutputWithContext(ctx context.Context) FirewallPropertiesStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallPropertiesStatus) *FirewallPropertiesStatus {
		return &v
	}).(FirewallPropertiesStatusPtrOutput)
}

func (o FirewallPropertiesStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallPropertiesStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPropertiesStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallPropertiesStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPropertiesStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallPropertiesStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallPropertiesStatusPtrOutput struct{ *pulumi.OutputState }

func (FirewallPropertiesStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPropertiesStatus)(nil)).Elem()
}

func (o FirewallPropertiesStatusPtrOutput) ToFirewallPropertiesStatusPtrOutput() FirewallPropertiesStatusPtrOutput {
	return o
}

func (o FirewallPropertiesStatusPtrOutput) ToFirewallPropertiesStatusPtrOutputWithContext(ctx context.Context) FirewallPropertiesStatusPtrOutput {
	return o
}

func (o FirewallPropertiesStatusPtrOutput) Elem() FirewallPropertiesStatusOutput {
	return o.ApplyT(func(v *FirewallPropertiesStatus) FirewallPropertiesStatus {
		if v != nil {
			return *v
		}
		var ret FirewallPropertiesStatus
		return ret
	}).(FirewallPropertiesStatusOutput)
}

func (o FirewallPropertiesStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallPropertiesStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallPropertiesStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of traffic to be allowed. This may be one of `tcp`, `udp`, or `icmp`.
type FirewallRuleBaseProtocol string

const (
	FirewallRuleBaseProtocolTcp  = FirewallRuleBaseProtocol("tcp")
	FirewallRuleBaseProtocolUdp  = FirewallRuleBaseProtocol("udp")
	FirewallRuleBaseProtocolIcmp = FirewallRuleBaseProtocol("icmp")
)

type FirewallRuleBaseProtocolOutput struct{ *pulumi.OutputState }

func (FirewallRuleBaseProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallRuleBaseProtocol)(nil)).Elem()
}

func (o FirewallRuleBaseProtocolOutput) ToFirewallRuleBaseProtocolOutput() FirewallRuleBaseProtocolOutput {
	return o
}

func (o FirewallRuleBaseProtocolOutput) ToFirewallRuleBaseProtocolOutputWithContext(ctx context.Context) FirewallRuleBaseProtocolOutput {
	return o
}

func (o FirewallRuleBaseProtocolOutput) ToFirewallRuleBaseProtocolPtrOutput() FirewallRuleBaseProtocolPtrOutput {
	return o.ToFirewallRuleBaseProtocolPtrOutputWithContext(context.Background())
}

func (o FirewallRuleBaseProtocolOutput) ToFirewallRuleBaseProtocolPtrOutputWithContext(ctx context.Context) FirewallRuleBaseProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FirewallRuleBaseProtocol) *FirewallRuleBaseProtocol {
		return &v
	}).(FirewallRuleBaseProtocolPtrOutput)
}

func (o FirewallRuleBaseProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FirewallRuleBaseProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleBaseProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FirewallRuleBaseProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleBaseProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FirewallRuleBaseProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FirewallRuleBaseProtocolPtrOutput struct{ *pulumi.OutputState }

func (FirewallRuleBaseProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallRuleBaseProtocol)(nil)).Elem()
}

func (o FirewallRuleBaseProtocolPtrOutput) ToFirewallRuleBaseProtocolPtrOutput() FirewallRuleBaseProtocolPtrOutput {
	return o
}

func (o FirewallRuleBaseProtocolPtrOutput) ToFirewallRuleBaseProtocolPtrOutputWithContext(ctx context.Context) FirewallRuleBaseProtocolPtrOutput {
	return o
}

func (o FirewallRuleBaseProtocolPtrOutput) Elem() FirewallRuleBaseProtocolOutput {
	return o.ApplyT(func(v *FirewallRuleBaseProtocol) FirewallRuleBaseProtocol {
		if v != nil {
			return *v
		}
		var ret FirewallRuleBaseProtocol
		return ret
	}).(FirewallRuleBaseProtocolOutput)
}

func (o FirewallRuleBaseProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FirewallRuleBaseProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FirewallRuleBaseProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
type ImageDistribution string

const (
	ImageDistributionArchLinux    = ImageDistribution("Arch Linux")
	ImageDistributionCentOS       = ImageDistribution("CentOS")
	ImageDistributionCoreOS       = ImageDistribution("CoreOS")
	ImageDistributionDebian       = ImageDistribution("Debian")
	ImageDistributionFedora       = ImageDistribution("Fedora")
	ImageDistributionFedoraAtomic = ImageDistribution("Fedora Atomic")
	ImageDistributionFreeBSD      = ImageDistribution("FreeBSD")
	ImageDistributionGentoo       = ImageDistribution("Gentoo")
	ImageDistributionOpenSUSE     = ImageDistribution("openSUSE")
	ImageDistributionRancherOS    = ImageDistribution("RancherOS")
	ImageDistributionRockyLinux   = ImageDistribution("Rocky Linux")
	ImageDistributionUbuntu       = ImageDistribution("Ubuntu")
	ImageDistributionUnknown      = ImageDistribution("Unknown")
)

type ImageDistributionOutput struct{ *pulumi.OutputState }

func (ImageDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDistribution)(nil)).Elem()
}

func (o ImageDistributionOutput) ToImageDistributionOutput() ImageDistributionOutput {
	return o
}

func (o ImageDistributionOutput) ToImageDistributionOutputWithContext(ctx context.Context) ImageDistributionOutput {
	return o
}

func (o ImageDistributionOutput) ToImageDistributionPtrOutput() ImageDistributionPtrOutput {
	return o.ToImageDistributionPtrOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToImageDistributionPtrOutputWithContext(ctx context.Context) ImageDistributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageDistribution) *ImageDistribution {
		return &v
	}).(ImageDistributionPtrOutput)
}

func (o ImageDistributionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageDistribution) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageDistributionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageDistribution) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageDistributionPtrOutput struct{ *pulumi.OutputState }

func (ImageDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageDistribution)(nil)).Elem()
}

func (o ImageDistributionPtrOutput) ToImageDistributionPtrOutput() ImageDistributionPtrOutput {
	return o
}

func (o ImageDistributionPtrOutput) ToImageDistributionPtrOutputWithContext(ctx context.Context) ImageDistributionPtrOutput {
	return o
}

func (o ImageDistributionPtrOutput) Elem() ImageDistributionOutput {
	return o.ApplyT(func(v *ImageDistribution) ImageDistribution {
		if v != nil {
			return *v
		}
		var ret ImageDistribution
		return ret
	}).(ImageDistributionOutput)
}

func (o ImageDistributionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageDistributionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageDistribution) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type ImageRegionsItem string

const (
	ImageRegionsItemAms1 = ImageRegionsItem("ams1")
	ImageRegionsItemAms2 = ImageRegionsItem("ams2")
	ImageRegionsItemAms3 = ImageRegionsItem("ams3")
	ImageRegionsItemBlr1 = ImageRegionsItem("blr1")
	ImageRegionsItemFra1 = ImageRegionsItem("fra1")
	ImageRegionsItemLon1 = ImageRegionsItem("lon1")
	ImageRegionsItemNyc1 = ImageRegionsItem("nyc1")
	ImageRegionsItemNyc2 = ImageRegionsItem("nyc2")
	ImageRegionsItemNyc3 = ImageRegionsItem("nyc3")
	ImageRegionsItemSfo1 = ImageRegionsItem("sfo1")
	ImageRegionsItemSfo2 = ImageRegionsItem("sfo2")
	ImageRegionsItemSfo3 = ImageRegionsItem("sfo3")
	ImageRegionsItemSgp1 = ImageRegionsItem("sgp1")
	ImageRegionsItemTor1 = ImageRegionsItem("tor1")
)

type ImageRegionsItemOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemOutput) ToImageRegionsItemOutput() ImageRegionsItemOutput {
	return o
}

func (o ImageRegionsItemOutput) ToImageRegionsItemOutputWithContext(ctx context.Context) ImageRegionsItemOutput {
	return o
}

func (o ImageRegionsItemOutput) ToImageRegionsItemPtrOutput() ImageRegionsItemPtrOutput {
	return o.ToImageRegionsItemPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToImageRegionsItemPtrOutputWithContext(ctx context.Context) ImageRegionsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRegionsItem) *ImageRegionsItem {
		return &v
	}).(ImageRegionsItemPtrOutput)
}

func (o ImageRegionsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRegionsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageRegionsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRegionsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRegionsItemPtrOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemPtrOutput) ToImageRegionsItemPtrOutput() ImageRegionsItemPtrOutput {
	return o
}

func (o ImageRegionsItemPtrOutput) ToImageRegionsItemPtrOutputWithContext(ctx context.Context) ImageRegionsItemPtrOutput {
	return o
}

func (o ImageRegionsItemPtrOutput) Elem() ImageRegionsItemOutput {
	return o.ApplyT(func(v *ImageRegionsItem) ImageRegionsItem {
		if v != nil {
			return *v
		}
		var ret ImageRegionsItem
		return ret
	}).(ImageRegionsItemOutput)
}

func (o ImageRegionsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageRegionsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRegionsItemArrayOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemArrayOutput) ToImageRegionsItemArrayOutput() ImageRegionsItemArrayOutput {
	return o
}

func (o ImageRegionsItemArrayOutput) ToImageRegionsItemArrayOutputWithContext(ctx context.Context) ImageRegionsItemArrayOutput {
	return o
}

func (o ImageRegionsItemArrayOutput) Index(i pulumi.IntInput) ImageRegionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageRegionsItem {
		return vs[0].([]ImageRegionsItem)[vs[1].(int)]
	}).(ImageRegionsItemOutput)
}

// A status string indicating the state of a custom image. This may be `NEW`,
//
//	`available`, `pending`, `deleted`, or `retired`.
type ImageStatus string

const (
	ImageStatusNew       = ImageStatus("NEW")
	ImageStatusAvailable = ImageStatus("available")
	ImageStatusPending   = ImageStatus("pending")
	ImageStatusDeleted   = ImageStatus("deleted")
	ImageStatusRetired   = ImageStatus("retired")
)

type ImageStatusOutput struct{ *pulumi.OutputState }

func (ImageStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageStatus)(nil)).Elem()
}

func (o ImageStatusOutput) ToImageStatusOutput() ImageStatusOutput {
	return o
}

func (o ImageStatusOutput) ToImageStatusOutputWithContext(ctx context.Context) ImageStatusOutput {
	return o
}

func (o ImageStatusOutput) ToImageStatusPtrOutput() ImageStatusPtrOutput {
	return o.ToImageStatusPtrOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToImageStatusPtrOutputWithContext(ctx context.Context) ImageStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageStatus) *ImageStatus {
		return &v
	}).(ImageStatusPtrOutput)
}

func (o ImageStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageStatusPtrOutput struct{ *pulumi.OutputState }

func (ImageStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageStatus)(nil)).Elem()
}

func (o ImageStatusPtrOutput) ToImageStatusPtrOutput() ImageStatusPtrOutput {
	return o
}

func (o ImageStatusPtrOutput) ToImageStatusPtrOutputWithContext(ctx context.Context) ImageStatusPtrOutput {
	return o
}

func (o ImageStatusPtrOutput) Elem() ImageStatusOutput {
	return o.ApplyT(func(v *ImageStatus) ImageStatus {
		if v != nil {
			return *v
		}
		var ret ImageStatus
		return ret
	}).(ImageStatusOutput)
}

func (o ImageStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).
type ImageType string

const (
	ImageTypeBase     = ImageType("base")
	ImageTypeSnapshot = ImageType("snapshot")
	ImageTypeBackup   = ImageType("backup")
	ImageTypeCustom   = ImageType("custom")
	ImageTypeAdmin    = ImageType("admin")
)

type ImageTypeOutput struct{ *pulumi.OutputState }

func (ImageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageType)(nil)).Elem()
}

func (o ImageTypeOutput) ToImageTypeOutput() ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypeOutputWithContext(ctx context.Context) ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o.ToImageTypePtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageType) *ImageType {
		return &v
	}).(ImageTypePtrOutput)
}

func (o ImageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageTypePtrOutput struct{ *pulumi.OutputState }

func (ImageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageType)(nil)).Elem()
}

func (o ImageTypePtrOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) Elem() ImageTypeOutput {
	return o.ApplyT(func(v *ImageType) ImageType {
		if v != nil {
			return *v
		}
		var ret ImageType
		return ret
	}).(ImageTypeOutput)
}

func (o ImageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of the IPv4 network interface.
type NetworkV4Type string

const (
	NetworkV4TypePublic  = NetworkV4Type("public")
	NetworkV4TypePrivate = NetworkV4Type("private")
)

type NetworkV4TypeOutput struct{ *pulumi.OutputState }

func (NetworkV4TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkV4Type)(nil)).Elem()
}

func (o NetworkV4TypeOutput) ToNetworkV4TypeOutput() NetworkV4TypeOutput {
	return o
}

func (o NetworkV4TypeOutput) ToNetworkV4TypeOutputWithContext(ctx context.Context) NetworkV4TypeOutput {
	return o
}

func (o NetworkV4TypeOutput) ToNetworkV4TypePtrOutput() NetworkV4TypePtrOutput {
	return o.ToNetworkV4TypePtrOutputWithContext(context.Background())
}

func (o NetworkV4TypeOutput) ToNetworkV4TypePtrOutputWithContext(ctx context.Context) NetworkV4TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkV4Type) *NetworkV4Type {
		return &v
	}).(NetworkV4TypePtrOutput)
}

func (o NetworkV4TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkV4TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkV4Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkV4TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkV4TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkV4Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkV4TypePtrOutput struct{ *pulumi.OutputState }

func (NetworkV4TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkV4Type)(nil)).Elem()
}

func (o NetworkV4TypePtrOutput) ToNetworkV4TypePtrOutput() NetworkV4TypePtrOutput {
	return o
}

func (o NetworkV4TypePtrOutput) ToNetworkV4TypePtrOutputWithContext(ctx context.Context) NetworkV4TypePtrOutput {
	return o
}

func (o NetworkV4TypePtrOutput) Elem() NetworkV4TypeOutput {
	return o.ApplyT(func(v *NetworkV4Type) NetworkV4Type {
		if v != nil {
			return *v
		}
		var ret NetworkV4Type
		return ret
	}).(NetworkV4TypeOutput)
}

func (o NetworkV4TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkV4TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkV4Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of the IPv6 network interface.
//
// **Note**: IPv6 private  networking is not currently supported.
type NetworkV6Type string

const (
	NetworkV6TypePublic = NetworkV6Type("public")
)

type NetworkV6TypeOutput struct{ *pulumi.OutputState }

func (NetworkV6TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkV6Type)(nil)).Elem()
}

func (o NetworkV6TypeOutput) ToNetworkV6TypeOutput() NetworkV6TypeOutput {
	return o
}

func (o NetworkV6TypeOutput) ToNetworkV6TypeOutputWithContext(ctx context.Context) NetworkV6TypeOutput {
	return o
}

func (o NetworkV6TypeOutput) ToNetworkV6TypePtrOutput() NetworkV6TypePtrOutput {
	return o.ToNetworkV6TypePtrOutputWithContext(context.Background())
}

func (o NetworkV6TypeOutput) ToNetworkV6TypePtrOutputWithContext(ctx context.Context) NetworkV6TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NetworkV6Type) *NetworkV6Type {
		return &v
	}).(NetworkV6TypePtrOutput)
}

func (o NetworkV6TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o NetworkV6TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkV6Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o NetworkV6TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkV6TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e NetworkV6Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type NetworkV6TypePtrOutput struct{ *pulumi.OutputState }

func (NetworkV6TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkV6Type)(nil)).Elem()
}

func (o NetworkV6TypePtrOutput) ToNetworkV6TypePtrOutput() NetworkV6TypePtrOutput {
	return o
}

func (o NetworkV6TypePtrOutput) ToNetworkV6TypePtrOutputWithContext(ctx context.Context) NetworkV6TypePtrOutput {
	return o
}

func (o NetworkV6TypePtrOutput) Elem() NetworkV6TypeOutput {
	return o.ApplyT(func(v *NetworkV6Type) NetworkV6Type {
		if v != nil {
			return *v
		}
		var ret NetworkV6Type
		return ret
	}).(NetworkV6TypeOutput)
}

func (o NetworkV6TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o NetworkV6TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *NetworkV6Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of action to initiate for the Droplet.
type Type string

const (
	TypeEnableBackups  = Type("enable_backups")
	TypeDisableBackups = Type("disable_backups")
	TypeReboot         = Type("reboot")
	TypePowerCycle     = Type("power_cycle")
	TypeShutdown       = Type("shutdown")
	TypePowerOff       = Type("power_off")
	TypePowerOn        = Type("power_on")
	TypeRestore        = Type("restore")
	TypePasswordReset  = Type("password_reset")
	TypeResize         = Type("resize")
	TypeRebuild        = Type("rebuild")
	TypeRename         = Type("rename")
	TypeChangeKernel   = Type("change_kernel")
	TypeEnableIpv6     = Type("enable_ipv6")
	TypeSnapshot       = Type("snapshot")
)

func (Type) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (e Type) ToTypeOutput() TypeOutput {
	return pulumi.ToOutput(e).(TypeOutput)
}

func (e Type) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TypeOutput)
}

func (e Type) ToTypePtrOutput() TypePtrOutput {
	return e.ToTypePtrOutputWithContext(context.Background())
}

func (e Type) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return Type(e).ToTypeOutputWithContext(ctx).ToTypePtrOutputWithContext(ctx)
}

func (e Type) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Type) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TypeOutput struct{ *pulumi.OutputState }

func (TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (o TypeOutput) ToTypeOutput() TypeOutput {
	return o
}

func (o TypeOutput) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return o
}

func (o TypeOutput) ToTypePtrOutput() TypePtrOutput {
	return o.ToTypePtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Type) *Type {
		return &v
	}).(TypePtrOutput)
}

func (o TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TypePtrOutput struct{ *pulumi.OutputState }

func (TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Type)(nil)).Elem()
}

func (o TypePtrOutput) ToTypePtrOutput() TypePtrOutput {
	return o
}

func (o TypePtrOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o
}

func (o TypePtrOutput) Elem() TypeOutput {
	return o.ApplyT(func(v *Type) Type {
		if v != nil {
			return *v
		}
		var ret Type
		return ret
	}).(TypeOutput)
}

func (o TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TypeInput is an input type that accepts values of the Type enum
// A concrete instance of `TypeInput` can be one of the following:
//
//	TypeEnableBackups
//	TypeDisableBackups
//	TypeReboot
//	TypePowerCycle
//	TypeShutdown
//	TypePowerOff
//	TypePowerOn
//	TypeRestore
//	TypePasswordReset
//	TypeResize
//	TypeRebuild
//	TypeRename
//	TypeChangeKernel
//	TypeEnableIpv6
//	TypeSnapshot
type TypeInput interface {
	pulumi.Input

	ToTypeOutput() TypeOutput
	ToTypeOutputWithContext(context.Context) TypeOutput
}

var typePtrType = reflect.TypeOf((**Type)(nil)).Elem()

type TypePtrInput interface {
	pulumi.Input

	ToTypePtrOutput() TypePtrOutput
	ToTypePtrOutputWithContext(context.Context) TypePtrOutput
}

type typePtr string

func TypePtr(v string) TypePtrInput {
	return (*typePtr)(&v)
}

func (*typePtr) ElementType() reflect.Type {
	return typePtrType
}

func (in *typePtr) ToTypePtrOutput() TypePtrOutput {
	return pulumi.ToOutput(in).(TypePtrOutput)
}

func (in *typePtr) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DropletActionTypeInput)(nil)).Elem(), DropletActionType("enable_backups"))
	pulumi.RegisterInputType(reflect.TypeOf((*DropletActionTypePtrInput)(nil)).Elem(), DropletActionType("enable_backups"))
	pulumi.RegisterInputType(reflect.TypeOf((*TypeInput)(nil)).Elem(), Type("enable_backups"))
	pulumi.RegisterInputType(reflect.TypeOf((*TypePtrInput)(nil)).Elem(), Type("enable_backups"))
	pulumi.RegisterOutputType(ActionStatusOutput{})
	pulumi.RegisterOutputType(ActionStatusPtrOutput{})
	pulumi.RegisterOutputType(DropletActionTypeOutput{})
	pulumi.RegisterOutputType(DropletActionTypePtrOutput{})
	pulumi.RegisterOutputType(DropletSnapshotPropertiesTypeOutput{})
	pulumi.RegisterOutputType(DropletSnapshotPropertiesTypePtrOutput{})
	pulumi.RegisterOutputType(DropletStatusOutput{})
	pulumi.RegisterOutputType(DropletStatusPtrOutput{})
	pulumi.RegisterOutputType(FirewallPropertiesStatusOutput{})
	pulumi.RegisterOutputType(FirewallPropertiesStatusPtrOutput{})
	pulumi.RegisterOutputType(FirewallRuleBaseProtocolOutput{})
	pulumi.RegisterOutputType(FirewallRuleBaseProtocolPtrOutput{})
	pulumi.RegisterOutputType(ImageDistributionOutput{})
	pulumi.RegisterOutputType(ImageDistributionPtrOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemPtrOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemArrayOutput{})
	pulumi.RegisterOutputType(ImageStatusOutput{})
	pulumi.RegisterOutputType(ImageStatusPtrOutput{})
	pulumi.RegisterOutputType(ImageTypeOutput{})
	pulumi.RegisterOutputType(ImageTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkV4TypeOutput{})
	pulumi.RegisterOutputType(NetworkV4TypePtrOutput{})
	pulumi.RegisterOutputType(NetworkV6TypeOutput{})
	pulumi.RegisterOutputType(NetworkV6TypePtrOutput{})
	pulumi.RegisterOutputType(TypeOutput{})
	pulumi.RegisterOutputType(TypePtrOutput{})
}
