// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DropletActionsChangeKernel struct {
	pulumi.CustomResourceState

	Action ActionPtrOutput `pulumi:"action"`
	// A unique number used to identify and reference a specific kernel.
	Kernel pulumi.IntPtrOutput `pulumi:"kernel"`
	// The type of action to initiate for the Droplet.
	Type DropletActionTypePtrOutput `pulumi:"type"`
}

// NewDropletActionsChangeKernel registers a new resource with the given unique name, arguments, and options.
func NewDropletActionsChangeKernel(ctx *pulumi.Context,
	name string, args *DropletActionsChangeKernelArgs, opts ...pulumi.ResourceOption) (*DropletActionsChangeKernel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DropletActionsChangeKernel
	err := ctx.RegisterResource("digitalocean-native:droplets/v2:DropletActionsChangeKernel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDropletActionsChangeKernel gets an existing DropletActionsChangeKernel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDropletActionsChangeKernel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DropletActionsChangeKernelState, opts ...pulumi.ResourceOption) (*DropletActionsChangeKernel, error) {
	var resource DropletActionsChangeKernel
	err := ctx.ReadResource("digitalocean-native:droplets/v2:DropletActionsChangeKernel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DropletActionsChangeKernel resources.
type dropletActionsChangeKernelState struct {
}

type DropletActionsChangeKernelState struct {
}

func (DropletActionsChangeKernelState) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsChangeKernelState)(nil)).Elem()
}

type dropletActionsChangeKernelArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId *string `pulumi:"dropletId"`
	// A unique number used to identify and reference a specific kernel.
	Kernel *int `pulumi:"kernel"`
	// The type of action to initiate for the Droplet.
	Type DropletActionType `pulumi:"type"`
}

// The set of arguments for constructing a DropletActionsChangeKernel resource.
type DropletActionsChangeKernelArgs struct {
	// A unique identifier for a Droplet instance.
	DropletId pulumi.StringPtrInput
	// A unique number used to identify and reference a specific kernel.
	Kernel pulumi.IntPtrInput
	// The type of action to initiate for the Droplet.
	Type DropletActionTypeInput
}

func (DropletActionsChangeKernelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsChangeKernelArgs)(nil)).Elem()
}

type DropletActionsChangeKernelInput interface {
	pulumi.Input

	ToDropletActionsChangeKernelOutput() DropletActionsChangeKernelOutput
	ToDropletActionsChangeKernelOutputWithContext(ctx context.Context) DropletActionsChangeKernelOutput
}

func (*DropletActionsChangeKernel) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsChangeKernel)(nil)).Elem()
}

func (i *DropletActionsChangeKernel) ToDropletActionsChangeKernelOutput() DropletActionsChangeKernelOutput {
	return i.ToDropletActionsChangeKernelOutputWithContext(context.Background())
}

func (i *DropletActionsChangeKernel) ToDropletActionsChangeKernelOutputWithContext(ctx context.Context) DropletActionsChangeKernelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropletActionsChangeKernelOutput)
}

type DropletActionsChangeKernelOutput struct{ *pulumi.OutputState }

func (DropletActionsChangeKernelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsChangeKernel)(nil)).Elem()
}

func (o DropletActionsChangeKernelOutput) ToDropletActionsChangeKernelOutput() DropletActionsChangeKernelOutput {
	return o
}

func (o DropletActionsChangeKernelOutput) ToDropletActionsChangeKernelOutputWithContext(ctx context.Context) DropletActionsChangeKernelOutput {
	return o
}

func (o DropletActionsChangeKernelOutput) Action() ActionPtrOutput {
	return o.ApplyT(func(v *DropletActionsChangeKernel) ActionPtrOutput { return v.Action }).(ActionPtrOutput)
}

// A unique number used to identify and reference a specific kernel.
func (o DropletActionsChangeKernelOutput) Kernel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DropletActionsChangeKernel) pulumi.IntPtrOutput { return v.Kernel }).(pulumi.IntPtrOutput)
}

// The type of action to initiate for the Droplet.
func (o DropletActionsChangeKernelOutput) Type() DropletActionTypePtrOutput {
	return o.ApplyT(func(v *DropletActionsChangeKernel) DropletActionTypePtrOutput { return v.Type }).(DropletActionTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DropletActionsChangeKernelInput)(nil)).Elem(), &DropletActionsChangeKernel{})
	pulumi.RegisterOutputType(DropletActionsChangeKernelOutput{})
}
