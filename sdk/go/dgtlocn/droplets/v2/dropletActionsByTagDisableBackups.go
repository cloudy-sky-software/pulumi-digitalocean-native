// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the action that will be taken on the Droplet.
type DropletActionsByTagDisableBackups struct {
	pulumi.CustomResourceState

	Actions ActionArrayOutput `pulumi:"actions"`
	// The type of action to initiate for the Droplet.
	Type TypeOutput `pulumi:"type"`
}

// NewDropletActionsByTagDisableBackups registers a new resource with the given unique name, arguments, and options.
func NewDropletActionsByTagDisableBackups(ctx *pulumi.Context,
	name string, args *DropletActionsByTagDisableBackupsArgs, opts ...pulumi.ResourceOption) (*DropletActionsByTagDisableBackups, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DropletActionsByTagDisableBackups
	err := ctx.RegisterResource("digitalocean-native:droplets/v2:DropletActionsByTagDisableBackups", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDropletActionsByTagDisableBackups gets an existing DropletActionsByTagDisableBackups resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDropletActionsByTagDisableBackups(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DropletActionsByTagDisableBackupsState, opts ...pulumi.ResourceOption) (*DropletActionsByTagDisableBackups, error) {
	var resource DropletActionsByTagDisableBackups
	err := ctx.ReadResource("digitalocean-native:droplets/v2:DropletActionsByTagDisableBackups", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DropletActionsByTagDisableBackups resources.
type dropletActionsByTagDisableBackupsState struct {
}

type DropletActionsByTagDisableBackupsState struct {
}

func (DropletActionsByTagDisableBackupsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsByTagDisableBackupsState)(nil)).Elem()
}

type dropletActionsByTagDisableBackupsArgs struct {
	// The type of action to initiate for the Droplet.
	Type Type `pulumi:"type"`
}

// The set of arguments for constructing a DropletActionsByTagDisableBackups resource.
type DropletActionsByTagDisableBackupsArgs struct {
	// The type of action to initiate for the Droplet.
	Type TypeInput
}

func (DropletActionsByTagDisableBackupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsByTagDisableBackupsArgs)(nil)).Elem()
}

type DropletActionsByTagDisableBackupsInput interface {
	pulumi.Input

	ToDropletActionsByTagDisableBackupsOutput() DropletActionsByTagDisableBackupsOutput
	ToDropletActionsByTagDisableBackupsOutputWithContext(ctx context.Context) DropletActionsByTagDisableBackupsOutput
}

func (*DropletActionsByTagDisableBackups) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsByTagDisableBackups)(nil)).Elem()
}

func (i *DropletActionsByTagDisableBackups) ToDropletActionsByTagDisableBackupsOutput() DropletActionsByTagDisableBackupsOutput {
	return i.ToDropletActionsByTagDisableBackupsOutputWithContext(context.Background())
}

func (i *DropletActionsByTagDisableBackups) ToDropletActionsByTagDisableBackupsOutputWithContext(ctx context.Context) DropletActionsByTagDisableBackupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropletActionsByTagDisableBackupsOutput)
}

type DropletActionsByTagDisableBackupsOutput struct{ *pulumi.OutputState }

func (DropletActionsByTagDisableBackupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsByTagDisableBackups)(nil)).Elem()
}

func (o DropletActionsByTagDisableBackupsOutput) ToDropletActionsByTagDisableBackupsOutput() DropletActionsByTagDisableBackupsOutput {
	return o
}

func (o DropletActionsByTagDisableBackupsOutput) ToDropletActionsByTagDisableBackupsOutputWithContext(ctx context.Context) DropletActionsByTagDisableBackupsOutput {
	return o
}

func (o DropletActionsByTagDisableBackupsOutput) Actions() ActionArrayOutput {
	return o.ApplyT(func(v *DropletActionsByTagDisableBackups) ActionArrayOutput { return v.Actions }).(ActionArrayOutput)
}

// The type of action to initiate for the Droplet.
func (o DropletActionsByTagDisableBackupsOutput) Type() TypeOutput {
	return o.ApplyT(func(v *DropletActionsByTagDisableBackups) TypeOutput { return v.Type }).(TypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DropletActionsByTagDisableBackupsInput)(nil)).Elem(), &DropletActionsByTagDisableBackups{})
	pulumi.RegisterOutputType(DropletActionsByTagDisableBackupsOutput{})
}
