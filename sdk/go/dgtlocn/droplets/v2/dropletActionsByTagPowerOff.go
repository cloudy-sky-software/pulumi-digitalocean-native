// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"errors"
	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the action that will be taken on the Droplet.
type DropletActionsByTagPowerOff struct {
	pulumi.CustomResourceState

	Actions ActionArrayOutput `pulumi:"actions"`
	// The type of action to initiate for the Droplet.
	Type TypeOutput `pulumi:"type"`
}

// NewDropletActionsByTagPowerOff registers a new resource with the given unique name, arguments, and options.
func NewDropletActionsByTagPowerOff(ctx *pulumi.Context,
	name string, args *DropletActionsByTagPowerOffArgs, opts ...pulumi.ResourceOption) (*DropletActionsByTagPowerOff, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DropletActionsByTagPowerOff
	err := ctx.RegisterResource("digitalocean-native:droplets/v2:DropletActionsByTagPowerOff", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDropletActionsByTagPowerOff gets an existing DropletActionsByTagPowerOff resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDropletActionsByTagPowerOff(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DropletActionsByTagPowerOffState, opts ...pulumi.ResourceOption) (*DropletActionsByTagPowerOff, error) {
	var resource DropletActionsByTagPowerOff
	err := ctx.ReadResource("digitalocean-native:droplets/v2:DropletActionsByTagPowerOff", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DropletActionsByTagPowerOff resources.
type dropletActionsByTagPowerOffState struct {
}

type DropletActionsByTagPowerOffState struct {
}

func (DropletActionsByTagPowerOffState) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsByTagPowerOffState)(nil)).Elem()
}

type dropletActionsByTagPowerOffArgs struct {
	// The type of action to initiate for the Droplet.
	Type Type `pulumi:"type"`
}

// The set of arguments for constructing a DropletActionsByTagPowerOff resource.
type DropletActionsByTagPowerOffArgs struct {
	// The type of action to initiate for the Droplet.
	Type TypeInput
}

func (DropletActionsByTagPowerOffArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dropletActionsByTagPowerOffArgs)(nil)).Elem()
}

type DropletActionsByTagPowerOffInput interface {
	pulumi.Input

	ToDropletActionsByTagPowerOffOutput() DropletActionsByTagPowerOffOutput
	ToDropletActionsByTagPowerOffOutputWithContext(ctx context.Context) DropletActionsByTagPowerOffOutput
}

func (*DropletActionsByTagPowerOff) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsByTagPowerOff)(nil)).Elem()
}

func (i *DropletActionsByTagPowerOff) ToDropletActionsByTagPowerOffOutput() DropletActionsByTagPowerOffOutput {
	return i.ToDropletActionsByTagPowerOffOutputWithContext(context.Background())
}

func (i *DropletActionsByTagPowerOff) ToDropletActionsByTagPowerOffOutputWithContext(ctx context.Context) DropletActionsByTagPowerOffOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropletActionsByTagPowerOffOutput)
}

type DropletActionsByTagPowerOffOutput struct{ *pulumi.OutputState }

func (DropletActionsByTagPowerOffOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropletActionsByTagPowerOff)(nil)).Elem()
}

func (o DropletActionsByTagPowerOffOutput) ToDropletActionsByTagPowerOffOutput() DropletActionsByTagPowerOffOutput {
	return o
}

func (o DropletActionsByTagPowerOffOutput) ToDropletActionsByTagPowerOffOutputWithContext(ctx context.Context) DropletActionsByTagPowerOffOutput {
	return o
}

func (o DropletActionsByTagPowerOffOutput) Actions() ActionArrayOutput {
	return o.ApplyT(func(v *DropletActionsByTagPowerOff) ActionArrayOutput { return v.Actions }).(ActionArrayOutput)
}

// The type of action to initiate for the Droplet.
func (o DropletActionsByTagPowerOffOutput) Type() TypeOutput {
	return o.ApplyT(func(v *DropletActionsByTagPowerOff) TypeOutput { return v.Type }).(TypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DropletActionsByTagPowerOffInput)(nil)).Elem(), &DropletActionsByTagPowerOff{})
	pulumi.RegisterOutputType(DropletActionsByTagPowerOffOutput{})
}
