// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListDropletsNeighborsIds(ctx *pulumi.Context, args *ListDropletsNeighborsIdsArgs, opts ...pulumi.InvokeOption) (*ListDropletsNeighborsIdsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListDropletsNeighborsIdsResult
	err := ctx.Invoke("digitalocean-native:reports/v2:listDropletsNeighborsIds", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListDropletsNeighborsIdsArgs struct {
}

type ListDropletsNeighborsIdsResult struct {
	// An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
	NeighborIds [][]int `pulumi:"neighborIds"`
}

func ListDropletsNeighborsIdsOutput(ctx *pulumi.Context, args ListDropletsNeighborsIdsOutputArgs, opts ...pulumi.InvokeOption) ListDropletsNeighborsIdsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListDropletsNeighborsIdsResultOutput, error) {
			args := v.(ListDropletsNeighborsIdsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListDropletsNeighborsIdsResult
			secret, err := ctx.InvokePackageRaw("digitalocean-native:reports/v2:listDropletsNeighborsIds", args, &rv, "", opts...)
			if err != nil {
				return ListDropletsNeighborsIdsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListDropletsNeighborsIdsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListDropletsNeighborsIdsResultOutput), nil
			}
			return output, nil
		}).(ListDropletsNeighborsIdsResultOutput)
}

type ListDropletsNeighborsIdsOutputArgs struct {
}

func (ListDropletsNeighborsIdsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDropletsNeighborsIdsArgs)(nil)).Elem()
}

type ListDropletsNeighborsIdsResultOutput struct{ *pulumi.OutputState }

func (ListDropletsNeighborsIdsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListDropletsNeighborsIdsResult)(nil)).Elem()
}

func (o ListDropletsNeighborsIdsResultOutput) ToListDropletsNeighborsIdsResultOutput() ListDropletsNeighborsIdsResultOutput {
	return o
}

func (o ListDropletsNeighborsIdsResultOutput) ToListDropletsNeighborsIdsResultOutputWithContext(ctx context.Context) ListDropletsNeighborsIdsResultOutput {
	return o
}

// An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
func (o ListDropletsNeighborsIdsResultOutput) NeighborIds() pulumi.IntArrayArrayOutput {
	return o.ApplyT(func(v ListDropletsNeighborsIdsResult) [][]int { return v.NeighborIds }).(pulumi.IntArrayArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListDropletsNeighborsIdsResultOutput{})
}
