// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NeighborIds struct {
	// An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
	NeighborIds [][]int `pulumi:"neighborIds"`
}

type NeighborIdsOutput struct{ *pulumi.OutputState }

func (NeighborIdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NeighborIds)(nil)).Elem()
}

func (o NeighborIdsOutput) ToNeighborIdsOutput() NeighborIdsOutput {
	return o
}

func (o NeighborIdsOutput) ToNeighborIdsOutputWithContext(ctx context.Context) NeighborIdsOutput {
	return o
}

// An array of arrays. Each array will contain a set of Droplet IDs for Droplets that share a physical server.
func (o NeighborIdsOutput) NeighborIds() pulumi.IntArrayArrayOutput {
	return o.ApplyT(func(v NeighborIds) [][]int { return v.NeighborIds }).(pulumi.IntArrayArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(NeighborIdsOutput{})
}
