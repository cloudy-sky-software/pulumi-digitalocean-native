// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetImageActions(ctx *pulumi.Context, args *GetImageActionsArgs, opts ...pulumi.InvokeOption) (*GetImageActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImageActionsResult
	err := ctx.Invoke("digitalocean-native:images/v2:getImageActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetImageActionsArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId string `pulumi:"actionId"`
	// A unique number that can be used to identify and reference a specific image.
	ImageId string `pulumi:"imageId"`
}

type GetImageActionsResult struct {
	Items Action `pulumi:"items"`
}

// Defaults sets the appropriate defaults for GetImageActionsResult
func (val *GetImageActionsResult) Defaults() *GetImageActionsResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Items = *tmp.Items.Defaults()

	return &tmp
}

func GetImageActionsOutput(ctx *pulumi.Context, args GetImageActionsOutputArgs, opts ...pulumi.InvokeOption) GetImageActionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImageActionsResult, error) {
			args := v.(GetImageActionsArgs)
			r, err := GetImageActions(ctx, &args, opts...)
			var s GetImageActionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImageActionsResultOutput)
}

type GetImageActionsOutputArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId pulumi.StringInput `pulumi:"actionId"`
	// A unique number that can be used to identify and reference a specific image.
	ImageId pulumi.StringInput `pulumi:"imageId"`
}

func (GetImageActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageActionsArgs)(nil)).Elem()
}

type GetImageActionsResultOutput struct{ *pulumi.OutputState }

func (GetImageActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageActionsResult)(nil)).Elem()
}

func (o GetImageActionsResultOutput) ToGetImageActionsResultOutput() GetImageActionsResultOutput {
	return o
}

func (o GetImageActionsResultOutput) ToGetImageActionsResultOutputWithContext(ctx context.Context) GetImageActionsResultOutput {
	return o
}

func (o GetImageActionsResultOutput) Items() ActionOutput {
	return o.ApplyT(func(v GetImageActionsResult) Action { return v.Items }).(ActionOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImageActionsResultOutput{})
}
