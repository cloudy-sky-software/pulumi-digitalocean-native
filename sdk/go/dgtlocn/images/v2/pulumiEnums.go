// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current status of the action. This can be "in-progress", "completed", or "errored".
type ActionStatus string

const (
	ActionStatusInProgress = ActionStatus("in-progress")
	ActionStatusCompleted  = ActionStatus("completed")
	ActionStatusErrored    = ActionStatus("errored")
)

type ActionStatusOutput struct{ *pulumi.OutputState }

func (ActionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionStatus)(nil)).Elem()
}

func (o ActionStatusOutput) ToActionStatusOutput() ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusOutputWithContext(ctx context.Context) ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o.ToActionStatusPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionStatus) *ActionStatus {
		return &v
	}).(ActionStatusPtrOutput)
}

func (o ActionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionStatusPtrOutput struct{ *pulumi.OutputState }

func (ActionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionStatus)(nil)).Elem()
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) Elem() ActionStatusOutput {
	return o.ApplyT(func(v *ActionStatus) ActionStatus {
		if v != nil {
			return *v
		}
		var ret ActionStatus
		return ret
	}).(ActionStatusOutput)
}

func (o ActionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The action to be taken on the image. Can be either `convert` or `transfer`.
type ImageActionBaseType string

const (
	ImageActionBaseTypeConvert  = ImageActionBaseType("convert")
	ImageActionBaseTypeTransfer = ImageActionBaseType("transfer")
)

func (ImageActionBaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageActionBaseType)(nil)).Elem()
}

func (e ImageActionBaseType) ToImageActionBaseTypeOutput() ImageActionBaseTypeOutput {
	return pulumi.ToOutput(e).(ImageActionBaseTypeOutput)
}

func (e ImageActionBaseType) ToImageActionBaseTypeOutputWithContext(ctx context.Context) ImageActionBaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageActionBaseTypeOutput)
}

func (e ImageActionBaseType) ToImageActionBaseTypePtrOutput() ImageActionBaseTypePtrOutput {
	return e.ToImageActionBaseTypePtrOutputWithContext(context.Background())
}

func (e ImageActionBaseType) ToImageActionBaseTypePtrOutputWithContext(ctx context.Context) ImageActionBaseTypePtrOutput {
	return ImageActionBaseType(e).ToImageActionBaseTypeOutputWithContext(ctx).ToImageActionBaseTypePtrOutputWithContext(ctx)
}

func (e ImageActionBaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageActionBaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageActionBaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageActionBaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageActionBaseTypeOutput struct{ *pulumi.OutputState }

func (ImageActionBaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageActionBaseType)(nil)).Elem()
}

func (o ImageActionBaseTypeOutput) ToImageActionBaseTypeOutput() ImageActionBaseTypeOutput {
	return o
}

func (o ImageActionBaseTypeOutput) ToImageActionBaseTypeOutputWithContext(ctx context.Context) ImageActionBaseTypeOutput {
	return o
}

func (o ImageActionBaseTypeOutput) ToImageActionBaseTypePtrOutput() ImageActionBaseTypePtrOutput {
	return o.ToImageActionBaseTypePtrOutputWithContext(context.Background())
}

func (o ImageActionBaseTypeOutput) ToImageActionBaseTypePtrOutputWithContext(ctx context.Context) ImageActionBaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageActionBaseType) *ImageActionBaseType {
		return &v
	}).(ImageActionBaseTypePtrOutput)
}

func (o ImageActionBaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageActionBaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageActionBaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageActionBaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageActionBaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageActionBaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageActionBaseTypePtrOutput struct{ *pulumi.OutputState }

func (ImageActionBaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageActionBaseType)(nil)).Elem()
}

func (o ImageActionBaseTypePtrOutput) ToImageActionBaseTypePtrOutput() ImageActionBaseTypePtrOutput {
	return o
}

func (o ImageActionBaseTypePtrOutput) ToImageActionBaseTypePtrOutputWithContext(ctx context.Context) ImageActionBaseTypePtrOutput {
	return o
}

func (o ImageActionBaseTypePtrOutput) Elem() ImageActionBaseTypeOutput {
	return o.ApplyT(func(v *ImageActionBaseType) ImageActionBaseType {
		if v != nil {
			return *v
		}
		var ret ImageActionBaseType
		return ret
	}).(ImageActionBaseTypeOutput)
}

func (o ImageActionBaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageActionBaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageActionBaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageActionBaseTypeInput is an input type that accepts values of the ImageActionBaseType enum
// A concrete instance of `ImageActionBaseTypeInput` can be one of the following:
//
//	ImageActionBaseTypeConvert
//	ImageActionBaseTypeTransfer
type ImageActionBaseTypeInput interface {
	pulumi.Input

	ToImageActionBaseTypeOutput() ImageActionBaseTypeOutput
	ToImageActionBaseTypeOutputWithContext(context.Context) ImageActionBaseTypeOutput
}

var imageActionBaseTypePtrType = reflect.TypeOf((**ImageActionBaseType)(nil)).Elem()

type ImageActionBaseTypePtrInput interface {
	pulumi.Input

	ToImageActionBaseTypePtrOutput() ImageActionBaseTypePtrOutput
	ToImageActionBaseTypePtrOutputWithContext(context.Context) ImageActionBaseTypePtrOutput
}

type imageActionBaseTypePtr string

func ImageActionBaseTypePtr(v string) ImageActionBaseTypePtrInput {
	return (*imageActionBaseTypePtr)(&v)
}

func (*imageActionBaseTypePtr) ElementType() reflect.Type {
	return imageActionBaseTypePtrType
}

func (in *imageActionBaseTypePtr) ToImageActionBaseTypePtrOutput() ImageActionBaseTypePtrOutput {
	return pulumi.ToOutput(in).(ImageActionBaseTypePtrOutput)
}

func (in *imageActionBaseTypePtr) ToImageActionBaseTypePtrOutputWithContext(ctx context.Context) ImageActionBaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageActionBaseTypePtrOutput)
}

// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
type ImageDistribution string

const (
	ImageDistributionArchLinux    = ImageDistribution("Arch Linux")
	ImageDistributionCentOS       = ImageDistribution("CentOS")
	ImageDistributionCoreOS       = ImageDistribution("CoreOS")
	ImageDistributionDebian       = ImageDistribution("Debian")
	ImageDistributionFedora       = ImageDistribution("Fedora")
	ImageDistributionFedoraAtomic = ImageDistribution("Fedora Atomic")
	ImageDistributionFreeBSD      = ImageDistribution("FreeBSD")
	ImageDistributionGentoo       = ImageDistribution("Gentoo")
	ImageDistributionOpenSUSE     = ImageDistribution("openSUSE")
	ImageDistributionRancherOS    = ImageDistribution("RancherOS")
	ImageDistributionRockyLinux   = ImageDistribution("Rocky Linux")
	ImageDistributionUbuntu       = ImageDistribution("Ubuntu")
	ImageDistributionUnknown      = ImageDistribution("Unknown")
)

type ImageDistributionOutput struct{ *pulumi.OutputState }

func (ImageDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDistribution)(nil)).Elem()
}

func (o ImageDistributionOutput) ToImageDistributionOutput() ImageDistributionOutput {
	return o
}

func (o ImageDistributionOutput) ToImageDistributionOutputWithContext(ctx context.Context) ImageDistributionOutput {
	return o
}

func (o ImageDistributionOutput) ToImageDistributionPtrOutput() ImageDistributionPtrOutput {
	return o.ToImageDistributionPtrOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToImageDistributionPtrOutputWithContext(ctx context.Context) ImageDistributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageDistribution) *ImageDistribution {
		return &v
	}).(ImageDistributionPtrOutput)
}

func (o ImageDistributionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageDistribution) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageDistributionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageDistribution) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageDistributionPtrOutput struct{ *pulumi.OutputState }

func (ImageDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageDistribution)(nil)).Elem()
}

func (o ImageDistributionPtrOutput) ToImageDistributionPtrOutput() ImageDistributionPtrOutput {
	return o
}

func (o ImageDistributionPtrOutput) ToImageDistributionPtrOutputWithContext(ctx context.Context) ImageDistributionPtrOutput {
	return o
}

func (o ImageDistributionPtrOutput) Elem() ImageDistributionOutput {
	return o.ApplyT(func(v *ImageDistribution) ImageDistribution {
		if v != nil {
			return *v
		}
		var ret ImageDistribution
		return ret
	}).(ImageDistributionOutput)
}

func (o ImageDistributionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageDistributionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageDistribution) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type ImageRegionsItem string

const (
	ImageRegionsItemAms1 = ImageRegionsItem("ams1")
	ImageRegionsItemAms2 = ImageRegionsItem("ams2")
	ImageRegionsItemAms3 = ImageRegionsItem("ams3")
	ImageRegionsItemBlr1 = ImageRegionsItem("blr1")
	ImageRegionsItemFra1 = ImageRegionsItem("fra1")
	ImageRegionsItemLon1 = ImageRegionsItem("lon1")
	ImageRegionsItemNyc1 = ImageRegionsItem("nyc1")
	ImageRegionsItemNyc2 = ImageRegionsItem("nyc2")
	ImageRegionsItemNyc3 = ImageRegionsItem("nyc3")
	ImageRegionsItemSfo1 = ImageRegionsItem("sfo1")
	ImageRegionsItemSfo2 = ImageRegionsItem("sfo2")
	ImageRegionsItemSfo3 = ImageRegionsItem("sfo3")
	ImageRegionsItemSgp1 = ImageRegionsItem("sgp1")
	ImageRegionsItemTor1 = ImageRegionsItem("tor1")
)

type ImageRegionsItemOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemOutput) ToImageRegionsItemOutput() ImageRegionsItemOutput {
	return o
}

func (o ImageRegionsItemOutput) ToImageRegionsItemOutputWithContext(ctx context.Context) ImageRegionsItemOutput {
	return o
}

func (o ImageRegionsItemOutput) ToImageRegionsItemPtrOutput() ImageRegionsItemPtrOutput {
	return o.ToImageRegionsItemPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToImageRegionsItemPtrOutputWithContext(ctx context.Context) ImageRegionsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRegionsItem) *ImageRegionsItem {
		return &v
	}).(ImageRegionsItemPtrOutput)
}

func (o ImageRegionsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRegionsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageRegionsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRegionsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRegionsItemPtrOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemPtrOutput) ToImageRegionsItemPtrOutput() ImageRegionsItemPtrOutput {
	return o
}

func (o ImageRegionsItemPtrOutput) ToImageRegionsItemPtrOutputWithContext(ctx context.Context) ImageRegionsItemPtrOutput {
	return o
}

func (o ImageRegionsItemPtrOutput) Elem() ImageRegionsItemOutput {
	return o.ApplyT(func(v *ImageRegionsItem) ImageRegionsItem {
		if v != nil {
			return *v
		}
		var ret ImageRegionsItem
		return ret
	}).(ImageRegionsItemOutput)
}

func (o ImageRegionsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageRegionsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRegionsItemArrayOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemArrayOutput) ToImageRegionsItemArrayOutput() ImageRegionsItemArrayOutput {
	return o
}

func (o ImageRegionsItemArrayOutput) ToImageRegionsItemArrayOutputWithContext(ctx context.Context) ImageRegionsItemArrayOutput {
	return o
}

func (o ImageRegionsItemArrayOutput) Index(i pulumi.IntInput) ImageRegionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageRegionsItem {
		return vs[0].([]ImageRegionsItem)[vs[1].(int)]
	}).(ImageRegionsItemOutput)
}

// A status string indicating the state of a custom image. This may be `NEW`,
//
//	`available`, `pending`, `deleted`, or `retired`.
type ImageStatus string

const (
	ImageStatusNew       = ImageStatus("NEW")
	ImageStatusAvailable = ImageStatus("available")
	ImageStatusPending   = ImageStatus("pending")
	ImageStatusDeleted   = ImageStatus("deleted")
	ImageStatusRetired   = ImageStatus("retired")
)

type ImageStatusOutput struct{ *pulumi.OutputState }

func (ImageStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageStatus)(nil)).Elem()
}

func (o ImageStatusOutput) ToImageStatusOutput() ImageStatusOutput {
	return o
}

func (o ImageStatusOutput) ToImageStatusOutputWithContext(ctx context.Context) ImageStatusOutput {
	return o
}

func (o ImageStatusOutput) ToImageStatusPtrOutput() ImageStatusPtrOutput {
	return o.ToImageStatusPtrOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToImageStatusPtrOutputWithContext(ctx context.Context) ImageStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageStatus) *ImageStatus {
		return &v
	}).(ImageStatusPtrOutput)
}

func (o ImageStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageStatusPtrOutput struct{ *pulumi.OutputState }

func (ImageStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageStatus)(nil)).Elem()
}

func (o ImageStatusPtrOutput) ToImageStatusPtrOutput() ImageStatusPtrOutput {
	return o
}

func (o ImageStatusPtrOutput) ToImageStatusPtrOutputWithContext(ctx context.Context) ImageStatusPtrOutput {
	return o
}

func (o ImageStatusPtrOutput) Elem() ImageStatusOutput {
	return o.ApplyT(func(v *ImageStatus) ImageStatus {
		if v != nil {
			return *v
		}
		var ret ImageStatus
		return ret
	}).(ImageStatusOutput)
}

func (o ImageStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).
type ImageType string

const (
	ImageTypeBase     = ImageType("base")
	ImageTypeSnapshot = ImageType("snapshot")
	ImageTypeBackup   = ImageType("backup")
	ImageTypeCustom   = ImageType("custom")
	ImageTypeAdmin    = ImageType("admin")
)

type ImageTypeOutput struct{ *pulumi.OutputState }

func (ImageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageType)(nil)).Elem()
}

func (o ImageTypeOutput) ToImageTypeOutput() ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypeOutputWithContext(ctx context.Context) ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o.ToImageTypePtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageType) *ImageType {
		return &v
	}).(ImageTypePtrOutput)
}

func (o ImageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageTypePtrOutput struct{ *pulumi.OutputState }

func (ImageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageType)(nil)).Elem()
}

func (o ImageTypePtrOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) Elem() ImageTypeOutput {
	return o.ApplyT(func(v *ImageType) ImageType {
		if v != nil {
			return *v
		}
		var ret ImageType
		return ret
	}).(ImageTypeOutput)
}

func (o ImageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
type ImageUpdateDistribution string

const (
	ImageUpdateDistributionArchLinux    = ImageUpdateDistribution("Arch Linux")
	ImageUpdateDistributionCentOS       = ImageUpdateDistribution("CentOS")
	ImageUpdateDistributionCoreOS       = ImageUpdateDistribution("CoreOS")
	ImageUpdateDistributionDebian       = ImageUpdateDistribution("Debian")
	ImageUpdateDistributionFedora       = ImageUpdateDistribution("Fedora")
	ImageUpdateDistributionFedoraAtomic = ImageUpdateDistribution("Fedora Atomic")
	ImageUpdateDistributionFreeBSD      = ImageUpdateDistribution("FreeBSD")
	ImageUpdateDistributionGentoo       = ImageUpdateDistribution("Gentoo")
	ImageUpdateDistributionOpenSUSE     = ImageUpdateDistribution("openSUSE")
	ImageUpdateDistributionRancherOS    = ImageUpdateDistribution("RancherOS")
	ImageUpdateDistributionRockyLinux   = ImageUpdateDistribution("Rocky Linux")
	ImageUpdateDistributionUbuntu       = ImageUpdateDistribution("Ubuntu")
	ImageUpdateDistributionUnknown      = ImageUpdateDistribution("Unknown")
)

func (ImageUpdateDistribution) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageUpdateDistribution)(nil)).Elem()
}

func (e ImageUpdateDistribution) ToImageUpdateDistributionOutput() ImageUpdateDistributionOutput {
	return pulumi.ToOutput(e).(ImageUpdateDistributionOutput)
}

func (e ImageUpdateDistribution) ToImageUpdateDistributionOutputWithContext(ctx context.Context) ImageUpdateDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImageUpdateDistributionOutput)
}

func (e ImageUpdateDistribution) ToImageUpdateDistributionPtrOutput() ImageUpdateDistributionPtrOutput {
	return e.ToImageUpdateDistributionPtrOutputWithContext(context.Background())
}

func (e ImageUpdateDistribution) ToImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImageUpdateDistributionPtrOutput {
	return ImageUpdateDistribution(e).ToImageUpdateDistributionOutputWithContext(ctx).ToImageUpdateDistributionPtrOutputWithContext(ctx)
}

func (e ImageUpdateDistribution) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageUpdateDistribution) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImageUpdateDistribution) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImageUpdateDistribution) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImageUpdateDistributionOutput struct{ *pulumi.OutputState }

func (ImageUpdateDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageUpdateDistribution)(nil)).Elem()
}

func (o ImageUpdateDistributionOutput) ToImageUpdateDistributionOutput() ImageUpdateDistributionOutput {
	return o
}

func (o ImageUpdateDistributionOutput) ToImageUpdateDistributionOutputWithContext(ctx context.Context) ImageUpdateDistributionOutput {
	return o
}

func (o ImageUpdateDistributionOutput) ToImageUpdateDistributionPtrOutput() ImageUpdateDistributionPtrOutput {
	return o.ToImageUpdateDistributionPtrOutputWithContext(context.Background())
}

func (o ImageUpdateDistributionOutput) ToImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImageUpdateDistributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageUpdateDistribution) *ImageUpdateDistribution {
		return &v
	}).(ImageUpdateDistributionPtrOutput)
}

func (o ImageUpdateDistributionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageUpdateDistributionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageUpdateDistribution) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageUpdateDistributionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageUpdateDistributionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageUpdateDistribution) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageUpdateDistributionPtrOutput struct{ *pulumi.OutputState }

func (ImageUpdateDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageUpdateDistribution)(nil)).Elem()
}

func (o ImageUpdateDistributionPtrOutput) ToImageUpdateDistributionPtrOutput() ImageUpdateDistributionPtrOutput {
	return o
}

func (o ImageUpdateDistributionPtrOutput) ToImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImageUpdateDistributionPtrOutput {
	return o
}

func (o ImageUpdateDistributionPtrOutput) Elem() ImageUpdateDistributionOutput {
	return o.ApplyT(func(v *ImageUpdateDistribution) ImageUpdateDistribution {
		if v != nil {
			return *v
		}
		var ret ImageUpdateDistribution
		return ret
	}).(ImageUpdateDistributionOutput)
}

func (o ImageUpdateDistributionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageUpdateDistributionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageUpdateDistribution) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImageUpdateDistributionInput is an input type that accepts values of the ImageUpdateDistribution enum
// A concrete instance of `ImageUpdateDistributionInput` can be one of the following:
//
//	ImageUpdateDistributionArchLinux
//	ImageUpdateDistributionCentOS
//	ImageUpdateDistributionCoreOS
//	ImageUpdateDistributionDebian
//	ImageUpdateDistributionFedora
//	ImageUpdateDistributionFedoraAtomic
//	ImageUpdateDistributionFreeBSD
//	ImageUpdateDistributionGentoo
//	ImageUpdateDistributionOpenSUSE
//	ImageUpdateDistributionRancherOS
//	ImageUpdateDistributionRockyLinux
//	ImageUpdateDistributionUbuntu
//	ImageUpdateDistributionUnknown
type ImageUpdateDistributionInput interface {
	pulumi.Input

	ToImageUpdateDistributionOutput() ImageUpdateDistributionOutput
	ToImageUpdateDistributionOutputWithContext(context.Context) ImageUpdateDistributionOutput
}

var imageUpdateDistributionPtrType = reflect.TypeOf((**ImageUpdateDistribution)(nil)).Elem()

type ImageUpdateDistributionPtrInput interface {
	pulumi.Input

	ToImageUpdateDistributionPtrOutput() ImageUpdateDistributionPtrOutput
	ToImageUpdateDistributionPtrOutputWithContext(context.Context) ImageUpdateDistributionPtrOutput
}

type imageUpdateDistributionPtr string

func ImageUpdateDistributionPtr(v string) ImageUpdateDistributionPtrInput {
	return (*imageUpdateDistributionPtr)(&v)
}

func (*imageUpdateDistributionPtr) ElementType() reflect.Type {
	return imageUpdateDistributionPtrType
}

func (in *imageUpdateDistributionPtr) ToImageUpdateDistributionPtrOutput() ImageUpdateDistributionPtrOutput {
	return pulumi.ToOutput(in).(ImageUpdateDistributionPtrOutput)
}

func (in *imageUpdateDistributionPtr) ToImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImageUpdateDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImageUpdateDistributionPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type ImagesCustomPropertiesRegion string

const (
	ImagesCustomPropertiesRegionAms1 = ImagesCustomPropertiesRegion("ams1")
	ImagesCustomPropertiesRegionAms2 = ImagesCustomPropertiesRegion("ams2")
	ImagesCustomPropertiesRegionAms3 = ImagesCustomPropertiesRegion("ams3")
	ImagesCustomPropertiesRegionBlr1 = ImagesCustomPropertiesRegion("blr1")
	ImagesCustomPropertiesRegionFra1 = ImagesCustomPropertiesRegion("fra1")
	ImagesCustomPropertiesRegionLon1 = ImagesCustomPropertiesRegion("lon1")
	ImagesCustomPropertiesRegionNyc1 = ImagesCustomPropertiesRegion("nyc1")
	ImagesCustomPropertiesRegionNyc2 = ImagesCustomPropertiesRegion("nyc2")
	ImagesCustomPropertiesRegionNyc3 = ImagesCustomPropertiesRegion("nyc3")
	ImagesCustomPropertiesRegionSfo1 = ImagesCustomPropertiesRegion("sfo1")
	ImagesCustomPropertiesRegionSfo2 = ImagesCustomPropertiesRegion("sfo2")
	ImagesCustomPropertiesRegionSfo3 = ImagesCustomPropertiesRegion("sfo3")
	ImagesCustomPropertiesRegionSgp1 = ImagesCustomPropertiesRegion("sgp1")
	ImagesCustomPropertiesRegionTor1 = ImagesCustomPropertiesRegion("tor1")
)

func (ImagesCustomPropertiesRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesCustomPropertiesRegion)(nil)).Elem()
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionOutput() ImagesCustomPropertiesRegionOutput {
	return pulumi.ToOutput(e).(ImagesCustomPropertiesRegionOutput)
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImagesCustomPropertiesRegionOutput)
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return e.ToImagesCustomPropertiesRegionPtrOutputWithContext(context.Background())
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return ImagesCustomPropertiesRegion(e).ToImagesCustomPropertiesRegionOutputWithContext(ctx).ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx)
}

func (e ImagesCustomPropertiesRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagesCustomPropertiesRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagesCustomPropertiesRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImagesCustomPropertiesRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImagesCustomPropertiesRegionOutput struct{ *pulumi.OutputState }

func (ImagesCustomPropertiesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesCustomPropertiesRegion)(nil)).Elem()
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionOutput() ImagesCustomPropertiesRegionOutput {
	return o
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionOutput {
	return o
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return o.ToImagesCustomPropertiesRegionPtrOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagesCustomPropertiesRegion) *ImagesCustomPropertiesRegion {
		return &v
	}).(ImagesCustomPropertiesRegionPtrOutput)
}

func (o ImagesCustomPropertiesRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagesCustomPropertiesRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImagesCustomPropertiesRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagesCustomPropertiesRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImagesCustomPropertiesRegionPtrOutput struct{ *pulumi.OutputState }

func (ImagesCustomPropertiesRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagesCustomPropertiesRegion)(nil)).Elem()
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return o
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return o
}

func (o ImagesCustomPropertiesRegionPtrOutput) Elem() ImagesCustomPropertiesRegionOutput {
	return o.ApplyT(func(v *ImagesCustomPropertiesRegion) ImagesCustomPropertiesRegion {
		if v != nil {
			return *v
		}
		var ret ImagesCustomPropertiesRegion
		return ret
	}).(ImagesCustomPropertiesRegionOutput)
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImagesCustomPropertiesRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImagesCustomPropertiesRegionInput is an input type that accepts values of the ImagesCustomPropertiesRegion enum
// A concrete instance of `ImagesCustomPropertiesRegionInput` can be one of the following:
//
//	ImagesCustomPropertiesRegionAms1
//	ImagesCustomPropertiesRegionAms2
//	ImagesCustomPropertiesRegionAms3
//	ImagesCustomPropertiesRegionBlr1
//	ImagesCustomPropertiesRegionFra1
//	ImagesCustomPropertiesRegionLon1
//	ImagesCustomPropertiesRegionNyc1
//	ImagesCustomPropertiesRegionNyc2
//	ImagesCustomPropertiesRegionNyc3
//	ImagesCustomPropertiesRegionSfo1
//	ImagesCustomPropertiesRegionSfo2
//	ImagesCustomPropertiesRegionSfo3
//	ImagesCustomPropertiesRegionSgp1
//	ImagesCustomPropertiesRegionTor1
type ImagesCustomPropertiesRegionInput interface {
	pulumi.Input

	ToImagesCustomPropertiesRegionOutput() ImagesCustomPropertiesRegionOutput
	ToImagesCustomPropertiesRegionOutputWithContext(context.Context) ImagesCustomPropertiesRegionOutput
}

var imagesCustomPropertiesRegionPtrType = reflect.TypeOf((**ImagesCustomPropertiesRegion)(nil)).Elem()

type ImagesCustomPropertiesRegionPtrInput interface {
	pulumi.Input

	ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput
	ToImagesCustomPropertiesRegionPtrOutputWithContext(context.Context) ImagesCustomPropertiesRegionPtrOutput
}

type imagesCustomPropertiesRegionPtr string

func ImagesCustomPropertiesRegionPtr(v string) ImagesCustomPropertiesRegionPtrInput {
	return (*imagesCustomPropertiesRegionPtr)(&v)
}

func (*imagesCustomPropertiesRegionPtr) ElementType() reflect.Type {
	return imagesCustomPropertiesRegionPtrType
}

func (in *imagesCustomPropertiesRegionPtr) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return pulumi.ToOutput(in).(ImagesCustomPropertiesRegionPtrOutput)
}

func (in *imagesCustomPropertiesRegionPtr) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImagesCustomPropertiesRegionPtrOutput)
}

// The current status of the action. This can be "in-progress", "completed", or "errored".
type Status string

const (
	StatusInProgress = Status("in-progress")
	StatusCompleted  = Status("completed")
	StatusErrored    = Status("errored")
)

type StatusOutput struct{ *pulumi.OutputState }

func (StatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Status)(nil)).Elem()
}

func (o StatusOutput) ToStatusOutput() StatusOutput {
	return o
}

func (o StatusOutput) ToStatusOutputWithContext(ctx context.Context) StatusOutput {
	return o
}

func (o StatusOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o.ToStatusPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Status) *Status {
		return &v
	}).(StatusPtrOutput)
}

func (o StatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Status) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StatusPtrOutput struct{ *pulumi.OutputState }

func (StatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Status)(nil)).Elem()
}

func (o StatusPtrOutput) ToStatusPtrOutput() StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) ToStatusPtrOutputWithContext(ctx context.Context) StatusPtrOutput {
	return o
}

func (o StatusPtrOutput) Elem() StatusOutput {
	return o.ApplyT(func(v *Status) Status {
		if v != nil {
			return *v
		}
		var ret Status
		return ret
	}).(StatusOutput)
}

func (o StatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Status) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type TransferPropertiesRegion string

const (
	TransferPropertiesRegionAms1 = TransferPropertiesRegion("ams1")
	TransferPropertiesRegionAms2 = TransferPropertiesRegion("ams2")
	TransferPropertiesRegionAms3 = TransferPropertiesRegion("ams3")
	TransferPropertiesRegionBlr1 = TransferPropertiesRegion("blr1")
	TransferPropertiesRegionFra1 = TransferPropertiesRegion("fra1")
	TransferPropertiesRegionLon1 = TransferPropertiesRegion("lon1")
	TransferPropertiesRegionNyc1 = TransferPropertiesRegion("nyc1")
	TransferPropertiesRegionNyc2 = TransferPropertiesRegion("nyc2")
	TransferPropertiesRegionNyc3 = TransferPropertiesRegion("nyc3")
	TransferPropertiesRegionSfo1 = TransferPropertiesRegion("sfo1")
	TransferPropertiesRegionSfo2 = TransferPropertiesRegion("sfo2")
	TransferPropertiesRegionSfo3 = TransferPropertiesRegion("sfo3")
	TransferPropertiesRegionSgp1 = TransferPropertiesRegion("sgp1")
	TransferPropertiesRegionTor1 = TransferPropertiesRegion("tor1")
)

func (TransferPropertiesRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferPropertiesRegion)(nil)).Elem()
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionOutput() TransferPropertiesRegionOutput {
	return pulumi.ToOutput(e).(TransferPropertiesRegionOutput)
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionOutputWithContext(ctx context.Context) TransferPropertiesRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransferPropertiesRegionOutput)
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return e.ToTransferPropertiesRegionPtrOutputWithContext(context.Background())
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return TransferPropertiesRegion(e).ToTransferPropertiesRegionOutputWithContext(ctx).ToTransferPropertiesRegionPtrOutputWithContext(ctx)
}

func (e TransferPropertiesRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferPropertiesRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferPropertiesRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransferPropertiesRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransferPropertiesRegionOutput struct{ *pulumi.OutputState }

func (TransferPropertiesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferPropertiesRegion)(nil)).Elem()
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionOutput() TransferPropertiesRegionOutput {
	return o
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionOutputWithContext(ctx context.Context) TransferPropertiesRegionOutput {
	return o
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return o.ToTransferPropertiesRegionPtrOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferPropertiesRegion) *TransferPropertiesRegion {
		return &v
	}).(TransferPropertiesRegionPtrOutput)
}

func (o TransferPropertiesRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferPropertiesRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransferPropertiesRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferPropertiesRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransferPropertiesRegionPtrOutput struct{ *pulumi.OutputState }

func (TransferPropertiesRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferPropertiesRegion)(nil)).Elem()
}

func (o TransferPropertiesRegionPtrOutput) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return o
}

func (o TransferPropertiesRegionPtrOutput) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return o
}

func (o TransferPropertiesRegionPtrOutput) Elem() TransferPropertiesRegionOutput {
	return o.ApplyT(func(v *TransferPropertiesRegion) TransferPropertiesRegion {
		if v != nil {
			return *v
		}
		var ret TransferPropertiesRegion
		return ret
	}).(TransferPropertiesRegionOutput)
}

func (o TransferPropertiesRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransferPropertiesRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransferPropertiesRegionInput is an input type that accepts values of the TransferPropertiesRegion enum
// A concrete instance of `TransferPropertiesRegionInput` can be one of the following:
//
//	TransferPropertiesRegionAms1
//	TransferPropertiesRegionAms2
//	TransferPropertiesRegionAms3
//	TransferPropertiesRegionBlr1
//	TransferPropertiesRegionFra1
//	TransferPropertiesRegionLon1
//	TransferPropertiesRegionNyc1
//	TransferPropertiesRegionNyc2
//	TransferPropertiesRegionNyc3
//	TransferPropertiesRegionSfo1
//	TransferPropertiesRegionSfo2
//	TransferPropertiesRegionSfo3
//	TransferPropertiesRegionSgp1
//	TransferPropertiesRegionTor1
type TransferPropertiesRegionInput interface {
	pulumi.Input

	ToTransferPropertiesRegionOutput() TransferPropertiesRegionOutput
	ToTransferPropertiesRegionOutputWithContext(context.Context) TransferPropertiesRegionOutput
}

var transferPropertiesRegionPtrType = reflect.TypeOf((**TransferPropertiesRegion)(nil)).Elem()

type TransferPropertiesRegionPtrInput interface {
	pulumi.Input

	ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput
	ToTransferPropertiesRegionPtrOutputWithContext(context.Context) TransferPropertiesRegionPtrOutput
}

type transferPropertiesRegionPtr string

func TransferPropertiesRegionPtr(v string) TransferPropertiesRegionPtrInput {
	return (*transferPropertiesRegionPtr)(&v)
}

func (*transferPropertiesRegionPtr) ElementType() reflect.Type {
	return transferPropertiesRegionPtrType
}

func (in *transferPropertiesRegionPtr) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return pulumi.ToOutput(in).(TransferPropertiesRegionPtrOutput)
}

func (in *transferPropertiesRegionPtr) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransferPropertiesRegionPtrOutput)
}

// The action to be taken on the image. Can be either `convert` or `transfer`.
type Type string

const (
	TypeConvert  = Type("convert")
	TypeTransfer = Type("transfer")
)

func (Type) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (e Type) ToTypeOutput() TypeOutput {
	return pulumi.ToOutput(e).(TypeOutput)
}

func (e Type) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TypeOutput)
}

func (e Type) ToTypePtrOutput() TypePtrOutput {
	return e.ToTypePtrOutputWithContext(context.Background())
}

func (e Type) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return Type(e).ToTypeOutputWithContext(ctx).ToTypePtrOutputWithContext(ctx)
}

func (e Type) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e Type) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e Type) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TypeOutput struct{ *pulumi.OutputState }

func (TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Type)(nil)).Elem()
}

func (o TypeOutput) ToTypeOutput() TypeOutput {
	return o
}

func (o TypeOutput) ToTypeOutputWithContext(ctx context.Context) TypeOutput {
	return o
}

func (o TypeOutput) ToTypePtrOutput() TypePtrOutput {
	return o.ToTypePtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Type) *Type {
		return &v
	}).(TypePtrOutput)
}

func (o TypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e Type) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TypePtrOutput struct{ *pulumi.OutputState }

func (TypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Type)(nil)).Elem()
}

func (o TypePtrOutput) ToTypePtrOutput() TypePtrOutput {
	return o
}

func (o TypePtrOutput) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return o
}

func (o TypePtrOutput) Elem() TypeOutput {
	return o.ApplyT(func(v *Type) Type {
		if v != nil {
			return *v
		}
		var ret Type
		return ret
	}).(TypeOutput)
}

func (o TypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *Type) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TypeInput is an input type that accepts values of the Type enum
// A concrete instance of `TypeInput` can be one of the following:
//
//	TypeConvert
//	TypeTransfer
type TypeInput interface {
	pulumi.Input

	ToTypeOutput() TypeOutput
	ToTypeOutputWithContext(context.Context) TypeOutput
}

var typePtrType = reflect.TypeOf((**Type)(nil)).Elem()

type TypePtrInput interface {
	pulumi.Input

	ToTypePtrOutput() TypePtrOutput
	ToTypePtrOutputWithContext(context.Context) TypePtrOutput
}

type typePtr string

func TypePtr(v string) TypePtrInput {
	return (*typePtr)(&v)
}

func (*typePtr) ElementType() reflect.Type {
	return typePtrType
}

func (in *typePtr) ToTypePtrOutput() TypePtrOutput {
	return pulumi.ToOutput(in).(TypePtrOutput)
}

func (in *typePtr) ToTypePtrOutputWithContext(ctx context.Context) TypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageActionBaseTypeInput)(nil)).Elem(), ImageActionBaseType("convert"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageActionBaseTypePtrInput)(nil)).Elem(), ImageActionBaseType("convert"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateDistributionInput)(nil)).Elem(), ImageUpdateDistribution("Arch Linux"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImageUpdateDistributionPtrInput)(nil)).Elem(), ImageUpdateDistribution("Arch Linux"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesCustomPropertiesRegionInput)(nil)).Elem(), ImagesCustomPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesCustomPropertiesRegionPtrInput)(nil)).Elem(), ImagesCustomPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransferPropertiesRegionInput)(nil)).Elem(), TransferPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransferPropertiesRegionPtrInput)(nil)).Elem(), TransferPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*TypeInput)(nil)).Elem(), Type("convert"))
	pulumi.RegisterInputType(reflect.TypeOf((*TypePtrInput)(nil)).Elem(), Type("convert"))
	pulumi.RegisterOutputType(ActionStatusOutput{})
	pulumi.RegisterOutputType(ActionStatusPtrOutput{})
	pulumi.RegisterOutputType(ImageActionBaseTypeOutput{})
	pulumi.RegisterOutputType(ImageActionBaseTypePtrOutput{})
	pulumi.RegisterOutputType(ImageDistributionOutput{})
	pulumi.RegisterOutputType(ImageDistributionPtrOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemPtrOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemArrayOutput{})
	pulumi.RegisterOutputType(ImageStatusOutput{})
	pulumi.RegisterOutputType(ImageStatusPtrOutput{})
	pulumi.RegisterOutputType(ImageTypeOutput{})
	pulumi.RegisterOutputType(ImageTypePtrOutput{})
	pulumi.RegisterOutputType(ImageUpdateDistributionOutput{})
	pulumi.RegisterOutputType(ImageUpdateDistributionPtrOutput{})
	pulumi.RegisterOutputType(ImagesCustomPropertiesRegionOutput{})
	pulumi.RegisterOutputType(ImagesCustomPropertiesRegionPtrOutput{})
	pulumi.RegisterOutputType(StatusOutput{})
	pulumi.RegisterOutputType(StatusPtrOutput{})
	pulumi.RegisterOutputType(TransferPropertiesRegionOutput{})
	pulumi.RegisterOutputType(TransferPropertiesRegionPtrOutput{})
	pulumi.RegisterOutputType(TypeOutput{})
	pulumi.RegisterOutputType(TypePtrOutput{})
}
