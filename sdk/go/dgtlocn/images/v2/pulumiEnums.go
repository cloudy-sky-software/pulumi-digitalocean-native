// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current status of the action. This can be "in-progress", "completed", or "errored".
type ActionStatus string

const (
	ActionStatusInProgress = ActionStatus("in-progress")
	ActionStatusCompleted  = ActionStatus("completed")
	ActionStatusErrored    = ActionStatus("errored")
)

type ActionStatusOutput struct{ *pulumi.OutputState }

func (ActionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionStatus)(nil)).Elem()
}

func (o ActionStatusOutput) ToActionStatusOutput() ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusOutputWithContext(ctx context.Context) ActionStatusOutput {
	return o
}

func (o ActionStatusOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o.ToActionStatusPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionStatus) *ActionStatus {
		return &v
	}).(ActionStatusPtrOutput)
}

func (o ActionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ActionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ActionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ActionStatusPtrOutput struct{ *pulumi.OutputState }

func (ActionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionStatus)(nil)).Elem()
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutput() ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) ToActionStatusPtrOutputWithContext(ctx context.Context) ActionStatusPtrOutput {
	return o
}

func (o ActionStatusPtrOutput) Elem() ActionStatusOutput {
	return o.ApplyT(func(v *ActionStatus) ActionStatus {
		if v != nil {
			return *v
		}
		var ret ActionStatus
		return ret
	}).(ActionStatusOutput)
}

func (o ActionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ActionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ActionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The current status of the action. This can be "in-progress", "completed", or "errored".
type ConvertStatus string

const (
	ConvertStatusInProgress = ConvertStatus("in-progress")
	ConvertStatusCompleted  = ConvertStatus("completed")
	ConvertStatusErrored    = ConvertStatus("errored")
)

type ConvertStatusOutput struct{ *pulumi.OutputState }

func (ConvertStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConvertStatus)(nil)).Elem()
}

func (o ConvertStatusOutput) ToConvertStatusOutput() ConvertStatusOutput {
	return o
}

func (o ConvertStatusOutput) ToConvertStatusOutputWithContext(ctx context.Context) ConvertStatusOutput {
	return o
}

func (o ConvertStatusOutput) ToConvertStatusPtrOutput() ConvertStatusPtrOutput {
	return o.ToConvertStatusPtrOutputWithContext(context.Background())
}

func (o ConvertStatusOutput) ToConvertStatusPtrOutputWithContext(ctx context.Context) ConvertStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConvertStatus) *ConvertStatus {
		return &v
	}).(ConvertStatusPtrOutput)
}

func (o ConvertStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConvertStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConvertStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConvertStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConvertStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConvertStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConvertStatusPtrOutput struct{ *pulumi.OutputState }

func (ConvertStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConvertStatus)(nil)).Elem()
}

func (o ConvertStatusPtrOutput) ToConvertStatusPtrOutput() ConvertStatusPtrOutput {
	return o
}

func (o ConvertStatusPtrOutput) ToConvertStatusPtrOutputWithContext(ctx context.Context) ConvertStatusPtrOutput {
	return o
}

func (o ConvertStatusPtrOutput) Elem() ConvertStatusOutput {
	return o.ApplyT(func(v *ConvertStatus) ConvertStatus {
		if v != nil {
			return *v
		}
		var ret ConvertStatus
		return ret
	}).(ConvertStatusOutput)
}

func (o ConvertStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConvertStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConvertStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The action to be taken on the image. Can be either `convert` or `transfer`.
type ConvertType string

const (
	ConvertTypeConvert  = ConvertType("convert")
	ConvertTypeTransfer = ConvertType("transfer")
)

func (ConvertType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConvertType)(nil)).Elem()
}

func (e ConvertType) ToConvertTypeOutput() ConvertTypeOutput {
	return pulumi.ToOutput(e).(ConvertTypeOutput)
}

func (e ConvertType) ToConvertTypeOutputWithContext(ctx context.Context) ConvertTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConvertTypeOutput)
}

func (e ConvertType) ToConvertTypePtrOutput() ConvertTypePtrOutput {
	return e.ToConvertTypePtrOutputWithContext(context.Background())
}

func (e ConvertType) ToConvertTypePtrOutputWithContext(ctx context.Context) ConvertTypePtrOutput {
	return ConvertType(e).ToConvertTypeOutputWithContext(ctx).ToConvertTypePtrOutputWithContext(ctx)
}

func (e ConvertType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConvertType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConvertType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConvertType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConvertTypeOutput struct{ *pulumi.OutputState }

func (ConvertTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConvertType)(nil)).Elem()
}

func (o ConvertTypeOutput) ToConvertTypeOutput() ConvertTypeOutput {
	return o
}

func (o ConvertTypeOutput) ToConvertTypeOutputWithContext(ctx context.Context) ConvertTypeOutput {
	return o
}

func (o ConvertTypeOutput) ToConvertTypePtrOutput() ConvertTypePtrOutput {
	return o.ToConvertTypePtrOutputWithContext(context.Background())
}

func (o ConvertTypeOutput) ToConvertTypePtrOutputWithContext(ctx context.Context) ConvertTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConvertType) *ConvertType {
		return &v
	}).(ConvertTypePtrOutput)
}

func (o ConvertTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConvertTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConvertType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConvertTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConvertTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConvertType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConvertTypePtrOutput struct{ *pulumi.OutputState }

func (ConvertTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConvertType)(nil)).Elem()
}

func (o ConvertTypePtrOutput) ToConvertTypePtrOutput() ConvertTypePtrOutput {
	return o
}

func (o ConvertTypePtrOutput) ToConvertTypePtrOutputWithContext(ctx context.Context) ConvertTypePtrOutput {
	return o
}

func (o ConvertTypePtrOutput) Elem() ConvertTypeOutput {
	return o.ApplyT(func(v *ConvertType) ConvertType {
		if v != nil {
			return *v
		}
		var ret ConvertType
		return ret
	}).(ConvertTypeOutput)
}

func (o ConvertTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConvertTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConvertType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConvertTypeInput is an input type that accepts values of the ConvertType enum
// A concrete instance of `ConvertTypeInput` can be one of the following:
//
//	ConvertTypeConvert
//	ConvertTypeTransfer
type ConvertTypeInput interface {
	pulumi.Input

	ToConvertTypeOutput() ConvertTypeOutput
	ToConvertTypeOutputWithContext(context.Context) ConvertTypeOutput
}

var convertTypePtrType = reflect.TypeOf((**ConvertType)(nil)).Elem()

type ConvertTypePtrInput interface {
	pulumi.Input

	ToConvertTypePtrOutput() ConvertTypePtrOutput
	ToConvertTypePtrOutputWithContext(context.Context) ConvertTypePtrOutput
}

type convertTypePtr string

func ConvertTypePtr(v string) ConvertTypePtrInput {
	return (*convertTypePtr)(&v)
}

func (*convertTypePtr) ElementType() reflect.Type {
	return convertTypePtrType
}

func (in *convertTypePtr) ToConvertTypePtrOutput() ConvertTypePtrOutput {
	return pulumi.ToOutput(in).(ConvertTypePtrOutput)
}

func (in *convertTypePtr) ToConvertTypePtrOutputWithContext(ctx context.Context) ConvertTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConvertTypePtrOutput)
}

// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
type ImageDistribution string

const (
	ImageDistributionArchLinux    = ImageDistribution("Arch Linux")
	ImageDistributionCentOS       = ImageDistribution("CentOS")
	ImageDistributionCoreOS       = ImageDistribution("CoreOS")
	ImageDistributionDebian       = ImageDistribution("Debian")
	ImageDistributionFedora       = ImageDistribution("Fedora")
	ImageDistributionFedoraAtomic = ImageDistribution("Fedora Atomic")
	ImageDistributionFreeBSD      = ImageDistribution("FreeBSD")
	ImageDistributionGentoo       = ImageDistribution("Gentoo")
	ImageDistributionOpenSUSE     = ImageDistribution("openSUSE")
	ImageDistributionRancherOS    = ImageDistribution("RancherOS")
	ImageDistributionRockyLinux   = ImageDistribution("Rocky Linux")
	ImageDistributionUbuntu       = ImageDistribution("Ubuntu")
	ImageDistributionUnknown      = ImageDistribution("Unknown")
)

type ImageDistributionOutput struct{ *pulumi.OutputState }

func (ImageDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageDistribution)(nil)).Elem()
}

func (o ImageDistributionOutput) ToImageDistributionOutput() ImageDistributionOutput {
	return o
}

func (o ImageDistributionOutput) ToImageDistributionOutputWithContext(ctx context.Context) ImageDistributionOutput {
	return o
}

func (o ImageDistributionOutput) ToImageDistributionPtrOutput() ImageDistributionPtrOutput {
	return o.ToImageDistributionPtrOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToImageDistributionPtrOutputWithContext(ctx context.Context) ImageDistributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageDistribution) *ImageDistribution {
		return &v
	}).(ImageDistributionPtrOutput)
}

func (o ImageDistributionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageDistribution) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageDistributionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageDistributionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageDistribution) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageDistributionPtrOutput struct{ *pulumi.OutputState }

func (ImageDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageDistribution)(nil)).Elem()
}

func (o ImageDistributionPtrOutput) ToImageDistributionPtrOutput() ImageDistributionPtrOutput {
	return o
}

func (o ImageDistributionPtrOutput) ToImageDistributionPtrOutputWithContext(ctx context.Context) ImageDistributionPtrOutput {
	return o
}

func (o ImageDistributionPtrOutput) Elem() ImageDistributionOutput {
	return o.ApplyT(func(v *ImageDistribution) ImageDistribution {
		if v != nil {
			return *v
		}
		var ret ImageDistribution
		return ret
	}).(ImageDistributionOutput)
}

func (o ImageDistributionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageDistributionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageDistribution) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type ImageRegionsItem string

const (
	ImageRegionsItemAms1 = ImageRegionsItem("ams1")
	ImageRegionsItemAms2 = ImageRegionsItem("ams2")
	ImageRegionsItemAms3 = ImageRegionsItem("ams3")
	ImageRegionsItemBlr1 = ImageRegionsItem("blr1")
	ImageRegionsItemFra1 = ImageRegionsItem("fra1")
	ImageRegionsItemLon1 = ImageRegionsItem("lon1")
	ImageRegionsItemNyc1 = ImageRegionsItem("nyc1")
	ImageRegionsItemNyc2 = ImageRegionsItem("nyc2")
	ImageRegionsItemNyc3 = ImageRegionsItem("nyc3")
	ImageRegionsItemSfo1 = ImageRegionsItem("sfo1")
	ImageRegionsItemSfo2 = ImageRegionsItem("sfo2")
	ImageRegionsItemSfo3 = ImageRegionsItem("sfo3")
	ImageRegionsItemSgp1 = ImageRegionsItem("sgp1")
	ImageRegionsItemTor1 = ImageRegionsItem("tor1")
)

type ImageRegionsItemOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemOutput) ToImageRegionsItemOutput() ImageRegionsItemOutput {
	return o
}

func (o ImageRegionsItemOutput) ToImageRegionsItemOutputWithContext(ctx context.Context) ImageRegionsItemOutput {
	return o
}

func (o ImageRegionsItemOutput) ToImageRegionsItemPtrOutput() ImageRegionsItemPtrOutput {
	return o.ToImageRegionsItemPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToImageRegionsItemPtrOutputWithContext(ctx context.Context) ImageRegionsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageRegionsItem) *ImageRegionsItem {
		return &v
	}).(ImageRegionsItemPtrOutput)
}

func (o ImageRegionsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRegionsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageRegionsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageRegionsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRegionsItemPtrOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemPtrOutput) ToImageRegionsItemPtrOutput() ImageRegionsItemPtrOutput {
	return o
}

func (o ImageRegionsItemPtrOutput) ToImageRegionsItemPtrOutputWithContext(ctx context.Context) ImageRegionsItemPtrOutput {
	return o
}

func (o ImageRegionsItemPtrOutput) Elem() ImageRegionsItemOutput {
	return o.ApplyT(func(v *ImageRegionsItem) ImageRegionsItem {
		if v != nil {
			return *v
		}
		var ret ImageRegionsItem
		return ret
	}).(ImageRegionsItemOutput)
}

func (o ImageRegionsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageRegionsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageRegionsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageRegionsItemArrayOutput struct{ *pulumi.OutputState }

func (ImageRegionsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ImageRegionsItem)(nil)).Elem()
}

func (o ImageRegionsItemArrayOutput) ToImageRegionsItemArrayOutput() ImageRegionsItemArrayOutput {
	return o
}

func (o ImageRegionsItemArrayOutput) ToImageRegionsItemArrayOutputWithContext(ctx context.Context) ImageRegionsItemArrayOutput {
	return o
}

func (o ImageRegionsItemArrayOutput) Index(i pulumi.IntInput) ImageRegionsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ImageRegionsItem {
		return vs[0].([]ImageRegionsItem)[vs[1].(int)]
	}).(ImageRegionsItemOutput)
}

// A status string indicating the state of a custom image. This may be `NEW`,
//
//	`available`, `pending`, `deleted`, or `retired`.
type ImageStatus string

const (
	ImageStatusNew       = ImageStatus("NEW")
	ImageStatusAvailable = ImageStatus("available")
	ImageStatusPending   = ImageStatus("pending")
	ImageStatusDeleted   = ImageStatus("deleted")
	ImageStatusRetired   = ImageStatus("retired")
)

type ImageStatusOutput struct{ *pulumi.OutputState }

func (ImageStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageStatus)(nil)).Elem()
}

func (o ImageStatusOutput) ToImageStatusOutput() ImageStatusOutput {
	return o
}

func (o ImageStatusOutput) ToImageStatusOutputWithContext(ctx context.Context) ImageStatusOutput {
	return o
}

func (o ImageStatusOutput) ToImageStatusPtrOutput() ImageStatusPtrOutput {
	return o.ToImageStatusPtrOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToImageStatusPtrOutputWithContext(ctx context.Context) ImageStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageStatus) *ImageStatus {
		return &v
	}).(ImageStatusPtrOutput)
}

func (o ImageStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageStatusPtrOutput struct{ *pulumi.OutputState }

func (ImageStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageStatus)(nil)).Elem()
}

func (o ImageStatusPtrOutput) ToImageStatusPtrOutput() ImageStatusPtrOutput {
	return o
}

func (o ImageStatusPtrOutput) ToImageStatusPtrOutputWithContext(ctx context.Context) ImageStatusPtrOutput {
	return o
}

func (o ImageStatusPtrOutput) Elem() ImageStatusOutput {
	return o.ApplyT(func(v *ImageStatus) ImageStatus {
		if v != nil {
			return *v
		}
		var ret ImageStatus
		return ret
	}).(ImageStatusOutput)
}

func (o ImageStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Describes the kind of image. It may be one of `base`, `snapshot`, `backup`, `custom`, or `admin`. Respectively, this specifies whether an image is a DigitalOcean base OS image, user-generated Droplet snapshot, automatically created Droplet backup, user-provided virtual machine image, or an image used for DigitalOcean managed resources (e.g. DOKS worker nodes).
type ImageType string

const (
	ImageTypeBase     = ImageType("base")
	ImageTypeSnapshot = ImageType("snapshot")
	ImageTypeBackup   = ImageType("backup")
	ImageTypeCustom   = ImageType("custom")
	ImageTypeAdmin    = ImageType("admin")
)

type ImageTypeOutput struct{ *pulumi.OutputState }

func (ImageTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImageType)(nil)).Elem()
}

func (o ImageTypeOutput) ToImageTypeOutput() ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypeOutputWithContext(ctx context.Context) ImageTypeOutput {
	return o
}

func (o ImageTypeOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o.ToImageTypePtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImageType) *ImageType {
		return &v
	}).(ImageTypePtrOutput)
}

func (o ImageTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImageTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImageType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImageTypePtrOutput struct{ *pulumi.OutputState }

func (ImageTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageType)(nil)).Elem()
}

func (o ImageTypePtrOutput) ToImageTypePtrOutput() ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) ToImageTypePtrOutputWithContext(ctx context.Context) ImageTypePtrOutput {
	return o
}

func (o ImageTypePtrOutput) Elem() ImageTypeOutput {
	return o.ApplyT(func(v *ImageType) ImageType {
		if v != nil {
			return *v
		}
		var ret ImageType
		return ret
	}).(ImageTypeOutput)
}

func (o ImageTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImageTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImageType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
type ImagesCustomImageUpdateDistribution string

const (
	ImagesCustomImageUpdateDistributionArchLinux    = ImagesCustomImageUpdateDistribution("Arch Linux")
	ImagesCustomImageUpdateDistributionCentOS       = ImagesCustomImageUpdateDistribution("CentOS")
	ImagesCustomImageUpdateDistributionCoreOS       = ImagesCustomImageUpdateDistribution("CoreOS")
	ImagesCustomImageUpdateDistributionDebian       = ImagesCustomImageUpdateDistribution("Debian")
	ImagesCustomImageUpdateDistributionFedora       = ImagesCustomImageUpdateDistribution("Fedora")
	ImagesCustomImageUpdateDistributionFedoraAtomic = ImagesCustomImageUpdateDistribution("Fedora Atomic")
	ImagesCustomImageUpdateDistributionFreeBSD      = ImagesCustomImageUpdateDistribution("FreeBSD")
	ImagesCustomImageUpdateDistributionGentoo       = ImagesCustomImageUpdateDistribution("Gentoo")
	ImagesCustomImageUpdateDistributionOpenSUSE     = ImagesCustomImageUpdateDistribution("openSUSE")
	ImagesCustomImageUpdateDistributionRancherOS    = ImagesCustomImageUpdateDistribution("RancherOS")
	ImagesCustomImageUpdateDistributionRockyLinux   = ImagesCustomImageUpdateDistribution("Rocky Linux")
	ImagesCustomImageUpdateDistributionUbuntu       = ImagesCustomImageUpdateDistribution("Ubuntu")
	ImagesCustomImageUpdateDistributionUnknown      = ImagesCustomImageUpdateDistribution("Unknown")
)

func (ImagesCustomImageUpdateDistribution) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesCustomImageUpdateDistribution)(nil)).Elem()
}

func (e ImagesCustomImageUpdateDistribution) ToImagesCustomImageUpdateDistributionOutput() ImagesCustomImageUpdateDistributionOutput {
	return pulumi.ToOutput(e).(ImagesCustomImageUpdateDistributionOutput)
}

func (e ImagesCustomImageUpdateDistribution) ToImagesCustomImageUpdateDistributionOutputWithContext(ctx context.Context) ImagesCustomImageUpdateDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImagesCustomImageUpdateDistributionOutput)
}

func (e ImagesCustomImageUpdateDistribution) ToImagesCustomImageUpdateDistributionPtrOutput() ImagesCustomImageUpdateDistributionPtrOutput {
	return e.ToImagesCustomImageUpdateDistributionPtrOutputWithContext(context.Background())
}

func (e ImagesCustomImageUpdateDistribution) ToImagesCustomImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImagesCustomImageUpdateDistributionPtrOutput {
	return ImagesCustomImageUpdateDistribution(e).ToImagesCustomImageUpdateDistributionOutputWithContext(ctx).ToImagesCustomImageUpdateDistributionPtrOutputWithContext(ctx)
}

func (e ImagesCustomImageUpdateDistribution) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagesCustomImageUpdateDistribution) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagesCustomImageUpdateDistribution) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImagesCustomImageUpdateDistribution) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImagesCustomImageUpdateDistributionOutput struct{ *pulumi.OutputState }

func (ImagesCustomImageUpdateDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesCustomImageUpdateDistribution)(nil)).Elem()
}

func (o ImagesCustomImageUpdateDistributionOutput) ToImagesCustomImageUpdateDistributionOutput() ImagesCustomImageUpdateDistributionOutput {
	return o
}

func (o ImagesCustomImageUpdateDistributionOutput) ToImagesCustomImageUpdateDistributionOutputWithContext(ctx context.Context) ImagesCustomImageUpdateDistributionOutput {
	return o
}

func (o ImagesCustomImageUpdateDistributionOutput) ToImagesCustomImageUpdateDistributionPtrOutput() ImagesCustomImageUpdateDistributionPtrOutput {
	return o.ToImagesCustomImageUpdateDistributionPtrOutputWithContext(context.Background())
}

func (o ImagesCustomImageUpdateDistributionOutput) ToImagesCustomImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImagesCustomImageUpdateDistributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagesCustomImageUpdateDistribution) *ImagesCustomImageUpdateDistribution {
		return &v
	}).(ImagesCustomImageUpdateDistributionPtrOutput)
}

func (o ImagesCustomImageUpdateDistributionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImagesCustomImageUpdateDistributionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagesCustomImageUpdateDistribution) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImagesCustomImageUpdateDistributionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagesCustomImageUpdateDistributionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagesCustomImageUpdateDistribution) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImagesCustomImageUpdateDistributionPtrOutput struct{ *pulumi.OutputState }

func (ImagesCustomImageUpdateDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagesCustomImageUpdateDistribution)(nil)).Elem()
}

func (o ImagesCustomImageUpdateDistributionPtrOutput) ToImagesCustomImageUpdateDistributionPtrOutput() ImagesCustomImageUpdateDistributionPtrOutput {
	return o
}

func (o ImagesCustomImageUpdateDistributionPtrOutput) ToImagesCustomImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImagesCustomImageUpdateDistributionPtrOutput {
	return o
}

func (o ImagesCustomImageUpdateDistributionPtrOutput) Elem() ImagesCustomImageUpdateDistributionOutput {
	return o.ApplyT(func(v *ImagesCustomImageUpdateDistribution) ImagesCustomImageUpdateDistribution {
		if v != nil {
			return *v
		}
		var ret ImagesCustomImageUpdateDistribution
		return ret
	}).(ImagesCustomImageUpdateDistributionOutput)
}

func (o ImagesCustomImageUpdateDistributionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagesCustomImageUpdateDistributionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImagesCustomImageUpdateDistribution) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImagesCustomImageUpdateDistributionInput is an input type that accepts values of the ImagesCustomImageUpdateDistribution enum
// A concrete instance of `ImagesCustomImageUpdateDistributionInput` can be one of the following:
//
//	ImagesCustomImageUpdateDistributionArchLinux
//	ImagesCustomImageUpdateDistributionCentOS
//	ImagesCustomImageUpdateDistributionCoreOS
//	ImagesCustomImageUpdateDistributionDebian
//	ImagesCustomImageUpdateDistributionFedora
//	ImagesCustomImageUpdateDistributionFedoraAtomic
//	ImagesCustomImageUpdateDistributionFreeBSD
//	ImagesCustomImageUpdateDistributionGentoo
//	ImagesCustomImageUpdateDistributionOpenSUSE
//	ImagesCustomImageUpdateDistributionRancherOS
//	ImagesCustomImageUpdateDistributionRockyLinux
//	ImagesCustomImageUpdateDistributionUbuntu
//	ImagesCustomImageUpdateDistributionUnknown
type ImagesCustomImageUpdateDistributionInput interface {
	pulumi.Input

	ToImagesCustomImageUpdateDistributionOutput() ImagesCustomImageUpdateDistributionOutput
	ToImagesCustomImageUpdateDistributionOutputWithContext(context.Context) ImagesCustomImageUpdateDistributionOutput
}

var imagesCustomImageUpdateDistributionPtrType = reflect.TypeOf((**ImagesCustomImageUpdateDistribution)(nil)).Elem()

type ImagesCustomImageUpdateDistributionPtrInput interface {
	pulumi.Input

	ToImagesCustomImageUpdateDistributionPtrOutput() ImagesCustomImageUpdateDistributionPtrOutput
	ToImagesCustomImageUpdateDistributionPtrOutputWithContext(context.Context) ImagesCustomImageUpdateDistributionPtrOutput
}

type imagesCustomImageUpdateDistributionPtr string

func ImagesCustomImageUpdateDistributionPtr(v string) ImagesCustomImageUpdateDistributionPtrInput {
	return (*imagesCustomImageUpdateDistributionPtr)(&v)
}

func (*imagesCustomImageUpdateDistributionPtr) ElementType() reflect.Type {
	return imagesCustomImageUpdateDistributionPtrType
}

func (in *imagesCustomImageUpdateDistributionPtr) ToImagesCustomImageUpdateDistributionPtrOutput() ImagesCustomImageUpdateDistributionPtrOutput {
	return pulumi.ToOutput(in).(ImagesCustomImageUpdateDistributionPtrOutput)
}

func (in *imagesCustomImageUpdateDistributionPtr) ToImagesCustomImageUpdateDistributionPtrOutputWithContext(ctx context.Context) ImagesCustomImageUpdateDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImagesCustomImageUpdateDistributionPtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type ImagesCustomPropertiesRegion string

const (
	ImagesCustomPropertiesRegionAms1 = ImagesCustomPropertiesRegion("ams1")
	ImagesCustomPropertiesRegionAms2 = ImagesCustomPropertiesRegion("ams2")
	ImagesCustomPropertiesRegionAms3 = ImagesCustomPropertiesRegion("ams3")
	ImagesCustomPropertiesRegionBlr1 = ImagesCustomPropertiesRegion("blr1")
	ImagesCustomPropertiesRegionFra1 = ImagesCustomPropertiesRegion("fra1")
	ImagesCustomPropertiesRegionLon1 = ImagesCustomPropertiesRegion("lon1")
	ImagesCustomPropertiesRegionNyc1 = ImagesCustomPropertiesRegion("nyc1")
	ImagesCustomPropertiesRegionNyc2 = ImagesCustomPropertiesRegion("nyc2")
	ImagesCustomPropertiesRegionNyc3 = ImagesCustomPropertiesRegion("nyc3")
	ImagesCustomPropertiesRegionSfo1 = ImagesCustomPropertiesRegion("sfo1")
	ImagesCustomPropertiesRegionSfo2 = ImagesCustomPropertiesRegion("sfo2")
	ImagesCustomPropertiesRegionSfo3 = ImagesCustomPropertiesRegion("sfo3")
	ImagesCustomPropertiesRegionSgp1 = ImagesCustomPropertiesRegion("sgp1")
	ImagesCustomPropertiesRegionTor1 = ImagesCustomPropertiesRegion("tor1")
)

func (ImagesCustomPropertiesRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesCustomPropertiesRegion)(nil)).Elem()
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionOutput() ImagesCustomPropertiesRegionOutput {
	return pulumi.ToOutput(e).(ImagesCustomPropertiesRegionOutput)
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ImagesCustomPropertiesRegionOutput)
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return e.ToImagesCustomPropertiesRegionPtrOutputWithContext(context.Background())
}

func (e ImagesCustomPropertiesRegion) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return ImagesCustomPropertiesRegion(e).ToImagesCustomPropertiesRegionOutputWithContext(ctx).ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx)
}

func (e ImagesCustomPropertiesRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagesCustomPropertiesRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ImagesCustomPropertiesRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ImagesCustomPropertiesRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ImagesCustomPropertiesRegionOutput struct{ *pulumi.OutputState }

func (ImagesCustomPropertiesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ImagesCustomPropertiesRegion)(nil)).Elem()
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionOutput() ImagesCustomPropertiesRegionOutput {
	return o
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionOutput {
	return o
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return o.ToImagesCustomPropertiesRegionPtrOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionOutput) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ImagesCustomPropertiesRegion) *ImagesCustomPropertiesRegion {
		return &v
	}).(ImagesCustomPropertiesRegionPtrOutput)
}

func (o ImagesCustomPropertiesRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagesCustomPropertiesRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ImagesCustomPropertiesRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ImagesCustomPropertiesRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ImagesCustomPropertiesRegionPtrOutput struct{ *pulumi.OutputState }

func (ImagesCustomPropertiesRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagesCustomPropertiesRegion)(nil)).Elem()
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return o
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return o
}

func (o ImagesCustomPropertiesRegionPtrOutput) Elem() ImagesCustomPropertiesRegionOutput {
	return o.ApplyT(func(v *ImagesCustomPropertiesRegion) ImagesCustomPropertiesRegion {
		if v != nil {
			return *v
		}
		var ret ImagesCustomPropertiesRegion
		return ret
	}).(ImagesCustomPropertiesRegionOutput)
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ImagesCustomPropertiesRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ImagesCustomPropertiesRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ImagesCustomPropertiesRegionInput is an input type that accepts values of the ImagesCustomPropertiesRegion enum
// A concrete instance of `ImagesCustomPropertiesRegionInput` can be one of the following:
//
//	ImagesCustomPropertiesRegionAms1
//	ImagesCustomPropertiesRegionAms2
//	ImagesCustomPropertiesRegionAms3
//	ImagesCustomPropertiesRegionBlr1
//	ImagesCustomPropertiesRegionFra1
//	ImagesCustomPropertiesRegionLon1
//	ImagesCustomPropertiesRegionNyc1
//	ImagesCustomPropertiesRegionNyc2
//	ImagesCustomPropertiesRegionNyc3
//	ImagesCustomPropertiesRegionSfo1
//	ImagesCustomPropertiesRegionSfo2
//	ImagesCustomPropertiesRegionSfo3
//	ImagesCustomPropertiesRegionSgp1
//	ImagesCustomPropertiesRegionTor1
type ImagesCustomPropertiesRegionInput interface {
	pulumi.Input

	ToImagesCustomPropertiesRegionOutput() ImagesCustomPropertiesRegionOutput
	ToImagesCustomPropertiesRegionOutputWithContext(context.Context) ImagesCustomPropertiesRegionOutput
}

var imagesCustomPropertiesRegionPtrType = reflect.TypeOf((**ImagesCustomPropertiesRegion)(nil)).Elem()

type ImagesCustomPropertiesRegionPtrInput interface {
	pulumi.Input

	ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput
	ToImagesCustomPropertiesRegionPtrOutputWithContext(context.Context) ImagesCustomPropertiesRegionPtrOutput
}

type imagesCustomPropertiesRegionPtr string

func ImagesCustomPropertiesRegionPtr(v string) ImagesCustomPropertiesRegionPtrInput {
	return (*imagesCustomPropertiesRegionPtr)(&v)
}

func (*imagesCustomPropertiesRegionPtr) ElementType() reflect.Type {
	return imagesCustomPropertiesRegionPtrType
}

func (in *imagesCustomPropertiesRegionPtr) ToImagesCustomPropertiesRegionPtrOutput() ImagesCustomPropertiesRegionPtrOutput {
	return pulumi.ToOutput(in).(ImagesCustomPropertiesRegionPtrOutput)
}

func (in *imagesCustomPropertiesRegionPtr) ToImagesCustomPropertiesRegionPtrOutputWithContext(ctx context.Context) ImagesCustomPropertiesRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ImagesCustomPropertiesRegionPtrOutput)
}

// The action to be taken on the image. Can be either `convert` or `transfer`.
type TransferImageActionBaseType string

const (
	TransferImageActionBaseTypeConvert  = TransferImageActionBaseType("convert")
	TransferImageActionBaseTypeTransfer = TransferImageActionBaseType("transfer")
)

func (TransferImageActionBaseType) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferImageActionBaseType)(nil)).Elem()
}

func (e TransferImageActionBaseType) ToTransferImageActionBaseTypeOutput() TransferImageActionBaseTypeOutput {
	return pulumi.ToOutput(e).(TransferImageActionBaseTypeOutput)
}

func (e TransferImageActionBaseType) ToTransferImageActionBaseTypeOutputWithContext(ctx context.Context) TransferImageActionBaseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransferImageActionBaseTypeOutput)
}

func (e TransferImageActionBaseType) ToTransferImageActionBaseTypePtrOutput() TransferImageActionBaseTypePtrOutput {
	return e.ToTransferImageActionBaseTypePtrOutputWithContext(context.Background())
}

func (e TransferImageActionBaseType) ToTransferImageActionBaseTypePtrOutputWithContext(ctx context.Context) TransferImageActionBaseTypePtrOutput {
	return TransferImageActionBaseType(e).ToTransferImageActionBaseTypeOutputWithContext(ctx).ToTransferImageActionBaseTypePtrOutputWithContext(ctx)
}

func (e TransferImageActionBaseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferImageActionBaseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferImageActionBaseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransferImageActionBaseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransferImageActionBaseTypeOutput struct{ *pulumi.OutputState }

func (TransferImageActionBaseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferImageActionBaseType)(nil)).Elem()
}

func (o TransferImageActionBaseTypeOutput) ToTransferImageActionBaseTypeOutput() TransferImageActionBaseTypeOutput {
	return o
}

func (o TransferImageActionBaseTypeOutput) ToTransferImageActionBaseTypeOutputWithContext(ctx context.Context) TransferImageActionBaseTypeOutput {
	return o
}

func (o TransferImageActionBaseTypeOutput) ToTransferImageActionBaseTypePtrOutput() TransferImageActionBaseTypePtrOutput {
	return o.ToTransferImageActionBaseTypePtrOutputWithContext(context.Background())
}

func (o TransferImageActionBaseTypeOutput) ToTransferImageActionBaseTypePtrOutputWithContext(ctx context.Context) TransferImageActionBaseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferImageActionBaseType) *TransferImageActionBaseType {
		return &v
	}).(TransferImageActionBaseTypePtrOutput)
}

func (o TransferImageActionBaseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransferImageActionBaseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferImageActionBaseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransferImageActionBaseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferImageActionBaseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferImageActionBaseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransferImageActionBaseTypePtrOutput struct{ *pulumi.OutputState }

func (TransferImageActionBaseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferImageActionBaseType)(nil)).Elem()
}

func (o TransferImageActionBaseTypePtrOutput) ToTransferImageActionBaseTypePtrOutput() TransferImageActionBaseTypePtrOutput {
	return o
}

func (o TransferImageActionBaseTypePtrOutput) ToTransferImageActionBaseTypePtrOutputWithContext(ctx context.Context) TransferImageActionBaseTypePtrOutput {
	return o
}

func (o TransferImageActionBaseTypePtrOutput) Elem() TransferImageActionBaseTypeOutput {
	return o.ApplyT(func(v *TransferImageActionBaseType) TransferImageActionBaseType {
		if v != nil {
			return *v
		}
		var ret TransferImageActionBaseType
		return ret
	}).(TransferImageActionBaseTypeOutput)
}

func (o TransferImageActionBaseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferImageActionBaseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransferImageActionBaseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransferImageActionBaseTypeInput is an input type that accepts values of the TransferImageActionBaseType enum
// A concrete instance of `TransferImageActionBaseTypeInput` can be one of the following:
//
//	TransferImageActionBaseTypeConvert
//	TransferImageActionBaseTypeTransfer
type TransferImageActionBaseTypeInput interface {
	pulumi.Input

	ToTransferImageActionBaseTypeOutput() TransferImageActionBaseTypeOutput
	ToTransferImageActionBaseTypeOutputWithContext(context.Context) TransferImageActionBaseTypeOutput
}

var transferImageActionBaseTypePtrType = reflect.TypeOf((**TransferImageActionBaseType)(nil)).Elem()

type TransferImageActionBaseTypePtrInput interface {
	pulumi.Input

	ToTransferImageActionBaseTypePtrOutput() TransferImageActionBaseTypePtrOutput
	ToTransferImageActionBaseTypePtrOutputWithContext(context.Context) TransferImageActionBaseTypePtrOutput
}

type transferImageActionBaseTypePtr string

func TransferImageActionBaseTypePtr(v string) TransferImageActionBaseTypePtrInput {
	return (*transferImageActionBaseTypePtr)(&v)
}

func (*transferImageActionBaseTypePtr) ElementType() reflect.Type {
	return transferImageActionBaseTypePtrType
}

func (in *transferImageActionBaseTypePtr) ToTransferImageActionBaseTypePtrOutput() TransferImageActionBaseTypePtrOutput {
	return pulumi.ToOutput(in).(TransferImageActionBaseTypePtrOutput)
}

func (in *transferImageActionBaseTypePtr) ToTransferImageActionBaseTypePtrOutputWithContext(ctx context.Context) TransferImageActionBaseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransferImageActionBaseTypePtrOutput)
}

// The slug identifier for the region where the resource will initially be  available.
type TransferPropertiesRegion string

const (
	TransferPropertiesRegionAms1 = TransferPropertiesRegion("ams1")
	TransferPropertiesRegionAms2 = TransferPropertiesRegion("ams2")
	TransferPropertiesRegionAms3 = TransferPropertiesRegion("ams3")
	TransferPropertiesRegionBlr1 = TransferPropertiesRegion("blr1")
	TransferPropertiesRegionFra1 = TransferPropertiesRegion("fra1")
	TransferPropertiesRegionLon1 = TransferPropertiesRegion("lon1")
	TransferPropertiesRegionNyc1 = TransferPropertiesRegion("nyc1")
	TransferPropertiesRegionNyc2 = TransferPropertiesRegion("nyc2")
	TransferPropertiesRegionNyc3 = TransferPropertiesRegion("nyc3")
	TransferPropertiesRegionSfo1 = TransferPropertiesRegion("sfo1")
	TransferPropertiesRegionSfo2 = TransferPropertiesRegion("sfo2")
	TransferPropertiesRegionSfo3 = TransferPropertiesRegion("sfo3")
	TransferPropertiesRegionSgp1 = TransferPropertiesRegion("sgp1")
	TransferPropertiesRegionTor1 = TransferPropertiesRegion("tor1")
)

func (TransferPropertiesRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferPropertiesRegion)(nil)).Elem()
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionOutput() TransferPropertiesRegionOutput {
	return pulumi.ToOutput(e).(TransferPropertiesRegionOutput)
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionOutputWithContext(ctx context.Context) TransferPropertiesRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TransferPropertiesRegionOutput)
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return e.ToTransferPropertiesRegionPtrOutputWithContext(context.Background())
}

func (e TransferPropertiesRegion) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return TransferPropertiesRegion(e).ToTransferPropertiesRegionOutputWithContext(ctx).ToTransferPropertiesRegionPtrOutputWithContext(ctx)
}

func (e TransferPropertiesRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferPropertiesRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TransferPropertiesRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TransferPropertiesRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TransferPropertiesRegionOutput struct{ *pulumi.OutputState }

func (TransferPropertiesRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferPropertiesRegion)(nil)).Elem()
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionOutput() TransferPropertiesRegionOutput {
	return o
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionOutputWithContext(ctx context.Context) TransferPropertiesRegionOutput {
	return o
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return o.ToTransferPropertiesRegionPtrOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionOutput) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferPropertiesRegion) *TransferPropertiesRegion {
		return &v
	}).(TransferPropertiesRegionPtrOutput)
}

func (o TransferPropertiesRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferPropertiesRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransferPropertiesRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferPropertiesRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransferPropertiesRegionPtrOutput struct{ *pulumi.OutputState }

func (TransferPropertiesRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferPropertiesRegion)(nil)).Elem()
}

func (o TransferPropertiesRegionPtrOutput) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return o
}

func (o TransferPropertiesRegionPtrOutput) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return o
}

func (o TransferPropertiesRegionPtrOutput) Elem() TransferPropertiesRegionOutput {
	return o.ApplyT(func(v *TransferPropertiesRegion) TransferPropertiesRegion {
		if v != nil {
			return *v
		}
		var ret TransferPropertiesRegion
		return ret
	}).(TransferPropertiesRegionOutput)
}

func (o TransferPropertiesRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferPropertiesRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransferPropertiesRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TransferPropertiesRegionInput is an input type that accepts values of the TransferPropertiesRegion enum
// A concrete instance of `TransferPropertiesRegionInput` can be one of the following:
//
//	TransferPropertiesRegionAms1
//	TransferPropertiesRegionAms2
//	TransferPropertiesRegionAms3
//	TransferPropertiesRegionBlr1
//	TransferPropertiesRegionFra1
//	TransferPropertiesRegionLon1
//	TransferPropertiesRegionNyc1
//	TransferPropertiesRegionNyc2
//	TransferPropertiesRegionNyc3
//	TransferPropertiesRegionSfo1
//	TransferPropertiesRegionSfo2
//	TransferPropertiesRegionSfo3
//	TransferPropertiesRegionSgp1
//	TransferPropertiesRegionTor1
type TransferPropertiesRegionInput interface {
	pulumi.Input

	ToTransferPropertiesRegionOutput() TransferPropertiesRegionOutput
	ToTransferPropertiesRegionOutputWithContext(context.Context) TransferPropertiesRegionOutput
}

var transferPropertiesRegionPtrType = reflect.TypeOf((**TransferPropertiesRegion)(nil)).Elem()

type TransferPropertiesRegionPtrInput interface {
	pulumi.Input

	ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput
	ToTransferPropertiesRegionPtrOutputWithContext(context.Context) TransferPropertiesRegionPtrOutput
}

type transferPropertiesRegionPtr string

func TransferPropertiesRegionPtr(v string) TransferPropertiesRegionPtrInput {
	return (*transferPropertiesRegionPtr)(&v)
}

func (*transferPropertiesRegionPtr) ElementType() reflect.Type {
	return transferPropertiesRegionPtrType
}

func (in *transferPropertiesRegionPtr) ToTransferPropertiesRegionPtrOutput() TransferPropertiesRegionPtrOutput {
	return pulumi.ToOutput(in).(TransferPropertiesRegionPtrOutput)
}

func (in *transferPropertiesRegionPtr) ToTransferPropertiesRegionPtrOutputWithContext(ctx context.Context) TransferPropertiesRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TransferPropertiesRegionPtrOutput)
}

// The current status of the action. This can be "in-progress", "completed", or "errored".
type TransferStatus string

const (
	TransferStatusInProgress = TransferStatus("in-progress")
	TransferStatusCompleted  = TransferStatus("completed")
	TransferStatusErrored    = TransferStatus("errored")
)

type TransferStatusOutput struct{ *pulumi.OutputState }

func (TransferStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransferStatus)(nil)).Elem()
}

func (o TransferStatusOutput) ToTransferStatusOutput() TransferStatusOutput {
	return o
}

func (o TransferStatusOutput) ToTransferStatusOutputWithContext(ctx context.Context) TransferStatusOutput {
	return o
}

func (o TransferStatusOutput) ToTransferStatusPtrOutput() TransferStatusPtrOutput {
	return o.ToTransferStatusPtrOutputWithContext(context.Background())
}

func (o TransferStatusOutput) ToTransferStatusPtrOutputWithContext(ctx context.Context) TransferStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransferStatus) *TransferStatus {
		return &v
	}).(TransferStatusPtrOutput)
}

func (o TransferStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TransferStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TransferStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TransferStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TransferStatusPtrOutput struct{ *pulumi.OutputState }

func (TransferStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransferStatus)(nil)).Elem()
}

func (o TransferStatusPtrOutput) ToTransferStatusPtrOutput() TransferStatusPtrOutput {
	return o
}

func (o TransferStatusPtrOutput) ToTransferStatusPtrOutputWithContext(ctx context.Context) TransferStatusPtrOutput {
	return o
}

func (o TransferStatusPtrOutput) Elem() TransferStatusOutput {
	return o.ApplyT(func(v *TransferStatus) TransferStatus {
		if v != nil {
			return *v
		}
		var ret TransferStatus
		return ret
	}).(TransferStatusOutput)
}

func (o TransferStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TransferStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TransferStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConvertTypeInput)(nil)).Elem(), ConvertType("convert"))
	pulumi.RegisterInputType(reflect.TypeOf((*ConvertTypePtrInput)(nil)).Elem(), ConvertType("convert"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesCustomImageUpdateDistributionInput)(nil)).Elem(), ImagesCustomImageUpdateDistribution("Arch Linux"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesCustomImageUpdateDistributionPtrInput)(nil)).Elem(), ImagesCustomImageUpdateDistribution("Arch Linux"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesCustomPropertiesRegionInput)(nil)).Elem(), ImagesCustomPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesCustomPropertiesRegionPtrInput)(nil)).Elem(), ImagesCustomPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransferImageActionBaseTypeInput)(nil)).Elem(), TransferImageActionBaseType("convert"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransferImageActionBaseTypePtrInput)(nil)).Elem(), TransferImageActionBaseType("convert"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransferPropertiesRegionInput)(nil)).Elem(), TransferPropertiesRegion("ams1"))
	pulumi.RegisterInputType(reflect.TypeOf((*TransferPropertiesRegionPtrInput)(nil)).Elem(), TransferPropertiesRegion("ams1"))
	pulumi.RegisterOutputType(ActionStatusOutput{})
	pulumi.RegisterOutputType(ActionStatusPtrOutput{})
	pulumi.RegisterOutputType(ConvertStatusOutput{})
	pulumi.RegisterOutputType(ConvertStatusPtrOutput{})
	pulumi.RegisterOutputType(ConvertTypeOutput{})
	pulumi.RegisterOutputType(ConvertTypePtrOutput{})
	pulumi.RegisterOutputType(ImageDistributionOutput{})
	pulumi.RegisterOutputType(ImageDistributionPtrOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemPtrOutput{})
	pulumi.RegisterOutputType(ImageRegionsItemArrayOutput{})
	pulumi.RegisterOutputType(ImageStatusOutput{})
	pulumi.RegisterOutputType(ImageStatusPtrOutput{})
	pulumi.RegisterOutputType(ImageTypeOutput{})
	pulumi.RegisterOutputType(ImageTypePtrOutput{})
	pulumi.RegisterOutputType(ImagesCustomImageUpdateDistributionOutput{})
	pulumi.RegisterOutputType(ImagesCustomImageUpdateDistributionPtrOutput{})
	pulumi.RegisterOutputType(ImagesCustomPropertiesRegionOutput{})
	pulumi.RegisterOutputType(ImagesCustomPropertiesRegionPtrOutput{})
	pulumi.RegisterOutputType(TransferImageActionBaseTypeOutput{})
	pulumi.RegisterOutputType(TransferImageActionBaseTypePtrOutput{})
	pulumi.RegisterOutputType(TransferPropertiesRegionOutput{})
	pulumi.RegisterOutputType(TransferPropertiesRegionPtrOutput{})
	pulumi.RegisterOutputType(TransferStatusOutput{})
	pulumi.RegisterOutputType(TransferStatusPtrOutput{})
}
