// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ImagesCustom struct {
	pulumi.CustomResourceState

	// An optional free-form text field to describe an image.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
	Distribution ImageUpdateDistributionPtrOutput `pulumi:"distribution"`
	Image        ImagePtrOutput                   `pulumi:"image"`
	// The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
	Name pulumi.StringOutput `pulumi:"name"`
	// The slug identifier for the region where the resource will initially be  available.
	Region ImagesCustomPropertiesRegionOutput `pulumi:"region"`
	// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewImagesCustom registers a new resource with the given unique name, arguments, and options.
func NewImagesCustom(ctx *pulumi.Context,
	name string, args *ImagesCustomArgs, opts ...pulumi.ResourceOption) (*ImagesCustom, error) {
	if args == nil {
		args = &ImagesCustomArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ImagesCustom
	err := ctx.RegisterResource("digitalocean-native:images/v2:ImagesCustom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImagesCustom gets an existing ImagesCustom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImagesCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImagesCustomState, opts ...pulumi.ResourceOption) (*ImagesCustom, error) {
	var resource ImagesCustom
	err := ctx.ReadResource("digitalocean-native:images/v2:ImagesCustom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImagesCustom resources.
type imagesCustomState struct {
}

type ImagesCustomState struct {
}

func (ImagesCustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*imagesCustomState)(nil)).Elem()
}

type imagesCustomArgs struct {
	// An optional free-form text field to describe an image.
	Description *string `pulumi:"description"`
	// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
	Distribution *ImageUpdateDistribution `pulumi:"distribution"`
	// The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
	Name *string `pulumi:"name"`
	// The slug identifier for the region where the resource will initially be  available.
	Region *ImagesCustomPropertiesRegion `pulumi:"region"`
	// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
	Tags []string `pulumi:"tags"`
	// A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
	Url *string `pulumi:"url"`
}

// The set of arguments for constructing a ImagesCustom resource.
type ImagesCustomArgs struct {
	// An optional free-form text field to describe an image.
	Description pulumi.StringPtrInput
	// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
	Distribution ImageUpdateDistributionPtrInput
	// The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
	Name pulumi.StringPtrInput
	// The slug identifier for the region where the resource will initially be  available.
	Region ImagesCustomPropertiesRegionPtrInput
	// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
	Tags pulumi.StringArrayInput
	// A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
	Url pulumi.StringPtrInput
}

func (ImagesCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imagesCustomArgs)(nil)).Elem()
}

type ImagesCustomInput interface {
	pulumi.Input

	ToImagesCustomOutput() ImagesCustomOutput
	ToImagesCustomOutputWithContext(ctx context.Context) ImagesCustomOutput
}

func (*ImagesCustom) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagesCustom)(nil)).Elem()
}

func (i *ImagesCustom) ToImagesCustomOutput() ImagesCustomOutput {
	return i.ToImagesCustomOutputWithContext(context.Background())
}

func (i *ImagesCustom) ToImagesCustomOutputWithContext(ctx context.Context) ImagesCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImagesCustomOutput)
}

type ImagesCustomOutput struct{ *pulumi.OutputState }

func (ImagesCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImagesCustom)(nil)).Elem()
}

func (o ImagesCustomOutput) ToImagesCustomOutput() ImagesCustomOutput {
	return o
}

func (o ImagesCustomOutput) ToImagesCustomOutputWithContext(ctx context.Context) ImagesCustomOutput {
	return o
}

// An optional free-form text field to describe an image.
func (o ImagesCustomOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ImagesCustom) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of a custom image's distribution. Currently, the valid values are  `Arch Linux`, `CentOS`, `CoreOS`, `Debian`, `Fedora`, `Fedora Atomic`,  `FreeBSD`, `Gentoo`, `openSUSE`, `RancherOS`, `Rocky Linux`, `Ubuntu`, and `Unknown`.  Any other value will be accepted but ignored, and `Unknown` will be used in its place.
func (o ImagesCustomOutput) Distribution() ImageUpdateDistributionPtrOutput {
	return o.ApplyT(func(v *ImagesCustom) ImageUpdateDistributionPtrOutput { return v.Distribution }).(ImageUpdateDistributionPtrOutput)
}

func (o ImagesCustomOutput) Image() ImagePtrOutput {
	return o.ApplyT(func(v *ImagesCustom) ImagePtrOutput { return v.Image }).(ImagePtrOutput)
}

// The display name that has been given to an image.  This is what is shown in the control panel and is generally a descriptive title for the image in question.
func (o ImagesCustomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagesCustom) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The slug identifier for the region where the resource will initially be  available.
func (o ImagesCustomOutput) Region() ImagesCustomPropertiesRegionOutput {
	return o.ApplyT(func(v *ImagesCustom) ImagesCustomPropertiesRegionOutput { return v.Region }).(ImagesCustomPropertiesRegionOutput)
}

// A flat array of tag names as strings to be applied to the resource. Tag names may be for either existing or new tags.
func (o ImagesCustomOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ImagesCustom) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// A URL from which the custom Linux virtual machine image may be retrieved.  The image it points to must be in the raw, qcow2, vhdx, vdi, or vmdk format.  It may be compressed using gzip or bzip2 and must be smaller than 100 GB after being decompressed.
func (o ImagesCustomOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *ImagesCustom) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImagesCustomInput)(nil)).Elem(), &ImagesCustom{})
	pulumi.RegisterOutputType(ImagesCustomOutput{})
}
