// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppsRollback struct {
	pulumi.CustomResourceState

	Deployment AppsDeploymentTypePtrOutput `pulumi:"deployment"`
	// The ID of the deployment to rollback to.
	DeploymentId pulumi.StringPtrOutput `pulumi:"deploymentId"`
	// Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned.
	SkipPin pulumi.BoolPtrOutput `pulumi:"skipPin"`
}

// NewAppsRollback registers a new resource with the given unique name, arguments, and options.
func NewAppsRollback(ctx *pulumi.Context,
	name string, args *AppsRollbackArgs, opts ...pulumi.ResourceOption) (*AppsRollback, error) {
	if args == nil {
		args = &AppsRollbackArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsRollback
	err := ctx.RegisterResource("digitalocean-native:apps/v2:AppsRollback", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsRollback gets an existing AppsRollback resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsRollback(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsRollbackState, opts ...pulumi.ResourceOption) (*AppsRollback, error) {
	var resource AppsRollback
	err := ctx.ReadResource("digitalocean-native:apps/v2:AppsRollback", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsRollback resources.
type appsRollbackState struct {
}

type AppsRollbackState struct {
}

func (AppsRollbackState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsRollbackState)(nil)).Elem()
}

type appsRollbackArgs struct {
	// The app ID
	AppId *string `pulumi:"appId"`
	// The ID of the deployment to rollback to.
	DeploymentId *string `pulumi:"deploymentId"`
	// Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned.
	SkipPin *bool `pulumi:"skipPin"`
}

// The set of arguments for constructing a AppsRollback resource.
type AppsRollbackArgs struct {
	// The app ID
	AppId pulumi.StringPtrInput
	// The ID of the deployment to rollback to.
	DeploymentId pulumi.StringPtrInput
	// Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned.
	SkipPin pulumi.BoolPtrInput
}

func (AppsRollbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsRollbackArgs)(nil)).Elem()
}

type AppsRollbackInput interface {
	pulumi.Input

	ToAppsRollbackOutput() AppsRollbackOutput
	ToAppsRollbackOutputWithContext(ctx context.Context) AppsRollbackOutput
}

func (*AppsRollback) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsRollback)(nil)).Elem()
}

func (i *AppsRollback) ToAppsRollbackOutput() AppsRollbackOutput {
	return i.ToAppsRollbackOutputWithContext(context.Background())
}

func (i *AppsRollback) ToAppsRollbackOutputWithContext(ctx context.Context) AppsRollbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsRollbackOutput)
}

type AppsRollbackOutput struct{ *pulumi.OutputState }

func (AppsRollbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsRollback)(nil)).Elem()
}

func (o AppsRollbackOutput) ToAppsRollbackOutput() AppsRollbackOutput {
	return o
}

func (o AppsRollbackOutput) ToAppsRollbackOutputWithContext(ctx context.Context) AppsRollbackOutput {
	return o
}

func (o AppsRollbackOutput) Deployment() AppsDeploymentTypePtrOutput {
	return o.ApplyT(func(v *AppsRollback) AppsDeploymentTypePtrOutput { return v.Deployment }).(AppsDeploymentTypePtrOutput)
}

// The ID of the deployment to rollback to.
func (o AppsRollbackOutput) DeploymentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsRollback) pulumi.StringPtrOutput { return v.DeploymentId }).(pulumi.StringPtrOutput)
}

// Whether to skip pinning the rollback deployment. If false, the rollback deployment will be pinned and any new deployments including Auto Deploy on Push hooks will be disabled until the rollback is either manually committed or reverted via the CommitAppRollback or RevertAppRollback endpoints respectively. If true, the rollback will be immediately committed and the app will remain unpinned.
func (o AppsRollbackOutput) SkipPin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppsRollback) pulumi.BoolPtrOutput { return v.SkipPin }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsRollbackInput)(nil)).Elem(), &AppsRollback{})
	pulumi.RegisterOutputType(AppsRollbackOutput{})
}
