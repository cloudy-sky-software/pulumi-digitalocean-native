// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListApps(ctx *pulumi.Context, args *ListAppsArgs, opts ...pulumi.InvokeOption) (*ListAppsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListAppsResult
	err := ctx.Invoke("digitalocean-native:apps/v2:listApps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAppsArgs struct {
}

type ListAppsResult struct {
	Apps  []AppType  `pulumi:"apps"`
	Links *PageLinks `pulumi:"links"`
	Meta  MetaMeta   `pulumi:"meta"`
}

func ListAppsOutput(ctx *pulumi.Context, args ListAppsOutputArgs, opts ...pulumi.InvokeOption) ListAppsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListAppsResultOutput, error) {
			args := v.(ListAppsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv ListAppsResult
			secret, err := ctx.InvokePackageRaw("digitalocean-native:apps/v2:listApps", args, &rv, "", opts...)
			if err != nil {
				return ListAppsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(ListAppsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(ListAppsResultOutput), nil
			}
			return output, nil
		}).(ListAppsResultOutput)
}

type ListAppsOutputArgs struct {
}

func (ListAppsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAppsArgs)(nil)).Elem()
}

type ListAppsResultOutput struct{ *pulumi.OutputState }

func (ListAppsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAppsResult)(nil)).Elem()
}

func (o ListAppsResultOutput) ToListAppsResultOutput() ListAppsResultOutput {
	return o
}

func (o ListAppsResultOutput) ToListAppsResultOutputWithContext(ctx context.Context) ListAppsResultOutput {
	return o
}

func (o ListAppsResultOutput) Apps() AppTypeArrayOutput {
	return o.ApplyT(func(v ListAppsResult) []AppType { return v.Apps }).(AppTypeArrayOutput)
}

func (o ListAppsResultOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListAppsResult) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListAppsResultOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListAppsResult) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAppsResultOutput{})
}
