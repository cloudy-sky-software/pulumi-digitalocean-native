// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// An application's configuration and status.
type App struct {
	ActiveDeployment        *AppsDeploymentType   `pulumi:"activeDeployment"`
	CreatedAt               *string               `pulumi:"createdAt"`
	DefaultIngress          *string               `pulumi:"defaultIngress"`
	Domains                 []AppsDomain          `pulumi:"domains"`
	Id                      *string               `pulumi:"id"`
	InProgressDeployment    *AppsDeploymentType   `pulumi:"inProgressDeployment"`
	LastDeploymentCreatedAt *string               `pulumi:"lastDeploymentCreatedAt"`
	LiveDomain              *string               `pulumi:"liveDomain"`
	LiveUrl                 *string               `pulumi:"liveUrl"`
	LiveUrlBase             *string               `pulumi:"liveUrlBase"`
	OwnerUuid               *string               `pulumi:"ownerUuid"`
	PendingDeployment       *AppPendingDeployment `pulumi:"pendingDeployment"`
	PinnedDeployment        *AppPinnedDeployment  `pulumi:"pinnedDeployment"`
	ProjectId               *string               `pulumi:"projectId"`
	Region                  *AppsRegion           `pulumi:"region"`
	// The desired configuration of an application.
	Spec      AppSpec `pulumi:"spec"`
	TierSlug  *string `pulumi:"tierSlug"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// Defaults sets the appropriate defaults for App
func (val *App) Defaults() *App {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ActiveDeployment = tmp.ActiveDeployment.Defaults()

	tmp.InProgressDeployment = tmp.InProgressDeployment.Defaults()

	tmp.PendingDeployment = tmp.PendingDeployment.Defaults()

	tmp.PinnedDeployment = tmp.PinnedDeployment.Defaults()

	return &tmp
}

// An application's configuration and status.
type AppOutput struct{ *pulumi.OutputState }

func (AppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*App)(nil)).Elem()
}

func (o AppOutput) ToAppOutput() AppOutput {
	return o
}

func (o AppOutput) ToAppOutputWithContext(ctx context.Context) AppOutput {
	return o
}

func (o AppOutput) ActiveDeployment() AppsDeploymentTypePtrOutput {
	return o.ApplyT(func(v App) *AppsDeploymentType { return v.ActiveDeployment }).(AppsDeploymentTypePtrOutput)
}

func (o AppOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o AppOutput) DefaultIngress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.DefaultIngress }).(pulumi.StringPtrOutput)
}

func (o AppOutput) Domains() AppsDomainArrayOutput {
	return o.ApplyT(func(v App) []AppsDomain { return v.Domains }).(AppsDomainArrayOutput)
}

func (o AppOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AppOutput) InProgressDeployment() AppsDeploymentTypePtrOutput {
	return o.ApplyT(func(v App) *AppsDeploymentType { return v.InProgressDeployment }).(AppsDeploymentTypePtrOutput)
}

func (o AppOutput) LastDeploymentCreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.LastDeploymentCreatedAt }).(pulumi.StringPtrOutput)
}

func (o AppOutput) LiveDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.LiveDomain }).(pulumi.StringPtrOutput)
}

func (o AppOutput) LiveUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.LiveUrl }).(pulumi.StringPtrOutput)
}

func (o AppOutput) LiveUrlBase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.LiveUrlBase }).(pulumi.StringPtrOutput)
}

func (o AppOutput) OwnerUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.OwnerUuid }).(pulumi.StringPtrOutput)
}

func (o AppOutput) PendingDeployment() AppPendingDeploymentPtrOutput {
	return o.ApplyT(func(v App) *AppPendingDeployment { return v.PendingDeployment }).(AppPendingDeploymentPtrOutput)
}

func (o AppOutput) PinnedDeployment() AppPinnedDeploymentPtrOutput {
	return o.ApplyT(func(v App) *AppPinnedDeployment { return v.PinnedDeployment }).(AppPinnedDeploymentPtrOutput)
}

func (o AppOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func (o AppOutput) Region() AppsRegionPtrOutput {
	return o.ApplyT(func(v App) *AppsRegion { return v.Region }).(AppsRegionPtrOutput)
}

// The desired configuration of an application.
func (o AppOutput) Spec() AppSpecOutput {
	return o.ApplyT(func(v App) AppSpec { return v.Spec }).(AppSpecOutput)
}

func (o AppOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.TierSlug }).(pulumi.StringPtrOutput)
}

func (o AppOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v App) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type AppPtrOutput struct{ *pulumi.OutputState }

func (AppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**App)(nil)).Elem()
}

func (o AppPtrOutput) ToAppPtrOutput() AppPtrOutput {
	return o
}

func (o AppPtrOutput) ToAppPtrOutputWithContext(ctx context.Context) AppPtrOutput {
	return o
}

func (o AppPtrOutput) Elem() AppOutput {
	return o.ApplyT(func(v *App) App {
		if v != nil {
			return *v
		}
		var ret App
		return ret
	}).(AppOutput)
}

func (o AppPtrOutput) ActiveDeployment() AppsDeploymentTypePtrOutput {
	return o.ApplyT(func(v *App) *AppsDeploymentType {
		if v == nil {
			return nil
		}
		return v.ActiveDeployment
	}).(AppsDeploymentTypePtrOutput)
}

func (o AppPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) DefaultIngress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.DefaultIngress
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) Domains() AppsDomainArrayOutput {
	return o.ApplyT(func(v *App) []AppsDomain {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(AppsDomainArrayOutput)
}

func (o AppPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) InProgressDeployment() AppsDeploymentTypePtrOutput {
	return o.ApplyT(func(v *App) *AppsDeploymentType {
		if v == nil {
			return nil
		}
		return v.InProgressDeployment
	}).(AppsDeploymentTypePtrOutput)
}

func (o AppPtrOutput) LastDeploymentCreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.LastDeploymentCreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) LiveDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.LiveDomain
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) LiveUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.LiveUrl
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) LiveUrlBase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.LiveUrlBase
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) OwnerUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.OwnerUuid
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) PendingDeployment() AppPendingDeploymentPtrOutput {
	return o.ApplyT(func(v *App) *AppPendingDeployment {
		if v == nil {
			return nil
		}
		return v.PendingDeployment
	}).(AppPendingDeploymentPtrOutput)
}

func (o AppPtrOutput) PinnedDeployment() AppPinnedDeploymentPtrOutput {
	return o.ApplyT(func(v *App) *AppPinnedDeployment {
		if v == nil {
			return nil
		}
		return v.PinnedDeployment
	}).(AppPinnedDeploymentPtrOutput)
}

func (o AppPtrOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.ProjectId
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) Region() AppsRegionPtrOutput {
	return o.ApplyT(func(v *App) *AppsRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(AppsRegionPtrOutput)
}

// The desired configuration of an application.
func (o AppPtrOutput) Spec() AppSpecPtrOutput {
	return o.ApplyT(func(v *App) *AppSpec {
		if v == nil {
			return nil
		}
		return &v.Spec
	}).(AppSpecPtrOutput)
}

func (o AppPtrOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.TierSlug
	}).(pulumi.StringPtrOutput)
}

func (o AppPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

type AppArrayOutput struct{ *pulumi.OutputState }

func (AppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]App)(nil)).Elem()
}

func (o AppArrayOutput) ToAppArrayOutput() AppArrayOutput {
	return o
}

func (o AppArrayOutput) ToAppArrayOutputWithContext(ctx context.Context) AppArrayOutput {
	return o
}

func (o AppArrayOutput) Index(i pulumi.IntInput) AppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) App {
		return vs[0].([]App)[vs[1].(int)]
	}).(AppOutput)
}

type AppAlert struct {
	ComponentName *string                `pulumi:"componentName"`
	Emails        []string               `pulumi:"emails"`
	Id            *string                `pulumi:"id"`
	Phase         *AppAlertPhase         `pulumi:"phase"`
	Progress      *AppAlertProgress      `pulumi:"progress"`
	SlackWebhooks []AppAlertSlackWebhook `pulumi:"slackWebhooks"`
	Spec          *AppAlertSpec          `pulumi:"spec"`
}

// Defaults sets the appropriate defaults for AppAlert
func (val *AppAlert) Defaults() *AppAlert {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Phase == nil {
		phase_ := AppAlertPhase("UNKNOWN")
		tmp.Phase = &phase_
	}
	tmp.Spec = tmp.Spec.Defaults()

	return &tmp
}

type AppAlertOutput struct{ *pulumi.OutputState }

func (AppAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlert)(nil)).Elem()
}

func (o AppAlertOutput) ToAppAlertOutput() AppAlertOutput {
	return o
}

func (o AppAlertOutput) ToAppAlertOutputWithContext(ctx context.Context) AppAlertOutput {
	return o
}

func (o AppAlertOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlert) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

func (o AppAlertOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppAlert) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o AppAlertOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlert) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AppAlertOutput) Phase() AppAlertPhasePtrOutput {
	return o.ApplyT(func(v AppAlert) *AppAlertPhase { return v.Phase }).(AppAlertPhasePtrOutput)
}

func (o AppAlertOutput) Progress() AppAlertProgressPtrOutput {
	return o.ApplyT(func(v AppAlert) *AppAlertProgress { return v.Progress }).(AppAlertProgressPtrOutput)
}

func (o AppAlertOutput) SlackWebhooks() AppAlertSlackWebhookArrayOutput {
	return o.ApplyT(func(v AppAlert) []AppAlertSlackWebhook { return v.SlackWebhooks }).(AppAlertSlackWebhookArrayOutput)
}

func (o AppAlertOutput) Spec() AppAlertSpecPtrOutput {
	return o.ApplyT(func(v AppAlert) *AppAlertSpec { return v.Spec }).(AppAlertSpecPtrOutput)
}

type AppAlertPtrOutput struct{ *pulumi.OutputState }

func (AppAlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAlert)(nil)).Elem()
}

func (o AppAlertPtrOutput) ToAppAlertPtrOutput() AppAlertPtrOutput {
	return o
}

func (o AppAlertPtrOutput) ToAppAlertPtrOutputWithContext(ctx context.Context) AppAlertPtrOutput {
	return o
}

func (o AppAlertPtrOutput) Elem() AppAlertOutput {
	return o.ApplyT(func(v *AppAlert) AppAlert {
		if v != nil {
			return *v
		}
		var ret AppAlert
		return ret
	}).(AppAlertOutput)
}

func (o AppAlertPtrOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAlert) *string {
		if v == nil {
			return nil
		}
		return v.ComponentName
	}).(pulumi.StringPtrOutput)
}

func (o AppAlertPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppAlert) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

func (o AppAlertPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAlert) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o AppAlertPtrOutput) Phase() AppAlertPhasePtrOutput {
	return o.ApplyT(func(v *AppAlert) *AppAlertPhase {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(AppAlertPhasePtrOutput)
}

func (o AppAlertPtrOutput) Progress() AppAlertProgressPtrOutput {
	return o.ApplyT(func(v *AppAlert) *AppAlertProgress {
		if v == nil {
			return nil
		}
		return v.Progress
	}).(AppAlertProgressPtrOutput)
}

func (o AppAlertPtrOutput) SlackWebhooks() AppAlertSlackWebhookArrayOutput {
	return o.ApplyT(func(v *AppAlert) []AppAlertSlackWebhook {
		if v == nil {
			return nil
		}
		return v.SlackWebhooks
	}).(AppAlertSlackWebhookArrayOutput)
}

func (o AppAlertPtrOutput) Spec() AppAlertSpecPtrOutput {
	return o.ApplyT(func(v *AppAlert) *AppAlertSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(AppAlertSpecPtrOutput)
}

type AppAlertArrayOutput struct{ *pulumi.OutputState }

func (AppAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAlert)(nil)).Elem()
}

func (o AppAlertArrayOutput) ToAppAlertArrayOutput() AppAlertArrayOutput {
	return o
}

func (o AppAlertArrayOutput) ToAppAlertArrayOutputWithContext(ctx context.Context) AppAlertArrayOutput {
	return o
}

func (o AppAlertArrayOutput) Index(i pulumi.IntInput) AppAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAlert {
		return vs[0].([]AppAlert)[vs[1].(int)]
	}).(AppAlertOutput)
}

type AppAlertProgress struct {
	Steps []AppAlertProgressStep `pulumi:"steps"`
}

type AppAlertProgressOutput struct{ *pulumi.OutputState }

func (AppAlertProgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlertProgress)(nil)).Elem()
}

func (o AppAlertProgressOutput) ToAppAlertProgressOutput() AppAlertProgressOutput {
	return o
}

func (o AppAlertProgressOutput) ToAppAlertProgressOutputWithContext(ctx context.Context) AppAlertProgressOutput {
	return o
}

func (o AppAlertProgressOutput) Steps() AppAlertProgressStepArrayOutput {
	return o.ApplyT(func(v AppAlertProgress) []AppAlertProgressStep { return v.Steps }).(AppAlertProgressStepArrayOutput)
}

type AppAlertProgressPtrOutput struct{ *pulumi.OutputState }

func (AppAlertProgressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAlertProgress)(nil)).Elem()
}

func (o AppAlertProgressPtrOutput) ToAppAlertProgressPtrOutput() AppAlertProgressPtrOutput {
	return o
}

func (o AppAlertProgressPtrOutput) ToAppAlertProgressPtrOutputWithContext(ctx context.Context) AppAlertProgressPtrOutput {
	return o
}

func (o AppAlertProgressPtrOutput) Elem() AppAlertProgressOutput {
	return o.ApplyT(func(v *AppAlertProgress) AppAlertProgress {
		if v != nil {
			return *v
		}
		var ret AppAlertProgress
		return ret
	}).(AppAlertProgressOutput)
}

func (o AppAlertProgressPtrOutput) Steps() AppAlertProgressStepArrayOutput {
	return o.ApplyT(func(v *AppAlertProgress) []AppAlertProgressStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(AppAlertProgressStepArrayOutput)
}

type AppAlertProgressStep struct {
	EndedAt   *string                     `pulumi:"endedAt"`
	Name      *string                     `pulumi:"name"`
	Reason    *AppAlertProgressStepReason `pulumi:"reason"`
	StartedAt *string                     `pulumi:"startedAt"`
	Status    *AppAlertProgressStepStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for AppAlertProgressStep
func (val *AppAlertProgressStep) Defaults() *AppAlertProgressStep {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Status == nil {
		status_ := AppAlertProgressStepStatus("UNKNOWN")
		tmp.Status = &status_
	}
	return &tmp
}

type AppAlertProgressStepOutput struct{ *pulumi.OutputState }

func (AppAlertProgressStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlertProgressStep)(nil)).Elem()
}

func (o AppAlertProgressStepOutput) ToAppAlertProgressStepOutput() AppAlertProgressStepOutput {
	return o
}

func (o AppAlertProgressStepOutput) ToAppAlertProgressStepOutputWithContext(ctx context.Context) AppAlertProgressStepOutput {
	return o
}

func (o AppAlertProgressStepOutput) EndedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlertProgressStep) *string { return v.EndedAt }).(pulumi.StringPtrOutput)
}

func (o AppAlertProgressStepOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlertProgressStep) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppAlertProgressStepOutput) Reason() AppAlertProgressStepReasonPtrOutput {
	return o.ApplyT(func(v AppAlertProgressStep) *AppAlertProgressStepReason { return v.Reason }).(AppAlertProgressStepReasonPtrOutput)
}

func (o AppAlertProgressStepOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlertProgressStep) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

func (o AppAlertProgressStepOutput) Status() AppAlertProgressStepStatusPtrOutput {
	return o.ApplyT(func(v AppAlertProgressStep) *AppAlertProgressStepStatus { return v.Status }).(AppAlertProgressStepStatusPtrOutput)
}

type AppAlertProgressStepArrayOutput struct{ *pulumi.OutputState }

func (AppAlertProgressStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAlertProgressStep)(nil)).Elem()
}

func (o AppAlertProgressStepArrayOutput) ToAppAlertProgressStepArrayOutput() AppAlertProgressStepArrayOutput {
	return o
}

func (o AppAlertProgressStepArrayOutput) ToAppAlertProgressStepArrayOutputWithContext(ctx context.Context) AppAlertProgressStepArrayOutput {
	return o
}

func (o AppAlertProgressStepArrayOutput) Index(i pulumi.IntInput) AppAlertProgressStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAlertProgressStep {
		return vs[0].([]AppAlertProgressStep)[vs[1].(int)]
	}).(AppAlertProgressStepOutput)
}

type AppAlertProgressStepReason struct {
	Code    *string `pulumi:"code"`
	Message *string `pulumi:"message"`
}

type AppAlertProgressStepReasonOutput struct{ *pulumi.OutputState }

func (AppAlertProgressStepReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlertProgressStepReason)(nil)).Elem()
}

func (o AppAlertProgressStepReasonOutput) ToAppAlertProgressStepReasonOutput() AppAlertProgressStepReasonOutput {
	return o
}

func (o AppAlertProgressStepReasonOutput) ToAppAlertProgressStepReasonOutputWithContext(ctx context.Context) AppAlertProgressStepReasonOutput {
	return o
}

func (o AppAlertProgressStepReasonOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlertProgressStepReason) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o AppAlertProgressStepReasonOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlertProgressStepReason) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type AppAlertProgressStepReasonPtrOutput struct{ *pulumi.OutputState }

func (AppAlertProgressStepReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAlertProgressStepReason)(nil)).Elem()
}

func (o AppAlertProgressStepReasonPtrOutput) ToAppAlertProgressStepReasonPtrOutput() AppAlertProgressStepReasonPtrOutput {
	return o
}

func (o AppAlertProgressStepReasonPtrOutput) ToAppAlertProgressStepReasonPtrOutputWithContext(ctx context.Context) AppAlertProgressStepReasonPtrOutput {
	return o
}

func (o AppAlertProgressStepReasonPtrOutput) Elem() AppAlertProgressStepReasonOutput {
	return o.ApplyT(func(v *AppAlertProgressStepReason) AppAlertProgressStepReason {
		if v != nil {
			return *v
		}
		var ret AppAlertProgressStepReason
		return ret
	}).(AppAlertProgressStepReasonOutput)
}

func (o AppAlertProgressStepReasonPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAlertProgressStepReason) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o AppAlertProgressStepReasonPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppAlertProgressStepReason) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type AppAlertSlackWebhook struct {
	Channel *string `pulumi:"channel"`
	Url     *string `pulumi:"url"`
}

// AppAlertSlackWebhookInput is an input type that accepts AppAlertSlackWebhookArgs and AppAlertSlackWebhookOutput values.
// You can construct a concrete instance of `AppAlertSlackWebhookInput` via:
//
//	AppAlertSlackWebhookArgs{...}
type AppAlertSlackWebhookInput interface {
	pulumi.Input

	ToAppAlertSlackWebhookOutput() AppAlertSlackWebhookOutput
	ToAppAlertSlackWebhookOutputWithContext(context.Context) AppAlertSlackWebhookOutput
}

type AppAlertSlackWebhookArgs struct {
	Channel pulumi.StringPtrInput `pulumi:"channel"`
	Url     pulumi.StringPtrInput `pulumi:"url"`
}

func (AppAlertSlackWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlertSlackWebhook)(nil)).Elem()
}

func (i AppAlertSlackWebhookArgs) ToAppAlertSlackWebhookOutput() AppAlertSlackWebhookOutput {
	return i.ToAppAlertSlackWebhookOutputWithContext(context.Background())
}

func (i AppAlertSlackWebhookArgs) ToAppAlertSlackWebhookOutputWithContext(ctx context.Context) AppAlertSlackWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAlertSlackWebhookOutput)
}

// AppAlertSlackWebhookArrayInput is an input type that accepts AppAlertSlackWebhookArray and AppAlertSlackWebhookArrayOutput values.
// You can construct a concrete instance of `AppAlertSlackWebhookArrayInput` via:
//
//	AppAlertSlackWebhookArray{ AppAlertSlackWebhookArgs{...} }
type AppAlertSlackWebhookArrayInput interface {
	pulumi.Input

	ToAppAlertSlackWebhookArrayOutput() AppAlertSlackWebhookArrayOutput
	ToAppAlertSlackWebhookArrayOutputWithContext(context.Context) AppAlertSlackWebhookArrayOutput
}

type AppAlertSlackWebhookArray []AppAlertSlackWebhookInput

func (AppAlertSlackWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAlertSlackWebhook)(nil)).Elem()
}

func (i AppAlertSlackWebhookArray) ToAppAlertSlackWebhookArrayOutput() AppAlertSlackWebhookArrayOutput {
	return i.ToAppAlertSlackWebhookArrayOutputWithContext(context.Background())
}

func (i AppAlertSlackWebhookArray) ToAppAlertSlackWebhookArrayOutputWithContext(ctx context.Context) AppAlertSlackWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAlertSlackWebhookArrayOutput)
}

type AppAlertSlackWebhookOutput struct{ *pulumi.OutputState }

func (AppAlertSlackWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlertSlackWebhook)(nil)).Elem()
}

func (o AppAlertSlackWebhookOutput) ToAppAlertSlackWebhookOutput() AppAlertSlackWebhookOutput {
	return o
}

func (o AppAlertSlackWebhookOutput) ToAppAlertSlackWebhookOutputWithContext(ctx context.Context) AppAlertSlackWebhookOutput {
	return o
}

func (o AppAlertSlackWebhookOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlertSlackWebhook) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

func (o AppAlertSlackWebhookOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppAlertSlackWebhook) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type AppAlertSlackWebhookArrayOutput struct{ *pulumi.OutputState }

func (AppAlertSlackWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAlertSlackWebhook)(nil)).Elem()
}

func (o AppAlertSlackWebhookArrayOutput) ToAppAlertSlackWebhookArrayOutput() AppAlertSlackWebhookArrayOutput {
	return o
}

func (o AppAlertSlackWebhookArrayOutput) ToAppAlertSlackWebhookArrayOutputWithContext(ctx context.Context) AppAlertSlackWebhookArrayOutput {
	return o
}

func (o AppAlertSlackWebhookArrayOutput) Index(i pulumi.IntInput) AppAlertSlackWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAlertSlackWebhook {
		return vs[0].([]AppAlertSlackWebhook)[vs[1].(int)]
	}).(AppAlertSlackWebhookOutput)
}

type AppAlertSpec struct {
	// Is the alert disabled?
	Disabled *bool                 `pulumi:"disabled"`
	Operator *AppAlertSpecOperator `pulumi:"operator"`
	Rule     *AppAlertSpecRule     `pulumi:"rule"`
	// Threshold value for alert
	Value  *float64            `pulumi:"value"`
	Window *AppAlertSpecWindow `pulumi:"window"`
}

// Defaults sets the appropriate defaults for AppAlertSpec
func (val *AppAlertSpec) Defaults() *AppAlertSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Operator == nil {
		operator_ := AppAlertSpecOperator("UNSPECIFIED_OPERATOR")
		tmp.Operator = &operator_
	}
	if tmp.Rule == nil {
		rule_ := AppAlertSpecRule("UNSPECIFIED_RULE")
		tmp.Rule = &rule_
	}
	if tmp.Window == nil {
		window_ := AppAlertSpecWindow("UNSPECIFIED_WINDOW")
		tmp.Window = &window_
	}
	return &tmp
}

// AppAlertSpecInput is an input type that accepts AppAlertSpecArgs and AppAlertSpecOutput values.
// You can construct a concrete instance of `AppAlertSpecInput` via:
//
//	AppAlertSpecArgs{...}
type AppAlertSpecInput interface {
	pulumi.Input

	ToAppAlertSpecOutput() AppAlertSpecOutput
	ToAppAlertSpecOutputWithContext(context.Context) AppAlertSpecOutput
}

type AppAlertSpecArgs struct {
	// Is the alert disabled?
	Disabled pulumi.BoolPtrInput          `pulumi:"disabled"`
	Operator AppAlertSpecOperatorPtrInput `pulumi:"operator"`
	Rule     AppAlertSpecRulePtrInput     `pulumi:"rule"`
	// Threshold value for alert
	Value  pulumi.Float64PtrInput     `pulumi:"value"`
	Window AppAlertSpecWindowPtrInput `pulumi:"window"`
}

// Defaults sets the appropriate defaults for AppAlertSpecArgs
func (val *AppAlertSpecArgs) Defaults() *AppAlertSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Operator == nil {
		tmp.Operator = AppAlertSpecOperator("UNSPECIFIED_OPERATOR")
	}
	if tmp.Rule == nil {
		tmp.Rule = AppAlertSpecRule("UNSPECIFIED_RULE")
	}
	if tmp.Window == nil {
		tmp.Window = AppAlertSpecWindow("UNSPECIFIED_WINDOW")
	}
	return &tmp
}
func (AppAlertSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlertSpec)(nil)).Elem()
}

func (i AppAlertSpecArgs) ToAppAlertSpecOutput() AppAlertSpecOutput {
	return i.ToAppAlertSpecOutputWithContext(context.Background())
}

func (i AppAlertSpecArgs) ToAppAlertSpecOutputWithContext(ctx context.Context) AppAlertSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAlertSpecOutput)
}

// AppAlertSpecArrayInput is an input type that accepts AppAlertSpecArray and AppAlertSpecArrayOutput values.
// You can construct a concrete instance of `AppAlertSpecArrayInput` via:
//
//	AppAlertSpecArray{ AppAlertSpecArgs{...} }
type AppAlertSpecArrayInput interface {
	pulumi.Input

	ToAppAlertSpecArrayOutput() AppAlertSpecArrayOutput
	ToAppAlertSpecArrayOutputWithContext(context.Context) AppAlertSpecArrayOutput
}

type AppAlertSpecArray []AppAlertSpecInput

func (AppAlertSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAlertSpec)(nil)).Elem()
}

func (i AppAlertSpecArray) ToAppAlertSpecArrayOutput() AppAlertSpecArrayOutput {
	return i.ToAppAlertSpecArrayOutputWithContext(context.Background())
}

func (i AppAlertSpecArray) ToAppAlertSpecArrayOutputWithContext(ctx context.Context) AppAlertSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppAlertSpecArrayOutput)
}

type AppAlertSpecOutput struct{ *pulumi.OutputState }

func (AppAlertSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppAlertSpec)(nil)).Elem()
}

func (o AppAlertSpecOutput) ToAppAlertSpecOutput() AppAlertSpecOutput {
	return o
}

func (o AppAlertSpecOutput) ToAppAlertSpecOutputWithContext(ctx context.Context) AppAlertSpecOutput {
	return o
}

// Is the alert disabled?
func (o AppAlertSpecOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppAlertSpec) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o AppAlertSpecOutput) Operator() AppAlertSpecOperatorPtrOutput {
	return o.ApplyT(func(v AppAlertSpec) *AppAlertSpecOperator { return v.Operator }).(AppAlertSpecOperatorPtrOutput)
}

func (o AppAlertSpecOutput) Rule() AppAlertSpecRulePtrOutput {
	return o.ApplyT(func(v AppAlertSpec) *AppAlertSpecRule { return v.Rule }).(AppAlertSpecRulePtrOutput)
}

// Threshold value for alert
func (o AppAlertSpecOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AppAlertSpec) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

func (o AppAlertSpecOutput) Window() AppAlertSpecWindowPtrOutput {
	return o.ApplyT(func(v AppAlertSpec) *AppAlertSpecWindow { return v.Window }).(AppAlertSpecWindowPtrOutput)
}

type AppAlertSpecPtrOutput struct{ *pulumi.OutputState }

func (AppAlertSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppAlertSpec)(nil)).Elem()
}

func (o AppAlertSpecPtrOutput) ToAppAlertSpecPtrOutput() AppAlertSpecPtrOutput {
	return o
}

func (o AppAlertSpecPtrOutput) ToAppAlertSpecPtrOutputWithContext(ctx context.Context) AppAlertSpecPtrOutput {
	return o
}

func (o AppAlertSpecPtrOutput) Elem() AppAlertSpecOutput {
	return o.ApplyT(func(v *AppAlertSpec) AppAlertSpec {
		if v != nil {
			return *v
		}
		var ret AppAlertSpec
		return ret
	}).(AppAlertSpecOutput)
}

// Is the alert disabled?
func (o AppAlertSpecPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppAlertSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

func (o AppAlertSpecPtrOutput) Operator() AppAlertSpecOperatorPtrOutput {
	return o.ApplyT(func(v *AppAlertSpec) *AppAlertSpecOperator {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(AppAlertSpecOperatorPtrOutput)
}

func (o AppAlertSpecPtrOutput) Rule() AppAlertSpecRulePtrOutput {
	return o.ApplyT(func(v *AppAlertSpec) *AppAlertSpecRule {
		if v == nil {
			return nil
		}
		return v.Rule
	}).(AppAlertSpecRulePtrOutput)
}

// Threshold value for alert
func (o AppAlertSpecPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AppAlertSpec) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

func (o AppAlertSpecPtrOutput) Window() AppAlertSpecWindowPtrOutput {
	return o.ApplyT(func(v *AppAlertSpec) *AppAlertSpecWindow {
		if v == nil {
			return nil
		}
		return v.Window
	}).(AppAlertSpecWindowPtrOutput)
}

type AppAlertSpecArrayOutput struct{ *pulumi.OutputState }

func (AppAlertSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppAlertSpec)(nil)).Elem()
}

func (o AppAlertSpecArrayOutput) ToAppAlertSpecArrayOutput() AppAlertSpecArrayOutput {
	return o
}

func (o AppAlertSpecArrayOutput) ToAppAlertSpecArrayOutputWithContext(ctx context.Context) AppAlertSpecArrayOutput {
	return o
}

func (o AppAlertSpecArrayOutput) Index(i pulumi.IntInput) AppAlertSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppAlertSpec {
		return vs[0].([]AppAlertSpec)[vs[1].(int)]
	}).(AppAlertSpecOutput)
}

type AppDatabaseSpec struct {
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
	ClusterName *string `pulumi:"clusterName"`
	// The name of the MySQL or PostgreSQL database to configure.
	DbName *string `pulumi:"dbName"`
	// The name of the MySQL or PostgreSQL user to configure.
	DbUser *string `pulumi:"dbUser"`
	// - MYSQL: MySQL
	// - PG: PostgreSQL
	// - REDIS: Redis
	Engine *AppDatabaseSpecEngine `pulumi:"engine"`
	// The name. Must be unique across all components within the same app.
	Name string `pulumi:"name"`
	// Whether this is a production or dev database.
	Production *bool `pulumi:"production"`
	// The version of the database engine
	Version *string `pulumi:"version"`
}

// Defaults sets the appropriate defaults for AppDatabaseSpec
func (val *AppDatabaseSpec) Defaults() *AppDatabaseSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Engine == nil {
		engine_ := AppDatabaseSpecEngine("UNSET")
		tmp.Engine = &engine_
	}
	return &tmp
}

// AppDatabaseSpecInput is an input type that accepts AppDatabaseSpecArgs and AppDatabaseSpecOutput values.
// You can construct a concrete instance of `AppDatabaseSpecInput` via:
//
//	AppDatabaseSpecArgs{...}
type AppDatabaseSpecInput interface {
	pulumi.Input

	ToAppDatabaseSpecOutput() AppDatabaseSpecOutput
	ToAppDatabaseSpecOutputWithContext(context.Context) AppDatabaseSpecOutput
}

type AppDatabaseSpecArgs struct {
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// The name of the MySQL or PostgreSQL database to configure.
	DbName pulumi.StringPtrInput `pulumi:"dbName"`
	// The name of the MySQL or PostgreSQL user to configure.
	DbUser pulumi.StringPtrInput `pulumi:"dbUser"`
	// - MYSQL: MySQL
	// - PG: PostgreSQL
	// - REDIS: Redis
	Engine AppDatabaseSpecEnginePtrInput `pulumi:"engine"`
	// The name. Must be unique across all components within the same app.
	Name pulumi.StringInput `pulumi:"name"`
	// Whether this is a production or dev database.
	Production pulumi.BoolPtrInput `pulumi:"production"`
	// The version of the database engine
	Version pulumi.StringPtrInput `pulumi:"version"`
}

// Defaults sets the appropriate defaults for AppDatabaseSpecArgs
func (val *AppDatabaseSpecArgs) Defaults() *AppDatabaseSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Engine == nil {
		tmp.Engine = AppDatabaseSpecEngine("UNSET")
	}
	return &tmp
}
func (AppDatabaseSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDatabaseSpec)(nil)).Elem()
}

func (i AppDatabaseSpecArgs) ToAppDatabaseSpecOutput() AppDatabaseSpecOutput {
	return i.ToAppDatabaseSpecOutputWithContext(context.Background())
}

func (i AppDatabaseSpecArgs) ToAppDatabaseSpecOutputWithContext(ctx context.Context) AppDatabaseSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDatabaseSpecOutput)
}

// AppDatabaseSpecArrayInput is an input type that accepts AppDatabaseSpecArray and AppDatabaseSpecArrayOutput values.
// You can construct a concrete instance of `AppDatabaseSpecArrayInput` via:
//
//	AppDatabaseSpecArray{ AppDatabaseSpecArgs{...} }
type AppDatabaseSpecArrayInput interface {
	pulumi.Input

	ToAppDatabaseSpecArrayOutput() AppDatabaseSpecArrayOutput
	ToAppDatabaseSpecArrayOutputWithContext(context.Context) AppDatabaseSpecArrayOutput
}

type AppDatabaseSpecArray []AppDatabaseSpecInput

func (AppDatabaseSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppDatabaseSpec)(nil)).Elem()
}

func (i AppDatabaseSpecArray) ToAppDatabaseSpecArrayOutput() AppDatabaseSpecArrayOutput {
	return i.ToAppDatabaseSpecArrayOutputWithContext(context.Background())
}

func (i AppDatabaseSpecArray) ToAppDatabaseSpecArrayOutputWithContext(ctx context.Context) AppDatabaseSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDatabaseSpecArrayOutput)
}

type AppDatabaseSpecOutput struct{ *pulumi.OutputState }

func (AppDatabaseSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDatabaseSpec)(nil)).Elem()
}

func (o AppDatabaseSpecOutput) ToAppDatabaseSpecOutput() AppDatabaseSpecOutput {
	return o
}

func (o AppDatabaseSpecOutput) ToAppDatabaseSpecOutputWithContext(ctx context.Context) AppDatabaseSpecOutput {
	return o
}

// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if cluster_name is not set, a new cluster will be provisioned.
func (o AppDatabaseSpecOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDatabaseSpec) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// The name of the MySQL or PostgreSQL database to configure.
func (o AppDatabaseSpecOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDatabaseSpec) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

// The name of the MySQL or PostgreSQL user to configure.
func (o AppDatabaseSpecOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDatabaseSpec) *string { return v.DbUser }).(pulumi.StringPtrOutput)
}

// - MYSQL: MySQL
// - PG: PostgreSQL
// - REDIS: Redis
func (o AppDatabaseSpecOutput) Engine() AppDatabaseSpecEnginePtrOutput {
	return o.ApplyT(func(v AppDatabaseSpec) *AppDatabaseSpecEngine { return v.Engine }).(AppDatabaseSpecEnginePtrOutput)
}

// The name. Must be unique across all components within the same app.
func (o AppDatabaseSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppDatabaseSpec) string { return v.Name }).(pulumi.StringOutput)
}

// Whether this is a production or dev database.
func (o AppDatabaseSpecOutput) Production() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppDatabaseSpec) *bool { return v.Production }).(pulumi.BoolPtrOutput)
}

// The version of the database engine
func (o AppDatabaseSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDatabaseSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AppDatabaseSpecArrayOutput struct{ *pulumi.OutputState }

func (AppDatabaseSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppDatabaseSpec)(nil)).Elem()
}

func (o AppDatabaseSpecArrayOutput) ToAppDatabaseSpecArrayOutput() AppDatabaseSpecArrayOutput {
	return o
}

func (o AppDatabaseSpecArrayOutput) ToAppDatabaseSpecArrayOutputWithContext(ctx context.Context) AppDatabaseSpecArrayOutput {
	return o
}

func (o AppDatabaseSpecArrayOutput) Index(i pulumi.IntInput) AppDatabaseSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppDatabaseSpec {
		return vs[0].([]AppDatabaseSpec)[vs[1].(int)]
	}).(AppDatabaseSpecOutput)
}

type AppDomainSpec struct {
	// The hostname for the domain
	Domain string `pulumi:"domain"`
	// The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `"1.2"` or `"1.3"`.
	MinimumTlsVersion *AppDomainSpecMinimumTlsVersion `pulumi:"minimumTlsVersion"`
	// - DEFAULT: The default `.ondigitalocean.app` domain assigned to this app
	// - PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.
	// - ALIAS: A non-primary domain
	Type *AppDomainSpecType `pulumi:"type"`
	// Indicates whether the domain includes all sub-domains, in addition to the given domain
	Wildcard *bool `pulumi:"wildcard"`
	// Optional. If the domain uses DigitalOcean DNS and you would like App
	// Platform to automatically manage it for you, set this to the name of the
	// domain on your account.
	//
	// For example, If the domain you are adding is `app.domain.com`, the zone
	// could be `domain.com`.
	Zone *string `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for AppDomainSpec
func (val *AppDomainSpec) Defaults() *AppDomainSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		type_ := AppDomainSpecType("UNSPECIFIED")
		tmp.Type = &type_
	}
	return &tmp
}

// AppDomainSpecInput is an input type that accepts AppDomainSpecArgs and AppDomainSpecOutput values.
// You can construct a concrete instance of `AppDomainSpecInput` via:
//
//	AppDomainSpecArgs{...}
type AppDomainSpecInput interface {
	pulumi.Input

	ToAppDomainSpecOutput() AppDomainSpecOutput
	ToAppDomainSpecOutputWithContext(context.Context) AppDomainSpecOutput
}

type AppDomainSpecArgs struct {
	// The hostname for the domain
	Domain pulumi.StringInput `pulumi:"domain"`
	// The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `"1.2"` or `"1.3"`.
	MinimumTlsVersion AppDomainSpecMinimumTlsVersionPtrInput `pulumi:"minimumTlsVersion"`
	// - DEFAULT: The default `.ondigitalocean.app` domain assigned to this app
	// - PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.
	// - ALIAS: A non-primary domain
	Type AppDomainSpecTypePtrInput `pulumi:"type"`
	// Indicates whether the domain includes all sub-domains, in addition to the given domain
	Wildcard pulumi.BoolPtrInput `pulumi:"wildcard"`
	// Optional. If the domain uses DigitalOcean DNS and you would like App
	// Platform to automatically manage it for you, set this to the name of the
	// domain on your account.
	//
	// For example, If the domain you are adding is `app.domain.com`, the zone
	// could be `domain.com`.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

// Defaults sets the appropriate defaults for AppDomainSpecArgs
func (val *AppDomainSpecArgs) Defaults() *AppDomainSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Type == nil {
		tmp.Type = AppDomainSpecType("UNSPECIFIED")
	}
	return &tmp
}
func (AppDomainSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDomainSpec)(nil)).Elem()
}

func (i AppDomainSpecArgs) ToAppDomainSpecOutput() AppDomainSpecOutput {
	return i.ToAppDomainSpecOutputWithContext(context.Background())
}

func (i AppDomainSpecArgs) ToAppDomainSpecOutputWithContext(ctx context.Context) AppDomainSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDomainSpecOutput)
}

// AppDomainSpecArrayInput is an input type that accepts AppDomainSpecArray and AppDomainSpecArrayOutput values.
// You can construct a concrete instance of `AppDomainSpecArrayInput` via:
//
//	AppDomainSpecArray{ AppDomainSpecArgs{...} }
type AppDomainSpecArrayInput interface {
	pulumi.Input

	ToAppDomainSpecArrayOutput() AppDomainSpecArrayOutput
	ToAppDomainSpecArrayOutputWithContext(context.Context) AppDomainSpecArrayOutput
}

type AppDomainSpecArray []AppDomainSpecInput

func (AppDomainSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppDomainSpec)(nil)).Elem()
}

func (i AppDomainSpecArray) ToAppDomainSpecArrayOutput() AppDomainSpecArrayOutput {
	return i.ToAppDomainSpecArrayOutputWithContext(context.Background())
}

func (i AppDomainSpecArray) ToAppDomainSpecArrayOutputWithContext(ctx context.Context) AppDomainSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDomainSpecArrayOutput)
}

type AppDomainSpecOutput struct{ *pulumi.OutputState }

func (AppDomainSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDomainSpec)(nil)).Elem()
}

func (o AppDomainSpecOutput) ToAppDomainSpecOutput() AppDomainSpecOutput {
	return o
}

func (o AppDomainSpecOutput) ToAppDomainSpecOutputWithContext(ctx context.Context) AppDomainSpecOutput {
	return o
}

// The hostname for the domain
func (o AppDomainSpecOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v AppDomainSpec) string { return v.Domain }).(pulumi.StringOutput)
}

// The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `"1.2"` or `"1.3"`.
func (o AppDomainSpecOutput) MinimumTlsVersion() AppDomainSpecMinimumTlsVersionPtrOutput {
	return o.ApplyT(func(v AppDomainSpec) *AppDomainSpecMinimumTlsVersion { return v.MinimumTlsVersion }).(AppDomainSpecMinimumTlsVersionPtrOutput)
}

// - DEFAULT: The default `.ondigitalocean.app` domain assigned to this app
// - PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.
// - ALIAS: A non-primary domain
func (o AppDomainSpecOutput) Type() AppDomainSpecTypePtrOutput {
	return o.ApplyT(func(v AppDomainSpec) *AppDomainSpecType { return v.Type }).(AppDomainSpecTypePtrOutput)
}

// Indicates whether the domain includes all sub-domains, in addition to the given domain
func (o AppDomainSpecOutput) Wildcard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppDomainSpec) *bool { return v.Wildcard }).(pulumi.BoolPtrOutput)
}

// Optional. If the domain uses DigitalOcean DNS and you would like App
// Platform to automatically manage it for you, set this to the name of the
// domain on your account.
//
// For example, If the domain you are adding is `app.domain.com`, the zone
// could be `domain.com`.
func (o AppDomainSpecOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomainSpec) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type AppDomainSpecPtrOutput struct{ *pulumi.OutputState }

func (AppDomainSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppDomainSpec)(nil)).Elem()
}

func (o AppDomainSpecPtrOutput) ToAppDomainSpecPtrOutput() AppDomainSpecPtrOutput {
	return o
}

func (o AppDomainSpecPtrOutput) ToAppDomainSpecPtrOutputWithContext(ctx context.Context) AppDomainSpecPtrOutput {
	return o
}

func (o AppDomainSpecPtrOutput) Elem() AppDomainSpecOutput {
	return o.ApplyT(func(v *AppDomainSpec) AppDomainSpec {
		if v != nil {
			return *v
		}
		var ret AppDomainSpec
		return ret
	}).(AppDomainSpecOutput)
}

// The hostname for the domain
func (o AppDomainSpecPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDomainSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// The minimum version of TLS a client application can use to access resources for the domain.  Must be one of the following values wrapped within quotations: `"1.2"` or `"1.3"`.
func (o AppDomainSpecPtrOutput) MinimumTlsVersion() AppDomainSpecMinimumTlsVersionPtrOutput {
	return o.ApplyT(func(v *AppDomainSpec) *AppDomainSpecMinimumTlsVersion {
		if v == nil {
			return nil
		}
		return v.MinimumTlsVersion
	}).(AppDomainSpecMinimumTlsVersionPtrOutput)
}

// - DEFAULT: The default `.ondigitalocean.app` domain assigned to this app
// - PRIMARY: The primary domain for this app that is displayed as the default in the control panel, used in bindable environment variables, and any other places that reference an app's live URL. Only one domain may be set as primary.
// - ALIAS: A non-primary domain
func (o AppDomainSpecPtrOutput) Type() AppDomainSpecTypePtrOutput {
	return o.ApplyT(func(v *AppDomainSpec) *AppDomainSpecType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AppDomainSpecTypePtrOutput)
}

// Indicates whether the domain includes all sub-domains, in addition to the given domain
func (o AppDomainSpecPtrOutput) Wildcard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppDomainSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Wildcard
	}).(pulumi.BoolPtrOutput)
}

// Optional. If the domain uses DigitalOcean DNS and you would like App
// Platform to automatically manage it for you, set this to the name of the
// domain on your account.
//
// For example, If the domain you are adding is `app.domain.com`, the zone
// could be `domain.com`.
func (o AppDomainSpecPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppDomainSpec) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type AppDomainSpecArrayOutput struct{ *pulumi.OutputState }

func (AppDomainSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppDomainSpec)(nil)).Elem()
}

func (o AppDomainSpecArrayOutput) ToAppDomainSpecArrayOutput() AppDomainSpecArrayOutput {
	return o
}

func (o AppDomainSpecArrayOutput) ToAppDomainSpecArrayOutputWithContext(ctx context.Context) AppDomainSpecArrayOutput {
	return o
}

func (o AppDomainSpecArrayOutput) Index(i pulumi.IntInput) AppDomainSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppDomainSpec {
		return vs[0].([]AppDomainSpec)[vs[1].(int)]
	}).(AppDomainSpecOutput)
}

type AppDomainValidation struct {
	TxtName  *string `pulumi:"txtName"`
	TxtValue *string `pulumi:"txtValue"`
}

type AppDomainValidationOutput struct{ *pulumi.OutputState }

func (AppDomainValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDomainValidation)(nil)).Elem()
}

func (o AppDomainValidationOutput) ToAppDomainValidationOutput() AppDomainValidationOutput {
	return o
}

func (o AppDomainValidationOutput) ToAppDomainValidationOutputWithContext(ctx context.Context) AppDomainValidationOutput {
	return o
}

func (o AppDomainValidationOutput) TxtName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomainValidation) *string { return v.TxtName }).(pulumi.StringPtrOutput)
}

func (o AppDomainValidationOutput) TxtValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomainValidation) *string { return v.TxtValue }).(pulumi.StringPtrOutput)
}

type AppDomainValidationArrayOutput struct{ *pulumi.OutputState }

func (AppDomainValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppDomainValidation)(nil)).Elem()
}

func (o AppDomainValidationArrayOutput) ToAppDomainValidationArrayOutput() AppDomainValidationArrayOutput {
	return o
}

func (o AppDomainValidationArrayOutput) ToAppDomainValidationArrayOutputWithContext(ctx context.Context) AppDomainValidationArrayOutput {
	return o
}

func (o AppDomainValidationArrayOutput) Index(i pulumi.IntInput) AppDomainValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppDomainValidation {
		return vs[0].([]AppDomainValidation)[vs[1].(int)]
	}).(AppDomainValidationOutput)
}

type AppFunctionsSpec struct {
	Alerts []AppAlertSpec  `pulumi:"alerts"`
	Cors   *AppsCorsPolicy `pulumi:"cors"`
	// A list of environment variables made available to the component.
	Envs            []AppVariableDefinition      `pulumi:"envs"`
	Git             *AppsGitSourceSpec           `pulumi:"git"`
	Github          *AppsGithubSourceSpec        `pulumi:"github"`
	Gitlab          *AppsGitlabSourceSpec        `pulumi:"gitlab"`
	LogDestinations *AppLogDestinationDefinition `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name string `pulumi:"name"`
	// A list of HTTP routes that should be routed to this component.
	Routes []AppRouteSpec `pulumi:"routes"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir *string `pulumi:"sourceDir"`
}

// AppFunctionsSpecInput is an input type that accepts AppFunctionsSpecArgs and AppFunctionsSpecOutput values.
// You can construct a concrete instance of `AppFunctionsSpecInput` via:
//
//	AppFunctionsSpecArgs{...}
type AppFunctionsSpecInput interface {
	pulumi.Input

	ToAppFunctionsSpecOutput() AppFunctionsSpecOutput
	ToAppFunctionsSpecOutputWithContext(context.Context) AppFunctionsSpecOutput
}

type AppFunctionsSpecArgs struct {
	Alerts AppAlertSpecArrayInput `pulumi:"alerts"`
	Cors   AppsCorsPolicyPtrInput `pulumi:"cors"`
	// A list of environment variables made available to the component.
	Envs            AppVariableDefinitionArrayInput     `pulumi:"envs"`
	Git             AppsGitSourceSpecPtrInput           `pulumi:"git"`
	Github          AppsGithubSourceSpecPtrInput        `pulumi:"github"`
	Gitlab          AppsGitlabSourceSpecPtrInput        `pulumi:"gitlab"`
	LogDestinations AppLogDestinationDefinitionPtrInput `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name pulumi.StringInput `pulumi:"name"`
	// A list of HTTP routes that should be routed to this component.
	Routes AppRouteSpecArrayInput `pulumi:"routes"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (AppFunctionsSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppFunctionsSpec)(nil)).Elem()
}

func (i AppFunctionsSpecArgs) ToAppFunctionsSpecOutput() AppFunctionsSpecOutput {
	return i.ToAppFunctionsSpecOutputWithContext(context.Background())
}

func (i AppFunctionsSpecArgs) ToAppFunctionsSpecOutputWithContext(ctx context.Context) AppFunctionsSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppFunctionsSpecOutput)
}

// AppFunctionsSpecArrayInput is an input type that accepts AppFunctionsSpecArray and AppFunctionsSpecArrayOutput values.
// You can construct a concrete instance of `AppFunctionsSpecArrayInput` via:
//
//	AppFunctionsSpecArray{ AppFunctionsSpecArgs{...} }
type AppFunctionsSpecArrayInput interface {
	pulumi.Input

	ToAppFunctionsSpecArrayOutput() AppFunctionsSpecArrayOutput
	ToAppFunctionsSpecArrayOutputWithContext(context.Context) AppFunctionsSpecArrayOutput
}

type AppFunctionsSpecArray []AppFunctionsSpecInput

func (AppFunctionsSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppFunctionsSpec)(nil)).Elem()
}

func (i AppFunctionsSpecArray) ToAppFunctionsSpecArrayOutput() AppFunctionsSpecArrayOutput {
	return i.ToAppFunctionsSpecArrayOutputWithContext(context.Background())
}

func (i AppFunctionsSpecArray) ToAppFunctionsSpecArrayOutputWithContext(ctx context.Context) AppFunctionsSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppFunctionsSpecArrayOutput)
}

type AppFunctionsSpecOutput struct{ *pulumi.OutputState }

func (AppFunctionsSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppFunctionsSpec)(nil)).Elem()
}

func (o AppFunctionsSpecOutput) ToAppFunctionsSpecOutput() AppFunctionsSpecOutput {
	return o
}

func (o AppFunctionsSpecOutput) ToAppFunctionsSpecOutputWithContext(ctx context.Context) AppFunctionsSpecOutput {
	return o
}

func (o AppFunctionsSpecOutput) Alerts() AppAlertSpecArrayOutput {
	return o.ApplyT(func(v AppFunctionsSpec) []AppAlertSpec { return v.Alerts }).(AppAlertSpecArrayOutput)
}

func (o AppFunctionsSpecOutput) Cors() AppsCorsPolicyPtrOutput {
	return o.ApplyT(func(v AppFunctionsSpec) *AppsCorsPolicy { return v.Cors }).(AppsCorsPolicyPtrOutput)
}

// A list of environment variables made available to the component.
func (o AppFunctionsSpecOutput) Envs() AppVariableDefinitionArrayOutput {
	return o.ApplyT(func(v AppFunctionsSpec) []AppVariableDefinition { return v.Envs }).(AppVariableDefinitionArrayOutput)
}

func (o AppFunctionsSpecOutput) Git() AppsGitSourceSpecPtrOutput {
	return o.ApplyT(func(v AppFunctionsSpec) *AppsGitSourceSpec { return v.Git }).(AppsGitSourceSpecPtrOutput)
}

func (o AppFunctionsSpecOutput) Github() AppsGithubSourceSpecPtrOutput {
	return o.ApplyT(func(v AppFunctionsSpec) *AppsGithubSourceSpec { return v.Github }).(AppsGithubSourceSpecPtrOutput)
}

func (o AppFunctionsSpecOutput) Gitlab() AppsGitlabSourceSpecPtrOutput {
	return o.ApplyT(func(v AppFunctionsSpec) *AppsGitlabSourceSpec { return v.Gitlab }).(AppsGitlabSourceSpecPtrOutput)
}

func (o AppFunctionsSpecOutput) LogDestinations() AppLogDestinationDefinitionPtrOutput {
	return o.ApplyT(func(v AppFunctionsSpec) *AppLogDestinationDefinition { return v.LogDestinations }).(AppLogDestinationDefinitionPtrOutput)
}

// The name. Must be unique across all components within the same app.
func (o AppFunctionsSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppFunctionsSpec) string { return v.Name }).(pulumi.StringOutput)
}

// A list of HTTP routes that should be routed to this component.
func (o AppFunctionsSpecOutput) Routes() AppRouteSpecArrayOutput {
	return o.ApplyT(func(v AppFunctionsSpec) []AppRouteSpec { return v.Routes }).(AppRouteSpecArrayOutput)
}

// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
func (o AppFunctionsSpecOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppFunctionsSpec) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppFunctionsSpecArrayOutput struct{ *pulumi.OutputState }

func (AppFunctionsSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppFunctionsSpec)(nil)).Elem()
}

func (o AppFunctionsSpecArrayOutput) ToAppFunctionsSpecArrayOutput() AppFunctionsSpecArrayOutput {
	return o
}

func (o AppFunctionsSpecArrayOutput) ToAppFunctionsSpecArrayOutputWithContext(ctx context.Context) AppFunctionsSpecArrayOutput {
	return o
}

func (o AppFunctionsSpecArrayOutput) Index(i pulumi.IntInput) AppFunctionsSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppFunctionsSpec {
		return vs[0].([]AppFunctionsSpec)[vs[1].(int)]
	}).(AppFunctionsSpecOutput)
}

// Specification for app ingress configurations.
type AppIngressSpec struct {
	// Rules for configuring HTTP ingress for component routes, CORS, rewrites, and redirects.
	Rules []AppIngressSpecRule `pulumi:"rules"`
}

// AppIngressSpecInput is an input type that accepts AppIngressSpecArgs and AppIngressSpecOutput values.
// You can construct a concrete instance of `AppIngressSpecInput` via:
//
//	AppIngressSpecArgs{...}
type AppIngressSpecInput interface {
	pulumi.Input

	ToAppIngressSpecOutput() AppIngressSpecOutput
	ToAppIngressSpecOutputWithContext(context.Context) AppIngressSpecOutput
}

// Specification for app ingress configurations.
type AppIngressSpecArgs struct {
	// Rules for configuring HTTP ingress for component routes, CORS, rewrites, and redirects.
	Rules AppIngressSpecRuleArrayInput `pulumi:"rules"`
}

func (AppIngressSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpec)(nil)).Elem()
}

func (i AppIngressSpecArgs) ToAppIngressSpecOutput() AppIngressSpecOutput {
	return i.ToAppIngressSpecOutputWithContext(context.Background())
}

func (i AppIngressSpecArgs) ToAppIngressSpecOutputWithContext(ctx context.Context) AppIngressSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecOutput)
}

func (i AppIngressSpecArgs) ToAppIngressSpecPtrOutput() AppIngressSpecPtrOutput {
	return i.ToAppIngressSpecPtrOutputWithContext(context.Background())
}

func (i AppIngressSpecArgs) ToAppIngressSpecPtrOutputWithContext(ctx context.Context) AppIngressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecOutput).ToAppIngressSpecPtrOutputWithContext(ctx)
}

// AppIngressSpecPtrInput is an input type that accepts AppIngressSpecArgs, AppIngressSpecPtr and AppIngressSpecPtrOutput values.
// You can construct a concrete instance of `AppIngressSpecPtrInput` via:
//
//	        AppIngressSpecArgs{...}
//
//	or:
//
//	        nil
type AppIngressSpecPtrInput interface {
	pulumi.Input

	ToAppIngressSpecPtrOutput() AppIngressSpecPtrOutput
	ToAppIngressSpecPtrOutputWithContext(context.Context) AppIngressSpecPtrOutput
}

type appIngressSpecPtrType AppIngressSpecArgs

func AppIngressSpecPtr(v *AppIngressSpecArgs) AppIngressSpecPtrInput {
	return (*appIngressSpecPtrType)(v)
}

func (*appIngressSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpec)(nil)).Elem()
}

func (i *appIngressSpecPtrType) ToAppIngressSpecPtrOutput() AppIngressSpecPtrOutput {
	return i.ToAppIngressSpecPtrOutputWithContext(context.Background())
}

func (i *appIngressSpecPtrType) ToAppIngressSpecPtrOutputWithContext(ctx context.Context) AppIngressSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecPtrOutput)
}

// Specification for app ingress configurations.
type AppIngressSpecOutput struct{ *pulumi.OutputState }

func (AppIngressSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpec)(nil)).Elem()
}

func (o AppIngressSpecOutput) ToAppIngressSpecOutput() AppIngressSpecOutput {
	return o
}

func (o AppIngressSpecOutput) ToAppIngressSpecOutputWithContext(ctx context.Context) AppIngressSpecOutput {
	return o
}

func (o AppIngressSpecOutput) ToAppIngressSpecPtrOutput() AppIngressSpecPtrOutput {
	return o.ToAppIngressSpecPtrOutputWithContext(context.Background())
}

func (o AppIngressSpecOutput) ToAppIngressSpecPtrOutputWithContext(ctx context.Context) AppIngressSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIngressSpec) *AppIngressSpec {
		return &v
	}).(AppIngressSpecPtrOutput)
}

// Rules for configuring HTTP ingress for component routes, CORS, rewrites, and redirects.
func (o AppIngressSpecOutput) Rules() AppIngressSpecRuleArrayOutput {
	return o.ApplyT(func(v AppIngressSpec) []AppIngressSpecRule { return v.Rules }).(AppIngressSpecRuleArrayOutput)
}

type AppIngressSpecPtrOutput struct{ *pulumi.OutputState }

func (AppIngressSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpec)(nil)).Elem()
}

func (o AppIngressSpecPtrOutput) ToAppIngressSpecPtrOutput() AppIngressSpecPtrOutput {
	return o
}

func (o AppIngressSpecPtrOutput) ToAppIngressSpecPtrOutputWithContext(ctx context.Context) AppIngressSpecPtrOutput {
	return o
}

func (o AppIngressSpecPtrOutput) Elem() AppIngressSpecOutput {
	return o.ApplyT(func(v *AppIngressSpec) AppIngressSpec {
		if v != nil {
			return *v
		}
		var ret AppIngressSpec
		return ret
	}).(AppIngressSpecOutput)
}

// Rules for configuring HTTP ingress for component routes, CORS, rewrites, and redirects.
func (o AppIngressSpecPtrOutput) Rules() AppIngressSpecRuleArrayOutput {
	return o.ApplyT(func(v *AppIngressSpec) []AppIngressSpecRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(AppIngressSpecRuleArrayOutput)
}

type AppIngressSpecRule struct {
	// The component to route to. Only one of `component` or `redirect` may be set.
	Component *AppIngressSpecRuleRoutingComponent `pulumi:"component"`
	Cors      *AppsCorsPolicy                     `pulumi:"cors"`
	// The match configuration for the rule.
	Match *AppIngressSpecRuleMatch `pulumi:"match"`
	// The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
	Redirect *AppIngressSpecRuleRoutingRedirect `pulumi:"redirect"`
}

// AppIngressSpecRuleInput is an input type that accepts AppIngressSpecRuleArgs and AppIngressSpecRuleOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleInput` via:
//
//	AppIngressSpecRuleArgs{...}
type AppIngressSpecRuleInput interface {
	pulumi.Input

	ToAppIngressSpecRuleOutput() AppIngressSpecRuleOutput
	ToAppIngressSpecRuleOutputWithContext(context.Context) AppIngressSpecRuleOutput
}

type AppIngressSpecRuleArgs struct {
	// The component to route to. Only one of `component` or `redirect` may be set.
	Component AppIngressSpecRuleRoutingComponentPtrInput `pulumi:"component"`
	Cors      AppsCorsPolicyPtrInput                     `pulumi:"cors"`
	// The match configuration for the rule.
	Match AppIngressSpecRuleMatchPtrInput `pulumi:"match"`
	// The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
	Redirect AppIngressSpecRuleRoutingRedirectPtrInput `pulumi:"redirect"`
}

func (AppIngressSpecRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRule)(nil)).Elem()
}

func (i AppIngressSpecRuleArgs) ToAppIngressSpecRuleOutput() AppIngressSpecRuleOutput {
	return i.ToAppIngressSpecRuleOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleArgs) ToAppIngressSpecRuleOutputWithContext(ctx context.Context) AppIngressSpecRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleOutput)
}

// AppIngressSpecRuleArrayInput is an input type that accepts AppIngressSpecRuleArray and AppIngressSpecRuleArrayOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleArrayInput` via:
//
//	AppIngressSpecRuleArray{ AppIngressSpecRuleArgs{...} }
type AppIngressSpecRuleArrayInput interface {
	pulumi.Input

	ToAppIngressSpecRuleArrayOutput() AppIngressSpecRuleArrayOutput
	ToAppIngressSpecRuleArrayOutputWithContext(context.Context) AppIngressSpecRuleArrayOutput
}

type AppIngressSpecRuleArray []AppIngressSpecRuleInput

func (AppIngressSpecRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppIngressSpecRule)(nil)).Elem()
}

func (i AppIngressSpecRuleArray) ToAppIngressSpecRuleArrayOutput() AppIngressSpecRuleArrayOutput {
	return i.ToAppIngressSpecRuleArrayOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleArray) ToAppIngressSpecRuleArrayOutputWithContext(ctx context.Context) AppIngressSpecRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleArrayOutput)
}

type AppIngressSpecRuleOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRule)(nil)).Elem()
}

func (o AppIngressSpecRuleOutput) ToAppIngressSpecRuleOutput() AppIngressSpecRuleOutput {
	return o
}

func (o AppIngressSpecRuleOutput) ToAppIngressSpecRuleOutputWithContext(ctx context.Context) AppIngressSpecRuleOutput {
	return o
}

// The component to route to. Only one of `component` or `redirect` may be set.
func (o AppIngressSpecRuleOutput) Component() AppIngressSpecRuleRoutingComponentPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRule) *AppIngressSpecRuleRoutingComponent { return v.Component }).(AppIngressSpecRuleRoutingComponentPtrOutput)
}

func (o AppIngressSpecRuleOutput) Cors() AppsCorsPolicyPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRule) *AppsCorsPolicy { return v.Cors }).(AppsCorsPolicyPtrOutput)
}

// The match configuration for the rule.
func (o AppIngressSpecRuleOutput) Match() AppIngressSpecRuleMatchPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRule) *AppIngressSpecRuleMatch { return v.Match }).(AppIngressSpecRuleMatchPtrOutput)
}

// The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
func (o AppIngressSpecRuleOutput) Redirect() AppIngressSpecRuleRoutingRedirectPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRule) *AppIngressSpecRuleRoutingRedirect { return v.Redirect }).(AppIngressSpecRuleRoutingRedirectPtrOutput)
}

type AppIngressSpecRuleArrayOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppIngressSpecRule)(nil)).Elem()
}

func (o AppIngressSpecRuleArrayOutput) ToAppIngressSpecRuleArrayOutput() AppIngressSpecRuleArrayOutput {
	return o
}

func (o AppIngressSpecRuleArrayOutput) ToAppIngressSpecRuleArrayOutputWithContext(ctx context.Context) AppIngressSpecRuleArrayOutput {
	return o
}

func (o AppIngressSpecRuleArrayOutput) Index(i pulumi.IntInput) AppIngressSpecRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppIngressSpecRule {
		return vs[0].([]AppIngressSpecRule)[vs[1].(int)]
	}).(AppIngressSpecRuleOutput)
}

// The match configuration for the rule.
type AppIngressSpecRuleMatch struct {
	// The path to match on.
	Path AppIngressSpecRuleStringMatch `pulumi:"path"`
}

// AppIngressSpecRuleMatchInput is an input type that accepts AppIngressSpecRuleMatchArgs and AppIngressSpecRuleMatchOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleMatchInput` via:
//
//	AppIngressSpecRuleMatchArgs{...}
type AppIngressSpecRuleMatchInput interface {
	pulumi.Input

	ToAppIngressSpecRuleMatchOutput() AppIngressSpecRuleMatchOutput
	ToAppIngressSpecRuleMatchOutputWithContext(context.Context) AppIngressSpecRuleMatchOutput
}

// The match configuration for the rule.
type AppIngressSpecRuleMatchArgs struct {
	// The path to match on.
	Path AppIngressSpecRuleStringMatchInput `pulumi:"path"`
}

func (AppIngressSpecRuleMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleMatch)(nil)).Elem()
}

func (i AppIngressSpecRuleMatchArgs) ToAppIngressSpecRuleMatchOutput() AppIngressSpecRuleMatchOutput {
	return i.ToAppIngressSpecRuleMatchOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleMatchArgs) ToAppIngressSpecRuleMatchOutputWithContext(ctx context.Context) AppIngressSpecRuleMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleMatchOutput)
}

func (i AppIngressSpecRuleMatchArgs) ToAppIngressSpecRuleMatchPtrOutput() AppIngressSpecRuleMatchPtrOutput {
	return i.ToAppIngressSpecRuleMatchPtrOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleMatchArgs) ToAppIngressSpecRuleMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleMatchOutput).ToAppIngressSpecRuleMatchPtrOutputWithContext(ctx)
}

// AppIngressSpecRuleMatchPtrInput is an input type that accepts AppIngressSpecRuleMatchArgs, AppIngressSpecRuleMatchPtr and AppIngressSpecRuleMatchPtrOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleMatchPtrInput` via:
//
//	        AppIngressSpecRuleMatchArgs{...}
//
//	or:
//
//	        nil
type AppIngressSpecRuleMatchPtrInput interface {
	pulumi.Input

	ToAppIngressSpecRuleMatchPtrOutput() AppIngressSpecRuleMatchPtrOutput
	ToAppIngressSpecRuleMatchPtrOutputWithContext(context.Context) AppIngressSpecRuleMatchPtrOutput
}

type appIngressSpecRuleMatchPtrType AppIngressSpecRuleMatchArgs

func AppIngressSpecRuleMatchPtr(v *AppIngressSpecRuleMatchArgs) AppIngressSpecRuleMatchPtrInput {
	return (*appIngressSpecRuleMatchPtrType)(v)
}

func (*appIngressSpecRuleMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleMatch)(nil)).Elem()
}

func (i *appIngressSpecRuleMatchPtrType) ToAppIngressSpecRuleMatchPtrOutput() AppIngressSpecRuleMatchPtrOutput {
	return i.ToAppIngressSpecRuleMatchPtrOutputWithContext(context.Background())
}

func (i *appIngressSpecRuleMatchPtrType) ToAppIngressSpecRuleMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleMatchPtrOutput)
}

// The match configuration for the rule.
type AppIngressSpecRuleMatchOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleMatch)(nil)).Elem()
}

func (o AppIngressSpecRuleMatchOutput) ToAppIngressSpecRuleMatchOutput() AppIngressSpecRuleMatchOutput {
	return o
}

func (o AppIngressSpecRuleMatchOutput) ToAppIngressSpecRuleMatchOutputWithContext(ctx context.Context) AppIngressSpecRuleMatchOutput {
	return o
}

func (o AppIngressSpecRuleMatchOutput) ToAppIngressSpecRuleMatchPtrOutput() AppIngressSpecRuleMatchPtrOutput {
	return o.ToAppIngressSpecRuleMatchPtrOutputWithContext(context.Background())
}

func (o AppIngressSpecRuleMatchOutput) ToAppIngressSpecRuleMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIngressSpecRuleMatch) *AppIngressSpecRuleMatch {
		return &v
	}).(AppIngressSpecRuleMatchPtrOutput)
}

// The path to match on.
func (o AppIngressSpecRuleMatchOutput) Path() AppIngressSpecRuleStringMatchOutput {
	return o.ApplyT(func(v AppIngressSpecRuleMatch) AppIngressSpecRuleStringMatch { return v.Path }).(AppIngressSpecRuleStringMatchOutput)
}

type AppIngressSpecRuleMatchPtrOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleMatch)(nil)).Elem()
}

func (o AppIngressSpecRuleMatchPtrOutput) ToAppIngressSpecRuleMatchPtrOutput() AppIngressSpecRuleMatchPtrOutput {
	return o
}

func (o AppIngressSpecRuleMatchPtrOutput) ToAppIngressSpecRuleMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleMatchPtrOutput {
	return o
}

func (o AppIngressSpecRuleMatchPtrOutput) Elem() AppIngressSpecRuleMatchOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleMatch) AppIngressSpecRuleMatch {
		if v != nil {
			return *v
		}
		var ret AppIngressSpecRuleMatch
		return ret
	}).(AppIngressSpecRuleMatchOutput)
}

// The path to match on.
func (o AppIngressSpecRuleMatchPtrOutput) Path() AppIngressSpecRuleStringMatchPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleMatch) *AppIngressSpecRuleStringMatch {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(AppIngressSpecRuleStringMatchPtrOutput)
}

// The component to route to. Only one of `component` or `redirect` may be set.
type AppIngressSpecRuleRoutingComponent struct {
	// The name of the component to route to.
	Name string `pulumi:"name"`
	// An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`. Note: this is not applicable for Functions Components and is mutually exclusive with `rewrite`.
	PreservePathPrefix *string `pulumi:"preservePathPrefix"`
	// An optional field that will rewrite the path of the component to be what is specified here. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If you specified the rewrite to be `/v1/`, requests to `/api/list` would be rewritten to `/v1/list`. Note: this is mutually exclusive with `preserve_path_prefix`.
	Rewrite *string `pulumi:"rewrite"`
}

// AppIngressSpecRuleRoutingComponentInput is an input type that accepts AppIngressSpecRuleRoutingComponentArgs and AppIngressSpecRuleRoutingComponentOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleRoutingComponentInput` via:
//
//	AppIngressSpecRuleRoutingComponentArgs{...}
type AppIngressSpecRuleRoutingComponentInput interface {
	pulumi.Input

	ToAppIngressSpecRuleRoutingComponentOutput() AppIngressSpecRuleRoutingComponentOutput
	ToAppIngressSpecRuleRoutingComponentOutputWithContext(context.Context) AppIngressSpecRuleRoutingComponentOutput
}

// The component to route to. Only one of `component` or `redirect` may be set.
type AppIngressSpecRuleRoutingComponentArgs struct {
	// The name of the component to route to.
	Name pulumi.StringInput `pulumi:"name"`
	// An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`. Note: this is not applicable for Functions Components and is mutually exclusive with `rewrite`.
	PreservePathPrefix pulumi.StringPtrInput `pulumi:"preservePathPrefix"`
	// An optional field that will rewrite the path of the component to be what is specified here. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If you specified the rewrite to be `/v1/`, requests to `/api/list` would be rewritten to `/v1/list`. Note: this is mutually exclusive with `preserve_path_prefix`.
	Rewrite pulumi.StringPtrInput `pulumi:"rewrite"`
}

func (AppIngressSpecRuleRoutingComponentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleRoutingComponent)(nil)).Elem()
}

func (i AppIngressSpecRuleRoutingComponentArgs) ToAppIngressSpecRuleRoutingComponentOutput() AppIngressSpecRuleRoutingComponentOutput {
	return i.ToAppIngressSpecRuleRoutingComponentOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleRoutingComponentArgs) ToAppIngressSpecRuleRoutingComponentOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingComponentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleRoutingComponentOutput)
}

func (i AppIngressSpecRuleRoutingComponentArgs) ToAppIngressSpecRuleRoutingComponentPtrOutput() AppIngressSpecRuleRoutingComponentPtrOutput {
	return i.ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleRoutingComponentArgs) ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingComponentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleRoutingComponentOutput).ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(ctx)
}

// AppIngressSpecRuleRoutingComponentPtrInput is an input type that accepts AppIngressSpecRuleRoutingComponentArgs, AppIngressSpecRuleRoutingComponentPtr and AppIngressSpecRuleRoutingComponentPtrOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleRoutingComponentPtrInput` via:
//
//	        AppIngressSpecRuleRoutingComponentArgs{...}
//
//	or:
//
//	        nil
type AppIngressSpecRuleRoutingComponentPtrInput interface {
	pulumi.Input

	ToAppIngressSpecRuleRoutingComponentPtrOutput() AppIngressSpecRuleRoutingComponentPtrOutput
	ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(context.Context) AppIngressSpecRuleRoutingComponentPtrOutput
}

type appIngressSpecRuleRoutingComponentPtrType AppIngressSpecRuleRoutingComponentArgs

func AppIngressSpecRuleRoutingComponentPtr(v *AppIngressSpecRuleRoutingComponentArgs) AppIngressSpecRuleRoutingComponentPtrInput {
	return (*appIngressSpecRuleRoutingComponentPtrType)(v)
}

func (*appIngressSpecRuleRoutingComponentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleRoutingComponent)(nil)).Elem()
}

func (i *appIngressSpecRuleRoutingComponentPtrType) ToAppIngressSpecRuleRoutingComponentPtrOutput() AppIngressSpecRuleRoutingComponentPtrOutput {
	return i.ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(context.Background())
}

func (i *appIngressSpecRuleRoutingComponentPtrType) ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingComponentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleRoutingComponentPtrOutput)
}

// The component to route to. Only one of `component` or `redirect` may be set.
type AppIngressSpecRuleRoutingComponentOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleRoutingComponentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleRoutingComponent)(nil)).Elem()
}

func (o AppIngressSpecRuleRoutingComponentOutput) ToAppIngressSpecRuleRoutingComponentOutput() AppIngressSpecRuleRoutingComponentOutput {
	return o
}

func (o AppIngressSpecRuleRoutingComponentOutput) ToAppIngressSpecRuleRoutingComponentOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingComponentOutput {
	return o
}

func (o AppIngressSpecRuleRoutingComponentOutput) ToAppIngressSpecRuleRoutingComponentPtrOutput() AppIngressSpecRuleRoutingComponentPtrOutput {
	return o.ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(context.Background())
}

func (o AppIngressSpecRuleRoutingComponentOutput) ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingComponentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIngressSpecRuleRoutingComponent) *AppIngressSpecRuleRoutingComponent {
		return &v
	}).(AppIngressSpecRuleRoutingComponentPtrOutput)
}

// The name of the component to route to.
func (o AppIngressSpecRuleRoutingComponentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingComponent) string { return v.Name }).(pulumi.StringOutput)
}

// An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`. Note: this is not applicable for Functions Components and is mutually exclusive with `rewrite`.
func (o AppIngressSpecRuleRoutingComponentOutput) PreservePathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingComponent) *string { return v.PreservePathPrefix }).(pulumi.StringPtrOutput)
}

// An optional field that will rewrite the path of the component to be what is specified here. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If you specified the rewrite to be `/v1/`, requests to `/api/list` would be rewritten to `/v1/list`. Note: this is mutually exclusive with `preserve_path_prefix`.
func (o AppIngressSpecRuleRoutingComponentOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingComponent) *string { return v.Rewrite }).(pulumi.StringPtrOutput)
}

type AppIngressSpecRuleRoutingComponentPtrOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleRoutingComponentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleRoutingComponent)(nil)).Elem()
}

func (o AppIngressSpecRuleRoutingComponentPtrOutput) ToAppIngressSpecRuleRoutingComponentPtrOutput() AppIngressSpecRuleRoutingComponentPtrOutput {
	return o
}

func (o AppIngressSpecRuleRoutingComponentPtrOutput) ToAppIngressSpecRuleRoutingComponentPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingComponentPtrOutput {
	return o
}

func (o AppIngressSpecRuleRoutingComponentPtrOutput) Elem() AppIngressSpecRuleRoutingComponentOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingComponent) AppIngressSpecRuleRoutingComponent {
		if v != nil {
			return *v
		}
		var ret AppIngressSpecRuleRoutingComponent
		return ret
	}).(AppIngressSpecRuleRoutingComponentOutput)
}

// The name of the component to route to.
func (o AppIngressSpecRuleRoutingComponentPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingComponent) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`. Note: this is not applicable for Functions Components and is mutually exclusive with `rewrite`.
func (o AppIngressSpecRuleRoutingComponentPtrOutput) PreservePathPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingComponent) *string {
		if v == nil {
			return nil
		}
		return v.PreservePathPrefix
	}).(pulumi.StringPtrOutput)
}

// An optional field that will rewrite the path of the component to be what is specified here. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If you specified the rewrite to be `/v1/`, requests to `/api/list` would be rewritten to `/v1/list`. Note: this is mutually exclusive with `preserve_path_prefix`.
func (o AppIngressSpecRuleRoutingComponentPtrOutput) Rewrite() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingComponent) *string {
		if v == nil {
			return nil
		}
		return v.Rewrite
	}).(pulumi.StringPtrOutput)
}

// The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
type AppIngressSpecRuleRoutingRedirect struct {
	// The authority/host to redirect to. This can be a hostname or IP address. Note: use `port` to set the port.
	Authority *string `pulumi:"authority"`
	// The port to redirect to.
	Port *int `pulumi:"port"`
	// The redirect code to use. Defaults to `302`. Supported values are 300, 301, 302, 303, 304, 307, 308.
	RedirectCode *int `pulumi:"redirectCode"`
	// The scheme to redirect to. Supported values are `http` or `https`. Default: `https`.
	Scheme *string `pulumi:"scheme"`
	// An optional URI path to redirect to. Note: if this is specified the whole URI of the original request will be overwritten to this value, irrespective of the original request URI being matched.
	Uri *string `pulumi:"uri"`
}

// AppIngressSpecRuleRoutingRedirectInput is an input type that accepts AppIngressSpecRuleRoutingRedirectArgs and AppIngressSpecRuleRoutingRedirectOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleRoutingRedirectInput` via:
//
//	AppIngressSpecRuleRoutingRedirectArgs{...}
type AppIngressSpecRuleRoutingRedirectInput interface {
	pulumi.Input

	ToAppIngressSpecRuleRoutingRedirectOutput() AppIngressSpecRuleRoutingRedirectOutput
	ToAppIngressSpecRuleRoutingRedirectOutputWithContext(context.Context) AppIngressSpecRuleRoutingRedirectOutput
}

// The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
type AppIngressSpecRuleRoutingRedirectArgs struct {
	// The authority/host to redirect to. This can be a hostname or IP address. Note: use `port` to set the port.
	Authority pulumi.StringPtrInput `pulumi:"authority"`
	// The port to redirect to.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The redirect code to use. Defaults to `302`. Supported values are 300, 301, 302, 303, 304, 307, 308.
	RedirectCode pulumi.IntPtrInput `pulumi:"redirectCode"`
	// The scheme to redirect to. Supported values are `http` or `https`. Default: `https`.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
	// An optional URI path to redirect to. Note: if this is specified the whole URI of the original request will be overwritten to this value, irrespective of the original request URI being matched.
	Uri pulumi.StringPtrInput `pulumi:"uri"`
}

func (AppIngressSpecRuleRoutingRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleRoutingRedirect)(nil)).Elem()
}

func (i AppIngressSpecRuleRoutingRedirectArgs) ToAppIngressSpecRuleRoutingRedirectOutput() AppIngressSpecRuleRoutingRedirectOutput {
	return i.ToAppIngressSpecRuleRoutingRedirectOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleRoutingRedirectArgs) ToAppIngressSpecRuleRoutingRedirectOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleRoutingRedirectOutput)
}

func (i AppIngressSpecRuleRoutingRedirectArgs) ToAppIngressSpecRuleRoutingRedirectPtrOutput() AppIngressSpecRuleRoutingRedirectPtrOutput {
	return i.ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleRoutingRedirectArgs) ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleRoutingRedirectOutput).ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(ctx)
}

// AppIngressSpecRuleRoutingRedirectPtrInput is an input type that accepts AppIngressSpecRuleRoutingRedirectArgs, AppIngressSpecRuleRoutingRedirectPtr and AppIngressSpecRuleRoutingRedirectPtrOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleRoutingRedirectPtrInput` via:
//
//	        AppIngressSpecRuleRoutingRedirectArgs{...}
//
//	or:
//
//	        nil
type AppIngressSpecRuleRoutingRedirectPtrInput interface {
	pulumi.Input

	ToAppIngressSpecRuleRoutingRedirectPtrOutput() AppIngressSpecRuleRoutingRedirectPtrOutput
	ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(context.Context) AppIngressSpecRuleRoutingRedirectPtrOutput
}

type appIngressSpecRuleRoutingRedirectPtrType AppIngressSpecRuleRoutingRedirectArgs

func AppIngressSpecRuleRoutingRedirectPtr(v *AppIngressSpecRuleRoutingRedirectArgs) AppIngressSpecRuleRoutingRedirectPtrInput {
	return (*appIngressSpecRuleRoutingRedirectPtrType)(v)
}

func (*appIngressSpecRuleRoutingRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleRoutingRedirect)(nil)).Elem()
}

func (i *appIngressSpecRuleRoutingRedirectPtrType) ToAppIngressSpecRuleRoutingRedirectPtrOutput() AppIngressSpecRuleRoutingRedirectPtrOutput {
	return i.ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(context.Background())
}

func (i *appIngressSpecRuleRoutingRedirectPtrType) ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleRoutingRedirectPtrOutput)
}

// The redirect configuration for the rule. Only one of `component` or `redirect` may be set.
type AppIngressSpecRuleRoutingRedirectOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleRoutingRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleRoutingRedirect)(nil)).Elem()
}

func (o AppIngressSpecRuleRoutingRedirectOutput) ToAppIngressSpecRuleRoutingRedirectOutput() AppIngressSpecRuleRoutingRedirectOutput {
	return o
}

func (o AppIngressSpecRuleRoutingRedirectOutput) ToAppIngressSpecRuleRoutingRedirectOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingRedirectOutput {
	return o
}

func (o AppIngressSpecRuleRoutingRedirectOutput) ToAppIngressSpecRuleRoutingRedirectPtrOutput() AppIngressSpecRuleRoutingRedirectPtrOutput {
	return o.ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(context.Background())
}

func (o AppIngressSpecRuleRoutingRedirectOutput) ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIngressSpecRuleRoutingRedirect) *AppIngressSpecRuleRoutingRedirect {
		return &v
	}).(AppIngressSpecRuleRoutingRedirectPtrOutput)
}

// The authority/host to redirect to. This can be a hostname or IP address. Note: use `port` to set the port.
func (o AppIngressSpecRuleRoutingRedirectOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingRedirect) *string { return v.Authority }).(pulumi.StringPtrOutput)
}

// The port to redirect to.
func (o AppIngressSpecRuleRoutingRedirectOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingRedirect) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The redirect code to use. Defaults to `302`. Supported values are 300, 301, 302, 303, 304, 307, 308.
func (o AppIngressSpecRuleRoutingRedirectOutput) RedirectCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingRedirect) *int { return v.RedirectCode }).(pulumi.IntPtrOutput)
}

// The scheme to redirect to. Supported values are `http` or `https`. Default: `https`.
func (o AppIngressSpecRuleRoutingRedirectOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingRedirect) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

// An optional URI path to redirect to. Note: if this is specified the whole URI of the original request will be overwritten to this value, irrespective of the original request URI being matched.
func (o AppIngressSpecRuleRoutingRedirectOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppIngressSpecRuleRoutingRedirect) *string { return v.Uri }).(pulumi.StringPtrOutput)
}

type AppIngressSpecRuleRoutingRedirectPtrOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleRoutingRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleRoutingRedirect)(nil)).Elem()
}

func (o AppIngressSpecRuleRoutingRedirectPtrOutput) ToAppIngressSpecRuleRoutingRedirectPtrOutput() AppIngressSpecRuleRoutingRedirectPtrOutput {
	return o
}

func (o AppIngressSpecRuleRoutingRedirectPtrOutput) ToAppIngressSpecRuleRoutingRedirectPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleRoutingRedirectPtrOutput {
	return o
}

func (o AppIngressSpecRuleRoutingRedirectPtrOutput) Elem() AppIngressSpecRuleRoutingRedirectOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingRedirect) AppIngressSpecRuleRoutingRedirect {
		if v != nil {
			return *v
		}
		var ret AppIngressSpecRuleRoutingRedirect
		return ret
	}).(AppIngressSpecRuleRoutingRedirectOutput)
}

// The authority/host to redirect to. This can be a hostname or IP address. Note: use `port` to set the port.
func (o AppIngressSpecRuleRoutingRedirectPtrOutput) Authority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Authority
	}).(pulumi.StringPtrOutput)
}

// The port to redirect to.
func (o AppIngressSpecRuleRoutingRedirectPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingRedirect) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The redirect code to use. Defaults to `302`. Supported values are 300, 301, 302, 303, 304, 307, 308.
func (o AppIngressSpecRuleRoutingRedirectPtrOutput) RedirectCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingRedirect) *int {
		if v == nil {
			return nil
		}
		return v.RedirectCode
	}).(pulumi.IntPtrOutput)
}

// The scheme to redirect to. Supported values are `http` or `https`. Default: `https`.
func (o AppIngressSpecRuleRoutingRedirectPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// An optional URI path to redirect to. Note: if this is specified the whole URI of the original request will be overwritten to this value, irrespective of the original request URI being matched.
func (o AppIngressSpecRuleRoutingRedirectPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleRoutingRedirect) *string {
		if v == nil {
			return nil
		}
		return v.Uri
	}).(pulumi.StringPtrOutput)
}

// The path to match on.
type AppIngressSpecRuleStringMatch struct {
	// Prefix-based match. For example, `/api` will match `/api`, `/api/`, and any nested paths such as `/api/v1/endpoint`.
	Prefix string `pulumi:"prefix"`
}

// AppIngressSpecRuleStringMatchInput is an input type that accepts AppIngressSpecRuleStringMatchArgs and AppIngressSpecRuleStringMatchOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleStringMatchInput` via:
//
//	AppIngressSpecRuleStringMatchArgs{...}
type AppIngressSpecRuleStringMatchInput interface {
	pulumi.Input

	ToAppIngressSpecRuleStringMatchOutput() AppIngressSpecRuleStringMatchOutput
	ToAppIngressSpecRuleStringMatchOutputWithContext(context.Context) AppIngressSpecRuleStringMatchOutput
}

// The path to match on.
type AppIngressSpecRuleStringMatchArgs struct {
	// Prefix-based match. For example, `/api` will match `/api`, `/api/`, and any nested paths such as `/api/v1/endpoint`.
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (AppIngressSpecRuleStringMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleStringMatch)(nil)).Elem()
}

func (i AppIngressSpecRuleStringMatchArgs) ToAppIngressSpecRuleStringMatchOutput() AppIngressSpecRuleStringMatchOutput {
	return i.ToAppIngressSpecRuleStringMatchOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleStringMatchArgs) ToAppIngressSpecRuleStringMatchOutputWithContext(ctx context.Context) AppIngressSpecRuleStringMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleStringMatchOutput)
}

func (i AppIngressSpecRuleStringMatchArgs) ToAppIngressSpecRuleStringMatchPtrOutput() AppIngressSpecRuleStringMatchPtrOutput {
	return i.ToAppIngressSpecRuleStringMatchPtrOutputWithContext(context.Background())
}

func (i AppIngressSpecRuleStringMatchArgs) ToAppIngressSpecRuleStringMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleStringMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleStringMatchOutput).ToAppIngressSpecRuleStringMatchPtrOutputWithContext(ctx)
}

// AppIngressSpecRuleStringMatchPtrInput is an input type that accepts AppIngressSpecRuleStringMatchArgs, AppIngressSpecRuleStringMatchPtr and AppIngressSpecRuleStringMatchPtrOutput values.
// You can construct a concrete instance of `AppIngressSpecRuleStringMatchPtrInput` via:
//
//	        AppIngressSpecRuleStringMatchArgs{...}
//
//	or:
//
//	        nil
type AppIngressSpecRuleStringMatchPtrInput interface {
	pulumi.Input

	ToAppIngressSpecRuleStringMatchPtrOutput() AppIngressSpecRuleStringMatchPtrOutput
	ToAppIngressSpecRuleStringMatchPtrOutputWithContext(context.Context) AppIngressSpecRuleStringMatchPtrOutput
}

type appIngressSpecRuleStringMatchPtrType AppIngressSpecRuleStringMatchArgs

func AppIngressSpecRuleStringMatchPtr(v *AppIngressSpecRuleStringMatchArgs) AppIngressSpecRuleStringMatchPtrInput {
	return (*appIngressSpecRuleStringMatchPtrType)(v)
}

func (*appIngressSpecRuleStringMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleStringMatch)(nil)).Elem()
}

func (i *appIngressSpecRuleStringMatchPtrType) ToAppIngressSpecRuleStringMatchPtrOutput() AppIngressSpecRuleStringMatchPtrOutput {
	return i.ToAppIngressSpecRuleStringMatchPtrOutputWithContext(context.Background())
}

func (i *appIngressSpecRuleStringMatchPtrType) ToAppIngressSpecRuleStringMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleStringMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppIngressSpecRuleStringMatchPtrOutput)
}

// The path to match on.
type AppIngressSpecRuleStringMatchOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleStringMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppIngressSpecRuleStringMatch)(nil)).Elem()
}

func (o AppIngressSpecRuleStringMatchOutput) ToAppIngressSpecRuleStringMatchOutput() AppIngressSpecRuleStringMatchOutput {
	return o
}

func (o AppIngressSpecRuleStringMatchOutput) ToAppIngressSpecRuleStringMatchOutputWithContext(ctx context.Context) AppIngressSpecRuleStringMatchOutput {
	return o
}

func (o AppIngressSpecRuleStringMatchOutput) ToAppIngressSpecRuleStringMatchPtrOutput() AppIngressSpecRuleStringMatchPtrOutput {
	return o.ToAppIngressSpecRuleStringMatchPtrOutputWithContext(context.Background())
}

func (o AppIngressSpecRuleStringMatchOutput) ToAppIngressSpecRuleStringMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleStringMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppIngressSpecRuleStringMatch) *AppIngressSpecRuleStringMatch {
		return &v
	}).(AppIngressSpecRuleStringMatchPtrOutput)
}

// Prefix-based match. For example, `/api` will match `/api`, `/api/`, and any nested paths such as `/api/v1/endpoint`.
func (o AppIngressSpecRuleStringMatchOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v AppIngressSpecRuleStringMatch) string { return v.Prefix }).(pulumi.StringOutput)
}

type AppIngressSpecRuleStringMatchPtrOutput struct{ *pulumi.OutputState }

func (AppIngressSpecRuleStringMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppIngressSpecRuleStringMatch)(nil)).Elem()
}

func (o AppIngressSpecRuleStringMatchPtrOutput) ToAppIngressSpecRuleStringMatchPtrOutput() AppIngressSpecRuleStringMatchPtrOutput {
	return o
}

func (o AppIngressSpecRuleStringMatchPtrOutput) ToAppIngressSpecRuleStringMatchPtrOutputWithContext(ctx context.Context) AppIngressSpecRuleStringMatchPtrOutput {
	return o
}

func (o AppIngressSpecRuleStringMatchPtrOutput) Elem() AppIngressSpecRuleStringMatchOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleStringMatch) AppIngressSpecRuleStringMatch {
		if v != nil {
			return *v
		}
		var ret AppIngressSpecRuleStringMatch
		return ret
	}).(AppIngressSpecRuleStringMatchOutput)
}

// Prefix-based match. For example, `/api` will match `/api`, `/api/`, and any nested paths such as `/api/v1/endpoint`.
func (o AppIngressSpecRuleStringMatchPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppIngressSpecRuleStringMatch) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

type AppJobSpec struct {
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs   []AppVariableDefinition `pulumi:"envs"`
	Git    *AppsGitSourceSpec      `pulumi:"git"`
	Github *AppsGithubSourceSpec   `pulumi:"github"`
	Gitlab *AppsGitlabSourceSpec   `pulumi:"gitlab"`
	Image  *AppsImageSourceSpec    `pulumi:"image"`
	// The amount of instances that this component should be scaled to. Default: 1
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component. Default: `basic-xxs`
	InstanceSizeSlug *AppComponentInstanceBaseInstanceSizeSlug `pulumi:"instanceSizeSlug"`
	// - UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.
	// - PRE_DEPLOY: Indicates a job that runs before an app deployment.
	// - POST_DEPLOY: Indicates a job that runs after an app deployment.
	// - FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.
	Kind            *AppJobSpecPropertiesKind    `pulumi:"kind"`
	LogDestinations *AppLogDestinationDefinition `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name *string `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir *string `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppJobSpec
func (val *AppJobSpec) Defaults() *AppJobSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Image = tmp.Image.Defaults()

	if tmp.InstanceCount == nil {
		instanceCount_ := 1
		tmp.InstanceCount = &instanceCount_
	}
	if tmp.InstanceSizeSlug == nil {
		instanceSizeSlug_ := AppComponentInstanceBaseInstanceSizeSlug("basic-xxs")
		tmp.InstanceSizeSlug = &instanceSizeSlug_
	}
	if tmp.Kind == nil {
		kind_ := AppJobSpecPropertiesKind("UNSPECIFIED")
		tmp.Kind = &kind_
	}
	return &tmp
}

// AppJobSpecInput is an input type that accepts AppJobSpecArgs and AppJobSpecOutput values.
// You can construct a concrete instance of `AppJobSpecInput` via:
//
//	AppJobSpecArgs{...}
type AppJobSpecInput interface {
	pulumi.Input

	ToAppJobSpecOutput() AppJobSpecOutput
	ToAppJobSpecOutputWithContext(context.Context) AppJobSpecOutput
}

type AppJobSpecArgs struct {
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs   AppVariableDefinitionArrayInput `pulumi:"envs"`
	Git    AppsGitSourceSpecPtrInput       `pulumi:"git"`
	Github AppsGithubSourceSpecPtrInput    `pulumi:"github"`
	Gitlab AppsGitlabSourceSpecPtrInput    `pulumi:"gitlab"`
	Image  AppsImageSourceSpecPtrInput     `pulumi:"image"`
	// The amount of instances that this component should be scaled to. Default: 1
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component. Default: `basic-xxs`
	InstanceSizeSlug AppComponentInstanceBaseInstanceSizeSlugPtrInput `pulumi:"instanceSizeSlug"`
	// - UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.
	// - PRE_DEPLOY: Indicates a job that runs before an app deployment.
	// - POST_DEPLOY: Indicates a job that runs after an app deployment.
	// - FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.
	Kind            AppJobSpecPropertiesKindPtrInput    `pulumi:"kind"`
	LogDestinations AppLogDestinationDefinitionPtrInput `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppJobSpecArgs
func (val *AppJobSpecArgs) Defaults() *AppJobSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.InstanceCount == nil {
		tmp.InstanceCount = pulumi.IntPtr(1)
	}
	if tmp.InstanceSizeSlug == nil {
		tmp.InstanceSizeSlug = AppComponentInstanceBaseInstanceSizeSlug("basic-xxs")
	}
	if tmp.Kind == nil {
		tmp.Kind = AppJobSpecPropertiesKind("UNSPECIFIED")
	}
	return &tmp
}
func (AppJobSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppJobSpec)(nil)).Elem()
}

func (i AppJobSpecArgs) ToAppJobSpecOutput() AppJobSpecOutput {
	return i.ToAppJobSpecOutputWithContext(context.Background())
}

func (i AppJobSpecArgs) ToAppJobSpecOutputWithContext(ctx context.Context) AppJobSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppJobSpecOutput)
}

// AppJobSpecArrayInput is an input type that accepts AppJobSpecArray and AppJobSpecArrayOutput values.
// You can construct a concrete instance of `AppJobSpecArrayInput` via:
//
//	AppJobSpecArray{ AppJobSpecArgs{...} }
type AppJobSpecArrayInput interface {
	pulumi.Input

	ToAppJobSpecArrayOutput() AppJobSpecArrayOutput
	ToAppJobSpecArrayOutputWithContext(context.Context) AppJobSpecArrayOutput
}

type AppJobSpecArray []AppJobSpecInput

func (AppJobSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppJobSpec)(nil)).Elem()
}

func (i AppJobSpecArray) ToAppJobSpecArrayOutput() AppJobSpecArrayOutput {
	return i.ToAppJobSpecArrayOutputWithContext(context.Background())
}

func (i AppJobSpecArray) ToAppJobSpecArrayOutputWithContext(ctx context.Context) AppJobSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppJobSpecArrayOutput)
}

type AppJobSpecOutput struct{ *pulumi.OutputState }

func (AppJobSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppJobSpec)(nil)).Elem()
}

func (o AppJobSpecOutput) ToAppJobSpecOutput() AppJobSpecOutput {
	return o
}

func (o AppJobSpecOutput) ToAppJobSpecOutputWithContext(ctx context.Context) AppJobSpecOutput {
	return o
}

// An optional build command to run while building this component from source.
func (o AppJobSpecOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
func (o AppJobSpecOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
func (o AppJobSpecOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// A list of environment variables made available to the component.
func (o AppJobSpecOutput) Envs() AppVariableDefinitionArrayOutput {
	return o.ApplyT(func(v AppJobSpec) []AppVariableDefinition { return v.Envs }).(AppVariableDefinitionArrayOutput)
}

func (o AppJobSpecOutput) Git() AppsGitSourceSpecPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *AppsGitSourceSpec { return v.Git }).(AppsGitSourceSpecPtrOutput)
}

func (o AppJobSpecOutput) Github() AppsGithubSourceSpecPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *AppsGithubSourceSpec { return v.Github }).(AppsGithubSourceSpecPtrOutput)
}

func (o AppJobSpecOutput) Gitlab() AppsGitlabSourceSpecPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *AppsGitlabSourceSpec { return v.Gitlab }).(AppsGitlabSourceSpecPtrOutput)
}

func (o AppJobSpecOutput) Image() AppsImageSourceSpecPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *AppsImageSourceSpec { return v.Image }).(AppsImageSourceSpecPtrOutput)
}

// The amount of instances that this component should be scaled to. Default: 1
func (o AppJobSpecOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component. Default: `basic-xxs`
func (o AppJobSpecOutput) InstanceSizeSlug() AppComponentInstanceBaseInstanceSizeSlugPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *AppComponentInstanceBaseInstanceSizeSlug { return v.InstanceSizeSlug }).(AppComponentInstanceBaseInstanceSizeSlugPtrOutput)
}

// - UNSPECIFIED: Default job type, will auto-complete to POST_DEPLOY kind.
// - PRE_DEPLOY: Indicates a job that runs before an app deployment.
// - POST_DEPLOY: Indicates a job that runs after an app deployment.
// - FAILED_DEPLOY: Indicates a job that runs after a component fails to deploy.
func (o AppJobSpecOutput) Kind() AppJobSpecPropertiesKindPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *AppJobSpecPropertiesKind { return v.Kind }).(AppJobSpecPropertiesKindPtrOutput)
}

func (o AppJobSpecOutput) LogDestinations() AppLogDestinationDefinitionPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *AppLogDestinationDefinition { return v.LogDestinations }).(AppLogDestinationDefinitionPtrOutput)
}

// The name. Must be unique across all components within the same app.
func (o AppJobSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An optional run command to override the component's default.
func (o AppJobSpecOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
func (o AppJobSpecOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppJobSpec) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppJobSpecArrayOutput struct{ *pulumi.OutputState }

func (AppJobSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppJobSpec)(nil)).Elem()
}

func (o AppJobSpecArrayOutput) ToAppJobSpecArrayOutput() AppJobSpecArrayOutput {
	return o
}

func (o AppJobSpecArrayOutput) ToAppJobSpecArrayOutputWithContext(ctx context.Context) AppJobSpecArrayOutput {
	return o
}

func (o AppJobSpecArrayOutput) Index(i pulumi.IntInput) AppJobSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppJobSpec {
		return vs[0].([]AppJobSpec)[vs[1].(int)]
	}).(AppJobSpecOutput)
}

// DataDog configuration.
type AppLogDestinationDatadogSpec struct {
	// Datadog API key.
	ApiKey string `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint *string `pulumi:"endpoint"`
}

// AppLogDestinationDatadogSpecInput is an input type that accepts AppLogDestinationDatadogSpecArgs and AppLogDestinationDatadogSpecOutput values.
// You can construct a concrete instance of `AppLogDestinationDatadogSpecInput` via:
//
//	AppLogDestinationDatadogSpecArgs{...}
type AppLogDestinationDatadogSpecInput interface {
	pulumi.Input

	ToAppLogDestinationDatadogSpecOutput() AppLogDestinationDatadogSpecOutput
	ToAppLogDestinationDatadogSpecOutputWithContext(context.Context) AppLogDestinationDatadogSpecOutput
}

// DataDog configuration.
type AppLogDestinationDatadogSpecArgs struct {
	// Datadog API key.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
}

func (AppLogDestinationDatadogSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationDatadogSpec)(nil)).Elem()
}

func (i AppLogDestinationDatadogSpecArgs) ToAppLogDestinationDatadogSpecOutput() AppLogDestinationDatadogSpecOutput {
	return i.ToAppLogDestinationDatadogSpecOutputWithContext(context.Background())
}

func (i AppLogDestinationDatadogSpecArgs) ToAppLogDestinationDatadogSpecOutputWithContext(ctx context.Context) AppLogDestinationDatadogSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationDatadogSpecOutput)
}

func (i AppLogDestinationDatadogSpecArgs) ToAppLogDestinationDatadogSpecPtrOutput() AppLogDestinationDatadogSpecPtrOutput {
	return i.ToAppLogDestinationDatadogSpecPtrOutputWithContext(context.Background())
}

func (i AppLogDestinationDatadogSpecArgs) ToAppLogDestinationDatadogSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationDatadogSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationDatadogSpecOutput).ToAppLogDestinationDatadogSpecPtrOutputWithContext(ctx)
}

// AppLogDestinationDatadogSpecPtrInput is an input type that accepts AppLogDestinationDatadogSpecArgs, AppLogDestinationDatadogSpecPtr and AppLogDestinationDatadogSpecPtrOutput values.
// You can construct a concrete instance of `AppLogDestinationDatadogSpecPtrInput` via:
//
//	        AppLogDestinationDatadogSpecArgs{...}
//
//	or:
//
//	        nil
type AppLogDestinationDatadogSpecPtrInput interface {
	pulumi.Input

	ToAppLogDestinationDatadogSpecPtrOutput() AppLogDestinationDatadogSpecPtrOutput
	ToAppLogDestinationDatadogSpecPtrOutputWithContext(context.Context) AppLogDestinationDatadogSpecPtrOutput
}

type appLogDestinationDatadogSpecPtrType AppLogDestinationDatadogSpecArgs

func AppLogDestinationDatadogSpecPtr(v *AppLogDestinationDatadogSpecArgs) AppLogDestinationDatadogSpecPtrInput {
	return (*appLogDestinationDatadogSpecPtrType)(v)
}

func (*appLogDestinationDatadogSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationDatadogSpec)(nil)).Elem()
}

func (i *appLogDestinationDatadogSpecPtrType) ToAppLogDestinationDatadogSpecPtrOutput() AppLogDestinationDatadogSpecPtrOutput {
	return i.ToAppLogDestinationDatadogSpecPtrOutputWithContext(context.Background())
}

func (i *appLogDestinationDatadogSpecPtrType) ToAppLogDestinationDatadogSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationDatadogSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationDatadogSpecPtrOutput)
}

// DataDog configuration.
type AppLogDestinationDatadogSpecOutput struct{ *pulumi.OutputState }

func (AppLogDestinationDatadogSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationDatadogSpec)(nil)).Elem()
}

func (o AppLogDestinationDatadogSpecOutput) ToAppLogDestinationDatadogSpecOutput() AppLogDestinationDatadogSpecOutput {
	return o
}

func (o AppLogDestinationDatadogSpecOutput) ToAppLogDestinationDatadogSpecOutputWithContext(ctx context.Context) AppLogDestinationDatadogSpecOutput {
	return o
}

func (o AppLogDestinationDatadogSpecOutput) ToAppLogDestinationDatadogSpecPtrOutput() AppLogDestinationDatadogSpecPtrOutput {
	return o.ToAppLogDestinationDatadogSpecPtrOutputWithContext(context.Background())
}

func (o AppLogDestinationDatadogSpecOutput) ToAppLogDestinationDatadogSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationDatadogSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppLogDestinationDatadogSpec) *AppLogDestinationDatadogSpec {
		return &v
	}).(AppLogDestinationDatadogSpecPtrOutput)
}

// Datadog API key.
func (o AppLogDestinationDatadogSpecOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppLogDestinationDatadogSpec) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppLogDestinationDatadogSpecOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppLogDestinationDatadogSpec) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

type AppLogDestinationDatadogSpecPtrOutput struct{ *pulumi.OutputState }

func (AppLogDestinationDatadogSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationDatadogSpec)(nil)).Elem()
}

func (o AppLogDestinationDatadogSpecPtrOutput) ToAppLogDestinationDatadogSpecPtrOutput() AppLogDestinationDatadogSpecPtrOutput {
	return o
}

func (o AppLogDestinationDatadogSpecPtrOutput) ToAppLogDestinationDatadogSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationDatadogSpecPtrOutput {
	return o
}

func (o AppLogDestinationDatadogSpecPtrOutput) Elem() AppLogDestinationDatadogSpecOutput {
	return o.ApplyT(func(v *AppLogDestinationDatadogSpec) AppLogDestinationDatadogSpec {
		if v != nil {
			return *v
		}
		var ret AppLogDestinationDatadogSpec
		return ret
	}).(AppLogDestinationDatadogSpecOutput)
}

// Datadog API key.
func (o AppLogDestinationDatadogSpecPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationDatadogSpec) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppLogDestinationDatadogSpecPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationDatadogSpec) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type AppLogDestinationDefinition struct {
	// DataDog configuration.
	Datadog *AppLogDestinationDatadogSpec `pulumi:"datadog"`
	// Logtail configuration.
	Logtail *AppLogDestinationLogtailSpec `pulumi:"logtail"`
	Name    string                        `pulumi:"name"`
	// Papertrail configuration.
	Papertrail *AppLogDestinationPapertrailSpec `pulumi:"papertrail"`
}

// AppLogDestinationDefinitionInput is an input type that accepts AppLogDestinationDefinitionArgs and AppLogDestinationDefinitionOutput values.
// You can construct a concrete instance of `AppLogDestinationDefinitionInput` via:
//
//	AppLogDestinationDefinitionArgs{...}
type AppLogDestinationDefinitionInput interface {
	pulumi.Input

	ToAppLogDestinationDefinitionOutput() AppLogDestinationDefinitionOutput
	ToAppLogDestinationDefinitionOutputWithContext(context.Context) AppLogDestinationDefinitionOutput
}

type AppLogDestinationDefinitionArgs struct {
	// DataDog configuration.
	Datadog AppLogDestinationDatadogSpecPtrInput `pulumi:"datadog"`
	// Logtail configuration.
	Logtail AppLogDestinationLogtailSpecPtrInput `pulumi:"logtail"`
	Name    pulumi.StringInput                   `pulumi:"name"`
	// Papertrail configuration.
	Papertrail AppLogDestinationPapertrailSpecPtrInput `pulumi:"papertrail"`
}

func (AppLogDestinationDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationDefinition)(nil)).Elem()
}

func (i AppLogDestinationDefinitionArgs) ToAppLogDestinationDefinitionOutput() AppLogDestinationDefinitionOutput {
	return i.ToAppLogDestinationDefinitionOutputWithContext(context.Background())
}

func (i AppLogDestinationDefinitionArgs) ToAppLogDestinationDefinitionOutputWithContext(ctx context.Context) AppLogDestinationDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationDefinitionOutput)
}

func (i AppLogDestinationDefinitionArgs) ToAppLogDestinationDefinitionPtrOutput() AppLogDestinationDefinitionPtrOutput {
	return i.ToAppLogDestinationDefinitionPtrOutputWithContext(context.Background())
}

func (i AppLogDestinationDefinitionArgs) ToAppLogDestinationDefinitionPtrOutputWithContext(ctx context.Context) AppLogDestinationDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationDefinitionOutput).ToAppLogDestinationDefinitionPtrOutputWithContext(ctx)
}

// AppLogDestinationDefinitionPtrInput is an input type that accepts AppLogDestinationDefinitionArgs, AppLogDestinationDefinitionPtr and AppLogDestinationDefinitionPtrOutput values.
// You can construct a concrete instance of `AppLogDestinationDefinitionPtrInput` via:
//
//	        AppLogDestinationDefinitionArgs{...}
//
//	or:
//
//	        nil
type AppLogDestinationDefinitionPtrInput interface {
	pulumi.Input

	ToAppLogDestinationDefinitionPtrOutput() AppLogDestinationDefinitionPtrOutput
	ToAppLogDestinationDefinitionPtrOutputWithContext(context.Context) AppLogDestinationDefinitionPtrOutput
}

type appLogDestinationDefinitionPtrType AppLogDestinationDefinitionArgs

func AppLogDestinationDefinitionPtr(v *AppLogDestinationDefinitionArgs) AppLogDestinationDefinitionPtrInput {
	return (*appLogDestinationDefinitionPtrType)(v)
}

func (*appLogDestinationDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationDefinition)(nil)).Elem()
}

func (i *appLogDestinationDefinitionPtrType) ToAppLogDestinationDefinitionPtrOutput() AppLogDestinationDefinitionPtrOutput {
	return i.ToAppLogDestinationDefinitionPtrOutputWithContext(context.Background())
}

func (i *appLogDestinationDefinitionPtrType) ToAppLogDestinationDefinitionPtrOutputWithContext(ctx context.Context) AppLogDestinationDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationDefinitionPtrOutput)
}

type AppLogDestinationDefinitionOutput struct{ *pulumi.OutputState }

func (AppLogDestinationDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationDefinition)(nil)).Elem()
}

func (o AppLogDestinationDefinitionOutput) ToAppLogDestinationDefinitionOutput() AppLogDestinationDefinitionOutput {
	return o
}

func (o AppLogDestinationDefinitionOutput) ToAppLogDestinationDefinitionOutputWithContext(ctx context.Context) AppLogDestinationDefinitionOutput {
	return o
}

func (o AppLogDestinationDefinitionOutput) ToAppLogDestinationDefinitionPtrOutput() AppLogDestinationDefinitionPtrOutput {
	return o.ToAppLogDestinationDefinitionPtrOutputWithContext(context.Background())
}

func (o AppLogDestinationDefinitionOutput) ToAppLogDestinationDefinitionPtrOutputWithContext(ctx context.Context) AppLogDestinationDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppLogDestinationDefinition) *AppLogDestinationDefinition {
		return &v
	}).(AppLogDestinationDefinitionPtrOutput)
}

// DataDog configuration.
func (o AppLogDestinationDefinitionOutput) Datadog() AppLogDestinationDatadogSpecPtrOutput {
	return o.ApplyT(func(v AppLogDestinationDefinition) *AppLogDestinationDatadogSpec { return v.Datadog }).(AppLogDestinationDatadogSpecPtrOutput)
}

// Logtail configuration.
func (o AppLogDestinationDefinitionOutput) Logtail() AppLogDestinationLogtailSpecPtrOutput {
	return o.ApplyT(func(v AppLogDestinationDefinition) *AppLogDestinationLogtailSpec { return v.Logtail }).(AppLogDestinationLogtailSpecPtrOutput)
}

func (o AppLogDestinationDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppLogDestinationDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// Papertrail configuration.
func (o AppLogDestinationDefinitionOutput) Papertrail() AppLogDestinationPapertrailSpecPtrOutput {
	return o.ApplyT(func(v AppLogDestinationDefinition) *AppLogDestinationPapertrailSpec { return v.Papertrail }).(AppLogDestinationPapertrailSpecPtrOutput)
}

type AppLogDestinationDefinitionPtrOutput struct{ *pulumi.OutputState }

func (AppLogDestinationDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationDefinition)(nil)).Elem()
}

func (o AppLogDestinationDefinitionPtrOutput) ToAppLogDestinationDefinitionPtrOutput() AppLogDestinationDefinitionPtrOutput {
	return o
}

func (o AppLogDestinationDefinitionPtrOutput) ToAppLogDestinationDefinitionPtrOutputWithContext(ctx context.Context) AppLogDestinationDefinitionPtrOutput {
	return o
}

func (o AppLogDestinationDefinitionPtrOutput) Elem() AppLogDestinationDefinitionOutput {
	return o.ApplyT(func(v *AppLogDestinationDefinition) AppLogDestinationDefinition {
		if v != nil {
			return *v
		}
		var ret AppLogDestinationDefinition
		return ret
	}).(AppLogDestinationDefinitionOutput)
}

// DataDog configuration.
func (o AppLogDestinationDefinitionPtrOutput) Datadog() AppLogDestinationDatadogSpecPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationDefinition) *AppLogDestinationDatadogSpec {
		if v == nil {
			return nil
		}
		return v.Datadog
	}).(AppLogDestinationDatadogSpecPtrOutput)
}

// Logtail configuration.
func (o AppLogDestinationDefinitionPtrOutput) Logtail() AppLogDestinationLogtailSpecPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationDefinition) *AppLogDestinationLogtailSpec {
		if v == nil {
			return nil
		}
		return v.Logtail
	}).(AppLogDestinationLogtailSpecPtrOutput)
}

func (o AppLogDestinationDefinitionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Papertrail configuration.
func (o AppLogDestinationDefinitionPtrOutput) Papertrail() AppLogDestinationPapertrailSpecPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationDefinition) *AppLogDestinationPapertrailSpec {
		if v == nil {
			return nil
		}
		return v.Papertrail
	}).(AppLogDestinationPapertrailSpecPtrOutput)
}

// Logtail configuration.
type AppLogDestinationLogtailSpec struct {
	// Logtail token.
	Token *string `pulumi:"token"`
}

// AppLogDestinationLogtailSpecInput is an input type that accepts AppLogDestinationLogtailSpecArgs and AppLogDestinationLogtailSpecOutput values.
// You can construct a concrete instance of `AppLogDestinationLogtailSpecInput` via:
//
//	AppLogDestinationLogtailSpecArgs{...}
type AppLogDestinationLogtailSpecInput interface {
	pulumi.Input

	ToAppLogDestinationLogtailSpecOutput() AppLogDestinationLogtailSpecOutput
	ToAppLogDestinationLogtailSpecOutputWithContext(context.Context) AppLogDestinationLogtailSpecOutput
}

// Logtail configuration.
type AppLogDestinationLogtailSpecArgs struct {
	// Logtail token.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (AppLogDestinationLogtailSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationLogtailSpec)(nil)).Elem()
}

func (i AppLogDestinationLogtailSpecArgs) ToAppLogDestinationLogtailSpecOutput() AppLogDestinationLogtailSpecOutput {
	return i.ToAppLogDestinationLogtailSpecOutputWithContext(context.Background())
}

func (i AppLogDestinationLogtailSpecArgs) ToAppLogDestinationLogtailSpecOutputWithContext(ctx context.Context) AppLogDestinationLogtailSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationLogtailSpecOutput)
}

func (i AppLogDestinationLogtailSpecArgs) ToAppLogDestinationLogtailSpecPtrOutput() AppLogDestinationLogtailSpecPtrOutput {
	return i.ToAppLogDestinationLogtailSpecPtrOutputWithContext(context.Background())
}

func (i AppLogDestinationLogtailSpecArgs) ToAppLogDestinationLogtailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationLogtailSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationLogtailSpecOutput).ToAppLogDestinationLogtailSpecPtrOutputWithContext(ctx)
}

// AppLogDestinationLogtailSpecPtrInput is an input type that accepts AppLogDestinationLogtailSpecArgs, AppLogDestinationLogtailSpecPtr and AppLogDestinationLogtailSpecPtrOutput values.
// You can construct a concrete instance of `AppLogDestinationLogtailSpecPtrInput` via:
//
//	        AppLogDestinationLogtailSpecArgs{...}
//
//	or:
//
//	        nil
type AppLogDestinationLogtailSpecPtrInput interface {
	pulumi.Input

	ToAppLogDestinationLogtailSpecPtrOutput() AppLogDestinationLogtailSpecPtrOutput
	ToAppLogDestinationLogtailSpecPtrOutputWithContext(context.Context) AppLogDestinationLogtailSpecPtrOutput
}

type appLogDestinationLogtailSpecPtrType AppLogDestinationLogtailSpecArgs

func AppLogDestinationLogtailSpecPtr(v *AppLogDestinationLogtailSpecArgs) AppLogDestinationLogtailSpecPtrInput {
	return (*appLogDestinationLogtailSpecPtrType)(v)
}

func (*appLogDestinationLogtailSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationLogtailSpec)(nil)).Elem()
}

func (i *appLogDestinationLogtailSpecPtrType) ToAppLogDestinationLogtailSpecPtrOutput() AppLogDestinationLogtailSpecPtrOutput {
	return i.ToAppLogDestinationLogtailSpecPtrOutputWithContext(context.Background())
}

func (i *appLogDestinationLogtailSpecPtrType) ToAppLogDestinationLogtailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationLogtailSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationLogtailSpecPtrOutput)
}

// Logtail configuration.
type AppLogDestinationLogtailSpecOutput struct{ *pulumi.OutputState }

func (AppLogDestinationLogtailSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationLogtailSpec)(nil)).Elem()
}

func (o AppLogDestinationLogtailSpecOutput) ToAppLogDestinationLogtailSpecOutput() AppLogDestinationLogtailSpecOutput {
	return o
}

func (o AppLogDestinationLogtailSpecOutput) ToAppLogDestinationLogtailSpecOutputWithContext(ctx context.Context) AppLogDestinationLogtailSpecOutput {
	return o
}

func (o AppLogDestinationLogtailSpecOutput) ToAppLogDestinationLogtailSpecPtrOutput() AppLogDestinationLogtailSpecPtrOutput {
	return o.ToAppLogDestinationLogtailSpecPtrOutputWithContext(context.Background())
}

func (o AppLogDestinationLogtailSpecOutput) ToAppLogDestinationLogtailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationLogtailSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppLogDestinationLogtailSpec) *AppLogDestinationLogtailSpec {
		return &v
	}).(AppLogDestinationLogtailSpecPtrOutput)
}

// Logtail token.
func (o AppLogDestinationLogtailSpecOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppLogDestinationLogtailSpec) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type AppLogDestinationLogtailSpecPtrOutput struct{ *pulumi.OutputState }

func (AppLogDestinationLogtailSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationLogtailSpec)(nil)).Elem()
}

func (o AppLogDestinationLogtailSpecPtrOutput) ToAppLogDestinationLogtailSpecPtrOutput() AppLogDestinationLogtailSpecPtrOutput {
	return o
}

func (o AppLogDestinationLogtailSpecPtrOutput) ToAppLogDestinationLogtailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationLogtailSpecPtrOutput {
	return o
}

func (o AppLogDestinationLogtailSpecPtrOutput) Elem() AppLogDestinationLogtailSpecOutput {
	return o.ApplyT(func(v *AppLogDestinationLogtailSpec) AppLogDestinationLogtailSpec {
		if v != nil {
			return *v
		}
		var ret AppLogDestinationLogtailSpec
		return ret
	}).(AppLogDestinationLogtailSpecOutput)
}

// Logtail token.
func (o AppLogDestinationLogtailSpecPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationLogtailSpec) *string {
		if v == nil {
			return nil
		}
		return v.Token
	}).(pulumi.StringPtrOutput)
}

// Papertrail configuration.
type AppLogDestinationPapertrailSpec struct {
	// Papertrail syslog endpoint.
	Endpoint string `pulumi:"endpoint"`
}

// AppLogDestinationPapertrailSpecInput is an input type that accepts AppLogDestinationPapertrailSpecArgs and AppLogDestinationPapertrailSpecOutput values.
// You can construct a concrete instance of `AppLogDestinationPapertrailSpecInput` via:
//
//	AppLogDestinationPapertrailSpecArgs{...}
type AppLogDestinationPapertrailSpecInput interface {
	pulumi.Input

	ToAppLogDestinationPapertrailSpecOutput() AppLogDestinationPapertrailSpecOutput
	ToAppLogDestinationPapertrailSpecOutputWithContext(context.Context) AppLogDestinationPapertrailSpecOutput
}

// Papertrail configuration.
type AppLogDestinationPapertrailSpecArgs struct {
	// Papertrail syslog endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (AppLogDestinationPapertrailSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationPapertrailSpec)(nil)).Elem()
}

func (i AppLogDestinationPapertrailSpecArgs) ToAppLogDestinationPapertrailSpecOutput() AppLogDestinationPapertrailSpecOutput {
	return i.ToAppLogDestinationPapertrailSpecOutputWithContext(context.Background())
}

func (i AppLogDestinationPapertrailSpecArgs) ToAppLogDestinationPapertrailSpecOutputWithContext(ctx context.Context) AppLogDestinationPapertrailSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationPapertrailSpecOutput)
}

func (i AppLogDestinationPapertrailSpecArgs) ToAppLogDestinationPapertrailSpecPtrOutput() AppLogDestinationPapertrailSpecPtrOutput {
	return i.ToAppLogDestinationPapertrailSpecPtrOutputWithContext(context.Background())
}

func (i AppLogDestinationPapertrailSpecArgs) ToAppLogDestinationPapertrailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationPapertrailSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationPapertrailSpecOutput).ToAppLogDestinationPapertrailSpecPtrOutputWithContext(ctx)
}

// AppLogDestinationPapertrailSpecPtrInput is an input type that accepts AppLogDestinationPapertrailSpecArgs, AppLogDestinationPapertrailSpecPtr and AppLogDestinationPapertrailSpecPtrOutput values.
// You can construct a concrete instance of `AppLogDestinationPapertrailSpecPtrInput` via:
//
//	        AppLogDestinationPapertrailSpecArgs{...}
//
//	or:
//
//	        nil
type AppLogDestinationPapertrailSpecPtrInput interface {
	pulumi.Input

	ToAppLogDestinationPapertrailSpecPtrOutput() AppLogDestinationPapertrailSpecPtrOutput
	ToAppLogDestinationPapertrailSpecPtrOutputWithContext(context.Context) AppLogDestinationPapertrailSpecPtrOutput
}

type appLogDestinationPapertrailSpecPtrType AppLogDestinationPapertrailSpecArgs

func AppLogDestinationPapertrailSpecPtr(v *AppLogDestinationPapertrailSpecArgs) AppLogDestinationPapertrailSpecPtrInput {
	return (*appLogDestinationPapertrailSpecPtrType)(v)
}

func (*appLogDestinationPapertrailSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationPapertrailSpec)(nil)).Elem()
}

func (i *appLogDestinationPapertrailSpecPtrType) ToAppLogDestinationPapertrailSpecPtrOutput() AppLogDestinationPapertrailSpecPtrOutput {
	return i.ToAppLogDestinationPapertrailSpecPtrOutputWithContext(context.Background())
}

func (i *appLogDestinationPapertrailSpecPtrType) ToAppLogDestinationPapertrailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationPapertrailSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppLogDestinationPapertrailSpecPtrOutput)
}

// Papertrail configuration.
type AppLogDestinationPapertrailSpecOutput struct{ *pulumi.OutputState }

func (AppLogDestinationPapertrailSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppLogDestinationPapertrailSpec)(nil)).Elem()
}

func (o AppLogDestinationPapertrailSpecOutput) ToAppLogDestinationPapertrailSpecOutput() AppLogDestinationPapertrailSpecOutput {
	return o
}

func (o AppLogDestinationPapertrailSpecOutput) ToAppLogDestinationPapertrailSpecOutputWithContext(ctx context.Context) AppLogDestinationPapertrailSpecOutput {
	return o
}

func (o AppLogDestinationPapertrailSpecOutput) ToAppLogDestinationPapertrailSpecPtrOutput() AppLogDestinationPapertrailSpecPtrOutput {
	return o.ToAppLogDestinationPapertrailSpecPtrOutputWithContext(context.Background())
}

func (o AppLogDestinationPapertrailSpecOutput) ToAppLogDestinationPapertrailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationPapertrailSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppLogDestinationPapertrailSpec) *AppLogDestinationPapertrailSpec {
		return &v
	}).(AppLogDestinationPapertrailSpecPtrOutput)
}

// Papertrail syslog endpoint.
func (o AppLogDestinationPapertrailSpecOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AppLogDestinationPapertrailSpec) string { return v.Endpoint }).(pulumi.StringOutput)
}

type AppLogDestinationPapertrailSpecPtrOutput struct{ *pulumi.OutputState }

func (AppLogDestinationPapertrailSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppLogDestinationPapertrailSpec)(nil)).Elem()
}

func (o AppLogDestinationPapertrailSpecPtrOutput) ToAppLogDestinationPapertrailSpecPtrOutput() AppLogDestinationPapertrailSpecPtrOutput {
	return o
}

func (o AppLogDestinationPapertrailSpecPtrOutput) ToAppLogDestinationPapertrailSpecPtrOutputWithContext(ctx context.Context) AppLogDestinationPapertrailSpecPtrOutput {
	return o
}

func (o AppLogDestinationPapertrailSpecPtrOutput) Elem() AppLogDestinationPapertrailSpecOutput {
	return o.ApplyT(func(v *AppLogDestinationPapertrailSpec) AppLogDestinationPapertrailSpec {
		if v != nil {
			return *v
		}
		var ret AppLogDestinationPapertrailSpec
		return ret
	}).(AppLogDestinationPapertrailSpecOutput)
}

// Papertrail syslog endpoint.
func (o AppLogDestinationPapertrailSpecPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppLogDestinationPapertrailSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type AppMetricsBandwidthUsage struct {
	// A list of bandwidth usage details by app.
	AppBandwidthUsage []AppMetricsBandwidthUsageDetails `pulumi:"appBandwidthUsage"`
	// The date for the metrics data.
	Date *string `pulumi:"date"`
}

type AppMetricsBandwidthUsageOutput struct{ *pulumi.OutputState }

func (AppMetricsBandwidthUsageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMetricsBandwidthUsage)(nil)).Elem()
}

func (o AppMetricsBandwidthUsageOutput) ToAppMetricsBandwidthUsageOutput() AppMetricsBandwidthUsageOutput {
	return o
}

func (o AppMetricsBandwidthUsageOutput) ToAppMetricsBandwidthUsageOutputWithContext(ctx context.Context) AppMetricsBandwidthUsageOutput {
	return o
}

// A list of bandwidth usage details by app.
func (o AppMetricsBandwidthUsageOutput) AppBandwidthUsage() AppMetricsBandwidthUsageDetailsArrayOutput {
	return o.ApplyT(func(v AppMetricsBandwidthUsage) []AppMetricsBandwidthUsageDetails { return v.AppBandwidthUsage }).(AppMetricsBandwidthUsageDetailsArrayOutput)
}

// The date for the metrics data.
func (o AppMetricsBandwidthUsageOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppMetricsBandwidthUsage) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Bandwidth usage for an app.
type AppMetricsBandwidthUsageDetails struct {
	// The ID of the app.
	AppId *string `pulumi:"appId"`
	// The used bandwidth amount in bytes.
	BandwidthBytes *string `pulumi:"bandwidthBytes"`
}

// Bandwidth usage for an app.
type AppMetricsBandwidthUsageDetailsOutput struct{ *pulumi.OutputState }

func (AppMetricsBandwidthUsageDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppMetricsBandwidthUsageDetails)(nil)).Elem()
}

func (o AppMetricsBandwidthUsageDetailsOutput) ToAppMetricsBandwidthUsageDetailsOutput() AppMetricsBandwidthUsageDetailsOutput {
	return o
}

func (o AppMetricsBandwidthUsageDetailsOutput) ToAppMetricsBandwidthUsageDetailsOutputWithContext(ctx context.Context) AppMetricsBandwidthUsageDetailsOutput {
	return o
}

// The ID of the app.
func (o AppMetricsBandwidthUsageDetailsOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppMetricsBandwidthUsageDetails) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// The used bandwidth amount in bytes.
func (o AppMetricsBandwidthUsageDetailsOutput) BandwidthBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppMetricsBandwidthUsageDetails) *string { return v.BandwidthBytes }).(pulumi.StringPtrOutput)
}

type AppMetricsBandwidthUsageDetailsArrayOutput struct{ *pulumi.OutputState }

func (AppMetricsBandwidthUsageDetailsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppMetricsBandwidthUsageDetails)(nil)).Elem()
}

func (o AppMetricsBandwidthUsageDetailsArrayOutput) ToAppMetricsBandwidthUsageDetailsArrayOutput() AppMetricsBandwidthUsageDetailsArrayOutput {
	return o
}

func (o AppMetricsBandwidthUsageDetailsArrayOutput) ToAppMetricsBandwidthUsageDetailsArrayOutputWithContext(ctx context.Context) AppMetricsBandwidthUsageDetailsArrayOutput {
	return o
}

func (o AppMetricsBandwidthUsageDetailsArrayOutput) Index(i pulumi.IntInput) AppMetricsBandwidthUsageDetailsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppMetricsBandwidthUsageDetails {
		return vs[0].([]AppMetricsBandwidthUsageDetails)[vs[1].(int)]
	}).(AppMetricsBandwidthUsageDetailsOutput)
}

type AppPendingDeployment struct {
	Cause              *string                   `pulumi:"cause"`
	ClonedFrom         *string                   `pulumi:"clonedFrom"`
	CreatedAt          *string                   `pulumi:"createdAt"`
	Functions          []AppsDeploymentFunctions `pulumi:"functions"`
	Id                 *string                   `pulumi:"id"`
	Jobs               []AppsDeploymentJob       `pulumi:"jobs"`
	Phase              *AppsDeploymentPhase      `pulumi:"phase"`
	PhaseLastUpdatedAt *string                   `pulumi:"phaseLastUpdatedAt"`
	Progress           *AppsDeploymentProgress   `pulumi:"progress"`
	Services           []AppsDeploymentService   `pulumi:"services"`
	// The desired configuration of an application.
	Spec        *AppSpec                   `pulumi:"spec"`
	StaticSites []AppsDeploymentStaticSite `pulumi:"staticSites"`
	TierSlug    *string                    `pulumi:"tierSlug"`
	UpdatedAt   *string                    `pulumi:"updatedAt"`
	Workers     []AppsDeploymentWorker     `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for AppPendingDeployment
func (val *AppPendingDeployment) Defaults() *AppPendingDeployment {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Phase == nil {
		phase_ := AppsDeploymentPhase("UNKNOWN")
		tmp.Phase = &phase_
	}
	return &tmp
}

type AppPendingDeploymentOutput struct{ *pulumi.OutputState }

func (AppPendingDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppPendingDeployment)(nil)).Elem()
}

func (o AppPendingDeploymentOutput) ToAppPendingDeploymentOutput() AppPendingDeploymentOutput {
	return o
}

func (o AppPendingDeploymentOutput) ToAppPendingDeploymentOutputWithContext(ctx context.Context) AppPendingDeploymentOutput {
	return o
}

func (o AppPendingDeploymentOutput) Cause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *string { return v.Cause }).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentOutput) ClonedFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *string { return v.ClonedFrom }).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentOutput) Functions() AppsDeploymentFunctionsArrayOutput {
	return o.ApplyT(func(v AppPendingDeployment) []AppsDeploymentFunctions { return v.Functions }).(AppsDeploymentFunctionsArrayOutput)
}

func (o AppPendingDeploymentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentOutput) Jobs() AppsDeploymentJobArrayOutput {
	return o.ApplyT(func(v AppPendingDeployment) []AppsDeploymentJob { return v.Jobs }).(AppsDeploymentJobArrayOutput)
}

func (o AppPendingDeploymentOutput) Phase() AppsDeploymentPhasePtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *AppsDeploymentPhase { return v.Phase }).(AppsDeploymentPhasePtrOutput)
}

func (o AppPendingDeploymentOutput) PhaseLastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *string { return v.PhaseLastUpdatedAt }).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentOutput) Progress() AppsDeploymentProgressPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *AppsDeploymentProgress { return v.Progress }).(AppsDeploymentProgressPtrOutput)
}

func (o AppPendingDeploymentOutput) Services() AppsDeploymentServiceArrayOutput {
	return o.ApplyT(func(v AppPendingDeployment) []AppsDeploymentService { return v.Services }).(AppsDeploymentServiceArrayOutput)
}

// The desired configuration of an application.
func (o AppPendingDeploymentOutput) Spec() AppSpecPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *AppSpec { return v.Spec }).(AppSpecPtrOutput)
}

func (o AppPendingDeploymentOutput) StaticSites() AppsDeploymentStaticSiteArrayOutput {
	return o.ApplyT(func(v AppPendingDeployment) []AppsDeploymentStaticSite { return v.StaticSites }).(AppsDeploymentStaticSiteArrayOutput)
}

func (o AppPendingDeploymentOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *string { return v.TierSlug }).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPendingDeployment) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentOutput) Workers() AppsDeploymentWorkerArrayOutput {
	return o.ApplyT(func(v AppPendingDeployment) []AppsDeploymentWorker { return v.Workers }).(AppsDeploymentWorkerArrayOutput)
}

type AppPendingDeploymentPtrOutput struct{ *pulumi.OutputState }

func (AppPendingDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppPendingDeployment)(nil)).Elem()
}

func (o AppPendingDeploymentPtrOutput) ToAppPendingDeploymentPtrOutput() AppPendingDeploymentPtrOutput {
	return o
}

func (o AppPendingDeploymentPtrOutput) ToAppPendingDeploymentPtrOutputWithContext(ctx context.Context) AppPendingDeploymentPtrOutput {
	return o
}

func (o AppPendingDeploymentPtrOutput) Elem() AppPendingDeploymentOutput {
	return o.ApplyT(func(v *AppPendingDeployment) AppPendingDeployment {
		if v != nil {
			return *v
		}
		var ret AppPendingDeployment
		return ret
	}).(AppPendingDeploymentOutput)
}

func (o AppPendingDeploymentPtrOutput) Cause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *string {
		if v == nil {
			return nil
		}
		return v.Cause
	}).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) ClonedFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *string {
		if v == nil {
			return nil
		}
		return v.ClonedFrom
	}).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) Functions() AppsDeploymentFunctionsArrayOutput {
	return o.ApplyT(func(v *AppPendingDeployment) []AppsDeploymentFunctions {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(AppsDeploymentFunctionsArrayOutput)
}

func (o AppPendingDeploymentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) Jobs() AppsDeploymentJobArrayOutput {
	return o.ApplyT(func(v *AppPendingDeployment) []AppsDeploymentJob {
		if v == nil {
			return nil
		}
		return v.Jobs
	}).(AppsDeploymentJobArrayOutput)
}

func (o AppPendingDeploymentPtrOutput) Phase() AppsDeploymentPhasePtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *AppsDeploymentPhase {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(AppsDeploymentPhasePtrOutput)
}

func (o AppPendingDeploymentPtrOutput) PhaseLastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *string {
		if v == nil {
			return nil
		}
		return v.PhaseLastUpdatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) Progress() AppsDeploymentProgressPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *AppsDeploymentProgress {
		if v == nil {
			return nil
		}
		return v.Progress
	}).(AppsDeploymentProgressPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) Services() AppsDeploymentServiceArrayOutput {
	return o.ApplyT(func(v *AppPendingDeployment) []AppsDeploymentService {
		if v == nil {
			return nil
		}
		return v.Services
	}).(AppsDeploymentServiceArrayOutput)
}

// The desired configuration of an application.
func (o AppPendingDeploymentPtrOutput) Spec() AppSpecPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *AppSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(AppSpecPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) StaticSites() AppsDeploymentStaticSiteArrayOutput {
	return o.ApplyT(func(v *AppPendingDeployment) []AppsDeploymentStaticSite {
		if v == nil {
			return nil
		}
		return v.StaticSites
	}).(AppsDeploymentStaticSiteArrayOutput)
}

func (o AppPendingDeploymentPtrOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *string {
		if v == nil {
			return nil
		}
		return v.TierSlug
	}).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPendingDeployment) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPendingDeploymentPtrOutput) Workers() AppsDeploymentWorkerArrayOutput {
	return o.ApplyT(func(v *AppPendingDeployment) []AppsDeploymentWorker {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(AppsDeploymentWorkerArrayOutput)
}

type AppPinnedDeployment struct {
	Cause              *string                   `pulumi:"cause"`
	ClonedFrom         *string                   `pulumi:"clonedFrom"`
	CreatedAt          *string                   `pulumi:"createdAt"`
	Functions          []AppsDeploymentFunctions `pulumi:"functions"`
	Id                 *string                   `pulumi:"id"`
	Jobs               []AppsDeploymentJob       `pulumi:"jobs"`
	Phase              *AppsDeploymentPhase      `pulumi:"phase"`
	PhaseLastUpdatedAt *string                   `pulumi:"phaseLastUpdatedAt"`
	Progress           *AppsDeploymentProgress   `pulumi:"progress"`
	Services           []AppsDeploymentService   `pulumi:"services"`
	// The desired configuration of an application.
	Spec        *AppSpec                   `pulumi:"spec"`
	StaticSites []AppsDeploymentStaticSite `pulumi:"staticSites"`
	TierSlug    *string                    `pulumi:"tierSlug"`
	UpdatedAt   *string                    `pulumi:"updatedAt"`
	Workers     []AppsDeploymentWorker     `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for AppPinnedDeployment
func (val *AppPinnedDeployment) Defaults() *AppPinnedDeployment {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Phase == nil {
		phase_ := AppsDeploymentPhase("UNKNOWN")
		tmp.Phase = &phase_
	}
	return &tmp
}

type AppPinnedDeploymentOutput struct{ *pulumi.OutputState }

func (AppPinnedDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppPinnedDeployment)(nil)).Elem()
}

func (o AppPinnedDeploymentOutput) ToAppPinnedDeploymentOutput() AppPinnedDeploymentOutput {
	return o
}

func (o AppPinnedDeploymentOutput) ToAppPinnedDeploymentOutputWithContext(ctx context.Context) AppPinnedDeploymentOutput {
	return o
}

func (o AppPinnedDeploymentOutput) Cause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *string { return v.Cause }).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentOutput) ClonedFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *string { return v.ClonedFrom }).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentOutput) Functions() AppsDeploymentFunctionsArrayOutput {
	return o.ApplyT(func(v AppPinnedDeployment) []AppsDeploymentFunctions { return v.Functions }).(AppsDeploymentFunctionsArrayOutput)
}

func (o AppPinnedDeploymentOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentOutput) Jobs() AppsDeploymentJobArrayOutput {
	return o.ApplyT(func(v AppPinnedDeployment) []AppsDeploymentJob { return v.Jobs }).(AppsDeploymentJobArrayOutput)
}

func (o AppPinnedDeploymentOutput) Phase() AppsDeploymentPhasePtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *AppsDeploymentPhase { return v.Phase }).(AppsDeploymentPhasePtrOutput)
}

func (o AppPinnedDeploymentOutput) PhaseLastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *string { return v.PhaseLastUpdatedAt }).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentOutput) Progress() AppsDeploymentProgressPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *AppsDeploymentProgress { return v.Progress }).(AppsDeploymentProgressPtrOutput)
}

func (o AppPinnedDeploymentOutput) Services() AppsDeploymentServiceArrayOutput {
	return o.ApplyT(func(v AppPinnedDeployment) []AppsDeploymentService { return v.Services }).(AppsDeploymentServiceArrayOutput)
}

// The desired configuration of an application.
func (o AppPinnedDeploymentOutput) Spec() AppSpecPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *AppSpec { return v.Spec }).(AppSpecPtrOutput)
}

func (o AppPinnedDeploymentOutput) StaticSites() AppsDeploymentStaticSiteArrayOutput {
	return o.ApplyT(func(v AppPinnedDeployment) []AppsDeploymentStaticSite { return v.StaticSites }).(AppsDeploymentStaticSiteArrayOutput)
}

func (o AppPinnedDeploymentOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *string { return v.TierSlug }).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppPinnedDeployment) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentOutput) Workers() AppsDeploymentWorkerArrayOutput {
	return o.ApplyT(func(v AppPinnedDeployment) []AppsDeploymentWorker { return v.Workers }).(AppsDeploymentWorkerArrayOutput)
}

type AppPinnedDeploymentPtrOutput struct{ *pulumi.OutputState }

func (AppPinnedDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppPinnedDeployment)(nil)).Elem()
}

func (o AppPinnedDeploymentPtrOutput) ToAppPinnedDeploymentPtrOutput() AppPinnedDeploymentPtrOutput {
	return o
}

func (o AppPinnedDeploymentPtrOutput) ToAppPinnedDeploymentPtrOutputWithContext(ctx context.Context) AppPinnedDeploymentPtrOutput {
	return o
}

func (o AppPinnedDeploymentPtrOutput) Elem() AppPinnedDeploymentOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) AppPinnedDeployment {
		if v != nil {
			return *v
		}
		var ret AppPinnedDeployment
		return ret
	}).(AppPinnedDeploymentOutput)
}

func (o AppPinnedDeploymentPtrOutput) Cause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *string {
		if v == nil {
			return nil
		}
		return v.Cause
	}).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) ClonedFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *string {
		if v == nil {
			return nil
		}
		return v.ClonedFrom
	}).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) Functions() AppsDeploymentFunctionsArrayOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) []AppsDeploymentFunctions {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(AppsDeploymentFunctionsArrayOutput)
}

func (o AppPinnedDeploymentPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) Jobs() AppsDeploymentJobArrayOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) []AppsDeploymentJob {
		if v == nil {
			return nil
		}
		return v.Jobs
	}).(AppsDeploymentJobArrayOutput)
}

func (o AppPinnedDeploymentPtrOutput) Phase() AppsDeploymentPhasePtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *AppsDeploymentPhase {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(AppsDeploymentPhasePtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) PhaseLastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *string {
		if v == nil {
			return nil
		}
		return v.PhaseLastUpdatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) Progress() AppsDeploymentProgressPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *AppsDeploymentProgress {
		if v == nil {
			return nil
		}
		return v.Progress
	}).(AppsDeploymentProgressPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) Services() AppsDeploymentServiceArrayOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) []AppsDeploymentService {
		if v == nil {
			return nil
		}
		return v.Services
	}).(AppsDeploymentServiceArrayOutput)
}

// The desired configuration of an application.
func (o AppPinnedDeploymentPtrOutput) Spec() AppSpecPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *AppSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(AppSpecPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) StaticSites() AppsDeploymentStaticSiteArrayOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) []AppsDeploymentStaticSite {
		if v == nil {
			return nil
		}
		return v.StaticSites
	}).(AppsDeploymentStaticSiteArrayOutput)
}

func (o AppPinnedDeploymentPtrOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *string {
		if v == nil {
			return nil
		}
		return v.TierSlug
	}).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppPinnedDeploymentPtrOutput) Workers() AppsDeploymentWorkerArrayOutput {
	return o.ApplyT(func(v *AppPinnedDeployment) []AppsDeploymentWorker {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(AppsDeploymentWorkerArrayOutput)
}

type AppResponse struct {
	// An application's configuration and status.
	App *App `pulumi:"app"`
}

// Defaults sets the appropriate defaults for AppResponse
func (val *AppResponse) Defaults() *AppResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.App = tmp.App.Defaults()

	return &tmp
}

type AppResponseOutput struct{ *pulumi.OutputState }

func (AppResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppResponse)(nil)).Elem()
}

func (o AppResponseOutput) ToAppResponseOutput() AppResponseOutput {
	return o
}

func (o AppResponseOutput) ToAppResponseOutputWithContext(ctx context.Context) AppResponseOutput {
	return o
}

// An application's configuration and status.
func (o AppResponseOutput) App() AppPtrOutput {
	return o.ApplyT(func(v AppResponse) *App { return v.App }).(AppPtrOutput)
}

type AppRollbackValidationCondition struct {
	// A code identifier that represents the failing condition.
	//
	// Failing conditions:
	//   - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.
	//   - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.
	//   - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.
	//   - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.
	//   - `database_config_conflict` - indicates that the deployment's database config is different than the current config.
	//   - `region_conflict` - indicates that the deployment's region differs from the current app region.
	//
	// Warning conditions:
	//   - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.
	//   - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.
	Code       *AppRollbackValidationConditionCode `pulumi:"code"`
	Components []string                            `pulumi:"components"`
	// A human-readable message describing the failing condition.
	Message *string `pulumi:"message"`
}

type AppRollbackValidationConditionOutput struct{ *pulumi.OutputState }

func (AppRollbackValidationConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRollbackValidationCondition)(nil)).Elem()
}

func (o AppRollbackValidationConditionOutput) ToAppRollbackValidationConditionOutput() AppRollbackValidationConditionOutput {
	return o
}

func (o AppRollbackValidationConditionOutput) ToAppRollbackValidationConditionOutputWithContext(ctx context.Context) AppRollbackValidationConditionOutput {
	return o
}

// A code identifier that represents the failing condition.
//
// Failing conditions:
//   - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.
//   - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.
//   - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.
//   - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.
//   - `database_config_conflict` - indicates that the deployment's database config is different than the current config.
//   - `region_conflict` - indicates that the deployment's region differs from the current app region.
//
// Warning conditions:
//   - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.
//   - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.
func (o AppRollbackValidationConditionOutput) Code() AppRollbackValidationConditionCodePtrOutput {
	return o.ApplyT(func(v AppRollbackValidationCondition) *AppRollbackValidationConditionCode { return v.Code }).(AppRollbackValidationConditionCodePtrOutput)
}

func (o AppRollbackValidationConditionOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppRollbackValidationCondition) []string { return v.Components }).(pulumi.StringArrayOutput)
}

// A human-readable message describing the failing condition.
func (o AppRollbackValidationConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRollbackValidationCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type AppRollbackValidationConditionArrayOutput struct{ *pulumi.OutputState }

func (AppRollbackValidationConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRollbackValidationCondition)(nil)).Elem()
}

func (o AppRollbackValidationConditionArrayOutput) ToAppRollbackValidationConditionArrayOutput() AppRollbackValidationConditionArrayOutput {
	return o
}

func (o AppRollbackValidationConditionArrayOutput) ToAppRollbackValidationConditionArrayOutputWithContext(ctx context.Context) AppRollbackValidationConditionArrayOutput {
	return o
}

func (o AppRollbackValidationConditionArrayOutput) Index(i pulumi.IntInput) AppRollbackValidationConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppRollbackValidationCondition {
		return vs[0].([]AppRollbackValidationCondition)[vs[1].(int)]
	}).(AppRollbackValidationConditionOutput)
}

type AppRouteSpec struct {
	// An HTTP path prefix. Paths must start with / and must be unique across all components within an app.
	Path *string `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`.
	PreservePathPrefix *bool `pulumi:"preservePathPrefix"`
}

// AppRouteSpecInput is an input type that accepts AppRouteSpecArgs and AppRouteSpecOutput values.
// You can construct a concrete instance of `AppRouteSpecInput` via:
//
//	AppRouteSpecArgs{...}
type AppRouteSpecInput interface {
	pulumi.Input

	ToAppRouteSpecOutput() AppRouteSpecOutput
	ToAppRouteSpecOutputWithContext(context.Context) AppRouteSpecOutput
}

type AppRouteSpecArgs struct {
	// An HTTP path prefix. Paths must start with / and must be unique across all components within an app.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`.
	PreservePathPrefix pulumi.BoolPtrInput `pulumi:"preservePathPrefix"`
}

func (AppRouteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRouteSpec)(nil)).Elem()
}

func (i AppRouteSpecArgs) ToAppRouteSpecOutput() AppRouteSpecOutput {
	return i.ToAppRouteSpecOutputWithContext(context.Background())
}

func (i AppRouteSpecArgs) ToAppRouteSpecOutputWithContext(ctx context.Context) AppRouteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRouteSpecOutput)
}

// AppRouteSpecArrayInput is an input type that accepts AppRouteSpecArray and AppRouteSpecArrayOutput values.
// You can construct a concrete instance of `AppRouteSpecArrayInput` via:
//
//	AppRouteSpecArray{ AppRouteSpecArgs{...} }
type AppRouteSpecArrayInput interface {
	pulumi.Input

	ToAppRouteSpecArrayOutput() AppRouteSpecArrayOutput
	ToAppRouteSpecArrayOutputWithContext(context.Context) AppRouteSpecArrayOutput
}

type AppRouteSpecArray []AppRouteSpecInput

func (AppRouteSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRouteSpec)(nil)).Elem()
}

func (i AppRouteSpecArray) ToAppRouteSpecArrayOutput() AppRouteSpecArrayOutput {
	return i.ToAppRouteSpecArrayOutputWithContext(context.Background())
}

func (i AppRouteSpecArray) ToAppRouteSpecArrayOutputWithContext(ctx context.Context) AppRouteSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppRouteSpecArrayOutput)
}

type AppRouteSpecOutput struct{ *pulumi.OutputState }

func (AppRouteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppRouteSpec)(nil)).Elem()
}

func (o AppRouteSpecOutput) ToAppRouteSpecOutput() AppRouteSpecOutput {
	return o
}

func (o AppRouteSpecOutput) ToAppRouteSpecOutputWithContext(ctx context.Context) AppRouteSpecOutput {
	return o
}

// An HTTP path prefix. Paths must start with / and must be unique across all components within an app.
func (o AppRouteSpecOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppRouteSpec) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An optional flag to preserve the path that is forwarded to the backend service. By default, the HTTP request path will be trimmed from the left when forwarded to the component. For example, a component with `path=/api` will have requests to `/api/list` trimmed to `/list`. If this value is `true`, the path will remain `/api/list`.
func (o AppRouteSpecOutput) PreservePathPrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppRouteSpec) *bool { return v.PreservePathPrefix }).(pulumi.BoolPtrOutput)
}

type AppRouteSpecArrayOutput struct{ *pulumi.OutputState }

func (AppRouteSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppRouteSpec)(nil)).Elem()
}

func (o AppRouteSpecArrayOutput) ToAppRouteSpecArrayOutput() AppRouteSpecArrayOutput {
	return o
}

func (o AppRouteSpecArrayOutput) ToAppRouteSpecArrayOutputWithContext(ctx context.Context) AppRouteSpecArrayOutput {
	return o
}

func (o AppRouteSpecArrayOutput) Index(i pulumi.IntInput) AppRouteSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppRouteSpec {
		return vs[0].([]AppRouteSpec)[vs[1].(int)]
	}).(AppRouteSpecOutput)
}

type AppServiceSpec struct {
	// An optional build command to run while building this component from source.
	BuildCommand *string         `pulumi:"buildCommand"`
	Cors         *AppsCorsPolicy `pulumi:"cors"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs        []AppVariableDefinition    `pulumi:"envs"`
	Git         *AppsGitSourceSpec         `pulumi:"git"`
	Github      *AppsGithubSourceSpec      `pulumi:"github"`
	Gitlab      *AppsGitlabSourceSpec      `pulumi:"gitlab"`
	HealthCheck *AppServiceSpecHealthCheck `pulumi:"healthCheck"`
	// The internal port on which this service's run command will listen. Default: 8080
	// If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.
	HttpPort *int                 `pulumi:"httpPort"`
	Image    *AppsImageSourceSpec `pulumi:"image"`
	// The amount of instances that this component should be scaled to. Default: 1
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component. Default: `basic-xxs`
	InstanceSizeSlug *AppComponentInstanceBaseInstanceSizeSlug `pulumi:"instanceSizeSlug"`
	// The ports on which this service will listen for internal traffic.
	InternalPorts   []int                        `pulumi:"internalPorts"`
	LogDestinations *AppLogDestinationDefinition `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name *string `pulumi:"name"`
	// A list of HTTP routes that should be routed to this component.
	Routes []AppRouteSpec `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir *string `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppServiceSpec
func (val *AppServiceSpec) Defaults() *AppServiceSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Image = tmp.Image.Defaults()

	if tmp.InstanceCount == nil {
		instanceCount_ := 1
		tmp.InstanceCount = &instanceCount_
	}
	if tmp.InstanceSizeSlug == nil {
		instanceSizeSlug_ := AppComponentInstanceBaseInstanceSizeSlug("basic-xxs")
		tmp.InstanceSizeSlug = &instanceSizeSlug_
	}
	return &tmp
}

// AppServiceSpecInput is an input type that accepts AppServiceSpecArgs and AppServiceSpecOutput values.
// You can construct a concrete instance of `AppServiceSpecInput` via:
//
//	AppServiceSpecArgs{...}
type AppServiceSpecInput interface {
	pulumi.Input

	ToAppServiceSpecOutput() AppServiceSpecOutput
	ToAppServiceSpecOutputWithContext(context.Context) AppServiceSpecOutput
}

type AppServiceSpecArgs struct {
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput  `pulumi:"buildCommand"`
	Cors         AppsCorsPolicyPtrInput `pulumi:"cors"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs        AppVariableDefinitionArrayInput   `pulumi:"envs"`
	Git         AppsGitSourceSpecPtrInput         `pulumi:"git"`
	Github      AppsGithubSourceSpecPtrInput      `pulumi:"github"`
	Gitlab      AppsGitlabSourceSpecPtrInput      `pulumi:"gitlab"`
	HealthCheck AppServiceSpecHealthCheckPtrInput `pulumi:"healthCheck"`
	// The internal port on which this service's run command will listen. Default: 8080
	// If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.
	HttpPort pulumi.IntPtrInput          `pulumi:"httpPort"`
	Image    AppsImageSourceSpecPtrInput `pulumi:"image"`
	// The amount of instances that this component should be scaled to. Default: 1
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component. Default: `basic-xxs`
	InstanceSizeSlug AppComponentInstanceBaseInstanceSizeSlugPtrInput `pulumi:"instanceSizeSlug"`
	// The ports on which this service will listen for internal traffic.
	InternalPorts   pulumi.IntArrayInput                `pulumi:"internalPorts"`
	LogDestinations AppLogDestinationDefinitionPtrInput `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A list of HTTP routes that should be routed to this component.
	Routes AppRouteSpecArrayInput `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppServiceSpecArgs
func (val *AppServiceSpecArgs) Defaults() *AppServiceSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.InstanceCount == nil {
		tmp.InstanceCount = pulumi.IntPtr(1)
	}
	if tmp.InstanceSizeSlug == nil {
		tmp.InstanceSizeSlug = AppComponentInstanceBaseInstanceSizeSlug("basic-xxs")
	}
	return &tmp
}
func (AppServiceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSpec)(nil)).Elem()
}

func (i AppServiceSpecArgs) ToAppServiceSpecOutput() AppServiceSpecOutput {
	return i.ToAppServiceSpecOutputWithContext(context.Background())
}

func (i AppServiceSpecArgs) ToAppServiceSpecOutputWithContext(ctx context.Context) AppServiceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSpecOutput)
}

// AppServiceSpecArrayInput is an input type that accepts AppServiceSpecArray and AppServiceSpecArrayOutput values.
// You can construct a concrete instance of `AppServiceSpecArrayInput` via:
//
//	AppServiceSpecArray{ AppServiceSpecArgs{...} }
type AppServiceSpecArrayInput interface {
	pulumi.Input

	ToAppServiceSpecArrayOutput() AppServiceSpecArrayOutput
	ToAppServiceSpecArrayOutputWithContext(context.Context) AppServiceSpecArrayOutput
}

type AppServiceSpecArray []AppServiceSpecInput

func (AppServiceSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSpec)(nil)).Elem()
}

func (i AppServiceSpecArray) ToAppServiceSpecArrayOutput() AppServiceSpecArrayOutput {
	return i.ToAppServiceSpecArrayOutputWithContext(context.Background())
}

func (i AppServiceSpecArray) ToAppServiceSpecArrayOutputWithContext(ctx context.Context) AppServiceSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSpecArrayOutput)
}

type AppServiceSpecOutput struct{ *pulumi.OutputState }

func (AppServiceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSpec)(nil)).Elem()
}

func (o AppServiceSpecOutput) ToAppServiceSpecOutput() AppServiceSpecOutput {
	return o
}

func (o AppServiceSpecOutput) ToAppServiceSpecOutputWithContext(ctx context.Context) AppServiceSpecOutput {
	return o
}

// An optional build command to run while building this component from source.
func (o AppServiceSpecOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

func (o AppServiceSpecOutput) Cors() AppsCorsPolicyPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppsCorsPolicy { return v.Cors }).(AppsCorsPolicyPtrOutput)
}

// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
func (o AppServiceSpecOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
func (o AppServiceSpecOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// A list of environment variables made available to the component.
func (o AppServiceSpecOutput) Envs() AppVariableDefinitionArrayOutput {
	return o.ApplyT(func(v AppServiceSpec) []AppVariableDefinition { return v.Envs }).(AppVariableDefinitionArrayOutput)
}

func (o AppServiceSpecOutput) Git() AppsGitSourceSpecPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppsGitSourceSpec { return v.Git }).(AppsGitSourceSpecPtrOutput)
}

func (o AppServiceSpecOutput) Github() AppsGithubSourceSpecPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppsGithubSourceSpec { return v.Github }).(AppsGithubSourceSpecPtrOutput)
}

func (o AppServiceSpecOutput) Gitlab() AppsGitlabSourceSpecPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppsGitlabSourceSpec { return v.Gitlab }).(AppsGitlabSourceSpecPtrOutput)
}

func (o AppServiceSpecOutput) HealthCheck() AppServiceSpecHealthCheckPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppServiceSpecHealthCheck { return v.HealthCheck }).(AppServiceSpecHealthCheckPtrOutput)
}

// The internal port on which this service's run command will listen. Default: 8080
// If there is not an environment variable with the name `PORT`, one will be automatically added with its value set to the value of this field.
func (o AppServiceSpecOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

func (o AppServiceSpecOutput) Image() AppsImageSourceSpecPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppsImageSourceSpec { return v.Image }).(AppsImageSourceSpecPtrOutput)
}

// The amount of instances that this component should be scaled to. Default: 1
func (o AppServiceSpecOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component. Default: `basic-xxs`
func (o AppServiceSpecOutput) InstanceSizeSlug() AppComponentInstanceBaseInstanceSizeSlugPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppComponentInstanceBaseInstanceSizeSlug { return v.InstanceSizeSlug }).(AppComponentInstanceBaseInstanceSizeSlugPtrOutput)
}

// The ports on which this service will listen for internal traffic.
func (o AppServiceSpecOutput) InternalPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AppServiceSpec) []int { return v.InternalPorts }).(pulumi.IntArrayOutput)
}

func (o AppServiceSpecOutput) LogDestinations() AppLogDestinationDefinitionPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *AppLogDestinationDefinition { return v.LogDestinations }).(AppLogDestinationDefinitionPtrOutput)
}

// The name. Must be unique across all components within the same app.
func (o AppServiceSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of HTTP routes that should be routed to this component.
func (o AppServiceSpecOutput) Routes() AppRouteSpecArrayOutput {
	return o.ApplyT(func(v AppServiceSpec) []AppRouteSpec { return v.Routes }).(AppRouteSpecArrayOutput)
}

// An optional run command to override the component's default.
func (o AppServiceSpecOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
func (o AppServiceSpecOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSpec) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppServiceSpecArrayOutput struct{ *pulumi.OutputState }

func (AppServiceSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppServiceSpec)(nil)).Elem()
}

func (o AppServiceSpecArrayOutput) ToAppServiceSpecArrayOutput() AppServiceSpecArrayOutput {
	return o
}

func (o AppServiceSpecArrayOutput) ToAppServiceSpecArrayOutputWithContext(ctx context.Context) AppServiceSpecArrayOutput {
	return o
}

func (o AppServiceSpecArrayOutput) Index(i pulumi.IntInput) AppServiceSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppServiceSpec {
		return vs[0].([]AppServiceSpec)[vs[1].(int)]
	}).(AppServiceSpecOutput)
}

type AppServiceSpecHealthCheck struct {
	// The number of failed health checks before considered unhealthy.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead.
	HttpPath *string `pulumi:"httpPath"`
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// The number of seconds to wait between health checks.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
	Port *int `pulumi:"port"`
	// The number of successful health checks before considered healthy.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The number of seconds after which the check times out.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AppServiceSpecHealthCheckInput is an input type that accepts AppServiceSpecHealthCheckArgs and AppServiceSpecHealthCheckOutput values.
// You can construct a concrete instance of `AppServiceSpecHealthCheckInput` via:
//
//	AppServiceSpecHealthCheckArgs{...}
type AppServiceSpecHealthCheckInput interface {
	pulumi.Input

	ToAppServiceSpecHealthCheckOutput() AppServiceSpecHealthCheckOutput
	ToAppServiceSpecHealthCheckOutputWithContext(context.Context) AppServiceSpecHealthCheckOutput
}

type AppServiceSpecHealthCheckArgs struct {
	// The number of failed health checks before considered unhealthy.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead.
	HttpPath pulumi.StringPtrInput `pulumi:"httpPath"`
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// The number of seconds to wait between health checks.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The number of successful health checks before considered healthy.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The number of seconds after which the check times out.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AppServiceSpecHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSpecHealthCheck)(nil)).Elem()
}

func (i AppServiceSpecHealthCheckArgs) ToAppServiceSpecHealthCheckOutput() AppServiceSpecHealthCheckOutput {
	return i.ToAppServiceSpecHealthCheckOutputWithContext(context.Background())
}

func (i AppServiceSpecHealthCheckArgs) ToAppServiceSpecHealthCheckOutputWithContext(ctx context.Context) AppServiceSpecHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSpecHealthCheckOutput)
}

func (i AppServiceSpecHealthCheckArgs) ToAppServiceSpecHealthCheckPtrOutput() AppServiceSpecHealthCheckPtrOutput {
	return i.ToAppServiceSpecHealthCheckPtrOutputWithContext(context.Background())
}

func (i AppServiceSpecHealthCheckArgs) ToAppServiceSpecHealthCheckPtrOutputWithContext(ctx context.Context) AppServiceSpecHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSpecHealthCheckOutput).ToAppServiceSpecHealthCheckPtrOutputWithContext(ctx)
}

// AppServiceSpecHealthCheckPtrInput is an input type that accepts AppServiceSpecHealthCheckArgs, AppServiceSpecHealthCheckPtr and AppServiceSpecHealthCheckPtrOutput values.
// You can construct a concrete instance of `AppServiceSpecHealthCheckPtrInput` via:
//
//	        AppServiceSpecHealthCheckArgs{...}
//
//	or:
//
//	        nil
type AppServiceSpecHealthCheckPtrInput interface {
	pulumi.Input

	ToAppServiceSpecHealthCheckPtrOutput() AppServiceSpecHealthCheckPtrOutput
	ToAppServiceSpecHealthCheckPtrOutputWithContext(context.Context) AppServiceSpecHealthCheckPtrOutput
}

type appServiceSpecHealthCheckPtrType AppServiceSpecHealthCheckArgs

func AppServiceSpecHealthCheckPtr(v *AppServiceSpecHealthCheckArgs) AppServiceSpecHealthCheckPtrInput {
	return (*appServiceSpecHealthCheckPtrType)(v)
}

func (*appServiceSpecHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSpecHealthCheck)(nil)).Elem()
}

func (i *appServiceSpecHealthCheckPtrType) ToAppServiceSpecHealthCheckPtrOutput() AppServiceSpecHealthCheckPtrOutput {
	return i.ToAppServiceSpecHealthCheckPtrOutputWithContext(context.Background())
}

func (i *appServiceSpecHealthCheckPtrType) ToAppServiceSpecHealthCheckPtrOutputWithContext(ctx context.Context) AppServiceSpecHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppServiceSpecHealthCheckPtrOutput)
}

type AppServiceSpecHealthCheckOutput struct{ *pulumi.OutputState }

func (AppServiceSpecHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppServiceSpecHealthCheck)(nil)).Elem()
}

func (o AppServiceSpecHealthCheckOutput) ToAppServiceSpecHealthCheckOutput() AppServiceSpecHealthCheckOutput {
	return o
}

func (o AppServiceSpecHealthCheckOutput) ToAppServiceSpecHealthCheckOutputWithContext(ctx context.Context) AppServiceSpecHealthCheckOutput {
	return o
}

func (o AppServiceSpecHealthCheckOutput) ToAppServiceSpecHealthCheckPtrOutput() AppServiceSpecHealthCheckPtrOutput {
	return o.ToAppServiceSpecHealthCheckPtrOutputWithContext(context.Background())
}

func (o AppServiceSpecHealthCheckOutput) ToAppServiceSpecHealthCheckPtrOutputWithContext(ctx context.Context) AppServiceSpecHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppServiceSpecHealthCheck) *AppServiceSpecHealthCheck {
		return &v
	}).(AppServiceSpecHealthCheckPtrOutput)
}

// The number of failed health checks before considered unhealthy.
func (o AppServiceSpecHealthCheckOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpecHealthCheck) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead.
func (o AppServiceSpecHealthCheckOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppServiceSpecHealthCheck) *string { return v.HttpPath }).(pulumi.StringPtrOutput)
}

// The number of seconds to wait before beginning health checks.
func (o AppServiceSpecHealthCheckOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpecHealthCheck) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait between health checks.
func (o AppServiceSpecHealthCheckOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpecHealthCheck) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
func (o AppServiceSpecHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpecHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The number of successful health checks before considered healthy.
func (o AppServiceSpecHealthCheckOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpecHealthCheck) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The number of seconds after which the check times out.
func (o AppServiceSpecHealthCheckOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppServiceSpecHealthCheck) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AppServiceSpecHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (AppServiceSpecHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppServiceSpecHealthCheck)(nil)).Elem()
}

func (o AppServiceSpecHealthCheckPtrOutput) ToAppServiceSpecHealthCheckPtrOutput() AppServiceSpecHealthCheckPtrOutput {
	return o
}

func (o AppServiceSpecHealthCheckPtrOutput) ToAppServiceSpecHealthCheckPtrOutputWithContext(ctx context.Context) AppServiceSpecHealthCheckPtrOutput {
	return o
}

func (o AppServiceSpecHealthCheckPtrOutput) Elem() AppServiceSpecHealthCheckOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) AppServiceSpecHealthCheck {
		if v != nil {
			return *v
		}
		var ret AppServiceSpecHealthCheck
		return ret
	}).(AppServiceSpecHealthCheckOutput)
}

// The number of failed health checks before considered unhealthy.
func (o AppServiceSpecHealthCheckPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The route path used for the HTTP health check ping. If not set, the HTTP health check will be disabled and a TCP health check used instead.
func (o AppServiceSpecHealthCheckPtrOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.HttpPath
	}).(pulumi.StringPtrOutput)
}

// The number of seconds to wait before beginning health checks.
func (o AppServiceSpecHealthCheckPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait between health checks.
func (o AppServiceSpecHealthCheckPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The port on which the health check will be performed. If not set, the health check will be performed on the component's http_port.
func (o AppServiceSpecHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The number of successful health checks before considered healthy.
func (o AppServiceSpecHealthCheckPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The number of seconds after which the check times out.
func (o AppServiceSpecHealthCheckPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppServiceSpecHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The desired configuration of an application.
type AppSpec struct {
	// Database instances which can provide persistence to workloads within the
	// application.
	Databases []AppDatabaseSpec `pulumi:"databases"`
	// A set of hostnames where the application will be available.
	Domains []AppDomainSpec `pulumi:"domains"`
	// Workloads which expose publicly-accessible HTTP services via Functions Components.
	Functions []AppFunctionsSpec `pulumi:"functions"`
	// Specification for app ingress configurations.
	Ingress *AppIngressSpec `pulumi:"ingress"`
	// Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.
	Jobs []AppJobSpec `pulumi:"jobs"`
	// The name of the app. Must be unique across all apps in the same account.
	Name string `pulumi:"name"`
	// The slug form of the geographical origin of the app. Default: `nearest available`
	Region *AppSpecRegion `pulumi:"region"`
	// Workloads which expose publicly-accessible HTTP services.
	Services []AppServiceSpec `pulumi:"services"`
	// Content which can be rendered to static web assets.
	StaticSites []AppStaticSiteSpec `pulumi:"staticSites"`
	// Workloads which do not expose publicly-accessible HTTP services.
	Workers []AppWorkerSpec `pulumi:"workers"`
}

// AppSpecInput is an input type that accepts AppSpecArgs and AppSpecOutput values.
// You can construct a concrete instance of `AppSpecInput` via:
//
//	AppSpecArgs{...}
type AppSpecInput interface {
	pulumi.Input

	ToAppSpecOutput() AppSpecOutput
	ToAppSpecOutputWithContext(context.Context) AppSpecOutput
}

// The desired configuration of an application.
type AppSpecArgs struct {
	// Database instances which can provide persistence to workloads within the
	// application.
	Databases AppDatabaseSpecArrayInput `pulumi:"databases"`
	// A set of hostnames where the application will be available.
	Domains AppDomainSpecArrayInput `pulumi:"domains"`
	// Workloads which expose publicly-accessible HTTP services via Functions Components.
	Functions AppFunctionsSpecArrayInput `pulumi:"functions"`
	// Specification for app ingress configurations.
	Ingress AppIngressSpecPtrInput `pulumi:"ingress"`
	// Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.
	Jobs AppJobSpecArrayInput `pulumi:"jobs"`
	// The name of the app. Must be unique across all apps in the same account.
	Name pulumi.StringInput `pulumi:"name"`
	// The slug form of the geographical origin of the app. Default: `nearest available`
	Region AppSpecRegionPtrInput `pulumi:"region"`
	// Workloads which expose publicly-accessible HTTP services.
	Services AppServiceSpecArrayInput `pulumi:"services"`
	// Content which can be rendered to static web assets.
	StaticSites AppStaticSiteSpecArrayInput `pulumi:"staticSites"`
	// Workloads which do not expose publicly-accessible HTTP services.
	Workers AppWorkerSpecArrayInput `pulumi:"workers"`
}

func (AppSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpec)(nil)).Elem()
}

func (i AppSpecArgs) ToAppSpecOutput() AppSpecOutput {
	return i.ToAppSpecOutputWithContext(context.Background())
}

func (i AppSpecArgs) ToAppSpecOutputWithContext(ctx context.Context) AppSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecOutput)
}

// The desired configuration of an application.
type AppSpecOutput struct{ *pulumi.OutputState }

func (AppSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpec)(nil)).Elem()
}

func (o AppSpecOutput) ToAppSpecOutput() AppSpecOutput {
	return o
}

func (o AppSpecOutput) ToAppSpecOutputWithContext(ctx context.Context) AppSpecOutput {
	return o
}

// Database instances which can provide persistence to workloads within the
// application.
func (o AppSpecOutput) Databases() AppDatabaseSpecArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppDatabaseSpec { return v.Databases }).(AppDatabaseSpecArrayOutput)
}

// A set of hostnames where the application will be available.
func (o AppSpecOutput) Domains() AppDomainSpecArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppDomainSpec { return v.Domains }).(AppDomainSpecArrayOutput)
}

// Workloads which expose publicly-accessible HTTP services via Functions Components.
func (o AppSpecOutput) Functions() AppFunctionsSpecArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppFunctionsSpec { return v.Functions }).(AppFunctionsSpecArrayOutput)
}

// Specification for app ingress configurations.
func (o AppSpecOutput) Ingress() AppIngressSpecPtrOutput {
	return o.ApplyT(func(v AppSpec) *AppIngressSpec { return v.Ingress }).(AppIngressSpecPtrOutput)
}

// Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.
func (o AppSpecOutput) Jobs() AppJobSpecArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppJobSpec { return v.Jobs }).(AppJobSpecArrayOutput)
}

// The name of the app. Must be unique across all apps in the same account.
func (o AppSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpec) string { return v.Name }).(pulumi.StringOutput)
}

// The slug form of the geographical origin of the app. Default: `nearest available`
func (o AppSpecOutput) Region() AppSpecRegionPtrOutput {
	return o.ApplyT(func(v AppSpec) *AppSpecRegion { return v.Region }).(AppSpecRegionPtrOutput)
}

// Workloads which expose publicly-accessible HTTP services.
func (o AppSpecOutput) Services() AppServiceSpecArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppServiceSpec { return v.Services }).(AppServiceSpecArrayOutput)
}

// Content which can be rendered to static web assets.
func (o AppSpecOutput) StaticSites() AppStaticSiteSpecArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppStaticSiteSpec { return v.StaticSites }).(AppStaticSiteSpecArrayOutput)
}

// Workloads which do not expose publicly-accessible HTTP services.
func (o AppSpecOutput) Workers() AppWorkerSpecArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppWorkerSpec { return v.Workers }).(AppWorkerSpecArrayOutput)
}

type AppSpecPtrOutput struct{ *pulumi.OutputState }

func (AppSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpec)(nil)).Elem()
}

func (o AppSpecPtrOutput) ToAppSpecPtrOutput() AppSpecPtrOutput {
	return o
}

func (o AppSpecPtrOutput) ToAppSpecPtrOutputWithContext(ctx context.Context) AppSpecPtrOutput {
	return o
}

func (o AppSpecPtrOutput) Elem() AppSpecOutput {
	return o.ApplyT(func(v *AppSpec) AppSpec {
		if v != nil {
			return *v
		}
		var ret AppSpec
		return ret
	}).(AppSpecOutput)
}

// Database instances which can provide persistence to workloads within the
// application.
func (o AppSpecPtrOutput) Databases() AppDatabaseSpecArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppDatabaseSpec {
		if v == nil {
			return nil
		}
		return v.Databases
	}).(AppDatabaseSpecArrayOutput)
}

// A set of hostnames where the application will be available.
func (o AppSpecPtrOutput) Domains() AppDomainSpecArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppDomainSpec {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(AppDomainSpecArrayOutput)
}

// Workloads which expose publicly-accessible HTTP services via Functions Components.
func (o AppSpecPtrOutput) Functions() AppFunctionsSpecArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppFunctionsSpec {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(AppFunctionsSpecArrayOutput)
}

// Specification for app ingress configurations.
func (o AppSpecPtrOutput) Ingress() AppIngressSpecPtrOutput {
	return o.ApplyT(func(v *AppSpec) *AppIngressSpec {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(AppIngressSpecPtrOutput)
}

// Pre and post deployment workloads which do not expose publicly-accessible HTTP routes.
func (o AppSpecPtrOutput) Jobs() AppJobSpecArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppJobSpec {
		if v == nil {
			return nil
		}
		return v.Jobs
	}).(AppJobSpecArrayOutput)
}

// The name of the app. Must be unique across all apps in the same account.
func (o AppSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The slug form of the geographical origin of the app. Default: `nearest available`
func (o AppSpecPtrOutput) Region() AppSpecRegionPtrOutput {
	return o.ApplyT(func(v *AppSpec) *AppSpecRegion {
		if v == nil {
			return nil
		}
		return v.Region
	}).(AppSpecRegionPtrOutput)
}

// Workloads which expose publicly-accessible HTTP services.
func (o AppSpecPtrOutput) Services() AppServiceSpecArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppServiceSpec {
		if v == nil {
			return nil
		}
		return v.Services
	}).(AppServiceSpecArrayOutput)
}

// Content which can be rendered to static web assets.
func (o AppSpecPtrOutput) StaticSites() AppStaticSiteSpecArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppStaticSiteSpec {
		if v == nil {
			return nil
		}
		return v.StaticSites
	}).(AppStaticSiteSpecArrayOutput)
}

// Workloads which do not expose publicly-accessible HTTP services.
func (o AppSpecPtrOutput) Workers() AppWorkerSpecArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppWorkerSpec {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(AppWorkerSpecArrayOutput)
}

type AppStaticSiteSpec struct {
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set.
	CatchallDocument *string         `pulumi:"catchallDocument"`
	Cors             *AppsCorsPolicy `pulumi:"cors"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs []AppVariableDefinition `pulumi:"envs"`
	// The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one.
	ErrorDocument *string               `pulumi:"errorDocument"`
	Git           *AppsGitSourceSpec    `pulumi:"git"`
	Github        *AppsGithubSourceSpec `pulumi:"github"`
	Gitlab        *AppsGitlabSourceSpec `pulumi:"gitlab"`
	Image         *AppsImageSourceSpec  `pulumi:"image"`
	// The name of the index document to use when serving this static site. Default: index.html
	IndexDocument   *string                      `pulumi:"indexDocument"`
	LogDestinations *AppLogDestinationDefinition `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name *string `pulumi:"name"`
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`.
	OutputDir *string `pulumi:"outputDir"`
	// A list of HTTP routes that should be routed to this component.
	Routes []AppRouteSpec `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir *string `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppStaticSiteSpec
func (val *AppStaticSiteSpec) Defaults() *AppStaticSiteSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ErrorDocument == nil {
		errorDocument_ := "404.html"
		tmp.ErrorDocument = &errorDocument_
	}
	tmp.Image = tmp.Image.Defaults()

	if tmp.IndexDocument == nil {
		indexDocument_ := "index.html"
		tmp.IndexDocument = &indexDocument_
	}
	return &tmp
}

// AppStaticSiteSpecInput is an input type that accepts AppStaticSiteSpecArgs and AppStaticSiteSpecOutput values.
// You can construct a concrete instance of `AppStaticSiteSpecInput` via:
//
//	AppStaticSiteSpecArgs{...}
type AppStaticSiteSpecInput interface {
	pulumi.Input

	ToAppStaticSiteSpecOutput() AppStaticSiteSpecOutput
	ToAppStaticSiteSpecOutputWithContext(context.Context) AppStaticSiteSpecOutput
}

type AppStaticSiteSpecArgs struct {
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set.
	CatchallDocument pulumi.StringPtrInput  `pulumi:"catchallDocument"`
	Cors             AppsCorsPolicyPtrInput `pulumi:"cors"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs AppVariableDefinitionArrayInput `pulumi:"envs"`
	// The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one.
	ErrorDocument pulumi.StringPtrInput        `pulumi:"errorDocument"`
	Git           AppsGitSourceSpecPtrInput    `pulumi:"git"`
	Github        AppsGithubSourceSpecPtrInput `pulumi:"github"`
	Gitlab        AppsGitlabSourceSpecPtrInput `pulumi:"gitlab"`
	Image         AppsImageSourceSpecPtrInput  `pulumi:"image"`
	// The name of the index document to use when serving this static site. Default: index.html
	IndexDocument   pulumi.StringPtrInput               `pulumi:"indexDocument"`
	LogDestinations AppLogDestinationDefinitionPtrInput `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`.
	OutputDir pulumi.StringPtrInput `pulumi:"outputDir"`
	// A list of HTTP routes that should be routed to this component.
	Routes AppRouteSpecArrayInput `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppStaticSiteSpecArgs
func (val *AppStaticSiteSpecArgs) Defaults() *AppStaticSiteSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.ErrorDocument == nil {
		tmp.ErrorDocument = pulumi.StringPtr("404.html")
	}

	if tmp.IndexDocument == nil {
		tmp.IndexDocument = pulumi.StringPtr("index.html")
	}
	return &tmp
}
func (AppStaticSiteSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppStaticSiteSpec)(nil)).Elem()
}

func (i AppStaticSiteSpecArgs) ToAppStaticSiteSpecOutput() AppStaticSiteSpecOutput {
	return i.ToAppStaticSiteSpecOutputWithContext(context.Background())
}

func (i AppStaticSiteSpecArgs) ToAppStaticSiteSpecOutputWithContext(ctx context.Context) AppStaticSiteSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppStaticSiteSpecOutput)
}

// AppStaticSiteSpecArrayInput is an input type that accepts AppStaticSiteSpecArray and AppStaticSiteSpecArrayOutput values.
// You can construct a concrete instance of `AppStaticSiteSpecArrayInput` via:
//
//	AppStaticSiteSpecArray{ AppStaticSiteSpecArgs{...} }
type AppStaticSiteSpecArrayInput interface {
	pulumi.Input

	ToAppStaticSiteSpecArrayOutput() AppStaticSiteSpecArrayOutput
	ToAppStaticSiteSpecArrayOutputWithContext(context.Context) AppStaticSiteSpecArrayOutput
}

type AppStaticSiteSpecArray []AppStaticSiteSpecInput

func (AppStaticSiteSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppStaticSiteSpec)(nil)).Elem()
}

func (i AppStaticSiteSpecArray) ToAppStaticSiteSpecArrayOutput() AppStaticSiteSpecArrayOutput {
	return i.ToAppStaticSiteSpecArrayOutputWithContext(context.Background())
}

func (i AppStaticSiteSpecArray) ToAppStaticSiteSpecArrayOutputWithContext(ctx context.Context) AppStaticSiteSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppStaticSiteSpecArrayOutput)
}

type AppStaticSiteSpecOutput struct{ *pulumi.OutputState }

func (AppStaticSiteSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppStaticSiteSpec)(nil)).Elem()
}

func (o AppStaticSiteSpecOutput) ToAppStaticSiteSpecOutput() AppStaticSiteSpecOutput {
	return o
}

func (o AppStaticSiteSpecOutput) ToAppStaticSiteSpecOutputWithContext(ctx context.Context) AppStaticSiteSpecOutput {
	return o
}

// An optional build command to run while building this component from source.
func (o AppStaticSiteSpecOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site. Only 1 of `catchall_document` or `error_document` can be set.
func (o AppStaticSiteSpecOutput) CatchallDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.CatchallDocument }).(pulumi.StringPtrOutput)
}

func (o AppStaticSiteSpecOutput) Cors() AppsCorsPolicyPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *AppsCorsPolicy { return v.Cors }).(AppsCorsPolicyPtrOutput)
}

// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
func (o AppStaticSiteSpecOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
func (o AppStaticSiteSpecOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// A list of environment variables made available to the component.
func (o AppStaticSiteSpecOutput) Envs() AppVariableDefinitionArrayOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) []AppVariableDefinition { return v.Envs }).(AppVariableDefinitionArrayOutput)
}

// The name of the error document to use when serving this static site. Default: 404.html. If no such file exists within the built assets, App Platform will supply one.
func (o AppStaticSiteSpecOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

func (o AppStaticSiteSpecOutput) Git() AppsGitSourceSpecPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *AppsGitSourceSpec { return v.Git }).(AppsGitSourceSpecPtrOutput)
}

func (o AppStaticSiteSpecOutput) Github() AppsGithubSourceSpecPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *AppsGithubSourceSpec { return v.Github }).(AppsGithubSourceSpecPtrOutput)
}

func (o AppStaticSiteSpecOutput) Gitlab() AppsGitlabSourceSpecPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *AppsGitlabSourceSpec { return v.Gitlab }).(AppsGitlabSourceSpecPtrOutput)
}

func (o AppStaticSiteSpecOutput) Image() AppsImageSourceSpecPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *AppsImageSourceSpec { return v.Image }).(AppsImageSourceSpecPtrOutput)
}

// The name of the index document to use when serving this static site. Default: index.html
func (o AppStaticSiteSpecOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

func (o AppStaticSiteSpecOutput) LogDestinations() AppLogDestinationDefinitionPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *AppLogDestinationDefinition { return v.LogDestinations }).(AppLogDestinationDefinitionPtrOutput)
}

// The name. Must be unique across all components within the same app.
func (o AppStaticSiteSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`, `build`.
func (o AppStaticSiteSpecOutput) OutputDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.OutputDir }).(pulumi.StringPtrOutput)
}

// A list of HTTP routes that should be routed to this component.
func (o AppStaticSiteSpecOutput) Routes() AppRouteSpecArrayOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) []AppRouteSpec { return v.Routes }).(AppRouteSpecArrayOutput)
}

// An optional run command to override the component's default.
func (o AppStaticSiteSpecOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
func (o AppStaticSiteSpecOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppStaticSiteSpec) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppStaticSiteSpecArrayOutput struct{ *pulumi.OutputState }

func (AppStaticSiteSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppStaticSiteSpec)(nil)).Elem()
}

func (o AppStaticSiteSpecArrayOutput) ToAppStaticSiteSpecArrayOutput() AppStaticSiteSpecArrayOutput {
	return o
}

func (o AppStaticSiteSpecArrayOutput) ToAppStaticSiteSpecArrayOutputWithContext(ctx context.Context) AppStaticSiteSpecArrayOutput {
	return o
}

func (o AppStaticSiteSpecArrayOutput) Index(i pulumi.IntInput) AppStaticSiteSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppStaticSiteSpec {
		return vs[0].([]AppStaticSiteSpec)[vs[1].(int)]
	}).(AppStaticSiteSpecOutput)
}

type AppVariableDefinition struct {
	// The variable name
	Key string `pulumi:"key"`
	// - RUN_TIME: Made available only at run-time
	// - BUILD_TIME: Made available only at build-time
	// - RUN_AND_BUILD_TIME: Made available at both build and run-time
	Scope *AppVariableDefinitionScope `pulumi:"scope"`
	// - GENERAL: A plain-text environment variable
	// - SECRET: A secret encrypted environment variable
	Type *AppVariableDefinitionType `pulumi:"type"`
	// The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used.
	Value *string `pulumi:"value"`
}

// Defaults sets the appropriate defaults for AppVariableDefinition
func (val *AppVariableDefinition) Defaults() *AppVariableDefinition {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Scope == nil {
		scope_ := AppVariableDefinitionScope("RUN_AND_BUILD_TIME")
		tmp.Scope = &scope_
	}
	if tmp.Type == nil {
		type_ := AppVariableDefinitionType("GENERAL")
		tmp.Type = &type_
	}
	return &tmp
}

// AppVariableDefinitionInput is an input type that accepts AppVariableDefinitionArgs and AppVariableDefinitionOutput values.
// You can construct a concrete instance of `AppVariableDefinitionInput` via:
//
//	AppVariableDefinitionArgs{...}
type AppVariableDefinitionInput interface {
	pulumi.Input

	ToAppVariableDefinitionOutput() AppVariableDefinitionOutput
	ToAppVariableDefinitionOutputWithContext(context.Context) AppVariableDefinitionOutput
}

type AppVariableDefinitionArgs struct {
	// The variable name
	Key pulumi.StringInput `pulumi:"key"`
	// - RUN_TIME: Made available only at run-time
	// - BUILD_TIME: Made available only at build-time
	// - RUN_AND_BUILD_TIME: Made available at both build and run-time
	Scope AppVariableDefinitionScopePtrInput `pulumi:"scope"`
	// - GENERAL: A plain-text environment variable
	// - SECRET: A secret encrypted environment variable
	Type AppVariableDefinitionTypePtrInput `pulumi:"type"`
	// The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

// Defaults sets the appropriate defaults for AppVariableDefinitionArgs
func (val *AppVariableDefinitionArgs) Defaults() *AppVariableDefinitionArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Scope == nil {
		tmp.Scope = AppVariableDefinitionScope("RUN_AND_BUILD_TIME")
	}
	if tmp.Type == nil {
		tmp.Type = AppVariableDefinitionType("GENERAL")
	}
	return &tmp
}
func (AppVariableDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppVariableDefinition)(nil)).Elem()
}

func (i AppVariableDefinitionArgs) ToAppVariableDefinitionOutput() AppVariableDefinitionOutput {
	return i.ToAppVariableDefinitionOutputWithContext(context.Background())
}

func (i AppVariableDefinitionArgs) ToAppVariableDefinitionOutputWithContext(ctx context.Context) AppVariableDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppVariableDefinitionOutput)
}

// AppVariableDefinitionArrayInput is an input type that accepts AppVariableDefinitionArray and AppVariableDefinitionArrayOutput values.
// You can construct a concrete instance of `AppVariableDefinitionArrayInput` via:
//
//	AppVariableDefinitionArray{ AppVariableDefinitionArgs{...} }
type AppVariableDefinitionArrayInput interface {
	pulumi.Input

	ToAppVariableDefinitionArrayOutput() AppVariableDefinitionArrayOutput
	ToAppVariableDefinitionArrayOutputWithContext(context.Context) AppVariableDefinitionArrayOutput
}

type AppVariableDefinitionArray []AppVariableDefinitionInput

func (AppVariableDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppVariableDefinition)(nil)).Elem()
}

func (i AppVariableDefinitionArray) ToAppVariableDefinitionArrayOutput() AppVariableDefinitionArrayOutput {
	return i.ToAppVariableDefinitionArrayOutputWithContext(context.Background())
}

func (i AppVariableDefinitionArray) ToAppVariableDefinitionArrayOutputWithContext(ctx context.Context) AppVariableDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppVariableDefinitionArrayOutput)
}

type AppVariableDefinitionOutput struct{ *pulumi.OutputState }

func (AppVariableDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppVariableDefinition)(nil)).Elem()
}

func (o AppVariableDefinitionOutput) ToAppVariableDefinitionOutput() AppVariableDefinitionOutput {
	return o
}

func (o AppVariableDefinitionOutput) ToAppVariableDefinitionOutputWithContext(ctx context.Context) AppVariableDefinitionOutput {
	return o
}

// The variable name
func (o AppVariableDefinitionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AppVariableDefinition) string { return v.Key }).(pulumi.StringOutput)
}

// - RUN_TIME: Made available only at run-time
// - BUILD_TIME: Made available only at build-time
// - RUN_AND_BUILD_TIME: Made available at both build and run-time
func (o AppVariableDefinitionOutput) Scope() AppVariableDefinitionScopePtrOutput {
	return o.ApplyT(func(v AppVariableDefinition) *AppVariableDefinitionScope { return v.Scope }).(AppVariableDefinitionScopePtrOutput)
}

// - GENERAL: A plain-text environment variable
// - SECRET: A secret encrypted environment variable
func (o AppVariableDefinitionOutput) Type() AppVariableDefinitionTypePtrOutput {
	return o.ApplyT(func(v AppVariableDefinition) *AppVariableDefinitionType { return v.Type }).(AppVariableDefinitionTypePtrOutput)
}

// The value. If the type is `SECRET`, the value will be encrypted on first submission. On following submissions, the encrypted value should be used.
func (o AppVariableDefinitionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppVariableDefinition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AppVariableDefinitionArrayOutput struct{ *pulumi.OutputState }

func (AppVariableDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppVariableDefinition)(nil)).Elem()
}

func (o AppVariableDefinitionArrayOutput) ToAppVariableDefinitionArrayOutput() AppVariableDefinitionArrayOutput {
	return o
}

func (o AppVariableDefinitionArrayOutput) ToAppVariableDefinitionArrayOutputWithContext(ctx context.Context) AppVariableDefinitionArrayOutput {
	return o
}

func (o AppVariableDefinitionArrayOutput) Index(i pulumi.IntInput) AppVariableDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppVariableDefinition {
		return vs[0].([]AppVariableDefinition)[vs[1].(int)]
	}).(AppVariableDefinitionOutput)
}

type AppWorkerSpec struct {
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs   []AppVariableDefinition `pulumi:"envs"`
	Git    *AppsGitSourceSpec      `pulumi:"git"`
	Github *AppsGithubSourceSpec   `pulumi:"github"`
	Gitlab *AppsGitlabSourceSpec   `pulumi:"gitlab"`
	Image  *AppsImageSourceSpec    `pulumi:"image"`
	// The amount of instances that this component should be scaled to. Default: 1
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component. Default: `basic-xxs`
	InstanceSizeSlug *AppComponentInstanceBaseInstanceSizeSlug `pulumi:"instanceSizeSlug"`
	LogDestinations  *AppLogDestinationDefinition              `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name *string `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir *string `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppWorkerSpec
func (val *AppWorkerSpec) Defaults() *AppWorkerSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Image = tmp.Image.Defaults()

	if tmp.InstanceCount == nil {
		instanceCount_ := 1
		tmp.InstanceCount = &instanceCount_
	}
	if tmp.InstanceSizeSlug == nil {
		instanceSizeSlug_ := AppComponentInstanceBaseInstanceSizeSlug("basic-xxs")
		tmp.InstanceSizeSlug = &instanceSizeSlug_
	}
	return &tmp
}

// AppWorkerSpecInput is an input type that accepts AppWorkerSpecArgs and AppWorkerSpecOutput values.
// You can construct a concrete instance of `AppWorkerSpecInput` via:
//
//	AppWorkerSpecArgs{...}
type AppWorkerSpecInput interface {
	pulumi.Input

	ToAppWorkerSpecOutput() AppWorkerSpecOutput
	ToAppWorkerSpecOutputWithContext(context.Context) AppWorkerSpecOutput
}

type AppWorkerSpecArgs struct {
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// A list of environment variables made available to the component.
	Envs   AppVariableDefinitionArrayInput `pulumi:"envs"`
	Git    AppsGitSourceSpecPtrInput       `pulumi:"git"`
	Github AppsGithubSourceSpecPtrInput    `pulumi:"github"`
	Gitlab AppsGitlabSourceSpecPtrInput    `pulumi:"gitlab"`
	Image  AppsImageSourceSpecPtrInput     `pulumi:"image"`
	// The amount of instances that this component should be scaled to. Default: 1
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component. Default: `basic-xxs`
	InstanceSizeSlug AppComponentInstanceBaseInstanceSizeSlugPtrInput `pulumi:"instanceSizeSlug"`
	LogDestinations  AppLogDestinationDefinitionPtrInput              `pulumi:"logDestinations"`
	// The name. Must be unique across all components within the same app.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

// Defaults sets the appropriate defaults for AppWorkerSpecArgs
func (val *AppWorkerSpecArgs) Defaults() *AppWorkerSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	if tmp.InstanceCount == nil {
		tmp.InstanceCount = pulumi.IntPtr(1)
	}
	if tmp.InstanceSizeSlug == nil {
		tmp.InstanceSizeSlug = AppComponentInstanceBaseInstanceSizeSlug("basic-xxs")
	}
	return &tmp
}
func (AppWorkerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppWorkerSpec)(nil)).Elem()
}

func (i AppWorkerSpecArgs) ToAppWorkerSpecOutput() AppWorkerSpecOutput {
	return i.ToAppWorkerSpecOutputWithContext(context.Background())
}

func (i AppWorkerSpecArgs) ToAppWorkerSpecOutputWithContext(ctx context.Context) AppWorkerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppWorkerSpecOutput)
}

// AppWorkerSpecArrayInput is an input type that accepts AppWorkerSpecArray and AppWorkerSpecArrayOutput values.
// You can construct a concrete instance of `AppWorkerSpecArrayInput` via:
//
//	AppWorkerSpecArray{ AppWorkerSpecArgs{...} }
type AppWorkerSpecArrayInput interface {
	pulumi.Input

	ToAppWorkerSpecArrayOutput() AppWorkerSpecArrayOutput
	ToAppWorkerSpecArrayOutputWithContext(context.Context) AppWorkerSpecArrayOutput
}

type AppWorkerSpecArray []AppWorkerSpecInput

func (AppWorkerSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppWorkerSpec)(nil)).Elem()
}

func (i AppWorkerSpecArray) ToAppWorkerSpecArrayOutput() AppWorkerSpecArrayOutput {
	return i.ToAppWorkerSpecArrayOutputWithContext(context.Background())
}

func (i AppWorkerSpecArray) ToAppWorkerSpecArrayOutputWithContext(ctx context.Context) AppWorkerSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppWorkerSpecArrayOutput)
}

type AppWorkerSpecOutput struct{ *pulumi.OutputState }

func (AppWorkerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppWorkerSpec)(nil)).Elem()
}

func (o AppWorkerSpecOutput) ToAppWorkerSpecOutput() AppWorkerSpecOutput {
	return o
}

func (o AppWorkerSpecOutput) ToAppWorkerSpecOutputWithContext(ctx context.Context) AppWorkerSpecOutput {
	return o
}

// An optional build command to run while building this component from source.
func (o AppWorkerSpecOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The path to the Dockerfile relative to the root of the repo. If set, it will be used to build this component. Otherwise, App Platform will attempt to build it using buildpacks.
func (o AppWorkerSpecOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app. For a full list, please refer to [the product documentation](https://www.digitalocean.com/docs/app-platform/).
func (o AppWorkerSpecOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// A list of environment variables made available to the component.
func (o AppWorkerSpecOutput) Envs() AppVariableDefinitionArrayOutput {
	return o.ApplyT(func(v AppWorkerSpec) []AppVariableDefinition { return v.Envs }).(AppVariableDefinitionArrayOutput)
}

func (o AppWorkerSpecOutput) Git() AppsGitSourceSpecPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *AppsGitSourceSpec { return v.Git }).(AppsGitSourceSpecPtrOutput)
}

func (o AppWorkerSpecOutput) Github() AppsGithubSourceSpecPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *AppsGithubSourceSpec { return v.Github }).(AppsGithubSourceSpecPtrOutput)
}

func (o AppWorkerSpecOutput) Gitlab() AppsGitlabSourceSpecPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *AppsGitlabSourceSpec { return v.Gitlab }).(AppsGitlabSourceSpecPtrOutput)
}

func (o AppWorkerSpecOutput) Image() AppsImageSourceSpecPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *AppsImageSourceSpec { return v.Image }).(AppsImageSourceSpecPtrOutput)
}

// The amount of instances that this component should be scaled to. Default: 1
func (o AppWorkerSpecOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component. Default: `basic-xxs`
func (o AppWorkerSpecOutput) InstanceSizeSlug() AppComponentInstanceBaseInstanceSizeSlugPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *AppComponentInstanceBaseInstanceSizeSlug { return v.InstanceSizeSlug }).(AppComponentInstanceBaseInstanceSizeSlugPtrOutput)
}

func (o AppWorkerSpecOutput) LogDestinations() AppLogDestinationDefinitionPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *AppLogDestinationDefinition { return v.LogDestinations }).(AppLogDestinationDefinitionPtrOutput)
}

// The name. Must be unique across all components within the same app.
func (o AppWorkerSpecOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An optional run command to override the component's default.
func (o AppWorkerSpecOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build. For Dockerfile builds, this will be used as the build context. Must be relative to the root of the repo.
func (o AppWorkerSpecOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppWorkerSpec) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppWorkerSpecArrayOutput struct{ *pulumi.OutputState }

func (AppWorkerSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppWorkerSpec)(nil)).Elem()
}

func (o AppWorkerSpecArrayOutput) ToAppWorkerSpecArrayOutput() AppWorkerSpecArrayOutput {
	return o
}

func (o AppWorkerSpecArrayOutput) ToAppWorkerSpecArrayOutputWithContext(ctx context.Context) AppWorkerSpecArrayOutput {
	return o
}

func (o AppWorkerSpecArrayOutput) Index(i pulumi.IntInput) AppWorkerSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppWorkerSpec {
		return vs[0].([]AppWorkerSpec)[vs[1].(int)]
	}).(AppWorkerSpecOutput)
}

type AppsCorsPolicy struct {
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is include. This configures the `Access-Control-Allow-Credentials` header.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
	AllowMethods []string `pulumi:"allowMethods"`
	// The set of allowed CORS origins.
	AllowOrigins []AppsStringMatch `pulumi:"allowOrigins"`
	// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the `Access-Control-Max-Age` header.
	MaxAge *string `pulumi:"maxAge"`
}

// AppsCorsPolicyInput is an input type that accepts AppsCorsPolicyArgs and AppsCorsPolicyOutput values.
// You can construct a concrete instance of `AppsCorsPolicyInput` via:
//
//	AppsCorsPolicyArgs{...}
type AppsCorsPolicyInput interface {
	pulumi.Input

	ToAppsCorsPolicyOutput() AppsCorsPolicyOutput
	ToAppsCorsPolicyOutputWithContext(context.Context) AppsCorsPolicyOutput
}

type AppsCorsPolicyArgs struct {
	// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is include. This configures the `Access-Control-Allow-Credentials` header.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	// The set of allowed CORS origins.
	AllowOrigins AppsStringMatchArrayInput `pulumi:"allowOrigins"`
	// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the `Access-Control-Max-Age` header.
	MaxAge pulumi.StringPtrInput `pulumi:"maxAge"`
}

func (AppsCorsPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsCorsPolicy)(nil)).Elem()
}

func (i AppsCorsPolicyArgs) ToAppsCorsPolicyOutput() AppsCorsPolicyOutput {
	return i.ToAppsCorsPolicyOutputWithContext(context.Background())
}

func (i AppsCorsPolicyArgs) ToAppsCorsPolicyOutputWithContext(ctx context.Context) AppsCorsPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsCorsPolicyOutput)
}

func (i AppsCorsPolicyArgs) ToAppsCorsPolicyPtrOutput() AppsCorsPolicyPtrOutput {
	return i.ToAppsCorsPolicyPtrOutputWithContext(context.Background())
}

func (i AppsCorsPolicyArgs) ToAppsCorsPolicyPtrOutputWithContext(ctx context.Context) AppsCorsPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsCorsPolicyOutput).ToAppsCorsPolicyPtrOutputWithContext(ctx)
}

// AppsCorsPolicyPtrInput is an input type that accepts AppsCorsPolicyArgs, AppsCorsPolicyPtr and AppsCorsPolicyPtrOutput values.
// You can construct a concrete instance of `AppsCorsPolicyPtrInput` via:
//
//	        AppsCorsPolicyArgs{...}
//
//	or:
//
//	        nil
type AppsCorsPolicyPtrInput interface {
	pulumi.Input

	ToAppsCorsPolicyPtrOutput() AppsCorsPolicyPtrOutput
	ToAppsCorsPolicyPtrOutputWithContext(context.Context) AppsCorsPolicyPtrOutput
}

type appsCorsPolicyPtrType AppsCorsPolicyArgs

func AppsCorsPolicyPtr(v *AppsCorsPolicyArgs) AppsCorsPolicyPtrInput {
	return (*appsCorsPolicyPtrType)(v)
}

func (*appsCorsPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsCorsPolicy)(nil)).Elem()
}

func (i *appsCorsPolicyPtrType) ToAppsCorsPolicyPtrOutput() AppsCorsPolicyPtrOutput {
	return i.ToAppsCorsPolicyPtrOutputWithContext(context.Background())
}

func (i *appsCorsPolicyPtrType) ToAppsCorsPolicyPtrOutputWithContext(ctx context.Context) AppsCorsPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsCorsPolicyPtrOutput)
}

type AppsCorsPolicyOutput struct{ *pulumi.OutputState }

func (AppsCorsPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsCorsPolicy)(nil)).Elem()
}

func (o AppsCorsPolicyOutput) ToAppsCorsPolicyOutput() AppsCorsPolicyOutput {
	return o
}

func (o AppsCorsPolicyOutput) ToAppsCorsPolicyOutputWithContext(ctx context.Context) AppsCorsPolicyOutput {
	return o
}

func (o AppsCorsPolicyOutput) ToAppsCorsPolicyPtrOutput() AppsCorsPolicyPtrOutput {
	return o.ToAppsCorsPolicyPtrOutputWithContext(context.Background())
}

func (o AppsCorsPolicyOutput) ToAppsCorsPolicyPtrOutputWithContext(ctx context.Context) AppsCorsPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppsCorsPolicy) *AppsCorsPolicy {
		return &v
	}).(AppsCorsPolicyPtrOutput)
}

// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is include. This configures the `Access-Control-Allow-Credentials` header.
func (o AppsCorsPolicyOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppsCorsPolicy) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
func (o AppsCorsPolicyOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppsCorsPolicy) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
func (o AppsCorsPolicyOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppsCorsPolicy) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

// The set of allowed CORS origins.
func (o AppsCorsPolicyOutput) AllowOrigins() AppsStringMatchArrayOutput {
	return o.ApplyT(func(v AppsCorsPolicy) []AppsStringMatch { return v.AllowOrigins }).(AppsStringMatchArrayOutput)
}

// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
func (o AppsCorsPolicyOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppsCorsPolicy) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the `Access-Control-Max-Age` header.
func (o AppsCorsPolicyOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsCorsPolicy) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type AppsCorsPolicyPtrOutput struct{ *pulumi.OutputState }

func (AppsCorsPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsCorsPolicy)(nil)).Elem()
}

func (o AppsCorsPolicyPtrOutput) ToAppsCorsPolicyPtrOutput() AppsCorsPolicyPtrOutput {
	return o
}

func (o AppsCorsPolicyPtrOutput) ToAppsCorsPolicyPtrOutputWithContext(ctx context.Context) AppsCorsPolicyPtrOutput {
	return o
}

func (o AppsCorsPolicyPtrOutput) Elem() AppsCorsPolicyOutput {
	return o.ApplyT(func(v *AppsCorsPolicy) AppsCorsPolicy {
		if v != nil {
			return *v
		}
		var ret AppsCorsPolicy
		return ret
	}).(AppsCorsPolicyOutput)
}

// Whether browsers should expose the response to the client-side JavaScript code when the request’s credentials mode is include. This configures the `Access-Control-Allow-Credentials` header.
func (o AppsCorsPolicyPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppsCorsPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
func (o AppsCorsPolicyPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppsCorsPolicy) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
func (o AppsCorsPolicyPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppsCorsPolicy) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

// The set of allowed CORS origins.
func (o AppsCorsPolicyPtrOutput) AllowOrigins() AppsStringMatchArrayOutput {
	return o.ApplyT(func(v *AppsCorsPolicy) []AppsStringMatch {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(AppsStringMatchArrayOutput)
}

// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
func (o AppsCorsPolicyPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppsCorsPolicy) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the `Access-Control-Max-Age` header.
func (o AppsCorsPolicyPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsCorsPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type AppsDeploymentType struct {
	Cause              *string                   `pulumi:"cause"`
	ClonedFrom         *string                   `pulumi:"clonedFrom"`
	CreatedAt          *string                   `pulumi:"createdAt"`
	Functions          []AppsDeploymentFunctions `pulumi:"functions"`
	Id                 *string                   `pulumi:"id"`
	Jobs               []AppsDeploymentJob       `pulumi:"jobs"`
	Phase              *AppsDeploymentPhase      `pulumi:"phase"`
	PhaseLastUpdatedAt *string                   `pulumi:"phaseLastUpdatedAt"`
	Progress           *AppsDeploymentProgress   `pulumi:"progress"`
	Services           []AppsDeploymentService   `pulumi:"services"`
	// The desired configuration of an application.
	Spec        *AppSpec                   `pulumi:"spec"`
	StaticSites []AppsDeploymentStaticSite `pulumi:"staticSites"`
	TierSlug    *string                    `pulumi:"tierSlug"`
	UpdatedAt   *string                    `pulumi:"updatedAt"`
	Workers     []AppsDeploymentWorker     `pulumi:"workers"`
}

// Defaults sets the appropriate defaults for AppsDeploymentType
func (val *AppsDeploymentType) Defaults() *AppsDeploymentType {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Phase == nil {
		phase_ := AppsDeploymentPhase("UNKNOWN")
		tmp.Phase = &phase_
	}
	return &tmp
}

type AppsDeploymentTypeOutput struct{ *pulumi.OutputState }

func (AppsDeploymentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentType)(nil)).Elem()
}

func (o AppsDeploymentTypeOutput) ToAppsDeploymentTypeOutput() AppsDeploymentTypeOutput {
	return o
}

func (o AppsDeploymentTypeOutput) ToAppsDeploymentTypeOutputWithContext(ctx context.Context) AppsDeploymentTypeOutput {
	return o
}

func (o AppsDeploymentTypeOutput) Cause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *string { return v.Cause }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypeOutput) ClonedFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *string { return v.ClonedFrom }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypeOutput) Functions() AppsDeploymentFunctionsArrayOutput {
	return o.ApplyT(func(v AppsDeploymentType) []AppsDeploymentFunctions { return v.Functions }).(AppsDeploymentFunctionsArrayOutput)
}

func (o AppsDeploymentTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypeOutput) Jobs() AppsDeploymentJobArrayOutput {
	return o.ApplyT(func(v AppsDeploymentType) []AppsDeploymentJob { return v.Jobs }).(AppsDeploymentJobArrayOutput)
}

func (o AppsDeploymentTypeOutput) Phase() AppsDeploymentPhasePtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *AppsDeploymentPhase { return v.Phase }).(AppsDeploymentPhasePtrOutput)
}

func (o AppsDeploymentTypeOutput) PhaseLastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *string { return v.PhaseLastUpdatedAt }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypeOutput) Progress() AppsDeploymentProgressPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *AppsDeploymentProgress { return v.Progress }).(AppsDeploymentProgressPtrOutput)
}

func (o AppsDeploymentTypeOutput) Services() AppsDeploymentServiceArrayOutput {
	return o.ApplyT(func(v AppsDeploymentType) []AppsDeploymentService { return v.Services }).(AppsDeploymentServiceArrayOutput)
}

// The desired configuration of an application.
func (o AppsDeploymentTypeOutput) Spec() AppSpecPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *AppSpec { return v.Spec }).(AppSpecPtrOutput)
}

func (o AppsDeploymentTypeOutput) StaticSites() AppsDeploymentStaticSiteArrayOutput {
	return o.ApplyT(func(v AppsDeploymentType) []AppsDeploymentStaticSite { return v.StaticSites }).(AppsDeploymentStaticSiteArrayOutput)
}

func (o AppsDeploymentTypeOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *string { return v.TierSlug }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentType) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypeOutput) Workers() AppsDeploymentWorkerArrayOutput {
	return o.ApplyT(func(v AppsDeploymentType) []AppsDeploymentWorker { return v.Workers }).(AppsDeploymentWorkerArrayOutput)
}

type AppsDeploymentTypePtrOutput struct{ *pulumi.OutputState }

func (AppsDeploymentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDeploymentType)(nil)).Elem()
}

func (o AppsDeploymentTypePtrOutput) ToAppsDeploymentTypePtrOutput() AppsDeploymentTypePtrOutput {
	return o
}

func (o AppsDeploymentTypePtrOutput) ToAppsDeploymentTypePtrOutputWithContext(ctx context.Context) AppsDeploymentTypePtrOutput {
	return o
}

func (o AppsDeploymentTypePtrOutput) Elem() AppsDeploymentTypeOutput {
	return o.ApplyT(func(v *AppsDeploymentType) AppsDeploymentType {
		if v != nil {
			return *v
		}
		var ret AppsDeploymentType
		return ret
	}).(AppsDeploymentTypeOutput)
}

func (o AppsDeploymentTypePtrOutput) Cause() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.Cause
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) ClonedFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.ClonedFrom
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.CreatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) Functions() AppsDeploymentFunctionsArrayOutput {
	return o.ApplyT(func(v *AppsDeploymentType) []AppsDeploymentFunctions {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(AppsDeploymentFunctionsArrayOutput)
}

func (o AppsDeploymentTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) Jobs() AppsDeploymentJobArrayOutput {
	return o.ApplyT(func(v *AppsDeploymentType) []AppsDeploymentJob {
		if v == nil {
			return nil
		}
		return v.Jobs
	}).(AppsDeploymentJobArrayOutput)
}

func (o AppsDeploymentTypePtrOutput) Phase() AppsDeploymentPhasePtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *AppsDeploymentPhase {
		if v == nil {
			return nil
		}
		return v.Phase
	}).(AppsDeploymentPhasePtrOutput)
}

func (o AppsDeploymentTypePtrOutput) PhaseLastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.PhaseLastUpdatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) Progress() AppsDeploymentProgressPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *AppsDeploymentProgress {
		if v == nil {
			return nil
		}
		return v.Progress
	}).(AppsDeploymentProgressPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) Services() AppsDeploymentServiceArrayOutput {
	return o.ApplyT(func(v *AppsDeploymentType) []AppsDeploymentService {
		if v == nil {
			return nil
		}
		return v.Services
	}).(AppsDeploymentServiceArrayOutput)
}

// The desired configuration of an application.
func (o AppsDeploymentTypePtrOutput) Spec() AppSpecPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *AppSpec {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(AppSpecPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) StaticSites() AppsDeploymentStaticSiteArrayOutput {
	return o.ApplyT(func(v *AppsDeploymentType) []AppsDeploymentStaticSite {
		if v == nil {
			return nil
		}
		return v.StaticSites
	}).(AppsDeploymentStaticSiteArrayOutput)
}

func (o AppsDeploymentTypePtrOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.TierSlug
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentType) *string {
		if v == nil {
			return nil
		}
		return v.UpdatedAt
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentTypePtrOutput) Workers() AppsDeploymentWorkerArrayOutput {
	return o.ApplyT(func(v *AppsDeploymentType) []AppsDeploymentWorker {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(AppsDeploymentWorkerArrayOutput)
}

type AppsDeploymentTypeArrayOutput struct{ *pulumi.OutputState }

func (AppsDeploymentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDeploymentType)(nil)).Elem()
}

func (o AppsDeploymentTypeArrayOutput) ToAppsDeploymentTypeArrayOutput() AppsDeploymentTypeArrayOutput {
	return o
}

func (o AppsDeploymentTypeArrayOutput) ToAppsDeploymentTypeArrayOutputWithContext(ctx context.Context) AppsDeploymentTypeArrayOutput {
	return o
}

func (o AppsDeploymentTypeArrayOutput) Index(i pulumi.IntInput) AppsDeploymentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDeploymentType {
		return vs[0].([]AppsDeploymentType)[vs[1].(int)]
	}).(AppsDeploymentTypeOutput)
}

type AppsDeploymentFunctions struct {
	Name *string `pulumi:"name"`
	// The namespace where the functions are deployed.
	Namespace *string `pulumi:"namespace"`
	// The commit hash of the repository that was used to build this functions component.
	SourceCommitHash *string `pulumi:"sourceCommitHash"`
}

type AppsDeploymentFunctionsOutput struct{ *pulumi.OutputState }

func (AppsDeploymentFunctionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentFunctions)(nil)).Elem()
}

func (o AppsDeploymentFunctionsOutput) ToAppsDeploymentFunctionsOutput() AppsDeploymentFunctionsOutput {
	return o
}

func (o AppsDeploymentFunctionsOutput) ToAppsDeploymentFunctionsOutputWithContext(ctx context.Context) AppsDeploymentFunctionsOutput {
	return o
}

func (o AppsDeploymentFunctionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentFunctions) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The namespace where the functions are deployed.
func (o AppsDeploymentFunctionsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentFunctions) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// The commit hash of the repository that was used to build this functions component.
func (o AppsDeploymentFunctionsOutput) SourceCommitHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentFunctions) *string { return v.SourceCommitHash }).(pulumi.StringPtrOutput)
}

type AppsDeploymentFunctionsArrayOutput struct{ *pulumi.OutputState }

func (AppsDeploymentFunctionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDeploymentFunctions)(nil)).Elem()
}

func (o AppsDeploymentFunctionsArrayOutput) ToAppsDeploymentFunctionsArrayOutput() AppsDeploymentFunctionsArrayOutput {
	return o
}

func (o AppsDeploymentFunctionsArrayOutput) ToAppsDeploymentFunctionsArrayOutputWithContext(ctx context.Context) AppsDeploymentFunctionsArrayOutput {
	return o
}

func (o AppsDeploymentFunctionsArrayOutput) Index(i pulumi.IntInput) AppsDeploymentFunctionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDeploymentFunctions {
		return vs[0].([]AppsDeploymentFunctions)[vs[1].(int)]
	}).(AppsDeploymentFunctionsOutput)
}

type AppsDeploymentJob struct {
	Name             *string `pulumi:"name"`
	SourceCommitHash *string `pulumi:"sourceCommitHash"`
}

type AppsDeploymentJobOutput struct{ *pulumi.OutputState }

func (AppsDeploymentJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentJob)(nil)).Elem()
}

func (o AppsDeploymentJobOutput) ToAppsDeploymentJobOutput() AppsDeploymentJobOutput {
	return o
}

func (o AppsDeploymentJobOutput) ToAppsDeploymentJobOutputWithContext(ctx context.Context) AppsDeploymentJobOutput {
	return o
}

func (o AppsDeploymentJobOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentJob) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentJobOutput) SourceCommitHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentJob) *string { return v.SourceCommitHash }).(pulumi.StringPtrOutput)
}

type AppsDeploymentJobArrayOutput struct{ *pulumi.OutputState }

func (AppsDeploymentJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDeploymentJob)(nil)).Elem()
}

func (o AppsDeploymentJobArrayOutput) ToAppsDeploymentJobArrayOutput() AppsDeploymentJobArrayOutput {
	return o
}

func (o AppsDeploymentJobArrayOutput) ToAppsDeploymentJobArrayOutputWithContext(ctx context.Context) AppsDeploymentJobArrayOutput {
	return o
}

func (o AppsDeploymentJobArrayOutput) Index(i pulumi.IntInput) AppsDeploymentJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDeploymentJob {
		return vs[0].([]AppsDeploymentJob)[vs[1].(int)]
	}).(AppsDeploymentJobOutput)
}

type AppsDeploymentProgress struct {
	ErrorSteps   *int                         `pulumi:"errorSteps"`
	PendingSteps *int                         `pulumi:"pendingSteps"`
	RunningSteps *int                         `pulumi:"runningSteps"`
	Steps        []AppsDeploymentProgressStep `pulumi:"steps"`
	SuccessSteps *int                         `pulumi:"successSteps"`
	SummarySteps []AppsDeploymentProgressStep `pulumi:"summarySteps"`
	TotalSteps   *int                         `pulumi:"totalSteps"`
}

type AppsDeploymentProgressOutput struct{ *pulumi.OutputState }

func (AppsDeploymentProgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentProgress)(nil)).Elem()
}

func (o AppsDeploymentProgressOutput) ToAppsDeploymentProgressOutput() AppsDeploymentProgressOutput {
	return o
}

func (o AppsDeploymentProgressOutput) ToAppsDeploymentProgressOutputWithContext(ctx context.Context) AppsDeploymentProgressOutput {
	return o
}

func (o AppsDeploymentProgressOutput) ErrorSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgress) *int { return v.ErrorSteps }).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressOutput) PendingSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgress) *int { return v.PendingSteps }).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressOutput) RunningSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgress) *int { return v.RunningSteps }).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressOutput) Steps() AppsDeploymentProgressStepArrayOutput {
	return o.ApplyT(func(v AppsDeploymentProgress) []AppsDeploymentProgressStep { return v.Steps }).(AppsDeploymentProgressStepArrayOutput)
}

func (o AppsDeploymentProgressOutput) SuccessSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgress) *int { return v.SuccessSteps }).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressOutput) SummarySteps() AppsDeploymentProgressStepArrayOutput {
	return o.ApplyT(func(v AppsDeploymentProgress) []AppsDeploymentProgressStep { return v.SummarySteps }).(AppsDeploymentProgressStepArrayOutput)
}

func (o AppsDeploymentProgressOutput) TotalSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgress) *int { return v.TotalSteps }).(pulumi.IntPtrOutput)
}

type AppsDeploymentProgressPtrOutput struct{ *pulumi.OutputState }

func (AppsDeploymentProgressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDeploymentProgress)(nil)).Elem()
}

func (o AppsDeploymentProgressPtrOutput) ToAppsDeploymentProgressPtrOutput() AppsDeploymentProgressPtrOutput {
	return o
}

func (o AppsDeploymentProgressPtrOutput) ToAppsDeploymentProgressPtrOutputWithContext(ctx context.Context) AppsDeploymentProgressPtrOutput {
	return o
}

func (o AppsDeploymentProgressPtrOutput) Elem() AppsDeploymentProgressOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) AppsDeploymentProgress {
		if v != nil {
			return *v
		}
		var ret AppsDeploymentProgress
		return ret
	}).(AppsDeploymentProgressOutput)
}

func (o AppsDeploymentProgressPtrOutput) ErrorSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) *int {
		if v == nil {
			return nil
		}
		return v.ErrorSteps
	}).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressPtrOutput) PendingSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) *int {
		if v == nil {
			return nil
		}
		return v.PendingSteps
	}).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressPtrOutput) RunningSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) *int {
		if v == nil {
			return nil
		}
		return v.RunningSteps
	}).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressPtrOutput) Steps() AppsDeploymentProgressStepArrayOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) []AppsDeploymentProgressStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(AppsDeploymentProgressStepArrayOutput)
}

func (o AppsDeploymentProgressPtrOutput) SuccessSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) *int {
		if v == nil {
			return nil
		}
		return v.SuccessSteps
	}).(pulumi.IntPtrOutput)
}

func (o AppsDeploymentProgressPtrOutput) SummarySteps() AppsDeploymentProgressStepArrayOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) []AppsDeploymentProgressStep {
		if v == nil {
			return nil
		}
		return v.SummarySteps
	}).(AppsDeploymentProgressStepArrayOutput)
}

func (o AppsDeploymentProgressPtrOutput) TotalSteps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentProgress) *int {
		if v == nil {
			return nil
		}
		return v.TotalSteps
	}).(pulumi.IntPtrOutput)
}

type AppsDeploymentProgressStep struct {
	ComponentName *string `pulumi:"componentName"`
	EndedAt       *string `pulumi:"endedAt"`
	// The base of a human-readable description of the step intended to be combined with the component name for presentation. For example:
	//
	// `message_base` = "Building service"
	// `component_name` = "api"
	MessageBase *string                           `pulumi:"messageBase"`
	Name        *string                           `pulumi:"name"`
	Reason      *AppsDeploymentProgressStepReason `pulumi:"reason"`
	StartedAt   *string                           `pulumi:"startedAt"`
	Status      *AppsDeploymentProgressStepStatus `pulumi:"status"`
	Steps       []interface{}                     `pulumi:"steps"`
}

// Defaults sets the appropriate defaults for AppsDeploymentProgressStep
func (val *AppsDeploymentProgressStep) Defaults() *AppsDeploymentProgressStep {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Status == nil {
		status_ := AppsDeploymentProgressStepStatus("UNKNOWN")
		tmp.Status = &status_
	}
	return &tmp
}

type AppsDeploymentProgressStepOutput struct{ *pulumi.OutputState }

func (AppsDeploymentProgressStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentProgressStep)(nil)).Elem()
}

func (o AppsDeploymentProgressStepOutput) ToAppsDeploymentProgressStepOutput() AppsDeploymentProgressStepOutput {
	return o
}

func (o AppsDeploymentProgressStepOutput) ToAppsDeploymentProgressStepOutputWithContext(ctx context.Context) AppsDeploymentProgressStepOutput {
	return o
}

func (o AppsDeploymentProgressStepOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentProgressStepOutput) EndedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) *string { return v.EndedAt }).(pulumi.StringPtrOutput)
}

// The base of a human-readable description of the step intended to be combined with the component name for presentation. For example:
//
// `message_base` = "Building service"
// `component_name` = "api"
func (o AppsDeploymentProgressStepOutput) MessageBase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) *string { return v.MessageBase }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentProgressStepOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentProgressStepOutput) Reason() AppsDeploymentProgressStepReasonPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) *AppsDeploymentProgressStepReason { return v.Reason }).(AppsDeploymentProgressStepReasonPtrOutput)
}

func (o AppsDeploymentProgressStepOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentProgressStepOutput) Status() AppsDeploymentProgressStepStatusPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) *AppsDeploymentProgressStepStatus { return v.Status }).(AppsDeploymentProgressStepStatusPtrOutput)
}

func (o AppsDeploymentProgressStepOutput) Steps() pulumi.ArrayOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStep) []interface{} { return v.Steps }).(pulumi.ArrayOutput)
}

type AppsDeploymentProgressStepArrayOutput struct{ *pulumi.OutputState }

func (AppsDeploymentProgressStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDeploymentProgressStep)(nil)).Elem()
}

func (o AppsDeploymentProgressStepArrayOutput) ToAppsDeploymentProgressStepArrayOutput() AppsDeploymentProgressStepArrayOutput {
	return o
}

func (o AppsDeploymentProgressStepArrayOutput) ToAppsDeploymentProgressStepArrayOutputWithContext(ctx context.Context) AppsDeploymentProgressStepArrayOutput {
	return o
}

func (o AppsDeploymentProgressStepArrayOutput) Index(i pulumi.IntInput) AppsDeploymentProgressStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDeploymentProgressStep {
		return vs[0].([]AppsDeploymentProgressStep)[vs[1].(int)]
	}).(AppsDeploymentProgressStepOutput)
}

type AppsDeploymentProgressStepReason struct {
	Code    *string `pulumi:"code"`
	Message *string `pulumi:"message"`
}

type AppsDeploymentProgressStepReasonOutput struct{ *pulumi.OutputState }

func (AppsDeploymentProgressStepReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentProgressStepReason)(nil)).Elem()
}

func (o AppsDeploymentProgressStepReasonOutput) ToAppsDeploymentProgressStepReasonOutput() AppsDeploymentProgressStepReasonOutput {
	return o
}

func (o AppsDeploymentProgressStepReasonOutput) ToAppsDeploymentProgressStepReasonOutputWithContext(ctx context.Context) AppsDeploymentProgressStepReasonOutput {
	return o
}

func (o AppsDeploymentProgressStepReasonOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStepReason) *string { return v.Code }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentProgressStepReasonOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentProgressStepReason) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type AppsDeploymentProgressStepReasonPtrOutput struct{ *pulumi.OutputState }

func (AppsDeploymentProgressStepReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDeploymentProgressStepReason)(nil)).Elem()
}

func (o AppsDeploymentProgressStepReasonPtrOutput) ToAppsDeploymentProgressStepReasonPtrOutput() AppsDeploymentProgressStepReasonPtrOutput {
	return o
}

func (o AppsDeploymentProgressStepReasonPtrOutput) ToAppsDeploymentProgressStepReasonPtrOutputWithContext(ctx context.Context) AppsDeploymentProgressStepReasonPtrOutput {
	return o
}

func (o AppsDeploymentProgressStepReasonPtrOutput) Elem() AppsDeploymentProgressStepReasonOutput {
	return o.ApplyT(func(v *AppsDeploymentProgressStepReason) AppsDeploymentProgressStepReason {
		if v != nil {
			return *v
		}
		var ret AppsDeploymentProgressStepReason
		return ret
	}).(AppsDeploymentProgressStepReasonOutput)
}

func (o AppsDeploymentProgressStepReasonPtrOutput) Code() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentProgressStepReason) *string {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentProgressStepReasonPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsDeploymentProgressStepReason) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type AppsDeploymentResponse struct {
	Deployment *AppsDeploymentType `pulumi:"deployment"`
}

// Defaults sets the appropriate defaults for AppsDeploymentResponse
func (val *AppsDeploymentResponse) Defaults() *AppsDeploymentResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Deployment = tmp.Deployment.Defaults()

	return &tmp
}

type AppsDeploymentResponseOutput struct{ *pulumi.OutputState }

func (AppsDeploymentResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentResponse)(nil)).Elem()
}

func (o AppsDeploymentResponseOutput) ToAppsDeploymentResponseOutput() AppsDeploymentResponseOutput {
	return o
}

func (o AppsDeploymentResponseOutput) ToAppsDeploymentResponseOutputWithContext(ctx context.Context) AppsDeploymentResponseOutput {
	return o
}

func (o AppsDeploymentResponseOutput) Deployment() AppsDeploymentTypePtrOutput {
	return o.ApplyT(func(v AppsDeploymentResponse) *AppsDeploymentType { return v.Deployment }).(AppsDeploymentTypePtrOutput)
}

type AppsDeploymentService struct {
	Name             *string `pulumi:"name"`
	SourceCommitHash *string `pulumi:"sourceCommitHash"`
}

type AppsDeploymentServiceOutput struct{ *pulumi.OutputState }

func (AppsDeploymentServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentService)(nil)).Elem()
}

func (o AppsDeploymentServiceOutput) ToAppsDeploymentServiceOutput() AppsDeploymentServiceOutput {
	return o
}

func (o AppsDeploymentServiceOutput) ToAppsDeploymentServiceOutputWithContext(ctx context.Context) AppsDeploymentServiceOutput {
	return o
}

func (o AppsDeploymentServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentService) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentServiceOutput) SourceCommitHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentService) *string { return v.SourceCommitHash }).(pulumi.StringPtrOutput)
}

type AppsDeploymentServiceArrayOutput struct{ *pulumi.OutputState }

func (AppsDeploymentServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDeploymentService)(nil)).Elem()
}

func (o AppsDeploymentServiceArrayOutput) ToAppsDeploymentServiceArrayOutput() AppsDeploymentServiceArrayOutput {
	return o
}

func (o AppsDeploymentServiceArrayOutput) ToAppsDeploymentServiceArrayOutputWithContext(ctx context.Context) AppsDeploymentServiceArrayOutput {
	return o
}

func (o AppsDeploymentServiceArrayOutput) Index(i pulumi.IntInput) AppsDeploymentServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDeploymentService {
		return vs[0].([]AppsDeploymentService)[vs[1].(int)]
	}).(AppsDeploymentServiceOutput)
}

type AppsDeploymentStaticSite struct {
	Name             *string `pulumi:"name"`
	SourceCommitHash *string `pulumi:"sourceCommitHash"`
}

type AppsDeploymentStaticSiteOutput struct{ *pulumi.OutputState }

func (AppsDeploymentStaticSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentStaticSite)(nil)).Elem()
}

func (o AppsDeploymentStaticSiteOutput) ToAppsDeploymentStaticSiteOutput() AppsDeploymentStaticSiteOutput {
	return o
}

func (o AppsDeploymentStaticSiteOutput) ToAppsDeploymentStaticSiteOutputWithContext(ctx context.Context) AppsDeploymentStaticSiteOutput {
	return o
}

func (o AppsDeploymentStaticSiteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentStaticSite) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentStaticSiteOutput) SourceCommitHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentStaticSite) *string { return v.SourceCommitHash }).(pulumi.StringPtrOutput)
}

type AppsDeploymentStaticSiteArrayOutput struct{ *pulumi.OutputState }

func (AppsDeploymentStaticSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDeploymentStaticSite)(nil)).Elem()
}

func (o AppsDeploymentStaticSiteArrayOutput) ToAppsDeploymentStaticSiteArrayOutput() AppsDeploymentStaticSiteArrayOutput {
	return o
}

func (o AppsDeploymentStaticSiteArrayOutput) ToAppsDeploymentStaticSiteArrayOutputWithContext(ctx context.Context) AppsDeploymentStaticSiteArrayOutput {
	return o
}

func (o AppsDeploymentStaticSiteArrayOutput) Index(i pulumi.IntInput) AppsDeploymentStaticSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDeploymentStaticSite {
		return vs[0].([]AppsDeploymentStaticSite)[vs[1].(int)]
	}).(AppsDeploymentStaticSiteOutput)
}

type AppsDeploymentWorker struct {
	Name             *string `pulumi:"name"`
	SourceCommitHash *string `pulumi:"sourceCommitHash"`
}

type AppsDeploymentWorkerOutput struct{ *pulumi.OutputState }

func (AppsDeploymentWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentWorker)(nil)).Elem()
}

func (o AppsDeploymentWorkerOutput) ToAppsDeploymentWorkerOutput() AppsDeploymentWorkerOutput {
	return o
}

func (o AppsDeploymentWorkerOutput) ToAppsDeploymentWorkerOutputWithContext(ctx context.Context) AppsDeploymentWorkerOutput {
	return o
}

func (o AppsDeploymentWorkerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentWorker) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppsDeploymentWorkerOutput) SourceCommitHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDeploymentWorker) *string { return v.SourceCommitHash }).(pulumi.StringPtrOutput)
}

type AppsDeploymentWorkerArrayOutput struct{ *pulumi.OutputState }

func (AppsDeploymentWorkerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDeploymentWorker)(nil)).Elem()
}

func (o AppsDeploymentWorkerArrayOutput) ToAppsDeploymentWorkerArrayOutput() AppsDeploymentWorkerArrayOutput {
	return o
}

func (o AppsDeploymentWorkerArrayOutput) ToAppsDeploymentWorkerArrayOutputWithContext(ctx context.Context) AppsDeploymentWorkerArrayOutput {
	return o
}

func (o AppsDeploymentWorkerArrayOutput) Index(i pulumi.IntInput) AppsDeploymentWorkerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDeploymentWorker {
		return vs[0].([]AppsDeploymentWorker)[vs[1].(int)]
	}).(AppsDeploymentWorkerOutput)
}

type AppsDeploymentsResponse struct {
	Deployments []AppsDeploymentType `pulumi:"deployments"`
	Links       *PageLinks           `pulumi:"links"`
	Meta        MetaMeta             `pulumi:"meta"`
}

type AppsDeploymentsResponseOutput struct{ *pulumi.OutputState }

func (AppsDeploymentsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDeploymentsResponse)(nil)).Elem()
}

func (o AppsDeploymentsResponseOutput) ToAppsDeploymentsResponseOutput() AppsDeploymentsResponseOutput {
	return o
}

func (o AppsDeploymentsResponseOutput) ToAppsDeploymentsResponseOutputWithContext(ctx context.Context) AppsDeploymentsResponseOutput {
	return o
}

func (o AppsDeploymentsResponseOutput) Deployments() AppsDeploymentTypeArrayOutput {
	return o.ApplyT(func(v AppsDeploymentsResponse) []AppsDeploymentType { return v.Deployments }).(AppsDeploymentTypeArrayOutput)
}

func (o AppsDeploymentsResponseOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v AppsDeploymentsResponse) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o AppsDeploymentsResponseOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v AppsDeploymentsResponse) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

type AppsDomain struct {
	CertificateExpiresAt    *string               `pulumi:"certificateExpiresAt"`
	Id                      *string               `pulumi:"id"`
	Phase                   *AppsDomainPhase      `pulumi:"phase"`
	Progress                *AppsDomainProgress   `pulumi:"progress"`
	RotateValidationRecords *bool                 `pulumi:"rotateValidationRecords"`
	Spec                    *AppDomainSpec        `pulumi:"spec"`
	Validations             []AppDomainValidation `pulumi:"validations"`
}

// Defaults sets the appropriate defaults for AppsDomain
func (val *AppsDomain) Defaults() *AppsDomain {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Phase == nil {
		phase_ := AppsDomainPhase("UNKNOWN")
		tmp.Phase = &phase_
	}
	tmp.Spec = tmp.Spec.Defaults()

	return &tmp
}

type AppsDomainOutput struct{ *pulumi.OutputState }

func (AppsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDomain)(nil)).Elem()
}

func (o AppsDomainOutput) ToAppsDomainOutput() AppsDomainOutput {
	return o
}

func (o AppsDomainOutput) ToAppsDomainOutputWithContext(ctx context.Context) AppsDomainOutput {
	return o
}

func (o AppsDomainOutput) CertificateExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDomain) *string { return v.CertificateExpiresAt }).(pulumi.StringPtrOutput)
}

func (o AppsDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o AppsDomainOutput) Phase() AppsDomainPhasePtrOutput {
	return o.ApplyT(func(v AppsDomain) *AppsDomainPhase { return v.Phase }).(AppsDomainPhasePtrOutput)
}

func (o AppsDomainOutput) Progress() AppsDomainProgressPtrOutput {
	return o.ApplyT(func(v AppsDomain) *AppsDomainProgress { return v.Progress }).(AppsDomainProgressPtrOutput)
}

func (o AppsDomainOutput) RotateValidationRecords() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppsDomain) *bool { return v.RotateValidationRecords }).(pulumi.BoolPtrOutput)
}

func (o AppsDomainOutput) Spec() AppDomainSpecPtrOutput {
	return o.ApplyT(func(v AppsDomain) *AppDomainSpec { return v.Spec }).(AppDomainSpecPtrOutput)
}

func (o AppsDomainOutput) Validations() AppDomainValidationArrayOutput {
	return o.ApplyT(func(v AppsDomain) []AppDomainValidation { return v.Validations }).(AppDomainValidationArrayOutput)
}

type AppsDomainArrayOutput struct{ *pulumi.OutputState }

func (AppsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsDomain)(nil)).Elem()
}

func (o AppsDomainArrayOutput) ToAppsDomainArrayOutput() AppsDomainArrayOutput {
	return o
}

func (o AppsDomainArrayOutput) ToAppsDomainArrayOutputWithContext(ctx context.Context) AppsDomainArrayOutput {
	return o
}

func (o AppsDomainArrayOutput) Index(i pulumi.IntInput) AppsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsDomain {
		return vs[0].([]AppsDomain)[vs[1].(int)]
	}).(AppsDomainOutput)
}

type AppsDomainProgress struct {
	Steps []interface{} `pulumi:"steps"`
}

type AppsDomainProgressOutput struct{ *pulumi.OutputState }

func (AppsDomainProgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsDomainProgress)(nil)).Elem()
}

func (o AppsDomainProgressOutput) ToAppsDomainProgressOutput() AppsDomainProgressOutput {
	return o
}

func (o AppsDomainProgressOutput) ToAppsDomainProgressOutputWithContext(ctx context.Context) AppsDomainProgressOutput {
	return o
}

func (o AppsDomainProgressOutput) Steps() pulumi.ArrayOutput {
	return o.ApplyT(func(v AppsDomainProgress) []interface{} { return v.Steps }).(pulumi.ArrayOutput)
}

type AppsDomainProgressPtrOutput struct{ *pulumi.OutputState }

func (AppsDomainProgressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDomainProgress)(nil)).Elem()
}

func (o AppsDomainProgressPtrOutput) ToAppsDomainProgressPtrOutput() AppsDomainProgressPtrOutput {
	return o
}

func (o AppsDomainProgressPtrOutput) ToAppsDomainProgressPtrOutputWithContext(ctx context.Context) AppsDomainProgressPtrOutput {
	return o
}

func (o AppsDomainProgressPtrOutput) Elem() AppsDomainProgressOutput {
	return o.ApplyT(func(v *AppsDomainProgress) AppsDomainProgress {
		if v != nil {
			return *v
		}
		var ret AppsDomainProgress
		return ret
	}).(AppsDomainProgressOutput)
}

func (o AppsDomainProgressPtrOutput) Steps() pulumi.ArrayOutput {
	return o.ApplyT(func(v *AppsDomainProgress) []interface{} {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(pulumi.ArrayOutput)
}

type AppsGetInstanceSizeResponse struct {
	InstanceSize *AppsInstanceSize `pulumi:"instanceSize"`
}

// Defaults sets the appropriate defaults for AppsGetInstanceSizeResponse
func (val *AppsGetInstanceSizeResponse) Defaults() *AppsGetInstanceSizeResponse {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.InstanceSize = tmp.InstanceSize.Defaults()

	return &tmp
}

type AppsGetInstanceSizeResponseOutput struct{ *pulumi.OutputState }

func (AppsGetInstanceSizeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGetInstanceSizeResponse)(nil)).Elem()
}

func (o AppsGetInstanceSizeResponseOutput) ToAppsGetInstanceSizeResponseOutput() AppsGetInstanceSizeResponseOutput {
	return o
}

func (o AppsGetInstanceSizeResponseOutput) ToAppsGetInstanceSizeResponseOutputWithContext(ctx context.Context) AppsGetInstanceSizeResponseOutput {
	return o
}

func (o AppsGetInstanceSizeResponseOutput) InstanceSize() AppsInstanceSizePtrOutput {
	return o.ApplyT(func(v AppsGetInstanceSizeResponse) *AppsInstanceSize { return v.InstanceSize }).(AppsInstanceSizePtrOutput)
}

type AppsGetLogsResponse struct {
	HistoricUrls []string `pulumi:"historicUrls"`
	// A URL of the real-time live logs. This URL may use either the `https://` or `wss://` protocols and will keep pushing live logs as they become available.
	LiveUrl *string `pulumi:"liveUrl"`
}

type AppsGetLogsResponseOutput struct{ *pulumi.OutputState }

func (AppsGetLogsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGetLogsResponse)(nil)).Elem()
}

func (o AppsGetLogsResponseOutput) ToAppsGetLogsResponseOutput() AppsGetLogsResponseOutput {
	return o
}

func (o AppsGetLogsResponseOutput) ToAppsGetLogsResponseOutputWithContext(ctx context.Context) AppsGetLogsResponseOutput {
	return o
}

func (o AppsGetLogsResponseOutput) HistoricUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppsGetLogsResponse) []string { return v.HistoricUrls }).(pulumi.StringArrayOutput)
}

// A URL of the real-time live logs. This URL may use either the `https://` or `wss://` protocols and will keep pushing live logs as they become available.
func (o AppsGetLogsResponseOutput) LiveUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsGetLogsResponse) *string { return v.LiveUrl }).(pulumi.StringPtrOutput)
}

type AppsGetTierResponse struct {
	Tier *AppsTier `pulumi:"tier"`
}

type AppsGetTierResponseOutput struct{ *pulumi.OutputState }

func (AppsGetTierResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGetTierResponse)(nil)).Elem()
}

func (o AppsGetTierResponseOutput) ToAppsGetTierResponseOutput() AppsGetTierResponseOutput {
	return o
}

func (o AppsGetTierResponseOutput) ToAppsGetTierResponseOutputWithContext(ctx context.Context) AppsGetTierResponseOutput {
	return o
}

func (o AppsGetTierResponseOutput) Tier() AppsTierPtrOutput {
	return o.ApplyT(func(v AppsGetTierResponse) *AppsTier { return v.Tier }).(AppsTierPtrOutput)
}

type AppsGitSourceSpec struct {
	// The name of the branch to use
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// AppsGitSourceSpecInput is an input type that accepts AppsGitSourceSpecArgs and AppsGitSourceSpecOutput values.
// You can construct a concrete instance of `AppsGitSourceSpecInput` via:
//
//	AppsGitSourceSpecArgs{...}
type AppsGitSourceSpecInput interface {
	pulumi.Input

	ToAppsGitSourceSpecOutput() AppsGitSourceSpecOutput
	ToAppsGitSourceSpecOutputWithContext(context.Context) AppsGitSourceSpecOutput
}

type AppsGitSourceSpecArgs struct {
	// The name of the branch to use
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (AppsGitSourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGitSourceSpec)(nil)).Elem()
}

func (i AppsGitSourceSpecArgs) ToAppsGitSourceSpecOutput() AppsGitSourceSpecOutput {
	return i.ToAppsGitSourceSpecOutputWithContext(context.Background())
}

func (i AppsGitSourceSpecArgs) ToAppsGitSourceSpecOutputWithContext(ctx context.Context) AppsGitSourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGitSourceSpecOutput)
}

func (i AppsGitSourceSpecArgs) ToAppsGitSourceSpecPtrOutput() AppsGitSourceSpecPtrOutput {
	return i.ToAppsGitSourceSpecPtrOutputWithContext(context.Background())
}

func (i AppsGitSourceSpecArgs) ToAppsGitSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGitSourceSpecOutput).ToAppsGitSourceSpecPtrOutputWithContext(ctx)
}

// AppsGitSourceSpecPtrInput is an input type that accepts AppsGitSourceSpecArgs, AppsGitSourceSpecPtr and AppsGitSourceSpecPtrOutput values.
// You can construct a concrete instance of `AppsGitSourceSpecPtrInput` via:
//
//	        AppsGitSourceSpecArgs{...}
//
//	or:
//
//	        nil
type AppsGitSourceSpecPtrInput interface {
	pulumi.Input

	ToAppsGitSourceSpecPtrOutput() AppsGitSourceSpecPtrOutput
	ToAppsGitSourceSpecPtrOutputWithContext(context.Context) AppsGitSourceSpecPtrOutput
}

type appsGitSourceSpecPtrType AppsGitSourceSpecArgs

func AppsGitSourceSpecPtr(v *AppsGitSourceSpecArgs) AppsGitSourceSpecPtrInput {
	return (*appsGitSourceSpecPtrType)(v)
}

func (*appsGitSourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsGitSourceSpec)(nil)).Elem()
}

func (i *appsGitSourceSpecPtrType) ToAppsGitSourceSpecPtrOutput() AppsGitSourceSpecPtrOutput {
	return i.ToAppsGitSourceSpecPtrOutputWithContext(context.Background())
}

func (i *appsGitSourceSpecPtrType) ToAppsGitSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGitSourceSpecPtrOutput)
}

type AppsGitSourceSpecOutput struct{ *pulumi.OutputState }

func (AppsGitSourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGitSourceSpec)(nil)).Elem()
}

func (o AppsGitSourceSpecOutput) ToAppsGitSourceSpecOutput() AppsGitSourceSpecOutput {
	return o
}

func (o AppsGitSourceSpecOutput) ToAppsGitSourceSpecOutputWithContext(ctx context.Context) AppsGitSourceSpecOutput {
	return o
}

func (o AppsGitSourceSpecOutput) ToAppsGitSourceSpecPtrOutput() AppsGitSourceSpecPtrOutput {
	return o.ToAppsGitSourceSpecPtrOutputWithContext(context.Background())
}

func (o AppsGitSourceSpecOutput) ToAppsGitSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitSourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppsGitSourceSpec) *AppsGitSourceSpec {
		return &v
	}).(AppsGitSourceSpecPtrOutput)
}

// The name of the branch to use
func (o AppsGitSourceSpecOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsGitSourceSpec) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`
func (o AppsGitSourceSpecOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsGitSourceSpec) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type AppsGitSourceSpecPtrOutput struct{ *pulumi.OutputState }

func (AppsGitSourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsGitSourceSpec)(nil)).Elem()
}

func (o AppsGitSourceSpecPtrOutput) ToAppsGitSourceSpecPtrOutput() AppsGitSourceSpecPtrOutput {
	return o
}

func (o AppsGitSourceSpecPtrOutput) ToAppsGitSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitSourceSpecPtrOutput {
	return o
}

func (o AppsGitSourceSpecPtrOutput) Elem() AppsGitSourceSpecOutput {
	return o.ApplyT(func(v *AppsGitSourceSpec) AppsGitSourceSpec {
		if v != nil {
			return *v
		}
		var ret AppsGitSourceSpec
		return ret
	}).(AppsGitSourceSpecOutput)
}

// The name of the branch to use
func (o AppsGitSourceSpecPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsGitSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo. Example: `https://github.com/digitalocean/sample-golang.git`
func (o AppsGitSourceSpecPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsGitSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type AppsGithubSourceSpec struct {
	// The name of the branch to use
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
	Repo *string `pulumi:"repo"`
}

// AppsGithubSourceSpecInput is an input type that accepts AppsGithubSourceSpecArgs and AppsGithubSourceSpecOutput values.
// You can construct a concrete instance of `AppsGithubSourceSpecInput` via:
//
//	AppsGithubSourceSpecArgs{...}
type AppsGithubSourceSpecInput interface {
	pulumi.Input

	ToAppsGithubSourceSpecOutput() AppsGithubSourceSpecOutput
	ToAppsGithubSourceSpecOutputWithContext(context.Context) AppsGithubSourceSpecOutput
}

type AppsGithubSourceSpecArgs struct {
	// The name of the branch to use
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppsGithubSourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGithubSourceSpec)(nil)).Elem()
}

func (i AppsGithubSourceSpecArgs) ToAppsGithubSourceSpecOutput() AppsGithubSourceSpecOutput {
	return i.ToAppsGithubSourceSpecOutputWithContext(context.Background())
}

func (i AppsGithubSourceSpecArgs) ToAppsGithubSourceSpecOutputWithContext(ctx context.Context) AppsGithubSourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGithubSourceSpecOutput)
}

func (i AppsGithubSourceSpecArgs) ToAppsGithubSourceSpecPtrOutput() AppsGithubSourceSpecPtrOutput {
	return i.ToAppsGithubSourceSpecPtrOutputWithContext(context.Background())
}

func (i AppsGithubSourceSpecArgs) ToAppsGithubSourceSpecPtrOutputWithContext(ctx context.Context) AppsGithubSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGithubSourceSpecOutput).ToAppsGithubSourceSpecPtrOutputWithContext(ctx)
}

// AppsGithubSourceSpecPtrInput is an input type that accepts AppsGithubSourceSpecArgs, AppsGithubSourceSpecPtr and AppsGithubSourceSpecPtrOutput values.
// You can construct a concrete instance of `AppsGithubSourceSpecPtrInput` via:
//
//	        AppsGithubSourceSpecArgs{...}
//
//	or:
//
//	        nil
type AppsGithubSourceSpecPtrInput interface {
	pulumi.Input

	ToAppsGithubSourceSpecPtrOutput() AppsGithubSourceSpecPtrOutput
	ToAppsGithubSourceSpecPtrOutputWithContext(context.Context) AppsGithubSourceSpecPtrOutput
}

type appsGithubSourceSpecPtrType AppsGithubSourceSpecArgs

func AppsGithubSourceSpecPtr(v *AppsGithubSourceSpecArgs) AppsGithubSourceSpecPtrInput {
	return (*appsGithubSourceSpecPtrType)(v)
}

func (*appsGithubSourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsGithubSourceSpec)(nil)).Elem()
}

func (i *appsGithubSourceSpecPtrType) ToAppsGithubSourceSpecPtrOutput() AppsGithubSourceSpecPtrOutput {
	return i.ToAppsGithubSourceSpecPtrOutputWithContext(context.Background())
}

func (i *appsGithubSourceSpecPtrType) ToAppsGithubSourceSpecPtrOutputWithContext(ctx context.Context) AppsGithubSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGithubSourceSpecPtrOutput)
}

type AppsGithubSourceSpecOutput struct{ *pulumi.OutputState }

func (AppsGithubSourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGithubSourceSpec)(nil)).Elem()
}

func (o AppsGithubSourceSpecOutput) ToAppsGithubSourceSpecOutput() AppsGithubSourceSpecOutput {
	return o
}

func (o AppsGithubSourceSpecOutput) ToAppsGithubSourceSpecOutputWithContext(ctx context.Context) AppsGithubSourceSpecOutput {
	return o
}

func (o AppsGithubSourceSpecOutput) ToAppsGithubSourceSpecPtrOutput() AppsGithubSourceSpecPtrOutput {
	return o.ToAppsGithubSourceSpecPtrOutputWithContext(context.Background())
}

func (o AppsGithubSourceSpecOutput) ToAppsGithubSourceSpecPtrOutputWithContext(ctx context.Context) AppsGithubSourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppsGithubSourceSpec) *AppsGithubSourceSpec {
		return &v
	}).(AppsGithubSourceSpecPtrOutput)
}

// The name of the branch to use
func (o AppsGithubSourceSpecOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsGithubSourceSpec) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo
func (o AppsGithubSourceSpecOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppsGithubSourceSpec) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
func (o AppsGithubSourceSpecOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsGithubSourceSpec) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppsGithubSourceSpecPtrOutput struct{ *pulumi.OutputState }

func (AppsGithubSourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsGithubSourceSpec)(nil)).Elem()
}

func (o AppsGithubSourceSpecPtrOutput) ToAppsGithubSourceSpecPtrOutput() AppsGithubSourceSpecPtrOutput {
	return o
}

func (o AppsGithubSourceSpecPtrOutput) ToAppsGithubSourceSpecPtrOutputWithContext(ctx context.Context) AppsGithubSourceSpecPtrOutput {
	return o
}

func (o AppsGithubSourceSpecPtrOutput) Elem() AppsGithubSourceSpecOutput {
	return o.ApplyT(func(v *AppsGithubSourceSpec) AppsGithubSourceSpec {
		if v != nil {
			return *v
		}
		var ret AppsGithubSourceSpec
		return ret
	}).(AppsGithubSourceSpecOutput)
}

// The name of the branch to use
func (o AppsGithubSourceSpecPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsGithubSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo
func (o AppsGithubSourceSpecPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppsGithubSourceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
func (o AppsGithubSourceSpecPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsGithubSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppsGitlabSourceSpec struct {
	// The name of the branch to use
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
	Repo *string `pulumi:"repo"`
}

// AppsGitlabSourceSpecInput is an input type that accepts AppsGitlabSourceSpecArgs and AppsGitlabSourceSpecOutput values.
// You can construct a concrete instance of `AppsGitlabSourceSpecInput` via:
//
//	AppsGitlabSourceSpecArgs{...}
type AppsGitlabSourceSpecInput interface {
	pulumi.Input

	ToAppsGitlabSourceSpecOutput() AppsGitlabSourceSpecOutput
	ToAppsGitlabSourceSpecOutputWithContext(context.Context) AppsGitlabSourceSpecOutput
}

type AppsGitlabSourceSpecArgs struct {
	// The name of the branch to use
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppsGitlabSourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGitlabSourceSpec)(nil)).Elem()
}

func (i AppsGitlabSourceSpecArgs) ToAppsGitlabSourceSpecOutput() AppsGitlabSourceSpecOutput {
	return i.ToAppsGitlabSourceSpecOutputWithContext(context.Background())
}

func (i AppsGitlabSourceSpecArgs) ToAppsGitlabSourceSpecOutputWithContext(ctx context.Context) AppsGitlabSourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGitlabSourceSpecOutput)
}

func (i AppsGitlabSourceSpecArgs) ToAppsGitlabSourceSpecPtrOutput() AppsGitlabSourceSpecPtrOutput {
	return i.ToAppsGitlabSourceSpecPtrOutputWithContext(context.Background())
}

func (i AppsGitlabSourceSpecArgs) ToAppsGitlabSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitlabSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGitlabSourceSpecOutput).ToAppsGitlabSourceSpecPtrOutputWithContext(ctx)
}

// AppsGitlabSourceSpecPtrInput is an input type that accepts AppsGitlabSourceSpecArgs, AppsGitlabSourceSpecPtr and AppsGitlabSourceSpecPtrOutput values.
// You can construct a concrete instance of `AppsGitlabSourceSpecPtrInput` via:
//
//	        AppsGitlabSourceSpecArgs{...}
//
//	or:
//
//	        nil
type AppsGitlabSourceSpecPtrInput interface {
	pulumi.Input

	ToAppsGitlabSourceSpecPtrOutput() AppsGitlabSourceSpecPtrOutput
	ToAppsGitlabSourceSpecPtrOutputWithContext(context.Context) AppsGitlabSourceSpecPtrOutput
}

type appsGitlabSourceSpecPtrType AppsGitlabSourceSpecArgs

func AppsGitlabSourceSpecPtr(v *AppsGitlabSourceSpecArgs) AppsGitlabSourceSpecPtrInput {
	return (*appsGitlabSourceSpecPtrType)(v)
}

func (*appsGitlabSourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsGitlabSourceSpec)(nil)).Elem()
}

func (i *appsGitlabSourceSpecPtrType) ToAppsGitlabSourceSpecPtrOutput() AppsGitlabSourceSpecPtrOutput {
	return i.ToAppsGitlabSourceSpecPtrOutputWithContext(context.Background())
}

func (i *appsGitlabSourceSpecPtrType) ToAppsGitlabSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitlabSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsGitlabSourceSpecPtrOutput)
}

type AppsGitlabSourceSpecOutput struct{ *pulumi.OutputState }

func (AppsGitlabSourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsGitlabSourceSpec)(nil)).Elem()
}

func (o AppsGitlabSourceSpecOutput) ToAppsGitlabSourceSpecOutput() AppsGitlabSourceSpecOutput {
	return o
}

func (o AppsGitlabSourceSpecOutput) ToAppsGitlabSourceSpecOutputWithContext(ctx context.Context) AppsGitlabSourceSpecOutput {
	return o
}

func (o AppsGitlabSourceSpecOutput) ToAppsGitlabSourceSpecPtrOutput() AppsGitlabSourceSpecPtrOutput {
	return o.ToAppsGitlabSourceSpecPtrOutputWithContext(context.Background())
}

func (o AppsGitlabSourceSpecOutput) ToAppsGitlabSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitlabSourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppsGitlabSourceSpec) *AppsGitlabSourceSpec {
		return &v
	}).(AppsGitlabSourceSpecPtrOutput)
}

// The name of the branch to use
func (o AppsGitlabSourceSpecOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsGitlabSourceSpec) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo
func (o AppsGitlabSourceSpecOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppsGitlabSourceSpec) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
func (o AppsGitlabSourceSpecOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsGitlabSourceSpec) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppsGitlabSourceSpecPtrOutput struct{ *pulumi.OutputState }

func (AppsGitlabSourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsGitlabSourceSpec)(nil)).Elem()
}

func (o AppsGitlabSourceSpecPtrOutput) ToAppsGitlabSourceSpecPtrOutput() AppsGitlabSourceSpecPtrOutput {
	return o
}

func (o AppsGitlabSourceSpecPtrOutput) ToAppsGitlabSourceSpecPtrOutputWithContext(ctx context.Context) AppsGitlabSourceSpecPtrOutput {
	return o
}

func (o AppsGitlabSourceSpecPtrOutput) Elem() AppsGitlabSourceSpecOutput {
	return o.ApplyT(func(v *AppsGitlabSourceSpec) AppsGitlabSourceSpec {
		if v != nil {
			return *v
		}
		var ret AppsGitlabSourceSpec
		return ret
	}).(AppsGitlabSourceSpecOutput)
}

// The name of the branch to use
func (o AppsGitlabSourceSpecPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsGitlabSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo
func (o AppsGitlabSourceSpecPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppsGitlabSourceSpec) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format owner/repo. Example: `digitalocean/sample-golang`
func (o AppsGitlabSourceSpecPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsGitlabSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppsImageSourceSpec struct {
	// The registry name. Must be left empty for the `DOCR` registry type.
	Registry *string `pulumi:"registry"`
	// - DOCKER_HUB: The DockerHub container registry type.
	// - DOCR: The DigitalOcean container registry type.
	RegistryType *AppsImageSourceSpecRegistryType `pulumi:"registryType"`
	// The repository name.
	Repository *string `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag *string `pulumi:"tag"`
}

// Defaults sets the appropriate defaults for AppsImageSourceSpec
func (val *AppsImageSourceSpec) Defaults() *AppsImageSourceSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Tag == nil {
		tag_ := "latest"
		tmp.Tag = &tag_
	}
	return &tmp
}

// AppsImageSourceSpecInput is an input type that accepts AppsImageSourceSpecArgs and AppsImageSourceSpecOutput values.
// You can construct a concrete instance of `AppsImageSourceSpecInput` via:
//
//	AppsImageSourceSpecArgs{...}
type AppsImageSourceSpecInput interface {
	pulumi.Input

	ToAppsImageSourceSpecOutput() AppsImageSourceSpecOutput
	ToAppsImageSourceSpecOutputWithContext(context.Context) AppsImageSourceSpecOutput
}

type AppsImageSourceSpecArgs struct {
	// The registry name. Must be left empty for the `DOCR` registry type.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// - DOCKER_HUB: The DockerHub container registry type.
	// - DOCR: The DigitalOcean container registry type.
	RegistryType AppsImageSourceSpecRegistryTypePtrInput `pulumi:"registryType"`
	// The repository name.
	Repository pulumi.StringPtrInput `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

// Defaults sets the appropriate defaults for AppsImageSourceSpecArgs
func (val *AppsImageSourceSpecArgs) Defaults() *AppsImageSourceSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Tag == nil {
		tmp.Tag = pulumi.StringPtr("latest")
	}
	return &tmp
}
func (AppsImageSourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsImageSourceSpec)(nil)).Elem()
}

func (i AppsImageSourceSpecArgs) ToAppsImageSourceSpecOutput() AppsImageSourceSpecOutput {
	return i.ToAppsImageSourceSpecOutputWithContext(context.Background())
}

func (i AppsImageSourceSpecArgs) ToAppsImageSourceSpecOutputWithContext(ctx context.Context) AppsImageSourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsImageSourceSpecOutput)
}

func (i AppsImageSourceSpecArgs) ToAppsImageSourceSpecPtrOutput() AppsImageSourceSpecPtrOutput {
	return i.ToAppsImageSourceSpecPtrOutputWithContext(context.Background())
}

func (i AppsImageSourceSpecArgs) ToAppsImageSourceSpecPtrOutputWithContext(ctx context.Context) AppsImageSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsImageSourceSpecOutput).ToAppsImageSourceSpecPtrOutputWithContext(ctx)
}

// AppsImageSourceSpecPtrInput is an input type that accepts AppsImageSourceSpecArgs, AppsImageSourceSpecPtr and AppsImageSourceSpecPtrOutput values.
// You can construct a concrete instance of `AppsImageSourceSpecPtrInput` via:
//
//	        AppsImageSourceSpecArgs{...}
//
//	or:
//
//	        nil
type AppsImageSourceSpecPtrInput interface {
	pulumi.Input

	ToAppsImageSourceSpecPtrOutput() AppsImageSourceSpecPtrOutput
	ToAppsImageSourceSpecPtrOutputWithContext(context.Context) AppsImageSourceSpecPtrOutput
}

type appsImageSourceSpecPtrType AppsImageSourceSpecArgs

func AppsImageSourceSpecPtr(v *AppsImageSourceSpecArgs) AppsImageSourceSpecPtrInput {
	return (*appsImageSourceSpecPtrType)(v)
}

func (*appsImageSourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsImageSourceSpec)(nil)).Elem()
}

func (i *appsImageSourceSpecPtrType) ToAppsImageSourceSpecPtrOutput() AppsImageSourceSpecPtrOutput {
	return i.ToAppsImageSourceSpecPtrOutputWithContext(context.Background())
}

func (i *appsImageSourceSpecPtrType) ToAppsImageSourceSpecPtrOutputWithContext(ctx context.Context) AppsImageSourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsImageSourceSpecPtrOutput)
}

type AppsImageSourceSpecOutput struct{ *pulumi.OutputState }

func (AppsImageSourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsImageSourceSpec)(nil)).Elem()
}

func (o AppsImageSourceSpecOutput) ToAppsImageSourceSpecOutput() AppsImageSourceSpecOutput {
	return o
}

func (o AppsImageSourceSpecOutput) ToAppsImageSourceSpecOutputWithContext(ctx context.Context) AppsImageSourceSpecOutput {
	return o
}

func (o AppsImageSourceSpecOutput) ToAppsImageSourceSpecPtrOutput() AppsImageSourceSpecPtrOutput {
	return o.ToAppsImageSourceSpecPtrOutputWithContext(context.Background())
}

func (o AppsImageSourceSpecOutput) ToAppsImageSourceSpecPtrOutputWithContext(ctx context.Context) AppsImageSourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppsImageSourceSpec) *AppsImageSourceSpec {
		return &v
	}).(AppsImageSourceSpecPtrOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type.
func (o AppsImageSourceSpecOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsImageSourceSpec) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// - DOCKER_HUB: The DockerHub container registry type.
// - DOCR: The DigitalOcean container registry type.
func (o AppsImageSourceSpecOutput) RegistryType() AppsImageSourceSpecRegistryTypePtrOutput {
	return o.ApplyT(func(v AppsImageSourceSpec) *AppsImageSourceSpecRegistryType { return v.RegistryType }).(AppsImageSourceSpecRegistryTypePtrOutput)
}

// The repository name.
func (o AppsImageSourceSpecOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsImageSourceSpec) *string { return v.Repository }).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppsImageSourceSpecOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsImageSourceSpec) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type AppsImageSourceSpecPtrOutput struct{ *pulumi.OutputState }

func (AppsImageSourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsImageSourceSpec)(nil)).Elem()
}

func (o AppsImageSourceSpecPtrOutput) ToAppsImageSourceSpecPtrOutput() AppsImageSourceSpecPtrOutput {
	return o
}

func (o AppsImageSourceSpecPtrOutput) ToAppsImageSourceSpecPtrOutputWithContext(ctx context.Context) AppsImageSourceSpecPtrOutput {
	return o
}

func (o AppsImageSourceSpecPtrOutput) Elem() AppsImageSourceSpecOutput {
	return o.ApplyT(func(v *AppsImageSourceSpec) AppsImageSourceSpec {
		if v != nil {
			return *v
		}
		var ret AppsImageSourceSpec
		return ret
	}).(AppsImageSourceSpecOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type.
func (o AppsImageSourceSpecPtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsImageSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// - DOCKER_HUB: The DockerHub container registry type.
// - DOCR: The DigitalOcean container registry type.
func (o AppsImageSourceSpecPtrOutput) RegistryType() AppsImageSourceSpecRegistryTypePtrOutput {
	return o.ApplyT(func(v *AppsImageSourceSpec) *AppsImageSourceSpecRegistryType {
		if v == nil {
			return nil
		}
		return v.RegistryType
	}).(AppsImageSourceSpecRegistryTypePtrOutput)
}

// The repository name.
func (o AppsImageSourceSpecPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsImageSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Repository
	}).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppsImageSourceSpecPtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsImageSourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type AppsInstanceSize struct {
	CpuType         *AppsInstanceSizeCpuType `pulumi:"cpuType"`
	Cpus            *string                  `pulumi:"cpus"`
	MemoryBytes     *string                  `pulumi:"memoryBytes"`
	Name            *string                  `pulumi:"name"`
	Slug            *string                  `pulumi:"slug"`
	TierDowngradeTo *string                  `pulumi:"tierDowngradeTo"`
	TierSlug        *string                  `pulumi:"tierSlug"`
	TierUpgradeTo   *string                  `pulumi:"tierUpgradeTo"`
	UsdPerMonth     *string                  `pulumi:"usdPerMonth"`
	UsdPerSecond    *string                  `pulumi:"usdPerSecond"`
}

// Defaults sets the appropriate defaults for AppsInstanceSize
func (val *AppsInstanceSize) Defaults() *AppsInstanceSize {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.CpuType == nil {
		cpuType_ := AppsInstanceSizeCpuType("UNSPECIFIED")
		tmp.CpuType = &cpuType_
	}
	return &tmp
}

type AppsInstanceSizeOutput struct{ *pulumi.OutputState }

func (AppsInstanceSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsInstanceSize)(nil)).Elem()
}

func (o AppsInstanceSizeOutput) ToAppsInstanceSizeOutput() AppsInstanceSizeOutput {
	return o
}

func (o AppsInstanceSizeOutput) ToAppsInstanceSizeOutputWithContext(ctx context.Context) AppsInstanceSizeOutput {
	return o
}

func (o AppsInstanceSizeOutput) CpuType() AppsInstanceSizeCpuTypePtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *AppsInstanceSizeCpuType { return v.CpuType }).(AppsInstanceSizeCpuTypePtrOutput)
}

func (o AppsInstanceSizeOutput) Cpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.Cpus }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) MemoryBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.MemoryBytes }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) TierDowngradeTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.TierDowngradeTo }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.TierSlug }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) TierUpgradeTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.TierUpgradeTo }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) UsdPerMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.UsdPerMonth }).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizeOutput) UsdPerSecond() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsInstanceSize) *string { return v.UsdPerSecond }).(pulumi.StringPtrOutput)
}

type AppsInstanceSizePtrOutput struct{ *pulumi.OutputState }

func (AppsInstanceSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsInstanceSize)(nil)).Elem()
}

func (o AppsInstanceSizePtrOutput) ToAppsInstanceSizePtrOutput() AppsInstanceSizePtrOutput {
	return o
}

func (o AppsInstanceSizePtrOutput) ToAppsInstanceSizePtrOutputWithContext(ctx context.Context) AppsInstanceSizePtrOutput {
	return o
}

func (o AppsInstanceSizePtrOutput) Elem() AppsInstanceSizeOutput {
	return o.ApplyT(func(v *AppsInstanceSize) AppsInstanceSize {
		if v != nil {
			return *v
		}
		var ret AppsInstanceSize
		return ret
	}).(AppsInstanceSizeOutput)
}

func (o AppsInstanceSizePtrOutput) CpuType() AppsInstanceSizeCpuTypePtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *AppsInstanceSizeCpuType {
		if v == nil {
			return nil
		}
		return v.CpuType
	}).(AppsInstanceSizeCpuTypePtrOutput)
}

func (o AppsInstanceSizePtrOutput) Cpus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.Cpus
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) MemoryBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.MemoryBytes
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) TierDowngradeTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.TierDowngradeTo
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) TierSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.TierSlug
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) TierUpgradeTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.TierUpgradeTo
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) UsdPerMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.UsdPerMonth
	}).(pulumi.StringPtrOutput)
}

func (o AppsInstanceSizePtrOutput) UsdPerSecond() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsInstanceSize) *string {
		if v == nil {
			return nil
		}
		return v.UsdPerSecond
	}).(pulumi.StringPtrOutput)
}

type AppsInstanceSizeArrayOutput struct{ *pulumi.OutputState }

func (AppsInstanceSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsInstanceSize)(nil)).Elem()
}

func (o AppsInstanceSizeArrayOutput) ToAppsInstanceSizeArrayOutput() AppsInstanceSizeArrayOutput {
	return o
}

func (o AppsInstanceSizeArrayOutput) ToAppsInstanceSizeArrayOutputWithContext(ctx context.Context) AppsInstanceSizeArrayOutput {
	return o
}

func (o AppsInstanceSizeArrayOutput) Index(i pulumi.IntInput) AppsInstanceSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsInstanceSize {
		return vs[0].([]AppsInstanceSize)[vs[1].(int)]
	}).(AppsInstanceSizeOutput)
}

type AppsListAlertsResponse struct {
	Alerts []AppAlert `pulumi:"alerts"`
}

type AppsListAlertsResponseOutput struct{ *pulumi.OutputState }

func (AppsListAlertsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsListAlertsResponse)(nil)).Elem()
}

func (o AppsListAlertsResponseOutput) ToAppsListAlertsResponseOutput() AppsListAlertsResponseOutput {
	return o
}

func (o AppsListAlertsResponseOutput) ToAppsListAlertsResponseOutputWithContext(ctx context.Context) AppsListAlertsResponseOutput {
	return o
}

func (o AppsListAlertsResponseOutput) Alerts() AppAlertArrayOutput {
	return o.ApplyT(func(v AppsListAlertsResponse) []AppAlert { return v.Alerts }).(AppAlertArrayOutput)
}

type AppsListInstanceSizesResponse struct {
	DiscountPercent *float64           `pulumi:"discountPercent"`
	InstanceSizes   []AppsInstanceSize `pulumi:"instanceSizes"`
}

type AppsListInstanceSizesResponseOutput struct{ *pulumi.OutputState }

func (AppsListInstanceSizesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsListInstanceSizesResponse)(nil)).Elem()
}

func (o AppsListInstanceSizesResponseOutput) ToAppsListInstanceSizesResponseOutput() AppsListInstanceSizesResponseOutput {
	return o
}

func (o AppsListInstanceSizesResponseOutput) ToAppsListInstanceSizesResponseOutputWithContext(ctx context.Context) AppsListInstanceSizesResponseOutput {
	return o
}

func (o AppsListInstanceSizesResponseOutput) DiscountPercent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AppsListInstanceSizesResponse) *float64 { return v.DiscountPercent }).(pulumi.Float64PtrOutput)
}

func (o AppsListInstanceSizesResponseOutput) InstanceSizes() AppsInstanceSizeArrayOutput {
	return o.ApplyT(func(v AppsListInstanceSizesResponse) []AppsInstanceSize { return v.InstanceSizes }).(AppsInstanceSizeArrayOutput)
}

type AppsListRegionsResponse struct {
	Regions []AppsRegion `pulumi:"regions"`
}

type AppsListRegionsResponseOutput struct{ *pulumi.OutputState }

func (AppsListRegionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsListRegionsResponse)(nil)).Elem()
}

func (o AppsListRegionsResponseOutput) ToAppsListRegionsResponseOutput() AppsListRegionsResponseOutput {
	return o
}

func (o AppsListRegionsResponseOutput) ToAppsListRegionsResponseOutputWithContext(ctx context.Context) AppsListRegionsResponseOutput {
	return o
}

func (o AppsListRegionsResponseOutput) Regions() AppsRegionArrayOutput {
	return o.ApplyT(func(v AppsListRegionsResponse) []AppsRegion { return v.Regions }).(AppsRegionArrayOutput)
}

type AppsListTiersResponse struct {
	Tiers []AppsTier `pulumi:"tiers"`
}

type AppsListTiersResponseOutput struct{ *pulumi.OutputState }

func (AppsListTiersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsListTiersResponse)(nil)).Elem()
}

func (o AppsListTiersResponseOutput) ToAppsListTiersResponseOutput() AppsListTiersResponseOutput {
	return o
}

func (o AppsListTiersResponseOutput) ToAppsListTiersResponseOutputWithContext(ctx context.Context) AppsListTiersResponseOutput {
	return o
}

func (o AppsListTiersResponseOutput) Tiers() AppsTierArrayOutput {
	return o.ApplyT(func(v AppsListTiersResponse) []AppsTier { return v.Tiers }).(AppsTierArrayOutput)
}

type AppsRegion struct {
	Continent   *string  `pulumi:"continent"`
	DataCenters []string `pulumi:"dataCenters"`
	// Whether or not the region is presented as the default.
	Default  *bool   `pulumi:"default"`
	Disabled *bool   `pulumi:"disabled"`
	Flag     *string `pulumi:"flag"`
	Label    *string `pulumi:"label"`
	Reason   *string `pulumi:"reason"`
	Slug     *string `pulumi:"slug"`
}

type AppsRegionOutput struct{ *pulumi.OutputState }

func (AppsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsRegion)(nil)).Elem()
}

func (o AppsRegionOutput) ToAppsRegionOutput() AppsRegionOutput {
	return o
}

func (o AppsRegionOutput) ToAppsRegionOutputWithContext(ctx context.Context) AppsRegionOutput {
	return o
}

func (o AppsRegionOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsRegion) *string { return v.Continent }).(pulumi.StringPtrOutput)
}

func (o AppsRegionOutput) DataCenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppsRegion) []string { return v.DataCenters }).(pulumi.StringArrayOutput)
}

// Whether or not the region is presented as the default.
func (o AppsRegionOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppsRegion) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

func (o AppsRegionOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppsRegion) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o AppsRegionOutput) Flag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsRegion) *string { return v.Flag }).(pulumi.StringPtrOutput)
}

func (o AppsRegionOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsRegion) *string { return v.Label }).(pulumi.StringPtrOutput)
}

func (o AppsRegionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsRegion) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o AppsRegionOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsRegion) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

type AppsRegionPtrOutput struct{ *pulumi.OutputState }

func (AppsRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsRegion)(nil)).Elem()
}

func (o AppsRegionPtrOutput) ToAppsRegionPtrOutput() AppsRegionPtrOutput {
	return o
}

func (o AppsRegionPtrOutput) ToAppsRegionPtrOutputWithContext(ctx context.Context) AppsRegionPtrOutput {
	return o
}

func (o AppsRegionPtrOutput) Elem() AppsRegionOutput {
	return o.ApplyT(func(v *AppsRegion) AppsRegion {
		if v != nil {
			return *v
		}
		var ret AppsRegion
		return ret
	}).(AppsRegionOutput)
}

func (o AppsRegionPtrOutput) Continent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsRegion) *string {
		if v == nil {
			return nil
		}
		return v.Continent
	}).(pulumi.StringPtrOutput)
}

func (o AppsRegionPtrOutput) DataCenters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppsRegion) []string {
		if v == nil {
			return nil
		}
		return v.DataCenters
	}).(pulumi.StringArrayOutput)
}

// Whether or not the region is presented as the default.
func (o AppsRegionPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppsRegion) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

func (o AppsRegionPtrOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppsRegion) *bool {
		if v == nil {
			return nil
		}
		return v.Disabled
	}).(pulumi.BoolPtrOutput)
}

func (o AppsRegionPtrOutput) Flag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsRegion) *string {
		if v == nil {
			return nil
		}
		return v.Flag
	}).(pulumi.StringPtrOutput)
}

func (o AppsRegionPtrOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsRegion) *string {
		if v == nil {
			return nil
		}
		return v.Label
	}).(pulumi.StringPtrOutput)
}

func (o AppsRegionPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsRegion) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

func (o AppsRegionPtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsRegion) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

type AppsRegionArrayOutput struct{ *pulumi.OutputState }

func (AppsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsRegion)(nil)).Elem()
}

func (o AppsRegionArrayOutput) ToAppsRegionArrayOutput() AppsRegionArrayOutput {
	return o
}

func (o AppsRegionArrayOutput) ToAppsRegionArrayOutputWithContext(ctx context.Context) AppsRegionArrayOutput {
	return o
}

func (o AppsRegionArrayOutput) Index(i pulumi.IntInput) AppsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsRegion {
		return vs[0].([]AppsRegion)[vs[1].(int)]
	}).(AppsRegionOutput)
}

type AppsResponse struct {
	Apps  []App      `pulumi:"apps"`
	Links *PageLinks `pulumi:"links"`
	Meta  MetaMeta   `pulumi:"meta"`
}

type AppsResponseOutput struct{ *pulumi.OutputState }

func (AppsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsResponse)(nil)).Elem()
}

func (o AppsResponseOutput) ToAppsResponseOutput() AppsResponseOutput {
	return o
}

func (o AppsResponseOutput) ToAppsResponseOutputWithContext(ctx context.Context) AppsResponseOutput {
	return o
}

func (o AppsResponseOutput) Apps() AppArrayOutput {
	return o.ApplyT(func(v AppsResponse) []App { return v.Apps }).(AppArrayOutput)
}

func (o AppsResponseOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v AppsResponse) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o AppsResponseOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v AppsResponse) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

type AppsStringMatch struct {
	// Exact string match. Only 1 of `exact`, `prefix`, or `regex` must be set.
	Exact *string `pulumi:"exact"`
	// Prefix-based match. Only 1 of `exact`, `prefix`, or `regex` must be set.
	Prefix *string `pulumi:"prefix"`
	// RE2 style regex-based match. Only 1 of `exact`, `prefix`, or `regex` must be set. For more information about RE2 syntax, see: https://github.com/google/re2/wiki/Syntax
	Regex *string `pulumi:"regex"`
}

// AppsStringMatchInput is an input type that accepts AppsStringMatchArgs and AppsStringMatchOutput values.
// You can construct a concrete instance of `AppsStringMatchInput` via:
//
//	AppsStringMatchArgs{...}
type AppsStringMatchInput interface {
	pulumi.Input

	ToAppsStringMatchOutput() AppsStringMatchOutput
	ToAppsStringMatchOutputWithContext(context.Context) AppsStringMatchOutput
}

type AppsStringMatchArgs struct {
	// Exact string match. Only 1 of `exact`, `prefix`, or `regex` must be set.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// Prefix-based match. Only 1 of `exact`, `prefix`, or `regex` must be set.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// RE2 style regex-based match. Only 1 of `exact`, `prefix`, or `regex` must be set. For more information about RE2 syntax, see: https://github.com/google/re2/wiki/Syntax
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (AppsStringMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsStringMatch)(nil)).Elem()
}

func (i AppsStringMatchArgs) ToAppsStringMatchOutput() AppsStringMatchOutput {
	return i.ToAppsStringMatchOutputWithContext(context.Background())
}

func (i AppsStringMatchArgs) ToAppsStringMatchOutputWithContext(ctx context.Context) AppsStringMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsStringMatchOutput)
}

// AppsStringMatchArrayInput is an input type that accepts AppsStringMatchArray and AppsStringMatchArrayOutput values.
// You can construct a concrete instance of `AppsStringMatchArrayInput` via:
//
//	AppsStringMatchArray{ AppsStringMatchArgs{...} }
type AppsStringMatchArrayInput interface {
	pulumi.Input

	ToAppsStringMatchArrayOutput() AppsStringMatchArrayOutput
	ToAppsStringMatchArrayOutputWithContext(context.Context) AppsStringMatchArrayOutput
}

type AppsStringMatchArray []AppsStringMatchInput

func (AppsStringMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsStringMatch)(nil)).Elem()
}

func (i AppsStringMatchArray) ToAppsStringMatchArrayOutput() AppsStringMatchArrayOutput {
	return i.ToAppsStringMatchArrayOutputWithContext(context.Background())
}

func (i AppsStringMatchArray) ToAppsStringMatchArrayOutputWithContext(ctx context.Context) AppsStringMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsStringMatchArrayOutput)
}

type AppsStringMatchOutput struct{ *pulumi.OutputState }

func (AppsStringMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsStringMatch)(nil)).Elem()
}

func (o AppsStringMatchOutput) ToAppsStringMatchOutput() AppsStringMatchOutput {
	return o
}

func (o AppsStringMatchOutput) ToAppsStringMatchOutputWithContext(ctx context.Context) AppsStringMatchOutput {
	return o
}

// Exact string match. Only 1 of `exact`, `prefix`, or `regex` must be set.
func (o AppsStringMatchOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsStringMatch) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// Prefix-based match. Only 1 of `exact`, `prefix`, or `regex` must be set.
func (o AppsStringMatchOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsStringMatch) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// RE2 style regex-based match. Only 1 of `exact`, `prefix`, or `regex` must be set. For more information about RE2 syntax, see: https://github.com/google/re2/wiki/Syntax
func (o AppsStringMatchOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsStringMatch) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type AppsStringMatchArrayOutput struct{ *pulumi.OutputState }

func (AppsStringMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsStringMatch)(nil)).Elem()
}

func (o AppsStringMatchArrayOutput) ToAppsStringMatchArrayOutput() AppsStringMatchArrayOutput {
	return o
}

func (o AppsStringMatchArrayOutput) ToAppsStringMatchArrayOutputWithContext(ctx context.Context) AppsStringMatchArrayOutput {
	return o
}

func (o AppsStringMatchArrayOutput) Index(i pulumi.IntInput) AppsStringMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsStringMatch {
		return vs[0].([]AppsStringMatch)[vs[1].(int)]
	}).(AppsStringMatchOutput)
}

type AppsTier struct {
	BuildSeconds         *string `pulumi:"buildSeconds"`
	EgressBandwidthBytes *string `pulumi:"egressBandwidthBytes"`
	Name                 *string `pulumi:"name"`
	Slug                 *string `pulumi:"slug"`
	StorageBytes         *string `pulumi:"storageBytes"`
}

type AppsTierOutput struct{ *pulumi.OutputState }

func (AppsTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppsTier)(nil)).Elem()
}

func (o AppsTierOutput) ToAppsTierOutput() AppsTierOutput {
	return o
}

func (o AppsTierOutput) ToAppsTierOutputWithContext(ctx context.Context) AppsTierOutput {
	return o
}

func (o AppsTierOutput) BuildSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsTier) *string { return v.BuildSeconds }).(pulumi.StringPtrOutput)
}

func (o AppsTierOutput) EgressBandwidthBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsTier) *string { return v.EgressBandwidthBytes }).(pulumi.StringPtrOutput)
}

func (o AppsTierOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsTier) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o AppsTierOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsTier) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func (o AppsTierOutput) StorageBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppsTier) *string { return v.StorageBytes }).(pulumi.StringPtrOutput)
}

type AppsTierPtrOutput struct{ *pulumi.OutputState }

func (AppsTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsTier)(nil)).Elem()
}

func (o AppsTierPtrOutput) ToAppsTierPtrOutput() AppsTierPtrOutput {
	return o
}

func (o AppsTierPtrOutput) ToAppsTierPtrOutputWithContext(ctx context.Context) AppsTierPtrOutput {
	return o
}

func (o AppsTierPtrOutput) Elem() AppsTierOutput {
	return o.ApplyT(func(v *AppsTier) AppsTier {
		if v != nil {
			return *v
		}
		var ret AppsTier
		return ret
	}).(AppsTierOutput)
}

func (o AppsTierPtrOutput) BuildSeconds() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsTier) *string {
		if v == nil {
			return nil
		}
		return v.BuildSeconds
	}).(pulumi.StringPtrOutput)
}

func (o AppsTierPtrOutput) EgressBandwidthBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsTier) *string {
		if v == nil {
			return nil
		}
		return v.EgressBandwidthBytes
	}).(pulumi.StringPtrOutput)
}

func (o AppsTierPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsTier) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o AppsTierPtrOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsTier) *string {
		if v == nil {
			return nil
		}
		return v.Slug
	}).(pulumi.StringPtrOutput)
}

func (o AppsTierPtrOutput) StorageBytes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsTier) *string {
		if v == nil {
			return nil
		}
		return v.StorageBytes
	}).(pulumi.StringPtrOutput)
}

type AppsTierArrayOutput struct{ *pulumi.OutputState }

func (AppsTierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppsTier)(nil)).Elem()
}

func (o AppsTierArrayOutput) ToAppsTierArrayOutput() AppsTierArrayOutput {
	return o
}

func (o AppsTierArrayOutput) ToAppsTierArrayOutputWithContext(ctx context.Context) AppsTierArrayOutput {
	return o
}

func (o AppsTierArrayOutput) Index(i pulumi.IntInput) AppsTierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppsTier {
		return vs[0].([]AppsTier)[vs[1].(int)]
	}).(AppsTierOutput)
}

type Error struct {
	// A code identifier that represents the failing condition.
	//
	// Failing conditions:
	//   - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.
	//   - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.
	//   - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.
	//   - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.
	//   - `database_config_conflict` - indicates that the deployment's database config is different than the current config.
	//   - `region_conflict` - indicates that the deployment's region differs from the current app region.
	//
	// Warning conditions:
	//   - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.
	//   - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.
	Code       *AppRollbackValidationConditionCode `pulumi:"code"`
	Components []string                            `pulumi:"components"`
	// A human-readable message describing the failing condition.
	Message *string `pulumi:"message"`
}

type ErrorOutput struct{ *pulumi.OutputState }

func (ErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Error)(nil)).Elem()
}

func (o ErrorOutput) ToErrorOutput() ErrorOutput {
	return o
}

func (o ErrorOutput) ToErrorOutputWithContext(ctx context.Context) ErrorOutput {
	return o
}

// A code identifier that represents the failing condition.
//
// Failing conditions:
//   - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.
//   - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.
//   - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.
//   - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.
//   - `database_config_conflict` - indicates that the deployment's database config is different than the current config.
//   - `region_conflict` - indicates that the deployment's region differs from the current app region.
//
// Warning conditions:
//   - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.
//   - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.
func (o ErrorOutput) Code() AppRollbackValidationConditionCodePtrOutput {
	return o.ApplyT(func(v Error) *AppRollbackValidationConditionCode { return v.Code }).(AppRollbackValidationConditionCodePtrOutput)
}

func (o ErrorOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Error) []string { return v.Components }).(pulumi.StringArrayOutput)
}

// A human-readable message describing the failing condition.
func (o ErrorOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Error) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type ErrorPtrOutput struct{ *pulumi.OutputState }

func (ErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Error)(nil)).Elem()
}

func (o ErrorPtrOutput) ToErrorPtrOutput() ErrorPtrOutput {
	return o
}

func (o ErrorPtrOutput) ToErrorPtrOutputWithContext(ctx context.Context) ErrorPtrOutput {
	return o
}

func (o ErrorPtrOutput) Elem() ErrorOutput {
	return o.ApplyT(func(v *Error) Error {
		if v != nil {
			return *v
		}
		var ret Error
		return ret
	}).(ErrorOutput)
}

// A code identifier that represents the failing condition.
//
// Failing conditions:
//   - `incompatible_phase` - indicates that the deployment's phase is not suitable for rollback.
//   - `incompatible_result` - indicates that the deployment's result is not suitable for rollback.
//   - `exceeded_revision_limit` - indicates that the app has exceeded the rollback revision limits for its tier.
//   - `app_pinned` - indicates that there is already a rollback in progress and the app is pinned.
//   - `database_config_conflict` - indicates that the deployment's database config is different than the current config.
//   - `region_conflict` - indicates that the deployment's region differs from the current app region.
//
// Warning conditions:
//   - `static_site_requires_rebuild` - indicates that the deployment contains at least one static site that will require a rebuild.
//   - `image_source_missing_digest` - indicates that the deployment contains at least one component with an image source that is missing a digest.
func (o ErrorPtrOutput) Code() AppRollbackValidationConditionCodePtrOutput {
	return o.ApplyT(func(v *Error) *AppRollbackValidationConditionCode {
		if v == nil {
			return nil
		}
		return v.Code
	}).(AppRollbackValidationConditionCodePtrOutput)
}

func (o ErrorPtrOutput) Components() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Error) []string {
		if v == nil {
			return nil
		}
		return v.Components
	}).(pulumi.StringArrayOutput)
}

// A human-readable message describing the failing condition.
func (o ErrorPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Error) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type MetaMeta struct {
	// Number of objects returned by the request.
	Total *int `pulumi:"total"`
}

type MetaMetaOutput struct{ *pulumi.OutputState }

func (MetaMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetaMeta)(nil)).Elem()
}

func (o MetaMetaOutput) ToMetaMetaOutput() MetaMetaOutput {
	return o
}

func (o MetaMetaOutput) ToMetaMetaOutputWithContext(ctx context.Context) MetaMetaOutput {
	return o
}

// Number of objects returned by the request.
func (o MetaMetaOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetaMeta) *int { return v.Total }).(pulumi.IntPtrOutput)
}

type PageLinks struct {
	Pages *PageLinksPagesProperties `pulumi:"pages"`
}

type PageLinksOutput struct{ *pulumi.OutputState }

func (PageLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinks)(nil)).Elem()
}

func (o PageLinksOutput) ToPageLinksOutput() PageLinksOutput {
	return o
}

func (o PageLinksOutput) ToPageLinksOutputWithContext(ctx context.Context) PageLinksOutput {
	return o
}

func (o PageLinksOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v PageLinks) *PageLinksPagesProperties { return v.Pages }).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinks)(nil)).Elem()
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutput() PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutputWithContext(ctx context.Context) PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) Elem() PageLinksOutput {
	return o.ApplyT(func(v *PageLinks) PageLinks {
		if v != nil {
			return *v
		}
		var ret PageLinks
		return ret
	}).(PageLinksOutput)
}

func (o PageLinksPtrOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v *PageLinks) *PageLinksPagesProperties {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPagesProperties struct {
	First *string `pulumi:"first"`
	Last  *string `pulumi:"last"`
	Next  *string `pulumi:"next"`
	Prev  *string `pulumi:"prev"`
}

type PageLinksPagesPropertiesOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutput() PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutputWithContext(ctx context.Context) PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Prev }).(pulumi.StringPtrOutput)
}

type PageLinksPagesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutput() PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutputWithContext(ctx context.Context) PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) Elem() PageLinksPagesPropertiesOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) PageLinksPagesProperties {
		if v != nil {
			return *v
		}
		var ret PageLinksPagesProperties
		return ret
	}).(PageLinksPagesPropertiesOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Prev
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppAlertSlackWebhookInput)(nil)).Elem(), AppAlertSlackWebhookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAlertSlackWebhookArrayInput)(nil)).Elem(), AppAlertSlackWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAlertSpecInput)(nil)).Elem(), AppAlertSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppAlertSpecArrayInput)(nil)).Elem(), AppAlertSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDatabaseSpecInput)(nil)).Elem(), AppDatabaseSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDatabaseSpecArrayInput)(nil)).Elem(), AppDatabaseSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDomainSpecInput)(nil)).Elem(), AppDomainSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDomainSpecArrayInput)(nil)).Elem(), AppDomainSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppFunctionsSpecInput)(nil)).Elem(), AppFunctionsSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppFunctionsSpecArrayInput)(nil)).Elem(), AppFunctionsSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecInput)(nil)).Elem(), AppIngressSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecPtrInput)(nil)).Elem(), AppIngressSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleInput)(nil)).Elem(), AppIngressSpecRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleArrayInput)(nil)).Elem(), AppIngressSpecRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleMatchInput)(nil)).Elem(), AppIngressSpecRuleMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleMatchPtrInput)(nil)).Elem(), AppIngressSpecRuleMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleRoutingComponentInput)(nil)).Elem(), AppIngressSpecRuleRoutingComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleRoutingComponentPtrInput)(nil)).Elem(), AppIngressSpecRuleRoutingComponentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleRoutingRedirectInput)(nil)).Elem(), AppIngressSpecRuleRoutingRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleRoutingRedirectPtrInput)(nil)).Elem(), AppIngressSpecRuleRoutingRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleStringMatchInput)(nil)).Elem(), AppIngressSpecRuleStringMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppIngressSpecRuleStringMatchPtrInput)(nil)).Elem(), AppIngressSpecRuleStringMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppJobSpecInput)(nil)).Elem(), AppJobSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppJobSpecArrayInput)(nil)).Elem(), AppJobSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationDatadogSpecInput)(nil)).Elem(), AppLogDestinationDatadogSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationDatadogSpecPtrInput)(nil)).Elem(), AppLogDestinationDatadogSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationDefinitionInput)(nil)).Elem(), AppLogDestinationDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationDefinitionPtrInput)(nil)).Elem(), AppLogDestinationDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationLogtailSpecInput)(nil)).Elem(), AppLogDestinationLogtailSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationLogtailSpecPtrInput)(nil)).Elem(), AppLogDestinationLogtailSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationPapertrailSpecInput)(nil)).Elem(), AppLogDestinationPapertrailSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppLogDestinationPapertrailSpecPtrInput)(nil)).Elem(), AppLogDestinationPapertrailSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRouteSpecInput)(nil)).Elem(), AppRouteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppRouteSpecArrayInput)(nil)).Elem(), AppRouteSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppServiceSpecInput)(nil)).Elem(), AppServiceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppServiceSpecArrayInput)(nil)).Elem(), AppServiceSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppServiceSpecHealthCheckInput)(nil)).Elem(), AppServiceSpecHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppServiceSpecHealthCheckPtrInput)(nil)).Elem(), AppServiceSpecHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecInput)(nil)).Elem(), AppSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppStaticSiteSpecInput)(nil)).Elem(), AppStaticSiteSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppStaticSiteSpecArrayInput)(nil)).Elem(), AppStaticSiteSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppVariableDefinitionInput)(nil)).Elem(), AppVariableDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppVariableDefinitionArrayInput)(nil)).Elem(), AppVariableDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppWorkerSpecInput)(nil)).Elem(), AppWorkerSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppWorkerSpecArrayInput)(nil)).Elem(), AppWorkerSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsCorsPolicyInput)(nil)).Elem(), AppsCorsPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsCorsPolicyPtrInput)(nil)).Elem(), AppsCorsPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsGitSourceSpecInput)(nil)).Elem(), AppsGitSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsGitSourceSpecPtrInput)(nil)).Elem(), AppsGitSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsGithubSourceSpecInput)(nil)).Elem(), AppsGithubSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsGithubSourceSpecPtrInput)(nil)).Elem(), AppsGithubSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsGitlabSourceSpecInput)(nil)).Elem(), AppsGitlabSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsGitlabSourceSpecPtrInput)(nil)).Elem(), AppsGitlabSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsImageSourceSpecInput)(nil)).Elem(), AppsImageSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsImageSourceSpecPtrInput)(nil)).Elem(), AppsImageSourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsStringMatchInput)(nil)).Elem(), AppsStringMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsStringMatchArrayInput)(nil)).Elem(), AppsStringMatchArray{})
	pulumi.RegisterOutputType(AppOutput{})
	pulumi.RegisterOutputType(AppPtrOutput{})
	pulumi.RegisterOutputType(AppArrayOutput{})
	pulumi.RegisterOutputType(AppAlertOutput{})
	pulumi.RegisterOutputType(AppAlertPtrOutput{})
	pulumi.RegisterOutputType(AppAlertArrayOutput{})
	pulumi.RegisterOutputType(AppAlertProgressOutput{})
	pulumi.RegisterOutputType(AppAlertProgressPtrOutput{})
	pulumi.RegisterOutputType(AppAlertProgressStepOutput{})
	pulumi.RegisterOutputType(AppAlertProgressStepArrayOutput{})
	pulumi.RegisterOutputType(AppAlertProgressStepReasonOutput{})
	pulumi.RegisterOutputType(AppAlertProgressStepReasonPtrOutput{})
	pulumi.RegisterOutputType(AppAlertSlackWebhookOutput{})
	pulumi.RegisterOutputType(AppAlertSlackWebhookArrayOutput{})
	pulumi.RegisterOutputType(AppAlertSpecOutput{})
	pulumi.RegisterOutputType(AppAlertSpecPtrOutput{})
	pulumi.RegisterOutputType(AppAlertSpecArrayOutput{})
	pulumi.RegisterOutputType(AppDatabaseSpecOutput{})
	pulumi.RegisterOutputType(AppDatabaseSpecArrayOutput{})
	pulumi.RegisterOutputType(AppDomainSpecOutput{})
	pulumi.RegisterOutputType(AppDomainSpecPtrOutput{})
	pulumi.RegisterOutputType(AppDomainSpecArrayOutput{})
	pulumi.RegisterOutputType(AppDomainValidationOutput{})
	pulumi.RegisterOutputType(AppDomainValidationArrayOutput{})
	pulumi.RegisterOutputType(AppFunctionsSpecOutput{})
	pulumi.RegisterOutputType(AppFunctionsSpecArrayOutput{})
	pulumi.RegisterOutputType(AppIngressSpecOutput{})
	pulumi.RegisterOutputType(AppIngressSpecPtrOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleArrayOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleMatchOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleMatchPtrOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleRoutingComponentOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleRoutingComponentPtrOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleRoutingRedirectOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleRoutingRedirectPtrOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleStringMatchOutput{})
	pulumi.RegisterOutputType(AppIngressSpecRuleStringMatchPtrOutput{})
	pulumi.RegisterOutputType(AppJobSpecOutput{})
	pulumi.RegisterOutputType(AppJobSpecArrayOutput{})
	pulumi.RegisterOutputType(AppLogDestinationDatadogSpecOutput{})
	pulumi.RegisterOutputType(AppLogDestinationDatadogSpecPtrOutput{})
	pulumi.RegisterOutputType(AppLogDestinationDefinitionOutput{})
	pulumi.RegisterOutputType(AppLogDestinationDefinitionPtrOutput{})
	pulumi.RegisterOutputType(AppLogDestinationLogtailSpecOutput{})
	pulumi.RegisterOutputType(AppLogDestinationLogtailSpecPtrOutput{})
	pulumi.RegisterOutputType(AppLogDestinationPapertrailSpecOutput{})
	pulumi.RegisterOutputType(AppLogDestinationPapertrailSpecPtrOutput{})
	pulumi.RegisterOutputType(AppMetricsBandwidthUsageOutput{})
	pulumi.RegisterOutputType(AppMetricsBandwidthUsageDetailsOutput{})
	pulumi.RegisterOutputType(AppMetricsBandwidthUsageDetailsArrayOutput{})
	pulumi.RegisterOutputType(AppPendingDeploymentOutput{})
	pulumi.RegisterOutputType(AppPendingDeploymentPtrOutput{})
	pulumi.RegisterOutputType(AppPinnedDeploymentOutput{})
	pulumi.RegisterOutputType(AppPinnedDeploymentPtrOutput{})
	pulumi.RegisterOutputType(AppResponseOutput{})
	pulumi.RegisterOutputType(AppRollbackValidationConditionOutput{})
	pulumi.RegisterOutputType(AppRollbackValidationConditionArrayOutput{})
	pulumi.RegisterOutputType(AppRouteSpecOutput{})
	pulumi.RegisterOutputType(AppRouteSpecArrayOutput{})
	pulumi.RegisterOutputType(AppServiceSpecOutput{})
	pulumi.RegisterOutputType(AppServiceSpecArrayOutput{})
	pulumi.RegisterOutputType(AppServiceSpecHealthCheckOutput{})
	pulumi.RegisterOutputType(AppServiceSpecHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(AppSpecOutput{})
	pulumi.RegisterOutputType(AppSpecPtrOutput{})
	pulumi.RegisterOutputType(AppStaticSiteSpecOutput{})
	pulumi.RegisterOutputType(AppStaticSiteSpecArrayOutput{})
	pulumi.RegisterOutputType(AppVariableDefinitionOutput{})
	pulumi.RegisterOutputType(AppVariableDefinitionArrayOutput{})
	pulumi.RegisterOutputType(AppWorkerSpecOutput{})
	pulumi.RegisterOutputType(AppWorkerSpecArrayOutput{})
	pulumi.RegisterOutputType(AppsCorsPolicyOutput{})
	pulumi.RegisterOutputType(AppsCorsPolicyPtrOutput{})
	pulumi.RegisterOutputType(AppsDeploymentTypeOutput{})
	pulumi.RegisterOutputType(AppsDeploymentTypePtrOutput{})
	pulumi.RegisterOutputType(AppsDeploymentTypeArrayOutput{})
	pulumi.RegisterOutputType(AppsDeploymentFunctionsOutput{})
	pulumi.RegisterOutputType(AppsDeploymentFunctionsArrayOutput{})
	pulumi.RegisterOutputType(AppsDeploymentJobOutput{})
	pulumi.RegisterOutputType(AppsDeploymentJobArrayOutput{})
	pulumi.RegisterOutputType(AppsDeploymentProgressOutput{})
	pulumi.RegisterOutputType(AppsDeploymentProgressPtrOutput{})
	pulumi.RegisterOutputType(AppsDeploymentProgressStepOutput{})
	pulumi.RegisterOutputType(AppsDeploymentProgressStepArrayOutput{})
	pulumi.RegisterOutputType(AppsDeploymentProgressStepReasonOutput{})
	pulumi.RegisterOutputType(AppsDeploymentProgressStepReasonPtrOutput{})
	pulumi.RegisterOutputType(AppsDeploymentResponseOutput{})
	pulumi.RegisterOutputType(AppsDeploymentServiceOutput{})
	pulumi.RegisterOutputType(AppsDeploymentServiceArrayOutput{})
	pulumi.RegisterOutputType(AppsDeploymentStaticSiteOutput{})
	pulumi.RegisterOutputType(AppsDeploymentStaticSiteArrayOutput{})
	pulumi.RegisterOutputType(AppsDeploymentWorkerOutput{})
	pulumi.RegisterOutputType(AppsDeploymentWorkerArrayOutput{})
	pulumi.RegisterOutputType(AppsDeploymentsResponseOutput{})
	pulumi.RegisterOutputType(AppsDomainOutput{})
	pulumi.RegisterOutputType(AppsDomainArrayOutput{})
	pulumi.RegisterOutputType(AppsDomainProgressOutput{})
	pulumi.RegisterOutputType(AppsDomainProgressPtrOutput{})
	pulumi.RegisterOutputType(AppsGetInstanceSizeResponseOutput{})
	pulumi.RegisterOutputType(AppsGetLogsResponseOutput{})
	pulumi.RegisterOutputType(AppsGetTierResponseOutput{})
	pulumi.RegisterOutputType(AppsGitSourceSpecOutput{})
	pulumi.RegisterOutputType(AppsGitSourceSpecPtrOutput{})
	pulumi.RegisterOutputType(AppsGithubSourceSpecOutput{})
	pulumi.RegisterOutputType(AppsGithubSourceSpecPtrOutput{})
	pulumi.RegisterOutputType(AppsGitlabSourceSpecOutput{})
	pulumi.RegisterOutputType(AppsGitlabSourceSpecPtrOutput{})
	pulumi.RegisterOutputType(AppsImageSourceSpecOutput{})
	pulumi.RegisterOutputType(AppsImageSourceSpecPtrOutput{})
	pulumi.RegisterOutputType(AppsInstanceSizeOutput{})
	pulumi.RegisterOutputType(AppsInstanceSizePtrOutput{})
	pulumi.RegisterOutputType(AppsInstanceSizeArrayOutput{})
	pulumi.RegisterOutputType(AppsListAlertsResponseOutput{})
	pulumi.RegisterOutputType(AppsListInstanceSizesResponseOutput{})
	pulumi.RegisterOutputType(AppsListRegionsResponseOutput{})
	pulumi.RegisterOutputType(AppsListTiersResponseOutput{})
	pulumi.RegisterOutputType(AppsRegionOutput{})
	pulumi.RegisterOutputType(AppsRegionPtrOutput{})
	pulumi.RegisterOutputType(AppsRegionArrayOutput{})
	pulumi.RegisterOutputType(AppsResponseOutput{})
	pulumi.RegisterOutputType(AppsStringMatchOutput{})
	pulumi.RegisterOutputType(AppsStringMatchArrayOutput{})
	pulumi.RegisterOutputType(AppsTierOutput{})
	pulumi.RegisterOutputType(AppsTierPtrOutput{})
	pulumi.RegisterOutputType(AppsTierArrayOutput{})
	pulumi.RegisterOutputType(ErrorOutput{})
	pulumi.RegisterOutputType(ErrorPtrOutput{})
	pulumi.RegisterOutputType(MetaMetaOutput{})
	pulumi.RegisterOutputType(PageLinksOutput{})
	pulumi.RegisterOutputType(PageLinksPtrOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesPtrOutput{})
}
