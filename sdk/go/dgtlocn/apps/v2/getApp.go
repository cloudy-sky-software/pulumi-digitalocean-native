// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupApp(ctx *pulumi.Context, args *LookupAppArgs, opts ...pulumi.InvokeOption) (*LookupAppResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAppResult
	err := ctx.Invoke("digitalocean-native:apps/v2:getApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type LookupAppArgs struct {
	// The ID of the app
	Id string `pulumi:"id"`
}

type LookupAppResult struct {
	// An application's configuration and status.
	App *AppType `pulumi:"app"`
}

// Defaults sets the appropriate defaults for LookupAppResult
func (val *LookupAppResult) Defaults() *LookupAppResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.App = tmp.App.Defaults()

	return &tmp
}
func LookupAppOutput(ctx *pulumi.Context, args LookupAppOutputArgs, opts ...pulumi.InvokeOption) LookupAppResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAppResultOutput, error) {
			args := v.(LookupAppArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("digitalocean-native:apps/v2:getApp", args, LookupAppResultOutput{}, options).(LookupAppResultOutput), nil
		}).(LookupAppResultOutput)
}

type LookupAppOutputArgs struct {
	// The ID of the app
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppArgs)(nil)).Elem()
}

type LookupAppResultOutput struct{ *pulumi.OutputState }

func (LookupAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAppResult)(nil)).Elem()
}

func (o LookupAppResultOutput) ToLookupAppResultOutput() LookupAppResultOutput {
	return o
}

func (o LookupAppResultOutput) ToLookupAppResultOutputWithContext(ctx context.Context) LookupAppResultOutput {
	return o
}

// An application's configuration and status.
func (o LookupAppResultOutput) App() AppTypePtrOutput {
	return o.ApplyT(func(v LookupAppResult) *AppType { return v.App }).(AppTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAppResultOutput{})
}
