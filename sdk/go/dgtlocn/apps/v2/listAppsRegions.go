// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListAppsRegions(ctx *pulumi.Context, args *ListAppsRegionsArgs, opts ...pulumi.InvokeOption) (*ListAppsRegionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListAppsRegionsResult
	err := ctx.Invoke("digitalocean-native:apps/v2:listAppsRegions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListAppsRegionsArgs struct {
}

type ListAppsRegionsResult struct {
	Regions []AppsRegion `pulumi:"regions"`
}

func ListAppsRegionsOutput(ctx *pulumi.Context, args ListAppsRegionsOutputArgs, opts ...pulumi.InvokeOption) ListAppsRegionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListAppsRegionsResultOutput, error) {
			args := v.(ListAppsRegionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("digitalocean-native:apps/v2:listAppsRegions", args, ListAppsRegionsResultOutput{}, options).(ListAppsRegionsResultOutput), nil
		}).(ListAppsRegionsResultOutput)
}

type ListAppsRegionsOutputArgs struct {
}

func (ListAppsRegionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAppsRegionsArgs)(nil)).Elem()
}

type ListAppsRegionsResultOutput struct{ *pulumi.OutputState }

func (ListAppsRegionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListAppsRegionsResult)(nil)).Elem()
}

func (o ListAppsRegionsResultOutput) ToListAppsRegionsResultOutput() ListAppsRegionsResultOutput {
	return o
}

func (o ListAppsRegionsResultOutput) ToListAppsRegionsResultOutputWithContext(ctx context.Context) ListAppsRegionsResultOutput {
	return o
}

func (o ListAppsRegionsResultOutput) Regions() AppsRegionArrayOutput {
	return o.ApplyT(func(v ListAppsRegionsResult) []AppsRegion { return v.Regions }).(AppsRegionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListAppsRegionsResultOutput{})
}
