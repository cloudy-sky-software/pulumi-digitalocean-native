// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppsDeployment struct {
	pulumi.CustomResourceState

	Deployment AppsDeploymentTypePtrOutput `pulumi:"deployment"`
	ForceBuild pulumi.BoolPtrOutput        `pulumi:"forceBuild"`
}

// NewAppsDeployment registers a new resource with the given unique name, arguments, and options.
func NewAppsDeployment(ctx *pulumi.Context,
	name string, args *AppsDeploymentArgs, opts ...pulumi.ResourceOption) (*AppsDeployment, error) {
	if args == nil {
		args = &AppsDeploymentArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsDeployment
	err := ctx.RegisterResource("digitalocean-native:apps/v2:AppsDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsDeployment gets an existing AppsDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsDeploymentState, opts ...pulumi.ResourceOption) (*AppsDeployment, error) {
	var resource AppsDeployment
	err := ctx.ReadResource("digitalocean-native:apps/v2:AppsDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsDeployment resources.
type appsDeploymentState struct {
}

type AppsDeploymentState struct {
}

func (AppsDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsDeploymentState)(nil)).Elem()
}

type appsDeploymentArgs struct {
	// The app ID
	AppId      *string `pulumi:"appId"`
	ForceBuild *bool   `pulumi:"forceBuild"`
}

// The set of arguments for constructing a AppsDeployment resource.
type AppsDeploymentArgs struct {
	// The app ID
	AppId      pulumi.StringPtrInput
	ForceBuild pulumi.BoolPtrInput
}

func (AppsDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsDeploymentArgs)(nil)).Elem()
}

type AppsDeploymentInput interface {
	pulumi.Input

	ToAppsDeploymentOutput() AppsDeploymentOutput
	ToAppsDeploymentOutputWithContext(ctx context.Context) AppsDeploymentOutput
}

func (*AppsDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDeployment)(nil)).Elem()
}

func (i *AppsDeployment) ToAppsDeploymentOutput() AppsDeploymentOutput {
	return i.ToAppsDeploymentOutputWithContext(context.Background())
}

func (i *AppsDeployment) ToAppsDeploymentOutputWithContext(ctx context.Context) AppsDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsDeploymentOutput)
}

type AppsDeploymentOutput struct{ *pulumi.OutputState }

func (AppsDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsDeployment)(nil)).Elem()
}

func (o AppsDeploymentOutput) ToAppsDeploymentOutput() AppsDeploymentOutput {
	return o
}

func (o AppsDeploymentOutput) ToAppsDeploymentOutputWithContext(ctx context.Context) AppsDeploymentOutput {
	return o
}

func (o AppsDeploymentOutput) Deployment() AppsDeploymentTypePtrOutput {
	return o.ApplyT(func(v *AppsDeployment) AppsDeploymentTypePtrOutput { return v.Deployment }).(AppsDeploymentTypePtrOutput)
}

func (o AppsDeploymentOutput) ForceBuild() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppsDeployment) pulumi.BoolPtrOutput { return v.ForceBuild }).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsDeploymentInput)(nil)).Elem(), &AppsDeployment{})
	pulumi.RegisterOutputType(AppsDeploymentOutput{})
}
