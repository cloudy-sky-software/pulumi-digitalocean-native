// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAction(ctx *pulumi.Context, args *GetActionArgs, opts ...pulumi.InvokeOption) (*GetActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetActionResult
	err := ctx.Invoke("digitalocean-native:actions/v2:getAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return rv.Defaults(), nil
}

type GetActionArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId string `pulumi:"actionId"`
}

type GetActionResult struct {
	Action *Action `pulumi:"action"`
}

// Defaults sets the appropriate defaults for GetActionResult
func (val *GetActionResult) Defaults() *GetActionResult {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Action = tmp.Action.Defaults()

	return &tmp
}

func GetActionOutput(ctx *pulumi.Context, args GetActionOutputArgs, opts ...pulumi.InvokeOption) GetActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetActionResult, error) {
			args := v.(GetActionArgs)
			r, err := GetAction(ctx, &args, opts...)
			var s GetActionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetActionResultOutput)
}

type GetActionOutputArgs struct {
	// A unique numeric ID that can be used to identify and reference an action.
	ActionId pulumi.StringInput `pulumi:"actionId"`
}

func (GetActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionArgs)(nil)).Elem()
}

type GetActionResultOutput struct{ *pulumi.OutputState }

func (GetActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetActionResult)(nil)).Elem()
}

func (o GetActionResultOutput) ToGetActionResultOutput() GetActionResultOutput {
	return o
}

func (o GetActionResultOutput) ToGetActionResultOutputWithContext(ctx context.Context) GetActionResultOutput {
	return o
}

func (o GetActionResultOutput) Action() ActionPtrOutput {
	return o.ApplyT(func(v GetActionResult) *Action { return v.Action }).(ActionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetActionResultOutput{})
}
