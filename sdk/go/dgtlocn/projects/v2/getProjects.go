// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupProjects(ctx *pulumi.Context, args *LookupProjectsArgs, opts ...pulumi.InvokeOption) (*LookupProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectsResult
	err := ctx.Invoke("digitalocean-native:projects/v2:getProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProjectsArgs struct {
	// A unique identifier for a project.
	ProjectId string `pulumi:"projectId"`
}

type LookupProjectsResult struct {
	Items GetProjectsProperties `pulumi:"items"`
}

func LookupProjectsOutput(ctx *pulumi.Context, args LookupProjectsOutputArgs, opts ...pulumi.InvokeOption) LookupProjectsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectsResult, error) {
			args := v.(LookupProjectsArgs)
			r, err := LookupProjects(ctx, &args, opts...)
			var s LookupProjectsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProjectsResultOutput)
}

type LookupProjectsOutputArgs struct {
	// A unique identifier for a project.
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectsArgs)(nil)).Elem()
}

type LookupProjectsResultOutput struct{ *pulumi.OutputState }

func (LookupProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectsResult)(nil)).Elem()
}

func (o LookupProjectsResultOutput) ToLookupProjectsResultOutput() LookupProjectsResultOutput {
	return o
}

func (o LookupProjectsResultOutput) ToLookupProjectsResultOutputWithContext(ctx context.Context) LookupProjectsResultOutput {
	return o
}

func (o LookupProjectsResultOutput) Items() GetProjectsPropertiesOutput {
	return o.ApplyT(func(v LookupProjectsResult) GetProjectsProperties { return v.Items }).(GetProjectsPropertiesOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectsResultOutput{})
}
