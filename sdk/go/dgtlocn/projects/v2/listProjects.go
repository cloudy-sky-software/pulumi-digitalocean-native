// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListProjects(ctx *pulumi.Context, args *ListProjectsArgs, opts ...pulumi.InvokeOption) (*ListProjectsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListProjectsResult
	err := ctx.Invoke("digitalocean-native:projects/v2:listProjects", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListProjectsArgs struct {
}

type ListProjectsResult struct {
	Links    *PageLinks    `pulumi:"links"`
	Meta     MetaMeta      `pulumi:"meta"`
	Projects []ProjectType `pulumi:"projects"`
}

func ListProjectsOutput(ctx *pulumi.Context, args ListProjectsOutputArgs, opts ...pulumi.InvokeOption) ListProjectsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ListProjectsResultOutput, error) {
			args := v.(ListProjectsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("digitalocean-native:projects/v2:listProjects", args, ListProjectsResultOutput{}, options).(ListProjectsResultOutput), nil
		}).(ListProjectsResultOutput)
}

type ListProjectsOutputArgs struct {
}

func (ListProjectsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProjectsArgs)(nil)).Elem()
}

type ListProjectsResultOutput struct{ *pulumi.OutputState }

func (ListProjectsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListProjectsResult)(nil)).Elem()
}

func (o ListProjectsResultOutput) ToListProjectsResultOutput() ListProjectsResultOutput {
	return o
}

func (o ListProjectsResultOutput) ToListProjectsResultOutputWithContext(ctx context.Context) ListProjectsResultOutput {
	return o
}

func (o ListProjectsResultOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListProjectsResult) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListProjectsResultOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListProjectsResult) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

func (o ListProjectsResultOutput) Projects() ProjectTypeArrayOutput {
	return o.ApplyT(func(v ListProjectsResult) []ProjectType { return v.Projects }).(ProjectTypeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListProjectsResultOutput{})
}
