// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProjectsAssignResourcesDefault struct {
	pulumi.CustomResourceState

	Resources ResourceArrayOutput `pulumi:"resources"`
}

// NewProjectsAssignResourcesDefault registers a new resource with the given unique name, arguments, and options.
func NewProjectsAssignResourcesDefault(ctx *pulumi.Context,
	name string, args *ProjectsAssignResourcesDefaultArgs, opts ...pulumi.ResourceOption) (*ProjectsAssignResourcesDefault, error) {
	if args == nil {
		args = &ProjectsAssignResourcesDefaultArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProjectsAssignResourcesDefault
	err := ctx.RegisterResource("digitalocean-native:projects/v2:ProjectsAssignResourcesDefault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProjectsAssignResourcesDefault gets an existing ProjectsAssignResourcesDefault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProjectsAssignResourcesDefault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectsAssignResourcesDefaultState, opts ...pulumi.ResourceOption) (*ProjectsAssignResourcesDefault, error) {
	var resource ProjectsAssignResourcesDefault
	err := ctx.ReadResource("digitalocean-native:projects/v2:ProjectsAssignResourcesDefault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProjectsAssignResourcesDefault resources.
type projectsAssignResourcesDefaultState struct {
}

type ProjectsAssignResourcesDefaultState struct {
}

func (ProjectsAssignResourcesDefaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectsAssignResourcesDefaultState)(nil)).Elem()
}

type projectsAssignResourcesDefaultArgs struct {
	// A list of uniform resource names (URNs) to be added to a project.
	Resources []string `pulumi:"resources"`
}

// The set of arguments for constructing a ProjectsAssignResourcesDefault resource.
type ProjectsAssignResourcesDefaultArgs struct {
	// A list of uniform resource names (URNs) to be added to a project.
	Resources pulumi.StringArrayInput
}

func (ProjectsAssignResourcesDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectsAssignResourcesDefaultArgs)(nil)).Elem()
}

type ProjectsAssignResourcesDefaultInput interface {
	pulumi.Input

	ToProjectsAssignResourcesDefaultOutput() ProjectsAssignResourcesDefaultOutput
	ToProjectsAssignResourcesDefaultOutputWithContext(ctx context.Context) ProjectsAssignResourcesDefaultOutput
}

func (*ProjectsAssignResourcesDefault) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectsAssignResourcesDefault)(nil)).Elem()
}

func (i *ProjectsAssignResourcesDefault) ToProjectsAssignResourcesDefaultOutput() ProjectsAssignResourcesDefaultOutput {
	return i.ToProjectsAssignResourcesDefaultOutputWithContext(context.Background())
}

func (i *ProjectsAssignResourcesDefault) ToProjectsAssignResourcesDefaultOutputWithContext(ctx context.Context) ProjectsAssignResourcesDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectsAssignResourcesDefaultOutput)
}

type ProjectsAssignResourcesDefaultOutput struct{ *pulumi.OutputState }

func (ProjectsAssignResourcesDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectsAssignResourcesDefault)(nil)).Elem()
}

func (o ProjectsAssignResourcesDefaultOutput) ToProjectsAssignResourcesDefaultOutput() ProjectsAssignResourcesDefaultOutput {
	return o
}

func (o ProjectsAssignResourcesDefaultOutput) ToProjectsAssignResourcesDefaultOutputWithContext(ctx context.Context) ProjectsAssignResourcesDefaultOutput {
	return o
}

func (o ProjectsAssignResourcesDefaultOutput) Resources() ResourceArrayOutput {
	return o.ApplyT(func(v *ProjectsAssignResourcesDefault) ResourceArrayOutput { return v.Resources }).(ResourceArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectsAssignResourcesDefaultInput)(nil)).Elem(), &ProjectsAssignResourcesDefault{})
	pulumi.RegisterOutputType(ProjectsAssignResourcesDefaultOutput{})
}
