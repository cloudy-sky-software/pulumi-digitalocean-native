// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListRegistryGarbageCollections(ctx *pulumi.Context, args *ListRegistryGarbageCollectionsArgs, opts ...pulumi.InvokeOption) (*ListRegistryGarbageCollectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListRegistryGarbageCollectionsResult
	err := ctx.Invoke("digitalocean-native:registry/v2:listRegistryGarbageCollections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListRegistryGarbageCollectionsArgs struct {
	// The name of a container registry.
	RegistryName string `pulumi:"registryName"`
}

type ListRegistryGarbageCollectionsResult struct {
	GarbageCollections []GarbageCollection `pulumi:"garbageCollections"`
}

func ListRegistryGarbageCollectionsOutput(ctx *pulumi.Context, args ListRegistryGarbageCollectionsOutputArgs, opts ...pulumi.InvokeOption) ListRegistryGarbageCollectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListRegistryGarbageCollectionsResult, error) {
			args := v.(ListRegistryGarbageCollectionsArgs)
			r, err := ListRegistryGarbageCollections(ctx, &args, opts...)
			var s ListRegistryGarbageCollectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListRegistryGarbageCollectionsResultOutput)
}

type ListRegistryGarbageCollectionsOutputArgs struct {
	// The name of a container registry.
	RegistryName pulumi.StringInput `pulumi:"registryName"`
}

func (ListRegistryGarbageCollectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRegistryGarbageCollectionsArgs)(nil)).Elem()
}

type ListRegistryGarbageCollectionsResultOutput struct{ *pulumi.OutputState }

func (ListRegistryGarbageCollectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListRegistryGarbageCollectionsResult)(nil)).Elem()
}

func (o ListRegistryGarbageCollectionsResultOutput) ToListRegistryGarbageCollectionsResultOutput() ListRegistryGarbageCollectionsResultOutput {
	return o
}

func (o ListRegistryGarbageCollectionsResultOutput) ToListRegistryGarbageCollectionsResultOutputWithContext(ctx context.Context) ListRegistryGarbageCollectionsResultOutput {
	return o
}

func (o ListRegistryGarbageCollectionsResultOutput) GarbageCollections() GarbageCollectionArrayOutput {
	return o.ApplyT(func(v ListRegistryGarbageCollectionsResult) []GarbageCollection { return v.GarbageCollections }).(GarbageCollectionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListRegistryGarbageCollectionsResultOutput{})
}
