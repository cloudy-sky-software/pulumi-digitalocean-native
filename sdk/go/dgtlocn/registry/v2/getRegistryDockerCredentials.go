// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRegistryDockerCredentials(ctx *pulumi.Context, args *GetRegistryDockerCredentialsArgs, opts ...pulumi.InvokeOption) (*GetRegistryDockerCredentialsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegistryDockerCredentialsResult
	err := ctx.Invoke("digitalocean-native:registry/v2:getRegistryDockerCredentials", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetRegistryDockerCredentialsArgs struct {
}

type GetRegistryDockerCredentialsResult struct {
	Items DockerCredentials `pulumi:"items"`
}

func GetRegistryDockerCredentialsOutput(ctx *pulumi.Context, args GetRegistryDockerCredentialsOutputArgs, opts ...pulumi.InvokeOption) GetRegistryDockerCredentialsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRegistryDockerCredentialsResult, error) {
			args := v.(GetRegistryDockerCredentialsArgs)
			r, err := GetRegistryDockerCredentials(ctx, &args, opts...)
			var s GetRegistryDockerCredentialsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRegistryDockerCredentialsResultOutput)
}

type GetRegistryDockerCredentialsOutputArgs struct {
}

func (GetRegistryDockerCredentialsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryDockerCredentialsArgs)(nil)).Elem()
}

type GetRegistryDockerCredentialsResultOutput struct{ *pulumi.OutputState }

func (GetRegistryDockerCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryDockerCredentialsResult)(nil)).Elem()
}

func (o GetRegistryDockerCredentialsResultOutput) ToGetRegistryDockerCredentialsResultOutput() GetRegistryDockerCredentialsResultOutput {
	return o
}

func (o GetRegistryDockerCredentialsResultOutput) ToGetRegistryDockerCredentialsResultOutputWithContext(ctx context.Context) GetRegistryDockerCredentialsResultOutput {
	return o
}

func (o GetRegistryDockerCredentialsResultOutput) Items() DockerCredentialsOutput {
	return o.ApplyT(func(v GetRegistryDockerCredentialsResult) DockerCredentials { return v.Items }).(DockerCredentialsOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegistryDockerCredentialsResultOutput{})
}
