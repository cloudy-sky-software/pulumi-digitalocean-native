// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRegistryDockerCredential(ctx *pulumi.Context, args *GetRegistryDockerCredentialArgs, opts ...pulumi.InvokeOption) (*GetRegistryDockerCredentialResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegistryDockerCredentialResult
	err := ctx.Invoke("digitalocean-native:registry/v2:getRegistryDockerCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetRegistryDockerCredentialArgs struct {
}

type GetRegistryDockerCredentialResult struct {
	Auths *DockerCredentialsAuthsProperties `pulumi:"auths"`
}

func GetRegistryDockerCredentialOutput(ctx *pulumi.Context, args GetRegistryDockerCredentialOutputArgs, opts ...pulumi.InvokeOption) GetRegistryDockerCredentialResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRegistryDockerCredentialResultOutput, error) {
			args := v.(GetRegistryDockerCredentialArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetRegistryDockerCredentialResult
			secret, err := ctx.InvokePackageRaw("digitalocean-native:registry/v2:getRegistryDockerCredential", args, &rv, "", opts...)
			if err != nil {
				return GetRegistryDockerCredentialResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetRegistryDockerCredentialResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetRegistryDockerCredentialResultOutput), nil
			}
			return output, nil
		}).(GetRegistryDockerCredentialResultOutput)
}

type GetRegistryDockerCredentialOutputArgs struct {
}

func (GetRegistryDockerCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryDockerCredentialArgs)(nil)).Elem()
}

type GetRegistryDockerCredentialResultOutput struct{ *pulumi.OutputState }

func (GetRegistryDockerCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistryDockerCredentialResult)(nil)).Elem()
}

func (o GetRegistryDockerCredentialResultOutput) ToGetRegistryDockerCredentialResultOutput() GetRegistryDockerCredentialResultOutput {
	return o
}

func (o GetRegistryDockerCredentialResultOutput) ToGetRegistryDockerCredentialResultOutputWithContext(ctx context.Context) GetRegistryDockerCredentialResultOutput {
	return o
}

func (o GetRegistryDockerCredentialResultOutput) Auths() DockerCredentialsAuthsPropertiesPtrOutput {
	return o.ApplyT(func(v GetRegistryDockerCredentialResult) *DockerCredentialsAuthsProperties { return v.Auths }).(DockerCredentialsAuthsPropertiesPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegistryDockerCredentialResultOutput{})
}
