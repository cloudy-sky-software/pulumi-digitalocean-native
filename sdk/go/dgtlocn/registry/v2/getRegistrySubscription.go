// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRegistrySubscription(ctx *pulumi.Context, args *GetRegistrySubscriptionArgs, opts ...pulumi.InvokeOption) (*GetRegistrySubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegistrySubscriptionResult
	err := ctx.Invoke("digitalocean-native:registry/v2:getRegistrySubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetRegistrySubscriptionArgs struct {
}

type GetRegistrySubscriptionResult struct {
	Subscription *Subscription `pulumi:"subscription"`
}

func GetRegistrySubscriptionOutput(ctx *pulumi.Context, args GetRegistrySubscriptionOutputArgs, opts ...pulumi.InvokeOption) GetRegistrySubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegistrySubscriptionResultOutput, error) {
			args := v.(GetRegistrySubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("digitalocean-native:registry/v2:getRegistrySubscription", args, GetRegistrySubscriptionResultOutput{}, options).(GetRegistrySubscriptionResultOutput), nil
		}).(GetRegistrySubscriptionResultOutput)
}

type GetRegistrySubscriptionOutputArgs struct {
}

func (GetRegistrySubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistrySubscriptionArgs)(nil)).Elem()
}

type GetRegistrySubscriptionResultOutput struct{ *pulumi.OutputState }

func (GetRegistrySubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegistrySubscriptionResult)(nil)).Elem()
}

func (o GetRegistrySubscriptionResultOutput) ToGetRegistrySubscriptionResultOutput() GetRegistrySubscriptionResultOutput {
	return o
}

func (o GetRegistrySubscriptionResultOutput) ToGetRegistrySubscriptionResultOutputWithContext(ctx context.Context) GetRegistrySubscriptionResultOutput {
	return o
}

func (o GetRegistrySubscriptionResultOutput) Subscription() SubscriptionPtrOutput {
	return o.ApplyT(func(v GetRegistrySubscriptionResult) *Subscription { return v.Subscription }).(SubscriptionPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegistrySubscriptionResultOutput{})
}
