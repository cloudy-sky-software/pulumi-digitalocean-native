// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The current status of this garbage collection.
type GarbageCollectionStatus string

const (
	GarbageCollectionStatusRequested                   = GarbageCollectionStatus("requested")
	GarbageCollectionStatusWaitingForWriteJWTsToExpire = GarbageCollectionStatus("waiting for write JWTs to expire")
	GarbageCollectionStatusScanningManifests           = GarbageCollectionStatus("scanning manifests")
	GarbageCollectionStatusDeletingUnreferencedBlobs   = GarbageCollectionStatus("deleting unreferenced blobs")
	GarbageCollectionStatusCancelling                  = GarbageCollectionStatus("cancelling")
	GarbageCollectionStatusFailed                      = GarbageCollectionStatus("failed")
	GarbageCollectionStatusSucceeded                   = GarbageCollectionStatus("succeeded")
	GarbageCollectionStatusCancelled                   = GarbageCollectionStatus("cancelled")
)

type GarbageCollectionStatusOutput struct{ *pulumi.OutputState }

func (GarbageCollectionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GarbageCollectionStatus)(nil)).Elem()
}

func (o GarbageCollectionStatusOutput) ToGarbageCollectionStatusOutput() GarbageCollectionStatusOutput {
	return o
}

func (o GarbageCollectionStatusOutput) ToGarbageCollectionStatusOutputWithContext(ctx context.Context) GarbageCollectionStatusOutput {
	return o
}

func (o GarbageCollectionStatusOutput) ToGarbageCollectionStatusPtrOutput() GarbageCollectionStatusPtrOutput {
	return o.ToGarbageCollectionStatusPtrOutputWithContext(context.Background())
}

func (o GarbageCollectionStatusOutput) ToGarbageCollectionStatusPtrOutputWithContext(ctx context.Context) GarbageCollectionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GarbageCollectionStatus) *GarbageCollectionStatus {
		return &v
	}).(GarbageCollectionStatusPtrOutput)
}

func (o GarbageCollectionStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GarbageCollectionStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GarbageCollectionStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GarbageCollectionStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GarbageCollectionStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GarbageCollectionStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GarbageCollectionStatusPtrOutput struct{ *pulumi.OutputState }

func (GarbageCollectionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GarbageCollectionStatus)(nil)).Elem()
}

func (o GarbageCollectionStatusPtrOutput) ToGarbageCollectionStatusPtrOutput() GarbageCollectionStatusPtrOutput {
	return o
}

func (o GarbageCollectionStatusPtrOutput) ToGarbageCollectionStatusPtrOutputWithContext(ctx context.Context) GarbageCollectionStatusPtrOutput {
	return o
}

func (o GarbageCollectionStatusPtrOutput) Elem() GarbageCollectionStatusOutput {
	return o.ApplyT(func(v *GarbageCollectionStatus) GarbageCollectionStatus {
		if v != nil {
			return *v
		}
		var ret GarbageCollectionStatus
		return ret
	}).(GarbageCollectionStatusOutput)
}

func (o GarbageCollectionStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GarbageCollectionStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GarbageCollectionStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// Slug of the region where registry data is stored. When not provided, a region will be selected.
type RegistryRegion string

const (
	RegistryRegionNyc3 = RegistryRegion("nyc3")
	RegistryRegionSfo3 = RegistryRegion("sfo3")
	RegistryRegionAms3 = RegistryRegion("ams3")
	RegistryRegionSgp1 = RegistryRegion("sgp1")
	RegistryRegionFra1 = RegistryRegion("fra1")
)

func (RegistryRegion) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryRegion)(nil)).Elem()
}

func (e RegistryRegion) ToRegistryRegionOutput() RegistryRegionOutput {
	return pulumi.ToOutput(e).(RegistryRegionOutput)
}

func (e RegistryRegion) ToRegistryRegionOutputWithContext(ctx context.Context) RegistryRegionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegistryRegionOutput)
}

func (e RegistryRegion) ToRegistryRegionPtrOutput() RegistryRegionPtrOutput {
	return e.ToRegistryRegionPtrOutputWithContext(context.Background())
}

func (e RegistryRegion) ToRegistryRegionPtrOutputWithContext(ctx context.Context) RegistryRegionPtrOutput {
	return RegistryRegion(e).ToRegistryRegionOutputWithContext(ctx).ToRegistryRegionPtrOutputWithContext(ctx)
}

func (e RegistryRegion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryRegion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryRegion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistryRegion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistryRegionOutput struct{ *pulumi.OutputState }

func (RegistryRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryRegion)(nil)).Elem()
}

func (o RegistryRegionOutput) ToRegistryRegionOutput() RegistryRegionOutput {
	return o
}

func (o RegistryRegionOutput) ToRegistryRegionOutputWithContext(ctx context.Context) RegistryRegionOutput {
	return o
}

func (o RegistryRegionOutput) ToRegistryRegionPtrOutput() RegistryRegionPtrOutput {
	return o.ToRegistryRegionPtrOutputWithContext(context.Background())
}

func (o RegistryRegionOutput) ToRegistryRegionPtrOutputWithContext(ctx context.Context) RegistryRegionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryRegion) *RegistryRegion {
		return &v
	}).(RegistryRegionPtrOutput)
}

func (o RegistryRegionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegistryRegionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryRegion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegistryRegionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryRegionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryRegion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegistryRegionPtrOutput struct{ *pulumi.OutputState }

func (RegistryRegionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryRegion)(nil)).Elem()
}

func (o RegistryRegionPtrOutput) ToRegistryRegionPtrOutput() RegistryRegionPtrOutput {
	return o
}

func (o RegistryRegionPtrOutput) ToRegistryRegionPtrOutputWithContext(ctx context.Context) RegistryRegionPtrOutput {
	return o
}

func (o RegistryRegionPtrOutput) Elem() RegistryRegionOutput {
	return o.ApplyT(func(v *RegistryRegion) RegistryRegion {
		if v != nil {
			return *v
		}
		var ret RegistryRegion
		return ret
	}).(RegistryRegionOutput)
}

func (o RegistryRegionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryRegionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegistryRegion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegistryRegionInput is an input type that accepts values of the RegistryRegion enum
// A concrete instance of `RegistryRegionInput` can be one of the following:
//
//	RegistryRegionNyc3
//	RegistryRegionSfo3
//	RegistryRegionAms3
//	RegistryRegionSgp1
//	RegistryRegionFra1
type RegistryRegionInput interface {
	pulumi.Input

	ToRegistryRegionOutput() RegistryRegionOutput
	ToRegistryRegionOutputWithContext(context.Context) RegistryRegionOutput
}

var registryRegionPtrType = reflect.TypeOf((**RegistryRegion)(nil)).Elem()

type RegistryRegionPtrInput interface {
	pulumi.Input

	ToRegistryRegionPtrOutput() RegistryRegionPtrOutput
	ToRegistryRegionPtrOutputWithContext(context.Context) RegistryRegionPtrOutput
}

type registryRegionPtr string

func RegistryRegionPtr(v string) RegistryRegionPtrInput {
	return (*registryRegionPtr)(&v)
}

func (*registryRegionPtr) ElementType() reflect.Type {
	return registryRegionPtrType
}

func (in *registryRegionPtr) ToRegistryRegionPtrOutput() RegistryRegionPtrOutput {
	return pulumi.ToOutput(in).(RegistryRegionPtrOutput)
}

func (in *registryRegionPtr) ToRegistryRegionPtrOutputWithContext(ctx context.Context) RegistryRegionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegistryRegionPtrOutput)
}

// The slug of the subscription tier to sign up for. Valid values can be retrieved using the options endpoint.
type RegistrySubscriptionTierSlug string

const (
	RegistrySubscriptionTierSlugStarter      = RegistrySubscriptionTierSlug("starter")
	RegistrySubscriptionTierSlugBasic        = RegistrySubscriptionTierSlug("basic")
	RegistrySubscriptionTierSlugProfessional = RegistrySubscriptionTierSlug("professional")
)

func (RegistrySubscriptionTierSlug) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrySubscriptionTierSlug)(nil)).Elem()
}

func (e RegistrySubscriptionTierSlug) ToRegistrySubscriptionTierSlugOutput() RegistrySubscriptionTierSlugOutput {
	return pulumi.ToOutput(e).(RegistrySubscriptionTierSlugOutput)
}

func (e RegistrySubscriptionTierSlug) ToRegistrySubscriptionTierSlugOutputWithContext(ctx context.Context) RegistrySubscriptionTierSlugOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegistrySubscriptionTierSlugOutput)
}

func (e RegistrySubscriptionTierSlug) ToRegistrySubscriptionTierSlugPtrOutput() RegistrySubscriptionTierSlugPtrOutput {
	return e.ToRegistrySubscriptionTierSlugPtrOutputWithContext(context.Background())
}

func (e RegistrySubscriptionTierSlug) ToRegistrySubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistrySubscriptionTierSlugPtrOutput {
	return RegistrySubscriptionTierSlug(e).ToRegistrySubscriptionTierSlugOutputWithContext(ctx).ToRegistrySubscriptionTierSlugPtrOutputWithContext(ctx)
}

func (e RegistrySubscriptionTierSlug) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrySubscriptionTierSlug) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistrySubscriptionTierSlug) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistrySubscriptionTierSlug) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistrySubscriptionTierSlugOutput struct{ *pulumi.OutputState }

func (RegistrySubscriptionTierSlugOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistrySubscriptionTierSlug)(nil)).Elem()
}

func (o RegistrySubscriptionTierSlugOutput) ToRegistrySubscriptionTierSlugOutput() RegistrySubscriptionTierSlugOutput {
	return o
}

func (o RegistrySubscriptionTierSlugOutput) ToRegistrySubscriptionTierSlugOutputWithContext(ctx context.Context) RegistrySubscriptionTierSlugOutput {
	return o
}

func (o RegistrySubscriptionTierSlugOutput) ToRegistrySubscriptionTierSlugPtrOutput() RegistrySubscriptionTierSlugPtrOutput {
	return o.ToRegistrySubscriptionTierSlugPtrOutputWithContext(context.Background())
}

func (o RegistrySubscriptionTierSlugOutput) ToRegistrySubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistrySubscriptionTierSlugPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistrySubscriptionTierSlug) *RegistrySubscriptionTierSlug {
		return &v
	}).(RegistrySubscriptionTierSlugPtrOutput)
}

func (o RegistrySubscriptionTierSlugOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegistrySubscriptionTierSlugOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistrySubscriptionTierSlug) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegistrySubscriptionTierSlugOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistrySubscriptionTierSlugOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistrySubscriptionTierSlug) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegistrySubscriptionTierSlugPtrOutput struct{ *pulumi.OutputState }

func (RegistrySubscriptionTierSlugPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistrySubscriptionTierSlug)(nil)).Elem()
}

func (o RegistrySubscriptionTierSlugPtrOutput) ToRegistrySubscriptionTierSlugPtrOutput() RegistrySubscriptionTierSlugPtrOutput {
	return o
}

func (o RegistrySubscriptionTierSlugPtrOutput) ToRegistrySubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistrySubscriptionTierSlugPtrOutput {
	return o
}

func (o RegistrySubscriptionTierSlugPtrOutput) Elem() RegistrySubscriptionTierSlugOutput {
	return o.ApplyT(func(v *RegistrySubscriptionTierSlug) RegistrySubscriptionTierSlug {
		if v != nil {
			return *v
		}
		var ret RegistrySubscriptionTierSlug
		return ret
	}).(RegistrySubscriptionTierSlugOutput)
}

func (o RegistrySubscriptionTierSlugPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistrySubscriptionTierSlugPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegistrySubscriptionTierSlug) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegistrySubscriptionTierSlugInput is an input type that accepts values of the RegistrySubscriptionTierSlug enum
// A concrete instance of `RegistrySubscriptionTierSlugInput` can be one of the following:
//
//	RegistrySubscriptionTierSlugStarter
//	RegistrySubscriptionTierSlugBasic
//	RegistrySubscriptionTierSlugProfessional
type RegistrySubscriptionTierSlugInput interface {
	pulumi.Input

	ToRegistrySubscriptionTierSlugOutput() RegistrySubscriptionTierSlugOutput
	ToRegistrySubscriptionTierSlugOutputWithContext(context.Context) RegistrySubscriptionTierSlugOutput
}

var registrySubscriptionTierSlugPtrType = reflect.TypeOf((**RegistrySubscriptionTierSlug)(nil)).Elem()

type RegistrySubscriptionTierSlugPtrInput interface {
	pulumi.Input

	ToRegistrySubscriptionTierSlugPtrOutput() RegistrySubscriptionTierSlugPtrOutput
	ToRegistrySubscriptionTierSlugPtrOutputWithContext(context.Context) RegistrySubscriptionTierSlugPtrOutput
}

type registrySubscriptionTierSlugPtr string

func RegistrySubscriptionTierSlugPtr(v string) RegistrySubscriptionTierSlugPtrInput {
	return (*registrySubscriptionTierSlugPtr)(&v)
}

func (*registrySubscriptionTierSlugPtr) ElementType() reflect.Type {
	return registrySubscriptionTierSlugPtrType
}

func (in *registrySubscriptionTierSlugPtr) ToRegistrySubscriptionTierSlugPtrOutput() RegistrySubscriptionTierSlugPtrOutput {
	return pulumi.ToOutput(in).(RegistrySubscriptionTierSlugPtrOutput)
}

func (in *registrySubscriptionTierSlugPtr) ToRegistrySubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistrySubscriptionTierSlugPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegistrySubscriptionTierSlugPtrOutput)
}

// The slug of the subscription tier to sign up for.
type RegistryUpdateSubscriptionTierSlug string

const (
	RegistryUpdateSubscriptionTierSlugStarter      = RegistryUpdateSubscriptionTierSlug("starter")
	RegistryUpdateSubscriptionTierSlugBasic        = RegistryUpdateSubscriptionTierSlug("basic")
	RegistryUpdateSubscriptionTierSlugProfessional = RegistryUpdateSubscriptionTierSlug("professional")
)

func (RegistryUpdateSubscriptionTierSlug) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryUpdateSubscriptionTierSlug)(nil)).Elem()
}

func (e RegistryUpdateSubscriptionTierSlug) ToRegistryUpdateSubscriptionTierSlugOutput() RegistryUpdateSubscriptionTierSlugOutput {
	return pulumi.ToOutput(e).(RegistryUpdateSubscriptionTierSlugOutput)
}

func (e RegistryUpdateSubscriptionTierSlug) ToRegistryUpdateSubscriptionTierSlugOutputWithContext(ctx context.Context) RegistryUpdateSubscriptionTierSlugOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegistryUpdateSubscriptionTierSlugOutput)
}

func (e RegistryUpdateSubscriptionTierSlug) ToRegistryUpdateSubscriptionTierSlugPtrOutput() RegistryUpdateSubscriptionTierSlugPtrOutput {
	return e.ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(context.Background())
}

func (e RegistryUpdateSubscriptionTierSlug) ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistryUpdateSubscriptionTierSlugPtrOutput {
	return RegistryUpdateSubscriptionTierSlug(e).ToRegistryUpdateSubscriptionTierSlugOutputWithContext(ctx).ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(ctx)
}

func (e RegistryUpdateSubscriptionTierSlug) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryUpdateSubscriptionTierSlug) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegistryUpdateSubscriptionTierSlug) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegistryUpdateSubscriptionTierSlug) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegistryUpdateSubscriptionTierSlugOutput struct{ *pulumi.OutputState }

func (RegistryUpdateSubscriptionTierSlugOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegistryUpdateSubscriptionTierSlug)(nil)).Elem()
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToRegistryUpdateSubscriptionTierSlugOutput() RegistryUpdateSubscriptionTierSlugOutput {
	return o
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToRegistryUpdateSubscriptionTierSlugOutputWithContext(ctx context.Context) RegistryUpdateSubscriptionTierSlugOutput {
	return o
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToRegistryUpdateSubscriptionTierSlugPtrOutput() RegistryUpdateSubscriptionTierSlugPtrOutput {
	return o.ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(context.Background())
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistryUpdateSubscriptionTierSlugPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegistryUpdateSubscriptionTierSlug) *RegistryUpdateSubscriptionTierSlug {
		return &v
	}).(RegistryUpdateSubscriptionTierSlugPtrOutput)
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryUpdateSubscriptionTierSlug) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryUpdateSubscriptionTierSlugOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegistryUpdateSubscriptionTierSlug) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegistryUpdateSubscriptionTierSlugPtrOutput struct{ *pulumi.OutputState }

func (RegistryUpdateSubscriptionTierSlugPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegistryUpdateSubscriptionTierSlug)(nil)).Elem()
}

func (o RegistryUpdateSubscriptionTierSlugPtrOutput) ToRegistryUpdateSubscriptionTierSlugPtrOutput() RegistryUpdateSubscriptionTierSlugPtrOutput {
	return o
}

func (o RegistryUpdateSubscriptionTierSlugPtrOutput) ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistryUpdateSubscriptionTierSlugPtrOutput {
	return o
}

func (o RegistryUpdateSubscriptionTierSlugPtrOutput) Elem() RegistryUpdateSubscriptionTierSlugOutput {
	return o.ApplyT(func(v *RegistryUpdateSubscriptionTierSlug) RegistryUpdateSubscriptionTierSlug {
		if v != nil {
			return *v
		}
		var ret RegistryUpdateSubscriptionTierSlug
		return ret
	}).(RegistryUpdateSubscriptionTierSlugOutput)
}

func (o RegistryUpdateSubscriptionTierSlugPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegistryUpdateSubscriptionTierSlugPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegistryUpdateSubscriptionTierSlug) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegistryUpdateSubscriptionTierSlugInput is an input type that accepts values of the RegistryUpdateSubscriptionTierSlug enum
// A concrete instance of `RegistryUpdateSubscriptionTierSlugInput` can be one of the following:
//
//	RegistryUpdateSubscriptionTierSlugStarter
//	RegistryUpdateSubscriptionTierSlugBasic
//	RegistryUpdateSubscriptionTierSlugProfessional
type RegistryUpdateSubscriptionTierSlugInput interface {
	pulumi.Input

	ToRegistryUpdateSubscriptionTierSlugOutput() RegistryUpdateSubscriptionTierSlugOutput
	ToRegistryUpdateSubscriptionTierSlugOutputWithContext(context.Context) RegistryUpdateSubscriptionTierSlugOutput
}

var registryUpdateSubscriptionTierSlugPtrType = reflect.TypeOf((**RegistryUpdateSubscriptionTierSlug)(nil)).Elem()

type RegistryUpdateSubscriptionTierSlugPtrInput interface {
	pulumi.Input

	ToRegistryUpdateSubscriptionTierSlugPtrOutput() RegistryUpdateSubscriptionTierSlugPtrOutput
	ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(context.Context) RegistryUpdateSubscriptionTierSlugPtrOutput
}

type registryUpdateSubscriptionTierSlugPtr string

func RegistryUpdateSubscriptionTierSlugPtr(v string) RegistryUpdateSubscriptionTierSlugPtrInput {
	return (*registryUpdateSubscriptionTierSlugPtr)(&v)
}

func (*registryUpdateSubscriptionTierSlugPtr) ElementType() reflect.Type {
	return registryUpdateSubscriptionTierSlugPtrType
}

func (in *registryUpdateSubscriptionTierSlugPtr) ToRegistryUpdateSubscriptionTierSlugPtrOutput() RegistryUpdateSubscriptionTierSlugPtrOutput {
	return pulumi.ToOutput(in).(RegistryUpdateSubscriptionTierSlugPtrOutput)
}

func (in *registryUpdateSubscriptionTierSlugPtr) ToRegistryUpdateSubscriptionTierSlugPtrOutputWithContext(ctx context.Context) RegistryUpdateSubscriptionTierSlugPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegistryUpdateSubscriptionTierSlugPtrOutput)
}

type SubscriptionTierExtendedEligibilityReasonsItem string

const (
	SubscriptionTierExtendedEligibilityReasonsItemOverRepositoryLimit = SubscriptionTierExtendedEligibilityReasonsItem("OverRepositoryLimit")
	SubscriptionTierExtendedEligibilityReasonsItemOverStorageLimit    = SubscriptionTierExtendedEligibilityReasonsItem("OverStorageLimit")
)

type SubscriptionTierExtendedEligibilityReasonsItemOutput struct{ *pulumi.OutputState }

func (SubscriptionTierExtendedEligibilityReasonsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriptionTierExtendedEligibilityReasonsItem)(nil)).Elem()
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToSubscriptionTierExtendedEligibilityReasonsItemOutput() SubscriptionTierExtendedEligibilityReasonsItemOutput {
	return o
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToSubscriptionTierExtendedEligibilityReasonsItemOutputWithContext(ctx context.Context) SubscriptionTierExtendedEligibilityReasonsItemOutput {
	return o
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToSubscriptionTierExtendedEligibilityReasonsItemPtrOutput() SubscriptionTierExtendedEligibilityReasonsItemPtrOutput {
	return o.ToSubscriptionTierExtendedEligibilityReasonsItemPtrOutputWithContext(context.Background())
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToSubscriptionTierExtendedEligibilityReasonsItemPtrOutputWithContext(ctx context.Context) SubscriptionTierExtendedEligibilityReasonsItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriptionTierExtendedEligibilityReasonsItem) *SubscriptionTierExtendedEligibilityReasonsItem {
		return &v
	}).(SubscriptionTierExtendedEligibilityReasonsItemPtrOutput)
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionTierExtendedEligibilityReasonsItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionTierExtendedEligibilityReasonsItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriptionTierExtendedEligibilityReasonsItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionTierExtendedEligibilityReasonsItemPtrOutput struct{ *pulumi.OutputState }

func (SubscriptionTierExtendedEligibilityReasonsItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriptionTierExtendedEligibilityReasonsItem)(nil)).Elem()
}

func (o SubscriptionTierExtendedEligibilityReasonsItemPtrOutput) ToSubscriptionTierExtendedEligibilityReasonsItemPtrOutput() SubscriptionTierExtendedEligibilityReasonsItemPtrOutput {
	return o
}

func (o SubscriptionTierExtendedEligibilityReasonsItemPtrOutput) ToSubscriptionTierExtendedEligibilityReasonsItemPtrOutputWithContext(ctx context.Context) SubscriptionTierExtendedEligibilityReasonsItemPtrOutput {
	return o
}

func (o SubscriptionTierExtendedEligibilityReasonsItemPtrOutput) Elem() SubscriptionTierExtendedEligibilityReasonsItemOutput {
	return o.ApplyT(func(v *SubscriptionTierExtendedEligibilityReasonsItem) SubscriptionTierExtendedEligibilityReasonsItem {
		if v != nil {
			return *v
		}
		var ret SubscriptionTierExtendedEligibilityReasonsItem
		return ret
	}).(SubscriptionTierExtendedEligibilityReasonsItemOutput)
}

func (o SubscriptionTierExtendedEligibilityReasonsItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriptionTierExtendedEligibilityReasonsItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriptionTierExtendedEligibilityReasonsItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriptionTierExtendedEligibilityReasonsItemArrayOutput struct{ *pulumi.OutputState }

func (SubscriptionTierExtendedEligibilityReasonsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriptionTierExtendedEligibilityReasonsItem)(nil)).Elem()
}

func (o SubscriptionTierExtendedEligibilityReasonsItemArrayOutput) ToSubscriptionTierExtendedEligibilityReasonsItemArrayOutput() SubscriptionTierExtendedEligibilityReasonsItemArrayOutput {
	return o
}

func (o SubscriptionTierExtendedEligibilityReasonsItemArrayOutput) ToSubscriptionTierExtendedEligibilityReasonsItemArrayOutputWithContext(ctx context.Context) SubscriptionTierExtendedEligibilityReasonsItemArrayOutput {
	return o
}

func (o SubscriptionTierExtendedEligibilityReasonsItemArrayOutput) Index(i pulumi.IntInput) SubscriptionTierExtendedEligibilityReasonsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriptionTierExtendedEligibilityReasonsItem {
		return vs[0].([]SubscriptionTierExtendedEligibilityReasonsItem)[vs[1].(int)]
	}).(SubscriptionTierExtendedEligibilityReasonsItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryRegionInput)(nil)).Elem(), RegistryRegion("nyc3"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryRegionPtrInput)(nil)).Elem(), RegistryRegion("nyc3"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistrySubscriptionTierSlugInput)(nil)).Elem(), RegistrySubscriptionTierSlug("starter"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistrySubscriptionTierSlugPtrInput)(nil)).Elem(), RegistrySubscriptionTierSlug("starter"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryUpdateSubscriptionTierSlugInput)(nil)).Elem(), RegistryUpdateSubscriptionTierSlug("starter"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegistryUpdateSubscriptionTierSlugPtrInput)(nil)).Elem(), RegistryUpdateSubscriptionTierSlug("starter"))
	pulumi.RegisterOutputType(GarbageCollectionStatusOutput{})
	pulumi.RegisterOutputType(GarbageCollectionStatusPtrOutput{})
	pulumi.RegisterOutputType(RegistryRegionOutput{})
	pulumi.RegisterOutputType(RegistryRegionPtrOutput{})
	pulumi.RegisterOutputType(RegistrySubscriptionTierSlugOutput{})
	pulumi.RegisterOutputType(RegistrySubscriptionTierSlugPtrOutput{})
	pulumi.RegisterOutputType(RegistryUpdateSubscriptionTierSlugOutput{})
	pulumi.RegisterOutputType(RegistryUpdateSubscriptionTierSlugPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionTierExtendedEligibilityReasonsItemOutput{})
	pulumi.RegisterOutputType(SubscriptionTierExtendedEligibilityReasonsItemPtrOutput{})
	pulumi.RegisterOutputType(SubscriptionTierExtendedEligibilityReasonsItemArrayOutput{})
}
