// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMonitoringDropletMemoryCachedMetric(ctx *pulumi.Context, args *GetMonitoringDropletMemoryCachedMetricArgs, opts ...pulumi.InvokeOption) (*GetMonitoringDropletMemoryCachedMetricResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMonitoringDropletMemoryCachedMetricResult
	err := ctx.Invoke("digitalocean-native:monitoring/v2:getMonitoringDropletMemoryCachedMetric", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetMonitoringDropletMemoryCachedMetricArgs struct {
}

type GetMonitoringDropletMemoryCachedMetricResult struct {
	Data   MetricsData   `pulumi:"data"`
	Status MetricsStatus `pulumi:"status"`
}

func GetMonitoringDropletMemoryCachedMetricOutput(ctx *pulumi.Context, args GetMonitoringDropletMemoryCachedMetricOutputArgs, opts ...pulumi.InvokeOption) GetMonitoringDropletMemoryCachedMetricResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetMonitoringDropletMemoryCachedMetricResultOutput, error) {
			args := v.(GetMonitoringDropletMemoryCachedMetricArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("digitalocean-native:monitoring/v2:getMonitoringDropletMemoryCachedMetric", args, GetMonitoringDropletMemoryCachedMetricResultOutput{}, options).(GetMonitoringDropletMemoryCachedMetricResultOutput), nil
		}).(GetMonitoringDropletMemoryCachedMetricResultOutput)
}

type GetMonitoringDropletMemoryCachedMetricOutputArgs struct {
}

func (GetMonitoringDropletMemoryCachedMetricOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringDropletMemoryCachedMetricArgs)(nil)).Elem()
}

type GetMonitoringDropletMemoryCachedMetricResultOutput struct{ *pulumi.OutputState }

func (GetMonitoringDropletMemoryCachedMetricResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringDropletMemoryCachedMetricResult)(nil)).Elem()
}

func (o GetMonitoringDropletMemoryCachedMetricResultOutput) ToGetMonitoringDropletMemoryCachedMetricResultOutput() GetMonitoringDropletMemoryCachedMetricResultOutput {
	return o
}

func (o GetMonitoringDropletMemoryCachedMetricResultOutput) ToGetMonitoringDropletMemoryCachedMetricResultOutputWithContext(ctx context.Context) GetMonitoringDropletMemoryCachedMetricResultOutput {
	return o
}

func (o GetMonitoringDropletMemoryCachedMetricResultOutput) Data() MetricsDataOutput {
	return o.ApplyT(func(v GetMonitoringDropletMemoryCachedMetricResult) MetricsData { return v.Data }).(MetricsDataOutput)
}

func (o GetMonitoringDropletMemoryCachedMetricResultOutput) Status() MetricsStatusOutput {
	return o.ApplyT(func(v GetMonitoringDropletMemoryCachedMetricResult) MetricsStatus { return v.Status }).(MetricsStatusOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMonitoringDropletMemoryCachedMetricResultOutput{})
}
