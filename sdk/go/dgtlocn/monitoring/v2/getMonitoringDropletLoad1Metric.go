// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMonitoringDropletLoad1Metric(ctx *pulumi.Context, args *GetMonitoringDropletLoad1MetricArgs, opts ...pulumi.InvokeOption) (*GetMonitoringDropletLoad1MetricResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMonitoringDropletLoad1MetricResult
	err := ctx.Invoke("digitalocean-native:monitoring/v2:getMonitoringDropletLoad1Metric", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type GetMonitoringDropletLoad1MetricArgs struct {
}

type GetMonitoringDropletLoad1MetricResult struct {
	Data   MetricsData   `pulumi:"data"`
	Status MetricsStatus `pulumi:"status"`
}

func GetMonitoringDropletLoad1MetricOutput(ctx *pulumi.Context, args GetMonitoringDropletLoad1MetricOutputArgs, opts ...pulumi.InvokeOption) GetMonitoringDropletLoad1MetricResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMonitoringDropletLoad1MetricResultOutput, error) {
			args := v.(GetMonitoringDropletLoad1MetricArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetMonitoringDropletLoad1MetricResult
			secret, err := ctx.InvokePackageRaw("digitalocean-native:monitoring/v2:getMonitoringDropletLoad1Metric", args, &rv, "", opts...)
			if err != nil {
				return GetMonitoringDropletLoad1MetricResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetMonitoringDropletLoad1MetricResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetMonitoringDropletLoad1MetricResultOutput), nil
			}
			return output, nil
		}).(GetMonitoringDropletLoad1MetricResultOutput)
}

type GetMonitoringDropletLoad1MetricOutputArgs struct {
}

func (GetMonitoringDropletLoad1MetricOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringDropletLoad1MetricArgs)(nil)).Elem()
}

type GetMonitoringDropletLoad1MetricResultOutput struct{ *pulumi.OutputState }

func (GetMonitoringDropletLoad1MetricResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitoringDropletLoad1MetricResult)(nil)).Elem()
}

func (o GetMonitoringDropletLoad1MetricResultOutput) ToGetMonitoringDropletLoad1MetricResultOutput() GetMonitoringDropletLoad1MetricResultOutput {
	return o
}

func (o GetMonitoringDropletLoad1MetricResultOutput) ToGetMonitoringDropletLoad1MetricResultOutputWithContext(ctx context.Context) GetMonitoringDropletLoad1MetricResultOutput {
	return o
}

func (o GetMonitoringDropletLoad1MetricResultOutput) Data() MetricsDataOutput {
	return o.ApplyT(func(v GetMonitoringDropletLoad1MetricResult) MetricsData { return v.Data }).(MetricsDataOutput)
}

func (o GetMonitoringDropletLoad1MetricResultOutput) Status() MetricsStatusOutput {
	return o.ApplyT(func(v GetMonitoringDropletLoad1MetricResult) MetricsStatus { return v.Status }).(MetricsStatusOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMonitoringDropletLoad1MetricResultOutput{})
}
