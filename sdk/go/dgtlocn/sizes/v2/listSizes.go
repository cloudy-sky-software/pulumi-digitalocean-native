// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func ListSizes(ctx *pulumi.Context, args *ListSizesArgs, opts ...pulumi.InvokeOption) (*ListSizesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ListSizesResult
	err := ctx.Invoke("digitalocean-native:sizes/v2:listSizes", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListSizesArgs struct {
}

type ListSizesResult struct {
	Items ListSizesItems `pulumi:"items"`
}

func ListSizesOutput(ctx *pulumi.Context, args ListSizesOutputArgs, opts ...pulumi.InvokeOption) ListSizesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListSizesResult, error) {
			args := v.(ListSizesArgs)
			r, err := ListSizes(ctx, &args, opts...)
			var s ListSizesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListSizesResultOutput)
}

type ListSizesOutputArgs struct {
}

func (ListSizesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSizesArgs)(nil)).Elem()
}

type ListSizesResultOutput struct{ *pulumi.OutputState }

func (ListSizesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListSizesResult)(nil)).Elem()
}

func (o ListSizesResultOutput) ToListSizesResultOutput() ListSizesResultOutput {
	return o
}

func (o ListSizesResultOutput) ToListSizesResultOutputWithContext(ctx context.Context) ListSizesResultOutput {
	return o
}

func (o ListSizesResultOutput) Items() ListSizesItemsOutput {
	return o.ApplyT(func(v ListSizesResult) ListSizesItems { return v.Items }).(ListSizesItemsOutput)
}

func init() {
	pulumi.RegisterOutputType(ListSizesResultOutput{})
}
