// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type Alert struct {
	// The comparison operator used against the alert's threshold.
	Comparison *AlertUpdatableComparison `pulumi:"comparison"`
	// A unique ID that can be used to identify and reference the alert.
	Id *string `pulumi:"id"`
	// A human-friendly display name.
	Name *string `pulumi:"name"`
	// The notification settings for a trigger alert.
	Notifications *Notification `pulumi:"notifications"`
	// Period of time the threshold must be exceeded to trigger the alert.
	Period *AlertUpdatablePeriod `pulumi:"period"`
	// The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
	Threshold *int `pulumi:"threshold"`
	// The type of alert.
	Type *AlertUpdatableType `pulumi:"type"`
}

type AlertOutput struct{ *pulumi.OutputState }

func (AlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Alert)(nil)).Elem()
}

func (o AlertOutput) ToAlertOutput() AlertOutput {
	return o
}

func (o AlertOutput) ToAlertOutputWithContext(ctx context.Context) AlertOutput {
	return o
}

// The comparison operator used against the alert's threshold.
func (o AlertOutput) Comparison() AlertUpdatableComparisonPtrOutput {
	return o.ApplyT(func(v Alert) *AlertUpdatableComparison { return v.Comparison }).(AlertUpdatableComparisonPtrOutput)
}

// A unique ID that can be used to identify and reference the alert.
func (o AlertOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Alert) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-friendly display name.
func (o AlertOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Alert) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The notification settings for a trigger alert.
func (o AlertOutput) Notifications() NotificationPtrOutput {
	return o.ApplyT(func(v Alert) *Notification { return v.Notifications }).(NotificationPtrOutput)
}

// Period of time the threshold must be exceeded to trigger the alert.
func (o AlertOutput) Period() AlertUpdatablePeriodPtrOutput {
	return o.ApplyT(func(v Alert) *AlertUpdatablePeriod { return v.Period }).(AlertUpdatablePeriodPtrOutput)
}

// The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
func (o AlertOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Alert) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// The type of alert.
func (o AlertOutput) Type() AlertUpdatableTypePtrOutput {
	return o.ApplyT(func(v Alert) *AlertUpdatableType { return v.Type }).(AlertUpdatableTypePtrOutput)
}

type AlertPtrOutput struct{ *pulumi.OutputState }

func (AlertPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Alert)(nil)).Elem()
}

func (o AlertPtrOutput) ToAlertPtrOutput() AlertPtrOutput {
	return o
}

func (o AlertPtrOutput) ToAlertPtrOutputWithContext(ctx context.Context) AlertPtrOutput {
	return o
}

func (o AlertPtrOutput) Elem() AlertOutput {
	return o.ApplyT(func(v *Alert) Alert {
		if v != nil {
			return *v
		}
		var ret Alert
		return ret
	}).(AlertOutput)
}

// The comparison operator used against the alert's threshold.
func (o AlertPtrOutput) Comparison() AlertUpdatableComparisonPtrOutput {
	return o.ApplyT(func(v *Alert) *AlertUpdatableComparison {
		if v == nil {
			return nil
		}
		return v.Comparison
	}).(AlertUpdatableComparisonPtrOutput)
}

// A unique ID that can be used to identify and reference the alert.
func (o AlertPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A human-friendly display name.
func (o AlertPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Alert) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The notification settings for a trigger alert.
func (o AlertPtrOutput) Notifications() NotificationPtrOutput {
	return o.ApplyT(func(v *Alert) *Notification {
		if v == nil {
			return nil
		}
		return v.Notifications
	}).(NotificationPtrOutput)
}

// Period of time the threshold must be exceeded to trigger the alert.
func (o AlertPtrOutput) Period() AlertUpdatablePeriodPtrOutput {
	return o.ApplyT(func(v *Alert) *AlertUpdatablePeriod {
		if v == nil {
			return nil
		}
		return v.Period
	}).(AlertUpdatablePeriodPtrOutput)
}

// The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
func (o AlertPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Alert) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// The type of alert.
func (o AlertPtrOutput) Type() AlertUpdatableTypePtrOutput {
	return o.ApplyT(func(v *Alert) *AlertUpdatableType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(AlertUpdatableTypePtrOutput)
}

type AlertArrayOutput struct{ *pulumi.OutputState }

func (AlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Alert)(nil)).Elem()
}

func (o AlertArrayOutput) ToAlertArrayOutput() AlertArrayOutput {
	return o
}

func (o AlertArrayOutput) ToAlertArrayOutputWithContext(ctx context.Context) AlertArrayOutput {
	return o
}

func (o AlertArrayOutput) Index(i pulumi.IntInput) AlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Alert {
		return vs[0].([]Alert)[vs[1].(int)]
	}).(AlertOutput)
}

type Check struct {
	// A boolean value indicating whether the check is enabled/disabled.
	Enabled *bool `pulumi:"enabled"`
	// A unique ID that can be used to identify and reference the check.
	Id *string `pulumi:"id"`
	// A human-friendly display name.
	Name *string `pulumi:"name"`
	// An array containing the selected regions to perform healthchecks from.
	Regions []CheckUpdatableRegionsItem `pulumi:"regions"`
	// The endpoint to perform healthchecks on.
	Target *string `pulumi:"target"`
	// The type of health check to perform.
	Type *CheckUpdatableType `pulumi:"type"`
}

// Defaults sets the appropriate defaults for Check
func (val *Check) Defaults() *Check {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Enabled == nil {
		enabled_ := true
		tmp.Enabled = &enabled_
	}
	return &tmp
}

type CheckOutput struct{ *pulumi.OutputState }

func (CheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Check)(nil)).Elem()
}

func (o CheckOutput) ToCheckOutput() CheckOutput {
	return o
}

func (o CheckOutput) ToCheckOutputWithContext(ctx context.Context) CheckOutput {
	return o
}

// A boolean value indicating whether the check is enabled/disabled.
func (o CheckOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Check) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference the check.
func (o CheckOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Check) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A human-friendly display name.
func (o CheckOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Check) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array containing the selected regions to perform healthchecks from.
func (o CheckOutput) Regions() CheckUpdatableRegionsItemArrayOutput {
	return o.ApplyT(func(v Check) []CheckUpdatableRegionsItem { return v.Regions }).(CheckUpdatableRegionsItemArrayOutput)
}

// The endpoint to perform healthchecks on.
func (o CheckOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Check) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The type of health check to perform.
func (o CheckOutput) Type() CheckUpdatableTypePtrOutput {
	return o.ApplyT(func(v Check) *CheckUpdatableType { return v.Type }).(CheckUpdatableTypePtrOutput)
}

type CheckPtrOutput struct{ *pulumi.OutputState }

func (CheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Check)(nil)).Elem()
}

func (o CheckPtrOutput) ToCheckPtrOutput() CheckPtrOutput {
	return o
}

func (o CheckPtrOutput) ToCheckPtrOutputWithContext(ctx context.Context) CheckPtrOutput {
	return o
}

func (o CheckPtrOutput) Elem() CheckOutput {
	return o.ApplyT(func(v *Check) Check {
		if v != nil {
			return *v
		}
		var ret Check
		return ret
	}).(CheckOutput)
}

// A boolean value indicating whether the check is enabled/disabled.
func (o CheckPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Check) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference the check.
func (o CheckPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Check) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A human-friendly display name.
func (o CheckPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Check) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// An array containing the selected regions to perform healthchecks from.
func (o CheckPtrOutput) Regions() CheckUpdatableRegionsItemArrayOutput {
	return o.ApplyT(func(v *Check) []CheckUpdatableRegionsItem {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(CheckUpdatableRegionsItemArrayOutput)
}

// The endpoint to perform healthchecks on.
func (o CheckPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Check) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// The type of health check to perform.
func (o CheckPtrOutput) Type() CheckUpdatableTypePtrOutput {
	return o.ApplyT(func(v *Check) *CheckUpdatableType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(CheckUpdatableTypePtrOutput)
}

type CheckArrayOutput struct{ *pulumi.OutputState }

func (CheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Check)(nil)).Elem()
}

func (o CheckArrayOutput) ToCheckArrayOutput() CheckArrayOutput {
	return o
}

func (o CheckArrayOutput) ToCheckArrayOutputWithContext(ctx context.Context) CheckArrayOutput {
	return o
}

func (o CheckArrayOutput) Index(i pulumi.IntInput) CheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Check {
		return vs[0].([]Check)[vs[1].(int)]
	}).(CheckOutput)
}

type GetUptimeAlertProperties struct {
	Alert *Alert `pulumi:"alert"`
}

type GetUptimeAlertPropertiesOutput struct{ *pulumi.OutputState }

func (GetUptimeAlertPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUptimeAlertProperties)(nil)).Elem()
}

func (o GetUptimeAlertPropertiesOutput) ToGetUptimeAlertPropertiesOutput() GetUptimeAlertPropertiesOutput {
	return o
}

func (o GetUptimeAlertPropertiesOutput) ToGetUptimeAlertPropertiesOutputWithContext(ctx context.Context) GetUptimeAlertPropertiesOutput {
	return o
}

func (o GetUptimeAlertPropertiesOutput) Alert() AlertPtrOutput {
	return o.ApplyT(func(v GetUptimeAlertProperties) *Alert { return v.Alert }).(AlertPtrOutput)
}

type GetUptimeCheckProperties struct {
	Check *Check `pulumi:"check"`
}

// Defaults sets the appropriate defaults for GetUptimeCheckProperties
func (val *GetUptimeCheckProperties) Defaults() *GetUptimeCheckProperties {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Check = tmp.Check.Defaults()

	return &tmp
}

type GetUptimeCheckPropertiesOutput struct{ *pulumi.OutputState }

func (GetUptimeCheckPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUptimeCheckProperties)(nil)).Elem()
}

func (o GetUptimeCheckPropertiesOutput) ToGetUptimeCheckPropertiesOutput() GetUptimeCheckPropertiesOutput {
	return o
}

func (o GetUptimeCheckPropertiesOutput) ToGetUptimeCheckPropertiesOutputWithContext(ctx context.Context) GetUptimeCheckPropertiesOutput {
	return o
}

func (o GetUptimeCheckPropertiesOutput) Check() CheckPtrOutput {
	return o.ApplyT(func(v GetUptimeCheckProperties) *Check { return v.Check }).(CheckPtrOutput)
}

type GetUptimeCheckStateProperties struct {
	State *State `pulumi:"state"`
}

type GetUptimeCheckStatePropertiesOutput struct{ *pulumi.OutputState }

func (GetUptimeCheckStatePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUptimeCheckStateProperties)(nil)).Elem()
}

func (o GetUptimeCheckStatePropertiesOutput) ToGetUptimeCheckStatePropertiesOutput() GetUptimeCheckStatePropertiesOutput {
	return o
}

func (o GetUptimeCheckStatePropertiesOutput) ToGetUptimeCheckStatePropertiesOutputWithContext(ctx context.Context) GetUptimeCheckStatePropertiesOutput {
	return o
}

func (o GetUptimeCheckStatePropertiesOutput) State() StatePtrOutput {
	return o.ApplyT(func(v GetUptimeCheckStateProperties) *State { return v.State }).(StatePtrOutput)
}

type ListUptimeAlertsItems struct {
	Alerts []Alert    `pulumi:"alerts"`
	Links  *PageLinks `pulumi:"links"`
	Meta   MetaMeta   `pulumi:"meta"`
}

type ListUptimeAlertsItemsOutput struct{ *pulumi.OutputState }

func (ListUptimeAlertsItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListUptimeAlertsItems)(nil)).Elem()
}

func (o ListUptimeAlertsItemsOutput) ToListUptimeAlertsItemsOutput() ListUptimeAlertsItemsOutput {
	return o
}

func (o ListUptimeAlertsItemsOutput) ToListUptimeAlertsItemsOutputWithContext(ctx context.Context) ListUptimeAlertsItemsOutput {
	return o
}

func (o ListUptimeAlertsItemsOutput) Alerts() AlertArrayOutput {
	return o.ApplyT(func(v ListUptimeAlertsItems) []Alert { return v.Alerts }).(AlertArrayOutput)
}

func (o ListUptimeAlertsItemsOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListUptimeAlertsItems) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListUptimeAlertsItemsOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListUptimeAlertsItems) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

type ListUptimeChecksItems struct {
	Checks []Check    `pulumi:"checks"`
	Links  *PageLinks `pulumi:"links"`
	Meta   MetaMeta   `pulumi:"meta"`
}

type ListUptimeChecksItemsOutput struct{ *pulumi.OutputState }

func (ListUptimeChecksItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListUptimeChecksItems)(nil)).Elem()
}

func (o ListUptimeChecksItemsOutput) ToListUptimeChecksItemsOutput() ListUptimeChecksItemsOutput {
	return o
}

func (o ListUptimeChecksItemsOutput) ToListUptimeChecksItemsOutputWithContext(ctx context.Context) ListUptimeChecksItemsOutput {
	return o
}

func (o ListUptimeChecksItemsOutput) Checks() CheckArrayOutput {
	return o.ApplyT(func(v ListUptimeChecksItems) []Check { return v.Checks }).(CheckArrayOutput)
}

func (o ListUptimeChecksItemsOutput) Links() PageLinksPtrOutput {
	return o.ApplyT(func(v ListUptimeChecksItems) *PageLinks { return v.Links }).(PageLinksPtrOutput)
}

func (o ListUptimeChecksItemsOutput) Meta() MetaMetaOutput {
	return o.ApplyT(func(v ListUptimeChecksItems) MetaMeta { return v.Meta }).(MetaMetaOutput)
}

type MetaMeta struct {
	// Number of objects returned by the request.
	Total *int `pulumi:"total"`
}

type MetaMetaOutput struct{ *pulumi.OutputState }

func (MetaMetaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetaMeta)(nil)).Elem()
}

func (o MetaMetaOutput) ToMetaMetaOutput() MetaMetaOutput {
	return o
}

func (o MetaMetaOutput) ToMetaMetaOutputWithContext(ctx context.Context) MetaMetaOutput {
	return o
}

// Number of objects returned by the request.
func (o MetaMetaOutput) Total() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetaMeta) *int { return v.Total }).(pulumi.IntPtrOutput)
}

// The notification settings for a trigger alert.
type Notification struct {
	// An email to notify on an alert trigger.
	Email []string `pulumi:"email"`
	// Slack integration details.
	Slack []NotificationSlackItemProperties `pulumi:"slack"`
}

// NotificationInput is an input type that accepts NotificationArgs and NotificationOutput values.
// You can construct a concrete instance of `NotificationInput` via:
//
//	NotificationArgs{...}
type NotificationInput interface {
	pulumi.Input

	ToNotificationOutput() NotificationOutput
	ToNotificationOutputWithContext(context.Context) NotificationOutput
}

// The notification settings for a trigger alert.
type NotificationArgs struct {
	// An email to notify on an alert trigger.
	Email pulumi.StringArrayInput `pulumi:"email"`
	// Slack integration details.
	Slack NotificationSlackItemPropertiesArrayInput `pulumi:"slack"`
}

func (NotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Notification)(nil)).Elem()
}

func (i NotificationArgs) ToNotificationOutput() NotificationOutput {
	return i.ToNotificationOutputWithContext(context.Background())
}

func (i NotificationArgs) ToNotificationOutputWithContext(ctx context.Context) NotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationOutput)
}

func (i NotificationArgs) ToNotificationPtrOutput() NotificationPtrOutput {
	return i.ToNotificationPtrOutputWithContext(context.Background())
}

func (i NotificationArgs) ToNotificationPtrOutputWithContext(ctx context.Context) NotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationOutput).ToNotificationPtrOutputWithContext(ctx)
}

// NotificationPtrInput is an input type that accepts NotificationArgs, NotificationPtr and NotificationPtrOutput values.
// You can construct a concrete instance of `NotificationPtrInput` via:
//
//	        NotificationArgs{...}
//
//	or:
//
//	        nil
type NotificationPtrInput interface {
	pulumi.Input

	ToNotificationPtrOutput() NotificationPtrOutput
	ToNotificationPtrOutputWithContext(context.Context) NotificationPtrOutput
}

type notificationPtrType NotificationArgs

func NotificationPtr(v *NotificationArgs) NotificationPtrInput {
	return (*notificationPtrType)(v)
}

func (*notificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Notification)(nil)).Elem()
}

func (i *notificationPtrType) ToNotificationPtrOutput() NotificationPtrOutput {
	return i.ToNotificationPtrOutputWithContext(context.Background())
}

func (i *notificationPtrType) ToNotificationPtrOutputWithContext(ctx context.Context) NotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPtrOutput)
}

// The notification settings for a trigger alert.
type NotificationOutput struct{ *pulumi.OutputState }

func (NotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Notification)(nil)).Elem()
}

func (o NotificationOutput) ToNotificationOutput() NotificationOutput {
	return o
}

func (o NotificationOutput) ToNotificationOutputWithContext(ctx context.Context) NotificationOutput {
	return o
}

func (o NotificationOutput) ToNotificationPtrOutput() NotificationPtrOutput {
	return o.ToNotificationPtrOutputWithContext(context.Background())
}

func (o NotificationOutput) ToNotificationPtrOutputWithContext(ctx context.Context) NotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Notification) *Notification {
		return &v
	}).(NotificationPtrOutput)
}

// An email to notify on an alert trigger.
func (o NotificationOutput) Email() pulumi.StringArrayOutput {
	return o.ApplyT(func(v Notification) []string { return v.Email }).(pulumi.StringArrayOutput)
}

// Slack integration details.
func (o NotificationOutput) Slack() NotificationSlackItemPropertiesArrayOutput {
	return o.ApplyT(func(v Notification) []NotificationSlackItemProperties { return v.Slack }).(NotificationSlackItemPropertiesArrayOutput)
}

type NotificationPtrOutput struct{ *pulumi.OutputState }

func (NotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Notification)(nil)).Elem()
}

func (o NotificationPtrOutput) ToNotificationPtrOutput() NotificationPtrOutput {
	return o
}

func (o NotificationPtrOutput) ToNotificationPtrOutputWithContext(ctx context.Context) NotificationPtrOutput {
	return o
}

func (o NotificationPtrOutput) Elem() NotificationOutput {
	return o.ApplyT(func(v *Notification) Notification {
		if v != nil {
			return *v
		}
		var ret Notification
		return ret
	}).(NotificationOutput)
}

// An email to notify on an alert trigger.
func (o NotificationPtrOutput) Email() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Notification) []string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringArrayOutput)
}

// Slack integration details.
func (o NotificationPtrOutput) Slack() NotificationSlackItemPropertiesArrayOutput {
	return o.ApplyT(func(v *Notification) []NotificationSlackItemProperties {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(NotificationSlackItemPropertiesArrayOutput)
}

type NotificationSlackItemProperties struct {
	// Slack channel to notify of an alert trigger.
	Channel string `pulumi:"channel"`
	// Slack Webhook URL.
	Url string `pulumi:"url"`
}

// NotificationSlackItemPropertiesInput is an input type that accepts NotificationSlackItemPropertiesArgs and NotificationSlackItemPropertiesOutput values.
// You can construct a concrete instance of `NotificationSlackItemPropertiesInput` via:
//
//	NotificationSlackItemPropertiesArgs{...}
type NotificationSlackItemPropertiesInput interface {
	pulumi.Input

	ToNotificationSlackItemPropertiesOutput() NotificationSlackItemPropertiesOutput
	ToNotificationSlackItemPropertiesOutputWithContext(context.Context) NotificationSlackItemPropertiesOutput
}

type NotificationSlackItemPropertiesArgs struct {
	// Slack channel to notify of an alert trigger.
	Channel pulumi.StringInput `pulumi:"channel"`
	// Slack Webhook URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (NotificationSlackItemPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSlackItemProperties)(nil)).Elem()
}

func (i NotificationSlackItemPropertiesArgs) ToNotificationSlackItemPropertiesOutput() NotificationSlackItemPropertiesOutput {
	return i.ToNotificationSlackItemPropertiesOutputWithContext(context.Background())
}

func (i NotificationSlackItemPropertiesArgs) ToNotificationSlackItemPropertiesOutputWithContext(ctx context.Context) NotificationSlackItemPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSlackItemPropertiesOutput)
}

// NotificationSlackItemPropertiesArrayInput is an input type that accepts NotificationSlackItemPropertiesArray and NotificationSlackItemPropertiesArrayOutput values.
// You can construct a concrete instance of `NotificationSlackItemPropertiesArrayInput` via:
//
//	NotificationSlackItemPropertiesArray{ NotificationSlackItemPropertiesArgs{...} }
type NotificationSlackItemPropertiesArrayInput interface {
	pulumi.Input

	ToNotificationSlackItemPropertiesArrayOutput() NotificationSlackItemPropertiesArrayOutput
	ToNotificationSlackItemPropertiesArrayOutputWithContext(context.Context) NotificationSlackItemPropertiesArrayOutput
}

type NotificationSlackItemPropertiesArray []NotificationSlackItemPropertiesInput

func (NotificationSlackItemPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationSlackItemProperties)(nil)).Elem()
}

func (i NotificationSlackItemPropertiesArray) ToNotificationSlackItemPropertiesArrayOutput() NotificationSlackItemPropertiesArrayOutput {
	return i.ToNotificationSlackItemPropertiesArrayOutputWithContext(context.Background())
}

func (i NotificationSlackItemPropertiesArray) ToNotificationSlackItemPropertiesArrayOutputWithContext(ctx context.Context) NotificationSlackItemPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationSlackItemPropertiesArrayOutput)
}

type NotificationSlackItemPropertiesOutput struct{ *pulumi.OutputState }

func (NotificationSlackItemPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationSlackItemProperties)(nil)).Elem()
}

func (o NotificationSlackItemPropertiesOutput) ToNotificationSlackItemPropertiesOutput() NotificationSlackItemPropertiesOutput {
	return o
}

func (o NotificationSlackItemPropertiesOutput) ToNotificationSlackItemPropertiesOutputWithContext(ctx context.Context) NotificationSlackItemPropertiesOutput {
	return o
}

// Slack channel to notify of an alert trigger.
func (o NotificationSlackItemPropertiesOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationSlackItemProperties) string { return v.Channel }).(pulumi.StringOutput)
}

// Slack Webhook URL.
func (o NotificationSlackItemPropertiesOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationSlackItemProperties) string { return v.Url }).(pulumi.StringOutput)
}

type NotificationSlackItemPropertiesArrayOutput struct{ *pulumi.OutputState }

func (NotificationSlackItemPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationSlackItemProperties)(nil)).Elem()
}

func (o NotificationSlackItemPropertiesArrayOutput) ToNotificationSlackItemPropertiesArrayOutput() NotificationSlackItemPropertiesArrayOutput {
	return o
}

func (o NotificationSlackItemPropertiesArrayOutput) ToNotificationSlackItemPropertiesArrayOutputWithContext(ctx context.Context) NotificationSlackItemPropertiesArrayOutput {
	return o
}

func (o NotificationSlackItemPropertiesArrayOutput) Index(i pulumi.IntInput) NotificationSlackItemPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationSlackItemProperties {
		return vs[0].([]NotificationSlackItemProperties)[vs[1].(int)]
	}).(NotificationSlackItemPropertiesOutput)
}

type PageLinks struct {
	Pages *PageLinksPagesProperties `pulumi:"pages"`
}

type PageLinksOutput struct{ *pulumi.OutputState }

func (PageLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinks)(nil)).Elem()
}

func (o PageLinksOutput) ToPageLinksOutput() PageLinksOutput {
	return o
}

func (o PageLinksOutput) ToPageLinksOutputWithContext(ctx context.Context) PageLinksOutput {
	return o
}

func (o PageLinksOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v PageLinks) *PageLinksPagesProperties { return v.Pages }).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinks)(nil)).Elem()
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutput() PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) ToPageLinksPtrOutputWithContext(ctx context.Context) PageLinksPtrOutput {
	return o
}

func (o PageLinksPtrOutput) Elem() PageLinksOutput {
	return o.ApplyT(func(v *PageLinks) PageLinks {
		if v != nil {
			return *v
		}
		var ret PageLinks
		return ret
	}).(PageLinksOutput)
}

func (o PageLinksPtrOutput) Pages() PageLinksPagesPropertiesPtrOutput {
	return o.ApplyT(func(v *PageLinks) *PageLinksPagesProperties {
		if v == nil {
			return nil
		}
		return v.Pages
	}).(PageLinksPagesPropertiesPtrOutput)
}

type PageLinksPagesProperties struct {
	First *string `pulumi:"first"`
	Last  *string `pulumi:"last"`
	Next  *string `pulumi:"next"`
	Prev  *string `pulumi:"prev"`
}

type PageLinksPagesPropertiesOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutput() PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) ToPageLinksPagesPropertiesOutputWithContext(ctx context.Context) PageLinksPagesPropertiesOutput {
	return o
}

func (o PageLinksPagesPropertiesOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.First }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Last }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PageLinksPagesProperties) *string { return v.Prev }).(pulumi.StringPtrOutput)
}

type PageLinksPagesPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PageLinksPagesPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PageLinksPagesProperties)(nil)).Elem()
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutput() PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) ToPageLinksPagesPropertiesPtrOutputWithContext(ctx context.Context) PageLinksPagesPropertiesPtrOutput {
	return o
}

func (o PageLinksPagesPropertiesPtrOutput) Elem() PageLinksPagesPropertiesOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) PageLinksPagesProperties {
		if v != nil {
			return *v
		}
		var ret PageLinksPagesProperties
		return ret
	}).(PageLinksPagesPropertiesOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.First
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Last
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o PageLinksPagesPropertiesPtrOutput) Prev() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PageLinksPagesProperties) *string {
		if v == nil {
			return nil
		}
		return v.Prev
	}).(pulumi.StringPtrOutput)
}

type PreviousOutage struct {
	DurationSeconds *int    `pulumi:"durationSeconds"`
	EndedAt         *string `pulumi:"endedAt"`
	Region          *string `pulumi:"region"`
	StartedAt       *string `pulumi:"startedAt"`
}

type PreviousOutageOutput struct{ *pulumi.OutputState }

func (PreviousOutageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PreviousOutage)(nil)).Elem()
}

func (o PreviousOutageOutput) ToPreviousOutageOutput() PreviousOutageOutput {
	return o
}

func (o PreviousOutageOutput) ToPreviousOutageOutputWithContext(ctx context.Context) PreviousOutageOutput {
	return o
}

func (o PreviousOutageOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PreviousOutage) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o PreviousOutageOutput) EndedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreviousOutage) *string { return v.EndedAt }).(pulumi.StringPtrOutput)
}

func (o PreviousOutageOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreviousOutage) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o PreviousOutageOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PreviousOutage) *string { return v.StartedAt }).(pulumi.StringPtrOutput)
}

type PreviousOutagePtrOutput struct{ *pulumi.OutputState }

func (PreviousOutagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PreviousOutage)(nil)).Elem()
}

func (o PreviousOutagePtrOutput) ToPreviousOutagePtrOutput() PreviousOutagePtrOutput {
	return o
}

func (o PreviousOutagePtrOutput) ToPreviousOutagePtrOutputWithContext(ctx context.Context) PreviousOutagePtrOutput {
	return o
}

func (o PreviousOutagePtrOutput) Elem() PreviousOutageOutput {
	return o.ApplyT(func(v *PreviousOutage) PreviousOutage {
		if v != nil {
			return *v
		}
		var ret PreviousOutage
		return ret
	}).(PreviousOutageOutput)
}

func (o PreviousOutagePtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PreviousOutage) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o PreviousOutagePtrOutput) EndedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreviousOutage) *string {
		if v == nil {
			return nil
		}
		return v.EndedAt
	}).(pulumi.StringPtrOutput)
}

func (o PreviousOutagePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreviousOutage) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o PreviousOutagePtrOutput) StartedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PreviousOutage) *string {
		if v == nil {
			return nil
		}
		return v.StartedAt
	}).(pulumi.StringPtrOutput)
}

type RegionState struct {
	Status                    *RegionStateStatus `pulumi:"status"`
	StatusChangedAt           *string            `pulumi:"statusChangedAt"`
	ThirtyDayUptimePercentage *float64           `pulumi:"thirtyDayUptimePercentage"`
}

type RegionStateOutput struct{ *pulumi.OutputState }

func (RegionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionState)(nil)).Elem()
}

func (o RegionStateOutput) ToRegionStateOutput() RegionStateOutput {
	return o
}

func (o RegionStateOutput) ToRegionStateOutputWithContext(ctx context.Context) RegionStateOutput {
	return o
}

func (o RegionStateOutput) Status() RegionStateStatusPtrOutput {
	return o.ApplyT(func(v RegionState) *RegionStateStatus { return v.Status }).(RegionStateStatusPtrOutput)
}

func (o RegionStateOutput) StatusChangedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegionState) *string { return v.StatusChangedAt }).(pulumi.StringPtrOutput)
}

func (o RegionStateOutput) ThirtyDayUptimePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v RegionState) *float64 { return v.ThirtyDayUptimePercentage }).(pulumi.Float64PtrOutput)
}

type RegionStatePtrOutput struct{ *pulumi.OutputState }

func (RegionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionState)(nil)).Elem()
}

func (o RegionStatePtrOutput) ToRegionStatePtrOutput() RegionStatePtrOutput {
	return o
}

func (o RegionStatePtrOutput) ToRegionStatePtrOutputWithContext(ctx context.Context) RegionStatePtrOutput {
	return o
}

func (o RegionStatePtrOutput) Elem() RegionStateOutput {
	return o.ApplyT(func(v *RegionState) RegionState {
		if v != nil {
			return *v
		}
		var ret RegionState
		return ret
	}).(RegionStateOutput)
}

func (o RegionStatePtrOutput) Status() RegionStateStatusPtrOutput {
	return o.ApplyT(func(v *RegionState) *RegionStateStatus {
		if v == nil {
			return nil
		}
		return v.Status
	}).(RegionStateStatusPtrOutput)
}

func (o RegionStatePtrOutput) StatusChangedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegionState) *string {
		if v == nil {
			return nil
		}
		return v.StatusChangedAt
	}).(pulumi.StringPtrOutput)
}

func (o RegionStatePtrOutput) ThirtyDayUptimePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RegionState) *float64 {
		if v == nil {
			return nil
		}
		return v.ThirtyDayUptimePercentage
	}).(pulumi.Float64PtrOutput)
}

// A map of region to regional state
type RegionalState struct {
	EuWest *RegionState `pulumi:"euWest"`
	UsEast *RegionState `pulumi:"usEast"`
}

// A map of region to regional state
type RegionalStateOutput struct{ *pulumi.OutputState }

func (RegionalStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegionalState)(nil)).Elem()
}

func (o RegionalStateOutput) ToRegionalStateOutput() RegionalStateOutput {
	return o
}

func (o RegionalStateOutput) ToRegionalStateOutputWithContext(ctx context.Context) RegionalStateOutput {
	return o
}

func (o RegionalStateOutput) EuWest() RegionStatePtrOutput {
	return o.ApplyT(func(v RegionalState) *RegionState { return v.EuWest }).(RegionStatePtrOutput)
}

func (o RegionalStateOutput) UsEast() RegionStatePtrOutput {
	return o.ApplyT(func(v RegionalState) *RegionState { return v.UsEast }).(RegionStatePtrOutput)
}

type RegionalStatePtrOutput struct{ *pulumi.OutputState }

func (RegionalStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegionalState)(nil)).Elem()
}

func (o RegionalStatePtrOutput) ToRegionalStatePtrOutput() RegionalStatePtrOutput {
	return o
}

func (o RegionalStatePtrOutput) ToRegionalStatePtrOutputWithContext(ctx context.Context) RegionalStatePtrOutput {
	return o
}

func (o RegionalStatePtrOutput) Elem() RegionalStateOutput {
	return o.ApplyT(func(v *RegionalState) RegionalState {
		if v != nil {
			return *v
		}
		var ret RegionalState
		return ret
	}).(RegionalStateOutput)
}

func (o RegionalStatePtrOutput) EuWest() RegionStatePtrOutput {
	return o.ApplyT(func(v *RegionalState) *RegionState {
		if v == nil {
			return nil
		}
		return v.EuWest
	}).(RegionStatePtrOutput)
}

func (o RegionalStatePtrOutput) UsEast() RegionStatePtrOutput {
	return o.ApplyT(func(v *RegionalState) *RegionState {
		if v == nil {
			return nil
		}
		return v.UsEast
	}).(RegionStatePtrOutput)
}

type State struct {
	PreviousOutage *PreviousOutage `pulumi:"previousOutage"`
	// A map of region to regional state
	Regions *RegionalState `pulumi:"regions"`
}

type StateOutput struct{ *pulumi.OutputState }

func (StateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*State)(nil)).Elem()
}

func (o StateOutput) ToStateOutput() StateOutput {
	return o
}

func (o StateOutput) ToStateOutputWithContext(ctx context.Context) StateOutput {
	return o
}

func (o StateOutput) PreviousOutage() PreviousOutagePtrOutput {
	return o.ApplyT(func(v State) *PreviousOutage { return v.PreviousOutage }).(PreviousOutagePtrOutput)
}

// A map of region to regional state
func (o StateOutput) Regions() RegionalStatePtrOutput {
	return o.ApplyT(func(v State) *RegionalState { return v.Regions }).(RegionalStatePtrOutput)
}

type StatePtrOutput struct{ *pulumi.OutputState }

func (StatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**State)(nil)).Elem()
}

func (o StatePtrOutput) ToStatePtrOutput() StatePtrOutput {
	return o
}

func (o StatePtrOutput) ToStatePtrOutputWithContext(ctx context.Context) StatePtrOutput {
	return o
}

func (o StatePtrOutput) Elem() StateOutput {
	return o.ApplyT(func(v *State) State {
		if v != nil {
			return *v
		}
		var ret State
		return ret
	}).(StateOutput)
}

func (o StatePtrOutput) PreviousOutage() PreviousOutagePtrOutput {
	return o.ApplyT(func(v *State) *PreviousOutage {
		if v == nil {
			return nil
		}
		return v.PreviousOutage
	}).(PreviousOutagePtrOutput)
}

// A map of region to regional state
func (o StatePtrOutput) Regions() RegionalStatePtrOutput {
	return o.ApplyT(func(v *State) *RegionalState {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(RegionalStatePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationInput)(nil)).Elem(), NotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPtrInput)(nil)).Elem(), NotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationSlackItemPropertiesInput)(nil)).Elem(), NotificationSlackItemPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationSlackItemPropertiesArrayInput)(nil)).Elem(), NotificationSlackItemPropertiesArray{})
	pulumi.RegisterOutputType(AlertOutput{})
	pulumi.RegisterOutputType(AlertPtrOutput{})
	pulumi.RegisterOutputType(AlertArrayOutput{})
	pulumi.RegisterOutputType(CheckOutput{})
	pulumi.RegisterOutputType(CheckPtrOutput{})
	pulumi.RegisterOutputType(CheckArrayOutput{})
	pulumi.RegisterOutputType(GetUptimeAlertPropertiesOutput{})
	pulumi.RegisterOutputType(GetUptimeCheckPropertiesOutput{})
	pulumi.RegisterOutputType(GetUptimeCheckStatePropertiesOutput{})
	pulumi.RegisterOutputType(ListUptimeAlertsItemsOutput{})
	pulumi.RegisterOutputType(ListUptimeChecksItemsOutput{})
	pulumi.RegisterOutputType(MetaMetaOutput{})
	pulumi.RegisterOutputType(NotificationOutput{})
	pulumi.RegisterOutputType(NotificationPtrOutput{})
	pulumi.RegisterOutputType(NotificationSlackItemPropertiesOutput{})
	pulumi.RegisterOutputType(NotificationSlackItemPropertiesArrayOutput{})
	pulumi.RegisterOutputType(PageLinksOutput{})
	pulumi.RegisterOutputType(PageLinksPtrOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesOutput{})
	pulumi.RegisterOutputType(PageLinksPagesPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PreviousOutageOutput{})
	pulumi.RegisterOutputType(PreviousOutagePtrOutput{})
	pulumi.RegisterOutputType(RegionStateOutput{})
	pulumi.RegisterOutputType(RegionStatePtrOutput{})
	pulumi.RegisterOutputType(RegionalStateOutput{})
	pulumi.RegisterOutputType(RegionalStatePtrOutput{})
	pulumi.RegisterOutputType(StateOutput{})
	pulumi.RegisterOutputType(StatePtrOutput{})
}
