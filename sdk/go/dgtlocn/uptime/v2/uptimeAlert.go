// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"context"
	"reflect"

	"github.com/cloudy-sky-software/pulumi-digitalocean-native/sdk/go/dgtlocn/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UptimeAlert struct {
	pulumi.CustomResourceState

	Alert AlertPtrOutput `pulumi:"alert"`
	// The comparison operator used against the alert's threshold.
	Comparison AlertUpdatableComparisonPtrOutput `pulumi:"comparison"`
	// A human-friendly display name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The notification settings for a trigger alert.
	Notifications NotificationOutput `pulumi:"notifications"`
	// Period of time the threshold must be exceeded to trigger the alert.
	Period AlertUpdatablePeriodPtrOutput `pulumi:"period"`
	// The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
	Threshold pulumi.IntPtrOutput `pulumi:"threshold"`
	// The type of alert.
	Type AlertUpdatableTypeOutput `pulumi:"type"`
}

// NewUptimeAlert registers a new resource with the given unique name, arguments, and options.
func NewUptimeAlert(ctx *pulumi.Context,
	name string, args *UptimeAlertArgs, opts ...pulumi.ResourceOption) (*UptimeAlert, error) {
	if args == nil {
		args = &UptimeAlertArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UptimeAlert
	err := ctx.RegisterResource("digitalocean-native:uptime/v2:UptimeAlert", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUptimeAlert gets an existing UptimeAlert resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUptimeAlert(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UptimeAlertState, opts ...pulumi.ResourceOption) (*UptimeAlert, error) {
	var resource UptimeAlert
	err := ctx.ReadResource("digitalocean-native:uptime/v2:UptimeAlert", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UptimeAlert resources.
type uptimeAlertState struct {
}

type UptimeAlertState struct {
}

func (UptimeAlertState) ElementType() reflect.Type {
	return reflect.TypeOf((*uptimeAlertState)(nil)).Elem()
}

type uptimeAlertArgs struct {
	// A unique identifier for a check.
	CheckId *string `pulumi:"checkId"`
	// The comparison operator used against the alert's threshold.
	Comparison *AlertUpdatableComparison `pulumi:"comparison"`
	// A human-friendly display name.
	Name *string `pulumi:"name"`
	// The notification settings for a trigger alert.
	Notifications *Notification `pulumi:"notifications"`
	// Period of time the threshold must be exceeded to trigger the alert.
	Period *AlertUpdatablePeriod `pulumi:"period"`
	// The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
	Threshold *int `pulumi:"threshold"`
	// The type of alert.
	Type *AlertUpdatableType `pulumi:"type"`
}

// The set of arguments for constructing a UptimeAlert resource.
type UptimeAlertArgs struct {
	// A unique identifier for a check.
	CheckId pulumi.StringPtrInput
	// The comparison operator used against the alert's threshold.
	Comparison AlertUpdatableComparisonPtrInput
	// A human-friendly display name.
	Name pulumi.StringPtrInput
	// The notification settings for a trigger alert.
	Notifications NotificationPtrInput
	// Period of time the threshold must be exceeded to trigger the alert.
	Period AlertUpdatablePeriodPtrInput
	// The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
	Threshold pulumi.IntPtrInput
	// The type of alert.
	Type AlertUpdatableTypePtrInput
}

func (UptimeAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*uptimeAlertArgs)(nil)).Elem()
}

type UptimeAlertInput interface {
	pulumi.Input

	ToUptimeAlertOutput() UptimeAlertOutput
	ToUptimeAlertOutputWithContext(ctx context.Context) UptimeAlertOutput
}

func (*UptimeAlert) ElementType() reflect.Type {
	return reflect.TypeOf((**UptimeAlert)(nil)).Elem()
}

func (i *UptimeAlert) ToUptimeAlertOutput() UptimeAlertOutput {
	return i.ToUptimeAlertOutputWithContext(context.Background())
}

func (i *UptimeAlert) ToUptimeAlertOutputWithContext(ctx context.Context) UptimeAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeAlertOutput)
}

type UptimeAlertOutput struct{ *pulumi.OutputState }

func (UptimeAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UptimeAlert)(nil)).Elem()
}

func (o UptimeAlertOutput) ToUptimeAlertOutput() UptimeAlertOutput {
	return o
}

func (o UptimeAlertOutput) ToUptimeAlertOutputWithContext(ctx context.Context) UptimeAlertOutput {
	return o
}

func (o UptimeAlertOutput) Alert() AlertPtrOutput {
	return o.ApplyT(func(v *UptimeAlert) AlertPtrOutput { return v.Alert }).(AlertPtrOutput)
}

// The comparison operator used against the alert's threshold.
func (o UptimeAlertOutput) Comparison() AlertUpdatableComparisonPtrOutput {
	return o.ApplyT(func(v *UptimeAlert) AlertUpdatableComparisonPtrOutput { return v.Comparison }).(AlertUpdatableComparisonPtrOutput)
}

// A human-friendly display name.
func (o UptimeAlertOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UptimeAlert) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The notification settings for a trigger alert.
func (o UptimeAlertOutput) Notifications() NotificationOutput {
	return o.ApplyT(func(v *UptimeAlert) NotificationOutput { return v.Notifications }).(NotificationOutput)
}

// Period of time the threshold must be exceeded to trigger the alert.
func (o UptimeAlertOutput) Period() AlertUpdatablePeriodPtrOutput {
	return o.ApplyT(func(v *UptimeAlert) AlertUpdatablePeriodPtrOutput { return v.Period }).(AlertUpdatablePeriodPtrOutput)
}

// The threshold at which the alert will enter a trigger state. The specific threshold is dependent on the alert type.
func (o UptimeAlertOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UptimeAlert) pulumi.IntPtrOutput { return v.Threshold }).(pulumi.IntPtrOutput)
}

// The type of alert.
func (o UptimeAlertOutput) Type() AlertUpdatableTypeOutput {
	return o.ApplyT(func(v *UptimeAlert) AlertUpdatableTypeOutput { return v.Type }).(AlertUpdatableTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UptimeAlertInput)(nil)).Elem(), &UptimeAlert{})
	pulumi.RegisterOutputType(UptimeAlertOutput{})
}
